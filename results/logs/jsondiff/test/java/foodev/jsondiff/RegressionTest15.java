package foodev.jsondiff;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest15 {

    public static boolean debug = false;

    @Test
    public void test07501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07501");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper14);
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff15.factory;
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper16);
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff17.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor20 = jsonDiff17.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff17.create("hi!");
        instruction22.index = '4';
        int int25 = instruction22.index;
        int int26 = instruction22.index;
        boolean boolean27 = instruction22.isIndexed();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement28 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement13, instruction22, jzonElement28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertNull(wildcardVisitor20);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test07502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07502");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException9);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException22);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException32.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray37 = jacksonWrapperException36.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException32.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException30.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException30);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray48 = jacksonWrapperException47.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException49);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray52 = jacksonWrapperException51.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray56 = jacksonWrapperException55.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException55);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException57);
        jacksonWrapperException51.addSuppressed((java.lang.Throwable) jacksonWrapperException57);
        jacksonWrapperException49.addSuppressed((java.lang.Throwable) jacksonWrapperException51);
        java.lang.Throwable[] throwableArray61 = jacksonWrapperException51.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException64);
        jacksonWrapperException51.addSuppressed((java.lang.Throwable) jacksonWrapperException64);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException67);
        jacksonWrapperException44.addSuppressed((java.lang.Throwable) jacksonWrapperException67);
        java.lang.Throwable[] throwableArray70 = jacksonWrapperException44.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(throwableArray70);
    }

    @Test
    public void test07503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07503");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff12.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        foodev.jsondiff.Visitor<?> wildcardVisitor20 = jsonDiff19.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement21 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement22 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff19.apply(jzonElement21, jzonElement22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNull(wildcardVisitor20);
    }

    @Test
    public void test07504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07504");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int7 = jsonDiff1.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~");
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper18);
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff19.factory;
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff(wrapper20);
        foodev.jsondiff.Visitor<?> wildcardVisitor22 = jsonDiff21.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff21.create("");
        instruction24.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper27 = instruction24.oper;
        instruction24.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff31 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper30);
        foodev.jsondiff.jsonwrap.Wrapper wrapper32 = jsonDiff31.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction34 = jsonDiff31.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction35 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction35.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff39 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper38);
        int int41 = jsonDiff39.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction43 = jsonDiff39.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper44 = instruction43.oper;
        instruction35.oper = oper44;
        instruction34.oper = oper44;
        instruction24.oper = oper44;
        java.lang.Class<?> wildcardClass48 = oper44.getClass();
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply((java.lang.Object) throwableArray17, (java.lang.Object) wildcardClass48);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: [Ljava.lang.Throwable; cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNull(wildcardVisitor22);
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertTrue("'" + oper27 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper27.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper32);
        org.junit.Assert.assertNotNull(instruction34);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(instruction43);
        org.junit.Assert.assertTrue("'" + oper44 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper44.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test07505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07505");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff31 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper30);
        int int33 = jsonDiff31.isIndexed("hi!");
        int int35 = jsonDiff31.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper36 = jsonDiff31.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction38 = jsonDiff31.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int40 = jsonDiff31.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper41 = jsonDiff31.factory;
        foodev.jsondiff.JsonDiff jsonDiff42 = new foodev.jsondiff.JsonDiff(wrapper41);
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply((java.lang.Object) jacksonWrapperException29, (java.lang.Object) jsonDiff42);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(wrapper36);
        org.junit.Assert.assertNotNull(instruction38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(wrapper41);
    }

    @Test
    public void test07506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07506");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException5);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException25);
        jacksonWrapperException19.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException32.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray37 = jacksonWrapperException36.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException32.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray44 = jacksonWrapperException43.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray48 = jacksonWrapperException47.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException49);
        jacksonWrapperException43.addSuppressed((java.lang.Throwable) jacksonWrapperException49);
        jacksonWrapperException42.addSuppressed((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException43);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException43);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        java.lang.Class<?> wildcardClass56 = jacksonWrapperException17.getClass();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test07507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07507");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = jsonDiff13.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper14);
    }

    @Test
    public void test07508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07508");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray1 = jacksonWrapperException0.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        java.lang.String str4 = jacksonWrapperException3.toString();
        org.junit.Assert.assertNotNull(throwableArray1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str4, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test07509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07509");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction7.index = (short) 100;
        boolean boolean10 = instruction7.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper12 = instruction11.oper;
        instruction11.key = "~";
        int int15 = instruction11.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        int int19 = jsonDiff17.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean22 = instruction21.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper23);
        int int26 = jsonDiff24.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper29 = instruction28.oper;
        instruction21.oper = oper29;
        instruction11.oper = oper29;
        foodev.jsondiff.Oper oper32 = instruction11.oper;
        instruction7.oper = oper32;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff35 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper34);
        foodev.jsondiff.jsonwrap.Wrapper wrapper36 = jsonDiff35.factory;
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff(wrapper36);
        foodev.jsondiff.Visitor<?> wildcardVisitor38 = jsonDiff37.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction40 = jsonDiff37.create("");
        instruction40.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper43 = instruction40.oper;
        instruction7.oper = oper43;
        foodev.jsondiff.Oper oper45 = instruction7.oper;
        foodev.jsondiff.Oper oper46 = instruction7.oper;
        java.lang.String str47 = instruction7.key;
        java.lang.String str48 = instruction7.key;
        foodev.jsondiff.Oper oper49 = instruction7.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff51 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper50);
        foodev.jsondiff.jsonwrap.Wrapper wrapper52 = jsonDiff51.factory;
        foodev.jsondiff.JsonDiff jsonDiff53 = new foodev.jsondiff.JsonDiff(wrapper52);
        foodev.jsondiff.Visitor<?> wildcardVisitor54 = jsonDiff53.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction56 = jsonDiff53.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper57 = jsonDiff53.factory;
        foodev.jsondiff.JsonDiff jsonDiff58 = new foodev.jsondiff.JsonDiff(wrapper57);
        foodev.jsondiff.JsonDiff jsonDiff59 = new foodev.jsondiff.JsonDiff(wrapper57);
        foodev.jsondiff.Visitor<?> wildcardVisitor60 = jsonDiff59.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper61 = jsonDiff59.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor62 = jsonDiff59.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction64 = jsonDiff59.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff66 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper65);
        foodev.jsondiff.jsonwrap.Wrapper wrapper67 = jsonDiff66.factory;
        foodev.jsondiff.JsonDiff jsonDiff68 = new foodev.jsondiff.JsonDiff(wrapper67);
        foodev.jsondiff.JsonDiff.Instruction instruction70 = jsonDiff68.create("");
        foodev.jsondiff.Oper oper71 = instruction70.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper72 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff73 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper72);
        int int75 = jsonDiff73.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction77 = jsonDiff73.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean78 = instruction77.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper79 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff80 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper79);
        int int82 = jsonDiff80.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction84 = jsonDiff80.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper85 = instruction84.oper;
        instruction77.oper = oper85;
        instruction70.oper = oper85;
        foodev.jsondiff.Oper oper88 = instruction70.oper;
        instruction64.oper = oper88;
        foodev.jsondiff.Oper oper90 = instruction64.oper;
        foodev.jsondiff.Oper oper91 = instruction64.oper;
        instruction7.oper = oper91;
        instruction7.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        java.lang.String str95 = instruction7.key;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(oper12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertTrue("'" + oper29 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper29.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper32 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper32.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper36);
        org.junit.Assert.assertNull(wildcardVisitor38);
        org.junit.Assert.assertNotNull(instruction40);
        org.junit.Assert.assertTrue("'" + oper43 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper43.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper45 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper45.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper46 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper46.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str47, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str48, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + oper49 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper49.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper52);
        org.junit.Assert.assertNull(wildcardVisitor54);
        org.junit.Assert.assertNotNull(instruction56);
        org.junit.Assert.assertNotNull(wrapper57);
        org.junit.Assert.assertNull(wildcardVisitor60);
        org.junit.Assert.assertNotNull(wrapper61);
        org.junit.Assert.assertNull(wildcardVisitor62);
        org.junit.Assert.assertNotNull(instruction64);
        org.junit.Assert.assertNotNull(wrapper67);
        org.junit.Assert.assertNotNull(instruction70);
        org.junit.Assert.assertTrue("'" + oper71 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper71.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(instruction77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(instruction84);
        org.junit.Assert.assertTrue("'" + oper85 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper85.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper88 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper88.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper90 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper90.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper91 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper91.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str95, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
    }

    @Test
    public void test07510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07510");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff2.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff2.getVisitor();
        int int9 = jsonDiff2.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff2.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff2.checkIndex(jzonElement11, 35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test07511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07511");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper4);
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff7.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff7.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff7.create("hi!");
        instruction12.index = '4';
        int int15 = instruction12.index;
        int int16 = instruction12.index;
        boolean boolean17 = instruction12.isIndexed();
        boolean boolean18 = instruction12.isIndexed();
        instruction12.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement21 = jacksonWrapper0.wrap((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test07512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07512");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper5);
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff6.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff8.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction12.index = (short) 100;
        boolean boolean15 = instruction12.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction16 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper17 = instruction16.oper;
        instruction16.key = "~";
        int int20 = instruction16.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper21);
        int int24 = jsonDiff22.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff22.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean27 = instruction26.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper28);
        int int31 = jsonDiff29.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction33 = jsonDiff29.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper34 = instruction33.oper;
        instruction26.oper = oper34;
        instruction16.oper = oper34;
        foodev.jsondiff.Oper oper37 = instruction16.oper;
        instruction12.oper = oper37;
        instruction12.index = (-1);
        boolean boolean41 = instruction12.isIndexed();
        boolean boolean42 = instruction12.isIndexed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement43 = jacksonWrapper0.wrap((java.lang.Object) boolean42);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Boolean cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(oper17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(instruction33);
        org.junit.Assert.assertTrue("'" + oper34 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper34.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper37 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper37.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test07513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07513");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        instruction6.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper9 = instruction6.oper;
        instruction6.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction6.index = 10;
        boolean boolean14 = instruction6.isIndexed();
        instruction6.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        int int17 = instruction6.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper18);
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff19.factory;
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff(wrapper20);
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff21.create("");
        int int25 = jsonDiff21.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff21.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int29 = jsonDiff21.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper30 = jsonDiff21.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff21.create("");
        java.lang.String str33 = instruction32.key;
        instruction32.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        foodev.jsondiff.JsonDiff.Instruction instruction36 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper37 = instruction36.oper;
        instruction36.index = (-1);
        java.lang.String str40 = instruction36.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff42 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper41);
        foodev.jsondiff.jsonwrap.Wrapper wrapper43 = jsonDiff42.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction45 = jsonDiff42.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction46 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction46.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff50 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper49);
        int int52 = jsonDiff50.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction54 = jsonDiff50.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper55 = instruction54.oper;
        instruction46.oper = oper55;
        instruction45.oper = oper55;
        instruction36.oper = oper55;
        instruction32.oper = oper55;
        instruction6.oper = oper55;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + oper9 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper9.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10 + "'", int17 == 10);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(wrapper30);
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(oper37);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(wrapper43);
        org.junit.Assert.assertNotNull(instruction45);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(instruction54);
        org.junit.Assert.assertTrue("'" + oper55 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper55.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07514");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int19 = jsonDiff13.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int22 = instruction21.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper23);
        int int26 = jsonDiff24.isIndexed("hi!");
        int int28 = jsonDiff24.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper29 = jsonDiff24.factory;
        int int31 = jsonDiff24.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper32 = jsonDiff24.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction34 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.String str35 = instruction34.key;
        foodev.jsondiff.Oper oper36 = instruction34.oper;
        foodev.jsondiff.Oper oper37 = instruction34.oper;
        instruction21.oper = oper37;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray41 = jacksonWrapperException40.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException40.addSuppressed((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException40);
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException45.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj47 = jsonDiff1.diff((java.lang.Object) instruction21, (java.lang.Object) jacksonWrapperException45);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(wrapper29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(wrapper32);
        org.junit.Assert.assertNotNull(instruction34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str35, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + oper36 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper36.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper37 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper37.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray46);
    }

    @Test
    public void test07515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07515");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff9.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff9.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff9.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = jsonDiff9.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper13);
    }

    @Test
    public void test07516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07516");
        foodev.jsondiff.JsonDiff.Instruction instruction0 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper1 = instruction0.oper;
        boolean boolean2 = instruction0.isIndexed();
        instruction0.index = 97;
        int int5 = instruction0.index;
        boolean boolean6 = instruction0.isIndexed();
        org.junit.Assert.assertNull(oper1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 97 + "'", int5 == 97);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test07517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07517");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = jsonDiff3.diff("", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper13);
    }

    @Test
    public void test07518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07518");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        java.lang.String str19 = jacksonWrapperException3.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str19, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test07519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07519");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        int int5 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.Node node8 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        foodev.jsondiff.Leaf[] leafArray10 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList11 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList11, leafArray10);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap13 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf14 = jsonDiff7.findLeaves(node8, jzonElement9, (java.util.List<foodev.jsondiff.Leaf>) leafList11, intMap13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(leafArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test07520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07520");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("hi!");
        instruction11.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        int int14 = instruction11.index;
        boolean boolean15 = instruction11.isIndexed();
        foodev.jsondiff.Oper oper16 = instruction11.oper;
        instruction11.index = '#';
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + oper16 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper16.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07521");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException22);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException16);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray35 = jacksonWrapperException34.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException36);
        jacksonWrapperException30.addSuppressed((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray44 = jacksonWrapperException43.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray48 = jacksonWrapperException47.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException49);
        jacksonWrapperException43.addSuppressed((java.lang.Throwable) jacksonWrapperException49);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException49);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException49);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray55 = jacksonWrapperException54.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray59 = jacksonWrapperException58.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException58);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException60);
        jacksonWrapperException54.addSuppressed((java.lang.Throwable) jacksonWrapperException60);
        jacksonWrapperException53.addSuppressed((java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException54);
        jacksonWrapperException36.addSuppressed((java.lang.Throwable) jacksonWrapperException54);
        jacksonWrapperException28.addSuppressed((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray68 = jacksonWrapperException67.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException67.addSuppressed((java.lang.Throwable) jacksonWrapperException69);
        java.lang.Throwable[] throwableArray71 = jacksonWrapperException69.getSuppressed();
        jacksonWrapperException36.addSuppressed((java.lang.Throwable) jacksonWrapperException69);
        java.lang.Throwable[] throwableArray73 = jacksonWrapperException69.getSuppressed();
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException69);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException75 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException69);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException76 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException75);
        java.lang.String str77 = jacksonWrapperException75.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str77, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
    }

    @Test
    public void test07522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07522");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("");
        int int17 = jsonDiff13.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff13.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction21.index = (short) 1;
        instruction21.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        java.lang.Class<?> wildcardClass26 = instruction21.getClass();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper27);
        foodev.jsondiff.jsonwrap.Wrapper wrapper29 = jsonDiff28.factory;
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff(wrapper29);
        foodev.jsondiff.Visitor<?> wildcardVisitor31 = jsonDiff30.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction33 = jsonDiff30.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction33.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        java.lang.String str36 = instruction33.key;
        int int37 = instruction33.index;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply((java.lang.Object) wildcardClass26, (java.lang.Object) instruction33);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Class cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wrapper29);
        org.junit.Assert.assertNull(wildcardVisitor31);
        org.junit.Assert.assertNotNull(instruction33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str36, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
    }

    @Test
    public void test07523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07523");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper1);
        int int4 = jsonDiff2.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff2.factory;
        int int7 = jsonDiff2.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff2.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff11.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Oper oper14 = instruction13.oper;
        foodev.jsondiff.Oper oper15 = instruction13.oper;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = jacksonWrapper0.wrap((java.lang.Object) instruction13);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + oper14 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper14.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper15 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper15.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07524");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        instruction6.key = "hi!";
        int int9 = instruction6.index;
        foodev.jsondiff.Oper oper10 = instruction6.oper;
        java.lang.String str11 = instruction6.key;
        instruction6.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        boolean boolean14 = instruction6.isIndexed();
        java.lang.String str15 = instruction6.key;
        int int16 = instruction6.index;
        java.lang.String str17 = instruction6.key;
        int int18 = instruction6.index;
        instruction6.index = 10;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper21);
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff22.factory;
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff(wrapper23);
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff24.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.String str29 = instruction28.key;
        java.lang.String str30 = instruction28.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff32 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper31);
        foodev.jsondiff.jsonwrap.Wrapper wrapper33 = jsonDiff32.factory;
        foodev.jsondiff.JsonDiff jsonDiff34 = new foodev.jsondiff.JsonDiff(wrapper33);
        foodev.jsondiff.Visitor<?> wildcardVisitor35 = jsonDiff34.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction37 = jsonDiff34.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper38 = jsonDiff34.factory;
        int int40 = jsonDiff34.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction42 = jsonDiff34.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor43 = jsonDiff34.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction45 = jsonDiff34.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction47 = jsonDiff34.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper48 = instruction47.oper;
        instruction28.oper = oper48;
        instruction6.oper = oper48;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + oper10 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper10.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str15, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str17, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wrapper23);
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str29, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str30, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertNotNull(wrapper33);
        org.junit.Assert.assertNull(wildcardVisitor35);
        org.junit.Assert.assertNotNull(instruction37);
        org.junit.Assert.assertNotNull(wrapper38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(instruction42);
        org.junit.Assert.assertNull(wildcardVisitor43);
        org.junit.Assert.assertNotNull(instruction45);
        org.junit.Assert.assertNotNull(instruction47);
        org.junit.Assert.assertTrue("'" + oper48 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper48.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07525");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = null;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff13.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper21);
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff22.factory;
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff(wrapper23);
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff24.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor27 = jsonDiff24.getVisitor();
        int int29 = jsonDiff24.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor30 = jsonDiff24.getVisitor();
        int int32 = jsonDiff24.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int34 = jsonDiff24.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction36 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        boolean boolean37 = instruction36.isIndexed();
        instruction36.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        foodev.jsondiff.Oper oper40 = instruction36.oper;
        foodev.jsondiff.Oper oper41 = instruction36.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff43 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper42);
        foodev.jsondiff.jsonwrap.Wrapper wrapper44 = jsonDiff43.factory;
        foodev.jsondiff.JsonDiff jsonDiff45 = new foodev.jsondiff.JsonDiff(wrapper44);
        foodev.jsondiff.Visitor<?> wildcardVisitor46 = jsonDiff45.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction48 = jsonDiff45.create("");
        instruction48.key = "hi!";
        int int51 = instruction48.index;
        foodev.jsondiff.Oper oper52 = instruction48.oper;
        java.lang.String str53 = instruction48.key;
        instruction48.index = 0;
        java.lang.String str56 = instruction48.key;
        foodev.jsondiff.Oper oper57 = instruction48.oper;
        foodev.jsondiff.Oper oper58 = instruction48.oper;
        instruction36.oper = oper58;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Object) oper58);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNull(wrapper18);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertNotNull(wrapper23);
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertNull(wildcardVisitor27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(instruction36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + oper40 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper40.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper41 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper41.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper44);
        org.junit.Assert.assertNull(wildcardVisitor46);
        org.junit.Assert.assertNotNull(instruction48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + oper52 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper52.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertTrue("'" + oper57 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper57.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper58 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper58.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07526");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("");
        java.lang.String str11 = instruction10.key;
        foodev.jsondiff.Oper oper12 = instruction10.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper13);
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff14.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff16.create("");
        boolean boolean19 = instruction18.isIndexed();
        instruction18.index = (short) -1;
        instruction18.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction18.key = "hi!";
        int int26 = instruction18.index;
        java.lang.String str27 = instruction18.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper28);
        foodev.jsondiff.jsonwrap.Wrapper wrapper30 = jsonDiff29.factory;
        foodev.jsondiff.JsonDiff jsonDiff31 = new foodev.jsondiff.JsonDiff(wrapper30);
        foodev.jsondiff.JsonDiff.Instruction instruction33 = jsonDiff31.create("");
        boolean boolean34 = instruction33.isIndexed();
        instruction33.index = (short) -1;
        instruction33.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        boolean boolean39 = instruction33.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff41 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper40);
        foodev.jsondiff.jsonwrap.Wrapper wrapper42 = jsonDiff41.factory;
        foodev.jsondiff.JsonDiff jsonDiff43 = new foodev.jsondiff.JsonDiff(wrapper42);
        foodev.jsondiff.Visitor<?> wildcardVisitor44 = jsonDiff43.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction46 = jsonDiff43.create("");
        instruction46.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper49 = instruction46.oper;
        instruction46.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff53 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper52);
        foodev.jsondiff.jsonwrap.Wrapper wrapper54 = jsonDiff53.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction56 = jsonDiff53.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction57 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction57.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff61 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper60);
        int int63 = jsonDiff61.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction65 = jsonDiff61.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper66 = instruction65.oper;
        instruction57.oper = oper66;
        instruction56.oper = oper66;
        instruction46.oper = oper66;
        instruction33.oper = oper66;
        instruction18.oper = oper66;
        instruction10.oper = oper66;
        foodev.jsondiff.Oper oper73 = instruction10.oper;
        java.lang.String str74 = instruction10.key;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + oper12 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper12.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(wrapper30);
        org.junit.Assert.assertNotNull(instruction33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wrapper42);
        org.junit.Assert.assertNull(wildcardVisitor44);
        org.junit.Assert.assertNotNull(instruction46);
        org.junit.Assert.assertTrue("'" + oper49 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper49.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper54);
        org.junit.Assert.assertNotNull(instruction56);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(instruction65);
        org.junit.Assert.assertTrue("'" + oper66 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper66.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper73 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper73.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
    }

    @Test
    public void test07527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07527");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray1 = jacksonWrapperException0.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException6);
        jacksonWrapperException0.addSuppressed((java.lang.Throwable) jacksonWrapperException6);
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException0.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException17);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException24);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException25);
        jacksonWrapperException0.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException0);
        java.lang.Class<?> wildcardClass30 = jacksonWrapperException29.getClass();
        org.junit.Assert.assertNotNull(throwableArray1);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test07528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07528");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int12 = jsonDiff1.isIndexed("");
        int int14 = jsonDiff1.isIndexed("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = jsonDiff1.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test07529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07529");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper13);
        int int16 = jsonDiff14.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor17 = jsonDiff14.getVisitor();
        int int19 = jsonDiff14.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff14.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.String str22 = instruction21.key;
        instruction21.key = "~";
        int int25 = instruction21.index;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement26 = wrapper10.wrap((java.lang.Object) int25);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Integer cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str22, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test07530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07530");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff4.create("hi!");
        java.lang.String str7 = instruction6.key;
        instruction6.index = (byte) 10;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    }

    @Test
    public void test07531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07531");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff15.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff15.create("");
        instruction18.key = "hi!";
        int int21 = instruction18.index;
        foodev.jsondiff.Oper oper22 = instruction18.oper;
        java.lang.String str23 = instruction18.key;
        instruction18.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        java.lang.String str26 = instruction18.key;
        java.lang.String str27 = instruction18.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray35 = jacksonWrapperException34.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException36);
        jacksonWrapperException30.addSuppressed((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException45);
        jacksonWrapperException39.addSuppressed((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException39);
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) instruction18, (java.lang.Object) "");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + oper22 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper22.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str26, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str27, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray35);
    }

    @Test
    public void test07532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07532");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff1.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = jsonDiff1.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
    }

    @Test
    public void test07533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07533");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction13 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper14 = instruction13.oper;
        instruction13.key = "~";
        instruction13.key = "";
        foodev.jsondiff.Oper oper19 = instruction13.oper;
        instruction13.index = '#';
        java.lang.String str22 = instruction13.key;
        foodev.jsondiff.Oper oper23 = instruction13.oper;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement24 = wrapper12.wrap((java.lang.Object) instruction13);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNull(oper14);
        org.junit.Assert.assertNull(oper19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(oper23);
    }

    @Test
    public void test07534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07534");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = gsonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: ~");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
    }

    @Test
    public void test07535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07535");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        int int6 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff4.getVisitor();
        int int11 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff4.factory;
        java.lang.Class<?> wildcardClass13 = wrapper12.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test07536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07536");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff15.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff15.create("");
        int int20 = jsonDiff15.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor21 = jsonDiff15.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff15.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor23 = jsonDiff15.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = jsonDiff15.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement25 = wrapper10.wrap((java.lang.Object) wrapper24);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor21);
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertNull(wildcardVisitor23);
        org.junit.Assert.assertNotNull(wrapper24);
    }

    @Test
    public void test07537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07537");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.Node node11 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.Leaf[] leafArray13 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList14 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList14, leafArray13);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap16 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf17 = jsonDiff10.findLeaves(node11, jzonElement12, (java.util.List<foodev.jsondiff.Leaf>) leafList14, intMap16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(leafArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test07538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07538");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper21);
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper21);
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = jsonDiff23.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper25 = jsonDiff23.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff23.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor28 = jsonDiff23.getVisitor();
        int int30 = jsonDiff23.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper31 = jsonDiff23.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement32 = wrapper15.wrap((java.lang.Object) jsonDiff23);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper24);
        org.junit.Assert.assertNotNull(wrapper25);
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertNull(wildcardVisitor28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(wrapper31);
    }

    @Test
    public void test07539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07539");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff11.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException17);
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff11.apply((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Object) "~");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(throwableArray18);
    }

    @Test
    public void test07540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07540");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int15 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement16, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test07541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07541");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper29);
        foodev.jsondiff.jsonwrap.Wrapper wrapper31 = jsonDiff30.factory;
        foodev.jsondiff.JsonDiff jsonDiff32 = new foodev.jsondiff.JsonDiff(wrapper31);
        foodev.jsondiff.JsonDiff.Instruction instruction34 = jsonDiff32.create("");
        boolean boolean35 = instruction34.isIndexed();
        instruction34.index = (short) -1;
        instruction34.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction34.key = "hi!";
        int int42 = instruction34.index;
        java.lang.String str43 = instruction34.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff45 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper44);
        foodev.jsondiff.jsonwrap.Wrapper wrapper46 = jsonDiff45.factory;
        foodev.jsondiff.JsonDiff jsonDiff47 = new foodev.jsondiff.JsonDiff(wrapper46);
        foodev.jsondiff.JsonDiff.Instruction instruction49 = jsonDiff47.create("");
        boolean boolean50 = instruction49.isIndexed();
        instruction49.index = (short) -1;
        instruction49.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        boolean boolean55 = instruction49.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff57 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper56);
        foodev.jsondiff.jsonwrap.Wrapper wrapper58 = jsonDiff57.factory;
        foodev.jsondiff.JsonDiff jsonDiff59 = new foodev.jsondiff.JsonDiff(wrapper58);
        foodev.jsondiff.Visitor<?> wildcardVisitor60 = jsonDiff59.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction62 = jsonDiff59.create("");
        instruction62.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper65 = instruction62.oper;
        instruction62.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff69 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper68);
        foodev.jsondiff.jsonwrap.Wrapper wrapper70 = jsonDiff69.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction72 = jsonDiff69.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction73 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction73.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper76 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff77 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper76);
        int int79 = jsonDiff77.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction81 = jsonDiff77.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper82 = instruction81.oper;
        instruction73.oper = oper82;
        instruction72.oper = oper82;
        instruction62.oper = oper82;
        instruction49.oper = oper82;
        instruction34.oper = oper82;
        java.lang.String str88 = instruction34.key;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) "hi!", (java.lang.Object) str88);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(wrapper31);
        org.junit.Assert.assertNotNull(instruction34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(wrapper46);
        org.junit.Assert.assertNotNull(instruction49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wrapper58);
        org.junit.Assert.assertNull(wildcardVisitor60);
        org.junit.Assert.assertNotNull(instruction62);
        org.junit.Assert.assertTrue("'" + oper65 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper65.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper70);
        org.junit.Assert.assertNotNull(instruction72);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(instruction81);
        org.junit.Assert.assertTrue("'" + oper82 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper82.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi!" + "'", str88, "hi!");
    }

    @Test
    public void test07542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07542");
        foodev.jsondiff.jsonwrap.Wrapper wrapper0 = null;
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff(wrapper0);
        foodev.jsondiff.JsonDiff.Instruction instruction3 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("~");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = jsonDiff1.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(instruction3);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test07543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07543");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int7 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = jsonDiff1.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
    }

    @Test
    public void test07544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07544");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff9.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff9.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff9.factory;
        int int17 = jsonDiff9.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int19 = jsonDiff9.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int21 = jsonDiff9.isIndexed("");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement22 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement23 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff9.apply(jzonElement22, jzonElement23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test07545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07545");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = jsonDiff12.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(wrapper11);
    }

    @Test
    public void test07546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07546");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff7.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        java.lang.Class<?> wildcardClass10 = jsonDiff7.getClass();
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test07547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07547");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper4);
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff7.create("");
        int int10 = instruction9.index;
        boolean boolean11 = instruction9.isIndexed();
        instruction9.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper14);
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff15.factory;
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper16);
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff17.create("");
        boolean boolean20 = instruction19.isIndexed();
        instruction19.index = (short) -1;
        foodev.jsondiff.Oper oper23 = instruction19.oper;
        instruction9.oper = oper23;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement25 = jacksonWrapper0.wrap((java.lang.Object) instruction9);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + oper23 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper23.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07548");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int7 = jsonDiff1.isIndexed("");
        int int9 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff1.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = jsonDiff1.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor10);
    }

    @Test
    public void test07549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07549");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = jsonDiff6.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertNotNull(wrapper5);
    }

    @Test
    public void test07550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07550");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject13 = jsonDiff10.diff(jzonElement11, jzonElement12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test07551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07551");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff.Instruction instruction3 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction3.key = "";
        instruction3.index = 'a';
        instruction3.index = 1;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff11.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction14.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        foodev.jsondiff.JsonDiff.Instruction instruction17 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction17.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper20);
        int int23 = jsonDiff21.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff21.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper26 = instruction25.oper;
        instruction17.oper = oper26;
        instruction14.oper = oper26;
        instruction3.oper = oper26;
        boolean boolean30 = instruction3.isIndexed();
        java.lang.String str31 = instruction3.key;
        instruction3.index = (short) 10;
        int int34 = instruction3.index;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement35 = jacksonWrapper0.wrap((java.lang.Object) int34);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Integer cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertTrue("'" + oper26 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper26.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
    }

    @Test
    public void test07552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07552");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException6);
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException22.getSuppressed();
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray34);
    }

    @Test
    public void test07553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07553");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException18);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException18);
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException33.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray38 = jacksonWrapperException37.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException39);
        jacksonWrapperException33.addSuppressed((java.lang.Throwable) jacksonWrapperException39);
        jacksonWrapperException31.addSuppressed((java.lang.Throwable) jacksonWrapperException33);
        java.lang.Throwable[] throwableArray43 = jacksonWrapperException33.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException46);
        jacksonWrapperException33.addSuppressed((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException49);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException49);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement52 = jacksonWrapper0.wrap((java.lang.Object) jacksonWrapperException49);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray43);
    }

    @Test
    public void test07554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07554");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        int int7 = jsonDiff5.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff5.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException10);
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException21.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException23.getSuppressed();
        jacksonWrapperException18.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException18);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException33.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException36);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj40 = jsonDiff5.diff((java.lang.Object) jacksonWrapperException16, (java.lang.Object) jacksonWrapperException39);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray34);
    }

    @Test
    public void test07555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07555");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException20.getSuppressed();
        jacksonWrapperException18.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray38 = jacksonWrapperException37.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray42 = jacksonWrapperException41.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException43);
        jacksonWrapperException37.addSuppressed((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray49 = jacksonWrapperException48.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray53 = jacksonWrapperException52.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException54);
        jacksonWrapperException48.addSuppressed((java.lang.Throwable) jacksonWrapperException54);
        jacksonWrapperException47.addSuppressed((java.lang.Throwable) jacksonWrapperException48);
        jacksonWrapperException35.addSuppressed((java.lang.Throwable) jacksonWrapperException48);
        java.lang.Throwable[] throwableArray59 = jacksonWrapperException35.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException62);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray65 = jacksonWrapperException64.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException64);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray69 = jacksonWrapperException68.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException68);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException71 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException70);
        jacksonWrapperException64.addSuppressed((java.lang.Throwable) jacksonWrapperException70);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException73 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException70);
        java.lang.Throwable[] throwableArray74 = jacksonWrapperException70.getSuppressed();
        jacksonWrapperException62.addSuppressed((java.lang.Throwable) jacksonWrapperException70);
        jacksonWrapperException35.addSuppressed((java.lang.Throwable) jacksonWrapperException62);
        jacksonWrapperException18.addSuppressed((java.lang.Throwable) jacksonWrapperException62);
        java.lang.Class<?> wildcardClass78 = jacksonWrapperException18.getClass();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test07556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07556");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        instruction6.index = ' ';
        instruction6.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper13);
        int int17 = jsonDiff15.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff15.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper20);
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff21.factory;
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff(wrapper22);
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff23.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean26 = instruction25.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper27);
        int int30 = jsonDiff28.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff28.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper33 = instruction32.oper;
        instruction25.oper = oper33;
        instruction19.oper = oper33;
        foodev.jsondiff.Oper oper36 = instruction19.oper;
        instruction6.oper = oper36;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertTrue("'" + oper33 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper33.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper36 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper36.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07557");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int7 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff10.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff12.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff12.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff12.factory;
        int int18 = jsonDiff12.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff12.factory;
        int int21 = jsonDiff12.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff12.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = jsonDiff12.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper25 = jsonDiff12.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper26 = jsonDiff12.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper27 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff(wrapper27);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement29 = wrapper8.wrap((java.lang.Object) jsonDiff28);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNull(wildcardVisitor13);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertNotNull(wrapper24);
        org.junit.Assert.assertNotNull(wrapper25);
        org.junit.Assert.assertNotNull(wrapper26);
        org.junit.Assert.assertNotNull(wrapper27);
    }

    @Test
    public void test07558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07558");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff4.create("hi!");
        boolean boolean7 = instruction6.isIndexed();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test07559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07559");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.Visitor<?> wildcardVisitor18 = jsonDiff17.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper19);
        int int22 = jsonDiff20.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff20.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean25 = instruction24.isIndexed();
        foodev.jsondiff.Oper oper26 = null;
        instruction24.oper = oper26;
        foodev.jsondiff.Oper oper28 = instruction24.oper;
        instruction24.key = "~";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray35 = jacksonWrapperException34.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException38.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray43 = jacksonWrapperException42.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException44);
        jacksonWrapperException38.addSuppressed((java.lang.Throwable) jacksonWrapperException44);
        jacksonWrapperException36.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        java.lang.Throwable[] throwableArray48 = jacksonWrapperException38.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException49);
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff17.apply((java.lang.Object) instruction24, (java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNull(wildcardVisitor18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(oper28);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray48);
    }

    @Test
    public void test07560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07560");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper16);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject20 = jsonDiff17.diff(jzonElement18, jzonElement19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(wrapper16);
    }

    @Test
    public void test07561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07561");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        int int6 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject14 = jsonDiff4.diff(jzonElement12, jzonElement13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(instruction11);
    }

    @Test
    public void test07562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07562");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException6);
        java.lang.String str9 = jacksonWrapperException6.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str9, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
    }

    @Test
    public void test07563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07563");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException21.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray35 = jacksonWrapperException34.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException38.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException40);
        jacksonWrapperException34.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException45.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray50 = jacksonWrapperException49.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException49);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException51);
        jacksonWrapperException45.addSuppressed((java.lang.Throwable) jacksonWrapperException51);
        jacksonWrapperException44.addSuppressed((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException45);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        jacksonWrapperException19.addSuppressed((java.lang.Throwable) jacksonWrapperException45);
        java.lang.Throwable[] throwableArray60 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff62 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper61);
        foodev.jsondiff.jsonwrap.Wrapper wrapper63 = jsonDiff62.factory;
        foodev.jsondiff.JsonDiff jsonDiff64 = new foodev.jsondiff.JsonDiff(wrapper63);
        foodev.jsondiff.Visitor<?> wildcardVisitor65 = jsonDiff64.getVisitor();
        int int67 = jsonDiff64.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction69 = jsonDiff64.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int71 = jsonDiff64.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor72 = jsonDiff64.getVisitor();
        int int74 = jsonDiff64.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper75 = jsonDiff64.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj76 = jsonDiff1.diff((java.lang.Object) throwableArray60, (java.lang.Object) jsonDiff64);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: [Ljava.lang.Throwable; cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(wrapper63);
        org.junit.Assert.assertNull(wildcardVisitor65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(instruction69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(wrapper75);
    }

    @Test
    public void test07564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07564");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement5 = jacksonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
    }

    @Test
    public void test07565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07565");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff17.factory;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff19.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction21.key = "hi!";
        instruction21.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper26);
        int int29 = jsonDiff27.isIndexed("hi!");
        int int31 = jsonDiff27.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper32 = jsonDiff27.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper33 = jsonDiff27.factory;
        foodev.jsondiff.JsonDiff jsonDiff34 = new foodev.jsondiff.JsonDiff(wrapper33);
        foodev.jsondiff.JsonDiff jsonDiff35 = new foodev.jsondiff.JsonDiff(wrapper33);
        foodev.jsondiff.JsonDiff.Instruction instruction37 = jsonDiff35.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff39 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper38);
        foodev.jsondiff.jsonwrap.Wrapper wrapper40 = jsonDiff39.factory;
        foodev.jsondiff.JsonDiff jsonDiff41 = new foodev.jsondiff.JsonDiff(wrapper40);
        foodev.jsondiff.JsonDiff.Instruction instruction43 = jsonDiff41.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction45 = jsonDiff41.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction45.index = (short) 100;
        boolean boolean48 = instruction45.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction49 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper50 = instruction49.oper;
        instruction49.key = "~";
        int int53 = instruction49.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff55 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper54);
        int int57 = jsonDiff55.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction59 = jsonDiff55.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean60 = instruction59.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff62 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper61);
        int int64 = jsonDiff62.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction66 = jsonDiff62.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper67 = instruction66.oper;
        instruction59.oper = oper67;
        instruction49.oper = oper67;
        foodev.jsondiff.Oper oper70 = instruction49.oper;
        instruction45.oper = oper70;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper72 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff73 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper72);
        foodev.jsondiff.jsonwrap.Wrapper wrapper74 = jsonDiff73.factory;
        foodev.jsondiff.JsonDiff jsonDiff75 = new foodev.jsondiff.JsonDiff(wrapper74);
        foodev.jsondiff.Visitor<?> wildcardVisitor76 = jsonDiff75.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction78 = jsonDiff75.create("");
        instruction78.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper81 = instruction78.oper;
        instruction45.oper = oper81;
        foodev.jsondiff.Oper oper83 = instruction45.oper;
        foodev.jsondiff.Oper oper84 = instruction45.oper;
        java.lang.String str85 = instruction45.key;
        foodev.jsondiff.Oper oper86 = instruction45.oper;
        instruction37.oper = oper86;
        instruction21.oper = oper86;
        instruction15.oper = oper86;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(wrapper32);
        org.junit.Assert.assertNotNull(wrapper33);
        org.junit.Assert.assertNotNull(instruction37);
        org.junit.Assert.assertNotNull(wrapper40);
        org.junit.Assert.assertNotNull(instruction43);
        org.junit.Assert.assertNotNull(instruction45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(oper50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(instruction59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(instruction66);
        org.junit.Assert.assertTrue("'" + oper67 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper67.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper70 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper70.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper74);
        org.junit.Assert.assertNull(wildcardVisitor76);
        org.junit.Assert.assertNotNull(instruction78);
        org.junit.Assert.assertTrue("'" + oper81 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper81.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper83 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper83.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper84 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper84.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str85, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + oper86 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper86.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07566");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int12 = jsonDiff1.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int16 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.Visitor<?> wildcardVisitor21 = jsonDiff20.getVisitor();
        int int23 = jsonDiff20.isIndexed("");
        foodev.jsondiff.Visitor<?> wildcardVisitor24 = jsonDiff20.getVisitor();
        int int26 = jsonDiff20.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper27 = jsonDiff20.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper28);
        foodev.jsondiff.jsonwrap.Wrapper wrapper30 = jsonDiff29.factory;
        foodev.jsondiff.JsonDiff jsonDiff31 = new foodev.jsondiff.JsonDiff(wrapper30);
        foodev.jsondiff.Visitor<?> wildcardVisitor32 = jsonDiff31.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction34 = jsonDiff31.create("");
        instruction34.index = ' ';
        foodev.jsondiff.Oper oper37 = instruction34.oper;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = jsonDiff1.diff((java.lang.Object) wrapper27, (java.lang.Object) instruction34);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNull(wildcardVisitor21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(wrapper27);
        org.junit.Assert.assertNotNull(wrapper30);
        org.junit.Assert.assertNull(wildcardVisitor32);
        org.junit.Assert.assertNotNull(instruction34);
        org.junit.Assert.assertTrue("'" + oper37 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper37.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07567");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff.Instruction instruction12 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper13 = instruction12.oper;
        instruction12.key = "~";
        instruction12.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper18);
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff19.factory;
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff(wrapper20);
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff21.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff21.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction25.index = (short) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper28);
        foodev.jsondiff.jsonwrap.Wrapper wrapper30 = jsonDiff29.factory;
        foodev.jsondiff.JsonDiff jsonDiff31 = new foodev.jsondiff.JsonDiff(wrapper30);
        foodev.jsondiff.JsonDiff.Instruction instruction33 = jsonDiff31.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction35 = jsonDiff31.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction35.index = (short) 100;
        boolean boolean38 = instruction35.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction39 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper40 = instruction39.oper;
        instruction39.key = "~";
        int int43 = instruction39.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff45 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper44);
        int int47 = jsonDiff45.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction49 = jsonDiff45.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean50 = instruction49.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff52 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper51);
        int int54 = jsonDiff52.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction56 = jsonDiff52.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper57 = instruction56.oper;
        instruction49.oper = oper57;
        instruction39.oper = oper57;
        foodev.jsondiff.Oper oper60 = instruction39.oper;
        instruction35.oper = oper60;
        instruction25.oper = oper60;
        instruction12.oper = oper60;
        instruction12.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        instruction12.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement68 = wrapper10.wrap((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(oper13);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertNotNull(wrapper30);
        org.junit.Assert.assertNotNull(instruction33);
        org.junit.Assert.assertNotNull(instruction35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(oper40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(instruction49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(instruction56);
        org.junit.Assert.assertTrue("'" + oper57 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper57.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper60 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper60.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07568");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int6 = instruction5.index;
        boolean boolean7 = instruction5.isIndexed();
        instruction5.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("");
        boolean boolean16 = instruction15.isIndexed();
        instruction15.index = (short) -1;
        foodev.jsondiff.Oper oper19 = instruction15.oper;
        instruction5.oper = oper19;
        boolean boolean21 = instruction5.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction22 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper23 = instruction22.oper;
        instruction22.key = "~";
        instruction22.key = "";
        foodev.jsondiff.JsonDiff.Instruction instruction28 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction28.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff32 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper31);
        int int34 = jsonDiff32.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction36 = jsonDiff32.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper37 = instruction36.oper;
        instruction28.oper = oper37;
        instruction22.oper = oper37;
        instruction22.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        instruction22.index = (byte) 0;
        foodev.jsondiff.Oper oper44 = instruction22.oper;
        instruction5.oper = oper44;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + oper19 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper19.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(oper23);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(instruction36);
        org.junit.Assert.assertTrue("'" + oper37 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper37.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper44 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper44.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07569");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray3);
    }

    @Test
    public void test07570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07570");
        foodev.jsondiff.JsonDiff.Instruction instruction0 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper1 = instruction0.oper;
        instruction0.key = "~";
        instruction0.key = "";
        foodev.jsondiff.Oper oper6 = instruction0.oper;
        boolean boolean7 = instruction0.isIndexed();
        java.lang.String str8 = instruction0.key;
        instruction0.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        boolean boolean11 = instruction0.isIndexed();
        instruction0.index = 97;
        org.junit.Assert.assertNull(oper1);
        org.junit.Assert.assertNull(oper6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test07571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07571");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction10 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper11 = instruction10.oper;
        instruction10.index = (-1);
        java.lang.String str14 = instruction10.key;
        boolean boolean15 = instruction10.isIndexed();
        instruction10.index = (short) 0;
        foodev.jsondiff.Oper oper18 = instruction10.oper;
        boolean boolean19 = instruction10.isIndexed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = wrapper9.wrap((java.lang.Object) instruction10);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(oper11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(oper18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test07572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07572");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper3);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff6.create("");
        boolean boolean9 = instruction8.isIndexed();
        instruction8.index = (short) -1;
        instruction8.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction8.key = "hi!";
        int int16 = instruction8.index;
        instruction8.index = 0;
        java.lang.String str19 = instruction8.key;
        java.lang.String str20 = instruction8.key;
        instruction8.index = (byte) 0;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement23 = jacksonWrapper0.wrap((java.lang.Object) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Byte cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
    }

    @Test
    public void test07573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07573");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff1.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = jsonDiff1.diff("", "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: From is not a json object");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertNull(wildcardVisitor13);
        org.junit.Assert.assertNotNull(wrapper14);
    }

    @Test
    public void test07574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07574");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        instruction5.key = "hi!";
        int int8 = instruction5.index;
        int int9 = instruction5.index;
        int int10 = instruction5.index;
        foodev.jsondiff.Oper oper11 = instruction5.oper;
        int int12 = instruction5.index;
        java.lang.String str13 = instruction5.key;
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + oper11 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper11.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test07575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07575");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException24.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException30);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException37);
        jacksonWrapperException30.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        java.lang.Throwable[] throwableArray44 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException45.getSuppressed();
        java.lang.Class<?> wildcardClass47 = jacksonWrapperException45.getClass();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test07576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07576");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int6 = instruction5.index;
        foodev.jsondiff.JsonDiff.Instruction instruction7 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper8 = instruction7.oper;
        boolean boolean9 = instruction7.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff11.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction15.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper18);
        int int21 = jsonDiff19.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff19.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper24 = instruction23.oper;
        instruction15.oper = oper24;
        instruction14.oper = oper24;
        instruction7.oper = oper24;
        instruction5.oper = oper24;
        java.lang.Class<?> wildcardClass29 = instruction5.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(oper8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertTrue("'" + oper24 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper24.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test07577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07577");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = wrapper8.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper8);
    }

    @Test
    public void test07578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07578");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        boolean boolean12 = instruction11.isIndexed();
        instruction11.index = (-1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test07579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07579");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        int int7 = jsonDiff5.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff5.apply(jzonElement8, jzonElement9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test07580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07580");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException18);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException23.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray36 = jacksonWrapperException35.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        jacksonWrapperException33.addSuppressed((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException33);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException6);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement44 = jacksonWrapper0.wrap((java.lang.Object) jacksonWrapperException6);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray36);
    }

    @Test
    public void test07581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07581");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException26);
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException26.getSuppressed();
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        java.lang.Throwable[] throwableArray35 = jacksonWrapperException33.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff4.apply((java.lang.Object) jacksonWrapperException26, (java.lang.Object) throwableArray35);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray35);
    }

    @Test
    public void test07582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07582");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("");
        int int16 = instruction15.index;
        boolean boolean17 = instruction15.isIndexed();
        instruction15.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper20);
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff21.factory;
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff(wrapper22);
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff23.create("");
        boolean boolean26 = instruction25.isIndexed();
        instruction25.index = (short) -1;
        foodev.jsondiff.Oper oper29 = instruction25.oper;
        instruction15.oper = oper29;
        java.lang.String str31 = instruction15.key;
        int int32 = instruction15.index;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement33 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff8.applyPartial(jzonElement9, instruction15, jzonElement33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + oper29 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper29.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 97 + "'", int32 == 97);
    }

    @Test
    public void test07583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07583");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray35 = jacksonWrapperException34.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException36);
        jacksonWrapperException30.addSuppressed((java.lang.Throwable) jacksonWrapperException36);
        jacksonWrapperException28.addSuppressed((java.lang.Throwable) jacksonWrapperException30);
        java.lang.Throwable[] throwableArray40 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException43);
        jacksonWrapperException30.addSuppressed((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException43);
        java.lang.Throwable[] throwableArray48 = jacksonWrapperException47.getSuppressed();
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException47);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement50 = jacksonWrapper0.wrap((java.lang.Object) jacksonWrapperException22);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray48);
    }

    @Test
    public void test07584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07584");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor5 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff1.getVisitor();
        int int10 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = jsonDiff1.apply("", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertNull(wildcardVisitor5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test07585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07585");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper1);
        int int4 = jsonDiff2.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor5 = jsonDiff2.getVisitor();
        int int7 = jsonDiff2.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int9 = jsonDiff2.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff2.create("");
        int int13 = jsonDiff2.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff2.getVisitor();
        int int16 = jsonDiff2.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff2.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        instruction18.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement21 = gsonWrapper0.wrap((java.lang.Object) instruction18);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(instruction18);
    }

    @Test
    public void test07586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07586");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff20.create("");
        int int24 = jsonDiff20.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff20.create("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor27 = jsonDiff20.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper28 = jsonDiff20.factory;
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff(wrapper28);
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff(wrapper28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff32 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper31);
        foodev.jsondiff.jsonwrap.Wrapper wrapper33 = jsonDiff32.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction35 = jsonDiff32.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction35.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff39 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper38);
        int int41 = jsonDiff39.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction43 = jsonDiff39.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean44 = instruction43.isIndexed();
        int int45 = instruction43.index;
        int int46 = instruction43.index;
        instruction43.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction43.index = (byte) 1;
        instruction43.index = 35;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff54 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper53);
        int int56 = jsonDiff54.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper57 = jsonDiff54.factory;
        int int59 = jsonDiff54.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction61 = jsonDiff54.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper62 = jsonDiff54.factory;
        foodev.jsondiff.JsonDiff jsonDiff63 = new foodev.jsondiff.JsonDiff(wrapper62);
        int int65 = jsonDiff63.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction67 = jsonDiff63.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        boolean boolean68 = instruction67.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff70 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper69);
        foodev.jsondiff.jsonwrap.Wrapper wrapper71 = jsonDiff70.factory;
        foodev.jsondiff.JsonDiff jsonDiff72 = new foodev.jsondiff.JsonDiff(wrapper71);
        foodev.jsondiff.JsonDiff.Instruction instruction74 = jsonDiff72.create("");
        boolean boolean75 = instruction74.isIndexed();
        int int76 = instruction74.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper77 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff78 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper77);
        foodev.jsondiff.jsonwrap.Wrapper wrapper79 = jsonDiff78.factory;
        foodev.jsondiff.JsonDiff jsonDiff80 = new foodev.jsondiff.JsonDiff(wrapper79);
        foodev.jsondiff.Visitor<?> wildcardVisitor81 = jsonDiff80.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction83 = jsonDiff80.create("");
        instruction83.index = ' ';
        foodev.jsondiff.Oper oper86 = instruction83.oper;
        instruction74.oper = oper86;
        instruction67.oper = oper86;
        instruction43.oper = oper86;
        instruction35.oper = oper86;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) wrapper28, (java.lang.Object) instruction35);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNull(wildcardVisitor15);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertNull(wildcardVisitor27);
        org.junit.Assert.assertNotNull(wrapper28);
        org.junit.Assert.assertNotNull(wrapper33);
        org.junit.Assert.assertNotNull(instruction35);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(instruction43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(wrapper57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(instruction61);
        org.junit.Assert.assertNotNull(wrapper62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(instruction67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wrapper71);
        org.junit.Assert.assertNotNull(instruction74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(wrapper79);
        org.junit.Assert.assertNull(wildcardVisitor81);
        org.junit.Assert.assertNotNull(instruction83);
        org.junit.Assert.assertTrue("'" + oper86 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper86.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07587");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        int int4 = jsonDiff1.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject10 = jsonDiff1.diff(jzonElement8, jzonElement9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNotNull(instruction7);
    }

    @Test
    public void test07588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07588");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = jsonDiff4.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper5);
    }

    @Test
    public void test07589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07589");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = wrapper8.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
    }

    @Test
    public void test07590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07590");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff.Instruction instruction4 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction4.key = "";
        java.lang.String str7 = instruction4.key;
        instruction4.index = 32;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("");
        boolean boolean16 = instruction15.isIndexed();
        instruction15.index = (short) -1;
        int int19 = instruction15.index;
        int int20 = instruction15.index;
        foodev.jsondiff.JsonDiff.Instruction instruction21 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper22 = instruction21.oper;
        instruction21.key = "~";
        instruction21.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper27);
        foodev.jsondiff.jsonwrap.Wrapper wrapper29 = jsonDiff28.factory;
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff(wrapper29);
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff30.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction34 = jsonDiff30.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction34.index = (short) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff38 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper37);
        foodev.jsondiff.jsonwrap.Wrapper wrapper39 = jsonDiff38.factory;
        foodev.jsondiff.JsonDiff jsonDiff40 = new foodev.jsondiff.JsonDiff(wrapper39);
        foodev.jsondiff.JsonDiff.Instruction instruction42 = jsonDiff40.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction44 = jsonDiff40.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction44.index = (short) 100;
        boolean boolean47 = instruction44.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction48 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper49 = instruction48.oper;
        instruction48.key = "~";
        int int52 = instruction48.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff54 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper53);
        int int56 = jsonDiff54.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction58 = jsonDiff54.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean59 = instruction58.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff61 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper60);
        int int63 = jsonDiff61.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction65 = jsonDiff61.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper66 = instruction65.oper;
        instruction58.oper = oper66;
        instruction48.oper = oper66;
        foodev.jsondiff.Oper oper69 = instruction48.oper;
        instruction44.oper = oper69;
        instruction34.oper = oper69;
        instruction21.oper = oper69;
        instruction15.oper = oper69;
        instruction15.index = (byte) 10;
        instruction15.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        foodev.jsondiff.Oper oper78 = instruction15.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper79 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff80 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper79);
        int int82 = jsonDiff80.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction84 = jsonDiff80.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction84.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        boolean boolean87 = instruction84.isIndexed();
        instruction84.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper90 = instruction84.oper;
        instruction15.oper = oper90;
        instruction4.oper = oper90;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement93 = jacksonWrapper0.wrap((java.lang.Object) oper90);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(oper22);
        org.junit.Assert.assertNotNull(wrapper29);
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertNotNull(instruction34);
        org.junit.Assert.assertNotNull(wrapper39);
        org.junit.Assert.assertNotNull(instruction42);
        org.junit.Assert.assertNotNull(instruction44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(oper49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(instruction58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(instruction65);
        org.junit.Assert.assertTrue("'" + oper66 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper66.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper69 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper69.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper78 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper78.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(instruction84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + oper90 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper90.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07591");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        int int12 = jsonDiff10.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff10.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff10.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = jsonDiff10.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
    }

    @Test
    public void test07592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07592");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper3);
        int int7 = jsonDiff5.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper13);
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff14.factory;
        int int17 = jsonDiff14.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff14.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff14.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement21 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff9.applyPartial(jzonElement12, instruction20, jzonElement21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNotNull(instruction20);
    }

    @Test
    public void test07593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07593");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException6);
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray16);
    }

    @Test
    public void test07594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07594");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException4);
        java.lang.String str18 = jacksonWrapperException4.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str18, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test07595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07595");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff8.getVisitor();
        foodev.jsondiff.Node node13 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.Leaf[] leafArray15 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList16 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList16, leafArray15);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap18 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf19 = jsonDiff8.findLeaves(node13, jzonElement14, (java.util.List<foodev.jsondiff.Leaf>) leafList16, intMap18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(leafArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test07596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07596");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.Class<?> wildcardClass14 = instruction13.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test07597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07597");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = wrapper14.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(wrapper14);
    }

    @Test
    public void test07598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07598");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff7.getVisitor();
        int int11 = jsonDiff7.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff7.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff7.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff7.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff18.create("");
        int int22 = jsonDiff18.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff18.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff18.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction26.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction26.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        foodev.jsondiff.Oper oper31 = instruction26.oper;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) jsonDiff7, (java.lang.Object) instruction26);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNull(wildcardVisitor13);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertTrue("'" + oper31 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper31.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07599");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff12.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff12.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff12.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement21 = wrapper19.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNotNull(wrapper19);
    }

    @Test
    public void test07600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07600");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        int int4 = jsonDiff1.isIndexed("hi!");
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Leaf leaf7 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray8 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject9 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = jsonDiff1.accept(leaf7, jzonArray8, jzonObject9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test07601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07601");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply(jzonElement9, jzonElement10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
    }

    @Test
    public void test07602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07602");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int12 = jsonDiff1.isIndexed("");
        int int14 = jsonDiff1.isIndexed("");
        int int16 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor17 = jsonDiff1.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = jsonDiff1.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor17);
    }

    @Test
    public void test07603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07603");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper4);
        int int7 = jsonDiff5.isIndexed("hi!");
        int int9 = jsonDiff5.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff5.factory;
        int int12 = jsonDiff5.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff5.factory;
        int int15 = jsonDiff5.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = jacksonWrapper0.wrap((java.lang.Object) jsonDiff5);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(instruction17);
    }

    @Test
    public void test07604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07604");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = jsonDiff10.apply("", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test07605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07605");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.Leaf leaf13 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray14 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = jsonDiff3.accept(leaf13, jzonArray14, jzonObject15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test07606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07606");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        int int14 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = jsonDiff1.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(instruction16);
    }

    @Test
    public void test07607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07607");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff10.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff12.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor17 = jsonDiff12.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper20);
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff21.factory;
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff(wrapper22);
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff23.create("hi!");
        int int26 = instruction25.index;
        boolean boolean27 = instruction25.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction28 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction28.key = "";
        java.lang.String str31 = instruction28.key;
        foodev.jsondiff.JsonDiff.Instruction instruction32 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper33 = instruction32.oper;
        instruction32.index = (-1);
        instruction32.index = (byte) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff39 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper38);
        foodev.jsondiff.jsonwrap.Wrapper wrapper40 = jsonDiff39.factory;
        foodev.jsondiff.JsonDiff jsonDiff41 = new foodev.jsondiff.JsonDiff(wrapper40);
        foodev.jsondiff.Visitor<?> wildcardVisitor42 = jsonDiff41.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction44 = jsonDiff41.create("");
        instruction44.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper47 = instruction44.oper;
        instruction32.oper = oper47;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff50 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper49);
        foodev.jsondiff.jsonwrap.Wrapper wrapper51 = jsonDiff50.factory;
        foodev.jsondiff.JsonDiff jsonDiff52 = new foodev.jsondiff.JsonDiff(wrapper51);
        foodev.jsondiff.JsonDiff.Instruction instruction54 = jsonDiff52.create("");
        boolean boolean55 = instruction54.isIndexed();
        instruction54.index = (byte) 10;
        boolean boolean58 = instruction54.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction59 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction59.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff63 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper62);
        int int65 = jsonDiff63.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction67 = jsonDiff63.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper68 = instruction67.oper;
        instruction59.oper = oper68;
        instruction54.oper = oper68;
        instruction32.oper = oper68;
        instruction28.oper = oper68;
        instruction25.oper = oper68;
        java.lang.String str74 = instruction25.key;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) instruction19, (java.lang.Object) str74);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertNull(wildcardVisitor17);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNull(oper33);
        org.junit.Assert.assertNotNull(wrapper40);
        org.junit.Assert.assertNull(wildcardVisitor42);
        org.junit.Assert.assertNotNull(instruction44);
        org.junit.Assert.assertTrue("'" + oper47 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper47.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper51);
        org.junit.Assert.assertNotNull(instruction54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(instruction67);
        org.junit.Assert.assertTrue("'" + oper68 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper68.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
    }

    @Test
    public void test07608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07608");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff10.checkIndex(jzonElement11, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test07609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07609");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff3.factory;
        int int7 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        foodev.jsondiff.JsonDiff.Instruction instruction18 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper19 = instruction18.oper;
        instruction18.key = "~";
        instruction18.key = "";
        foodev.jsondiff.JsonDiff.Instruction instruction24 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction24.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper27);
        int int30 = jsonDiff28.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff28.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper33 = instruction32.oper;
        instruction24.oper = oper33;
        instruction18.oper = oper33;
        instruction18.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        int int38 = instruction18.index;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement39 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement17, instruction18, jzonElement39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertNull(oper19);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertTrue("'" + oper33 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper33.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    }

    @Test
    public void test07610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07610");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int16 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = wrapper17.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wrapper17);
    }

    @Test
    public void test07611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07611");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff9.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject13 = jsonDiff9.diff(jzonElement11, jzonElement12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test07612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07612");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = wrapper10.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test07613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07613");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper3);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff6.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff6.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff6.factory;
        int int12 = jsonDiff6.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff6.factory;
        int int15 = jsonDiff6.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff6.create("~");
        int int19 = jsonDiff6.isIndexed("");
        int int21 = jsonDiff6.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff6.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor23 = jsonDiff6.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement24 = gsonWrapper0.wrap((java.lang.Object) jsonDiff6);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertNull(wildcardVisitor23);
    }

    @Test
    public void test07614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07614");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction7.index = (short) 100;
        boolean boolean10 = instruction7.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper12 = instruction11.oper;
        instruction11.key = "~";
        int int15 = instruction11.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        int int19 = jsonDiff17.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean22 = instruction21.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper23);
        int int26 = jsonDiff24.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper29 = instruction28.oper;
        instruction21.oper = oper29;
        instruction11.oper = oper29;
        foodev.jsondiff.Oper oper32 = instruction11.oper;
        instruction7.oper = oper32;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff35 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper34);
        foodev.jsondiff.jsonwrap.Wrapper wrapper36 = jsonDiff35.factory;
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff(wrapper36);
        foodev.jsondiff.Visitor<?> wildcardVisitor38 = jsonDiff37.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction40 = jsonDiff37.create("");
        instruction40.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper43 = instruction40.oper;
        instruction7.oper = oper43;
        foodev.jsondiff.Oper oper45 = instruction7.oper;
        foodev.jsondiff.Oper oper46 = instruction7.oper;
        java.lang.String str47 = instruction7.key;
        foodev.jsondiff.Oper oper48 = instruction7.oper;
        foodev.jsondiff.Oper oper49 = instruction7.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff51 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper50);
        foodev.jsondiff.jsonwrap.Wrapper wrapper52 = jsonDiff51.factory;
        foodev.jsondiff.JsonDiff jsonDiff53 = new foodev.jsondiff.JsonDiff(wrapper52);
        foodev.jsondiff.JsonDiff.Instruction instruction55 = jsonDiff53.create("");
        boolean boolean56 = instruction55.isIndexed();
        int int57 = instruction55.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff59 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper58);
        foodev.jsondiff.jsonwrap.Wrapper wrapper60 = jsonDiff59.factory;
        foodev.jsondiff.JsonDiff jsonDiff61 = new foodev.jsondiff.JsonDiff(wrapper60);
        foodev.jsondiff.Visitor<?> wildcardVisitor62 = jsonDiff61.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction64 = jsonDiff61.create("");
        instruction64.index = ' ';
        foodev.jsondiff.Oper oper67 = instruction64.oper;
        instruction55.oper = oper67;
        instruction7.oper = oper67;
        int int70 = instruction7.index;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(oper12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertTrue("'" + oper29 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper29.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper32 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper32.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper36);
        org.junit.Assert.assertNull(wildcardVisitor38);
        org.junit.Assert.assertNotNull(instruction40);
        org.junit.Assert.assertTrue("'" + oper43 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper43.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper45 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper45.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper46 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper46.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str47, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + oper48 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper48.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper49 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper49.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper52);
        org.junit.Assert.assertNotNull(instruction55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(wrapper60);
        org.junit.Assert.assertNull(wildcardVisitor62);
        org.junit.Assert.assertNotNull(instruction64);
        org.junit.Assert.assertTrue("'" + oper67 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper67.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 100 + "'", int70 == 100);
    }

    @Test
    public void test07615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07615");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Node node9 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.Leaf[] leafArray11 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList12 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList12, leafArray11);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap14 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf15 = jsonDiff1.findLeaves(node9, jzonElement10, (java.util.List<foodev.jsondiff.Leaf>) leafList12, intMap14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(leafArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test07616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07616");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper2);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = jsonDiff6.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
    }

    @Test
    public void test07617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07617");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException9);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException14);
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException14.getSuppressed();
        java.lang.String str17 = jacksonWrapperException14.toString();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str17, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
    }

    @Test
    public void test07618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07618");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int7 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = jsonDiff1.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
    }

    @Test
    public void test07619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07619");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff1.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement5 = wrapper3.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper3);
    }

    @Test
    public void test07620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07620");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction7.index = (short) 100;
        boolean boolean10 = instruction7.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper12 = instruction11.oper;
        instruction11.key = "~";
        int int15 = instruction11.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        int int19 = jsonDiff17.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean22 = instruction21.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper23);
        int int26 = jsonDiff24.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper29 = instruction28.oper;
        instruction21.oper = oper29;
        instruction11.oper = oper29;
        foodev.jsondiff.Oper oper32 = instruction11.oper;
        instruction7.oper = oper32;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff35 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper34);
        foodev.jsondiff.jsonwrap.Wrapper wrapper36 = jsonDiff35.factory;
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff(wrapper36);
        foodev.jsondiff.Visitor<?> wildcardVisitor38 = jsonDiff37.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction40 = jsonDiff37.create("");
        instruction40.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper43 = instruction40.oper;
        instruction7.oper = oper43;
        foodev.jsondiff.Oper oper45 = instruction7.oper;
        foodev.jsondiff.Oper oper46 = instruction7.oper;
        java.lang.String str47 = instruction7.key;
        java.lang.String str48 = instruction7.key;
        foodev.jsondiff.Oper oper49 = instruction7.oper;
        boolean boolean50 = instruction7.isIndexed();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(oper12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertTrue("'" + oper29 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper29.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper32 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper32.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper36);
        org.junit.Assert.assertNull(wildcardVisitor38);
        org.junit.Assert.assertNotNull(instruction40);
        org.junit.Assert.assertTrue("'" + oper43 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper43.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper45 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper45.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper46 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper46.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str47, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str48, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + oper49 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper49.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test07621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07621");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        boolean boolean6 = instruction5.isIndexed();
        instruction5.index = (byte) 10;
        boolean boolean9 = instruction5.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction10 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction10.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper13);
        int int16 = jsonDiff14.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff14.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper19 = instruction18.oper;
        instruction10.oper = oper19;
        instruction5.oper = oper19;
        int int22 = instruction5.index;
        java.lang.Class<?> wildcardClass23 = instruction5.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertTrue("'" + oper19 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper19.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test07622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07622");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int5 = instruction4.index;
        instruction4.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        instruction4.key = "hi!";
        foodev.jsondiff.JsonDiff.Instruction instruction10 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper11 = instruction10.oper;
        instruction10.index = (-1);
        java.lang.String str14 = instruction10.key;
        instruction10.key = "~";
        boolean boolean17 = instruction10.isIndexed();
        boolean boolean18 = instruction10.isIndexed();
        int int19 = instruction10.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper20);
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff21.factory;
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff(wrapper22);
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff23.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff23.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction27.index = (short) 100;
        boolean boolean30 = instruction27.isIndexed();
        java.lang.String str31 = instruction27.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff33 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper32);
        foodev.jsondiff.jsonwrap.Wrapper wrapper34 = jsonDiff33.factory;
        foodev.jsondiff.JsonDiff jsonDiff35 = new foodev.jsondiff.JsonDiff(wrapper34);
        foodev.jsondiff.Visitor<?> wildcardVisitor36 = jsonDiff35.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction38 = jsonDiff35.create("");
        instruction38.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper41 = instruction38.oper;
        instruction38.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff45 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper44);
        foodev.jsondiff.jsonwrap.Wrapper wrapper46 = jsonDiff45.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction48 = jsonDiff45.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction49 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction49.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff53 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper52);
        int int55 = jsonDiff53.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction57 = jsonDiff53.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper58 = instruction57.oper;
        instruction49.oper = oper58;
        instruction48.oper = oper58;
        instruction38.oper = oper58;
        instruction27.oper = oper58;
        instruction10.oper = oper58;
        foodev.jsondiff.Oper oper64 = instruction10.oper;
        instruction4.oper = oper64;
        java.lang.Class<?> wildcardClass66 = oper64.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(oper11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str31, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertNotNull(wrapper34);
        org.junit.Assert.assertNull(wildcardVisitor36);
        org.junit.Assert.assertNotNull(instruction38);
        org.junit.Assert.assertTrue("'" + oper41 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper41.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper46);
        org.junit.Assert.assertNotNull(instruction48);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(instruction57);
        org.junit.Assert.assertTrue("'" + oper58 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper58.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper64 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper64.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test07623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07623");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        int int16 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.Visitor<?> wildcardVisitor21 = jsonDiff20.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff20.factory;
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff(wrapper22);
        int int25 = jsonDiff23.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper26);
        foodev.jsondiff.jsonwrap.Wrapper wrapper28 = jsonDiff27.factory;
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff(wrapper28);
        foodev.jsondiff.Visitor<?> wildcardVisitor30 = jsonDiff29.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff29.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper33 = jsonDiff29.factory;
        int int35 = jsonDiff29.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper36 = jsonDiff29.factory;
        int int38 = jsonDiff29.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction40 = jsonDiff29.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper41 = jsonDiff29.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper42 = jsonDiff29.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper43 = jsonDiff29.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper44 = jsonDiff29.factory;
        foodev.jsondiff.JsonDiff jsonDiff45 = new foodev.jsondiff.JsonDiff(wrapper44);
        foodev.jsondiff.jsonwrap.Wrapper wrapper46 = jsonDiff45.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper47 = jsonDiff45.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction49 = jsonDiff45.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj50 = jsonDiff3.diff((java.lang.Object) jsonDiff23, (java.lang.Object) instruction49);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNull(wildcardVisitor21);
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(wrapper28);
        org.junit.Assert.assertNull(wildcardVisitor30);
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertNotNull(wrapper33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(wrapper36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(instruction40);
        org.junit.Assert.assertNotNull(wrapper41);
        org.junit.Assert.assertNotNull(wrapper42);
        org.junit.Assert.assertNotNull(wrapper43);
        org.junit.Assert.assertNotNull(wrapper44);
        org.junit.Assert.assertNotNull(wrapper46);
        org.junit.Assert.assertNotNull(wrapper47);
        org.junit.Assert.assertNotNull(instruction49);
    }

    @Test
    public void test07624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07624");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        int int13 = jsonDiff11.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Leaf leaf14 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray15 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = jsonDiff11.accept(leaf14, jzonArray15, jzonObject16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test07625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07625");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.Node node8 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        foodev.jsondiff.Leaf[] leafArray10 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList11 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList11, leafArray10);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap13 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf14 = jsonDiff1.findLeaves(node8, jzonElement9, (java.util.List<foodev.jsondiff.Leaf>) leafList11, intMap13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(leafArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test07626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07626");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException18);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException10);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray36 = jacksonWrapperException35.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray40 = jacksonWrapperException39.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException41);
        jacksonWrapperException35.addSuppressed((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException35);
        jacksonWrapperException33.addSuppressed((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException33);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray52 = jacksonWrapperException51.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray56 = jacksonWrapperException55.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException55);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray60 = jacksonWrapperException59.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException59);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException61);
        jacksonWrapperException55.addSuppressed((java.lang.Throwable) jacksonWrapperException61);
        jacksonWrapperException53.addSuppressed((java.lang.Throwable) jacksonWrapperException55);
        java.lang.Throwable[] throwableArray65 = jacksonWrapperException55.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException68);
        jacksonWrapperException55.addSuppressed((java.lang.Throwable) jacksonWrapperException68);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException71 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException55);
        jacksonWrapperException49.addSuppressed((java.lang.Throwable) jacksonWrapperException71);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException71);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement74 = gsonWrapper0.wrap((java.lang.Object) jacksonWrapperException71);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(throwableArray65);
    }

    @Test
    public void test07627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07627");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff11.create("");
        foodev.jsondiff.Leaf leaf14 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray15 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = jsonDiff11.accept(leaf14, jzonArray15, jzonObject16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction13);
    }

    @Test
    public void test07628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07628");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        int int16 = jsonDiff3.isIndexed("");
        int int18 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff21.factory;
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff(wrapper22);
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff(wrapper22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = jsonDiff24.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(wrapper22);
    }

    @Test
    public void test07629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07629");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int15 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement17, jzonElement18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor16);
    }

    @Test
    public void test07630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07630");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.JsonDiff.Instruction instruction12 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction12.key = "";
        java.lang.String str15 = instruction12.key;
        instruction12.index = 32;
        instruction12.index = '4';
        foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement11, instruction12, jzonElement20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test07631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07631");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.Leaf leaf14 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray15 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = jsonDiff13.accept(leaf14, jzonArray15, jzonObject16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test07632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07632");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.Node node11 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        java.util.List<foodev.jsondiff.Leaf> leafList13 = null;
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap14 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf15 = jsonDiff9.findLeaves(node11, jzonElement12, leafList13, intMap14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
    }

    @Test
    public void test07633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07633");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff9.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff9.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        java.lang.Class<?> wildcardClass16 = jsonDiff9.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test07634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07634");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper1);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff4.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction8.index = (short) 100;
        boolean boolean11 = instruction8.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction12 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper13 = instruction12.oper;
        instruction12.key = "~";
        int int16 = instruction12.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        int int20 = jsonDiff18.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff18.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean23 = instruction22.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper24);
        int int27 = jsonDiff25.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff25.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper30 = instruction29.oper;
        instruction22.oper = oper30;
        instruction12.oper = oper30;
        foodev.jsondiff.Oper oper33 = instruction12.oper;
        instruction8.oper = oper33;
        instruction8.index = (-1);
        boolean boolean37 = instruction8.isIndexed();
        java.lang.String str38 = instruction8.key;
        instruction8.key = "";
        java.lang.String str41 = instruction8.key;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement42 = gsonWrapper0.wrap((java.lang.Object) instruction8);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(oper13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(instruction29);
        org.junit.Assert.assertTrue("'" + oper30 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper30.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper33 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper33.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str38, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
    }

    @Test
    public void test07635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07635");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        int int6 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff4.getVisitor();
        int int11 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff4.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff4.factory;
        int int15 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff4.factory;
        foodev.jsondiff.Leaf leaf17 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray18 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = jsonDiff4.accept(leaf17, jzonArray18, jzonObject19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(wrapper16);
    }

    @Test
    public void test07636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07636");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement4 = jacksonWrapper0.wrap((java.lang.Object) jacksonWrapperException2);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray3);
    }

    @Test
    public void test07637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07637");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff2.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff2.getVisitor();
        int int9 = jsonDiff2.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff2.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff2.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Leaf leaf14 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray15 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = jsonDiff2.accept(leaf14, jzonArray15, jzonObject16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
    }

    @Test
    public void test07638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07638");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException22);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException33.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException35);
        jacksonWrapperException29.addSuppressed((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray41 = jacksonWrapperException40.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray45 = jacksonWrapperException44.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException46);
        jacksonWrapperException40.addSuppressed((java.lang.Throwable) jacksonWrapperException46);
        jacksonWrapperException39.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException40);
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray54 = jacksonWrapperException53.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray58 = jacksonWrapperException57.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException59);
        jacksonWrapperException53.addSuppressed((java.lang.Throwable) jacksonWrapperException59);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException59);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException59);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray66 = jacksonWrapperException65.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException65);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException67);
        jacksonWrapperException59.addSuppressed((java.lang.Throwable) jacksonWrapperException67);
        jacksonWrapperException40.addSuppressed((java.lang.Throwable) jacksonWrapperException67);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException71 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException72 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException71);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException73 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException72);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement74 = wrapper12.wrap((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(throwableArray66);
    }

    @Test
    public void test07639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07639");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = jsonDiff1.apply("~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction13);
    }

    @Test
    public void test07640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07640");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int7 = jsonDiff1.isIndexed("");
        int int9 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction10.key = "";
        instruction10.index = 'a';
        instruction10.index = 1;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        int int20 = jsonDiff18.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff18.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff18.create("");
        boolean boolean26 = instruction25.isIndexed();
        foodev.jsondiff.Oper oper27 = instruction25.oper;
        instruction10.oper = oper27;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray35 = jacksonWrapperException34.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException36);
        jacksonWrapperException30.addSuppressed((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        java.lang.Throwable[] throwableArray40 = jacksonWrapperException36.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException43);
        jacksonWrapperException36.addSuppressed((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray48 = jacksonWrapperException47.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray52 = jacksonWrapperException51.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException53);
        jacksonWrapperException47.addSuppressed((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException53);
        java.lang.Throwable[] throwableArray57 = jacksonWrapperException53.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException60);
        jacksonWrapperException53.addSuppressed((java.lang.Throwable) jacksonWrapperException61);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException61);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray66 = jacksonWrapperException65.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException65);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException67);
        jacksonWrapperException63.addSuppressed((java.lang.Throwable) jacksonWrapperException67);
        jacksonWrapperException44.addSuppressed((java.lang.Throwable) jacksonWrapperException63);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException71 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException73 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~");
        java.lang.Throwable[] throwableArray74 = jacksonWrapperException73.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException75 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException73);
        jacksonWrapperException71.addSuppressed((java.lang.Throwable) jacksonWrapperException75);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj77 = jsonDiff1.diff((java.lang.Object) oper27, (java.lang.Object) jacksonWrapperException71);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertNotNull(wrapper23);
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + oper27 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper27.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(throwableArray74);
    }

    @Test
    public void test07641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07641");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff2.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff2.getVisitor();
        int int9 = jsonDiff2.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper10);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = wrapper10.parse("hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test07642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07642");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.Visitor<?> wildcardVisitor19 = jsonDiff18.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff18.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement22 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff18.checkIndex(jzonElement22, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNull(wildcardVisitor19);
        org.junit.Assert.assertNotNull(instruction21);
    }

    @Test
    public void test07643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07643");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException17);
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        java.lang.Throwable throwable28 = null;
        // The following exception was thrown during execution in test generation
        try {
            jacksonWrapperException15.addSuppressed(throwable28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray22);
    }

    @Test
    public void test07644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07644");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper5);
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff6.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff8.getVisitor();
        int int11 = jsonDiff8.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper14);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = jacksonWrapper0.wrap((java.lang.Object) jsonDiff18);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper14);
    }

    @Test
    public void test07645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07645");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int10 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = jsonDiff3.diff("", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test07646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07646");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement2 = gsonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
    }

    @Test
    public void test07647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07647");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("");
        int int12 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff1.factory;
        foodev.jsondiff.Leaf leaf14 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray15 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = jsonDiff1.accept(leaf14, jzonArray15, jzonObject16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
    }

    @Test
    public void test07648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07648");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean6 = instruction5.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        int int10 = jsonDiff8.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper13 = instruction12.oper;
        instruction5.oper = oper13;
        int int15 = instruction5.index;
        foodev.jsondiff.JsonDiff.Instruction instruction16 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction16.key = "";
        instruction16.index = 'a';
        instruction16.index = 1;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper23);
        foodev.jsondiff.jsonwrap.Wrapper wrapper25 = jsonDiff24.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction27.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        foodev.jsondiff.JsonDiff.Instruction instruction30 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction30.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff34 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper33);
        int int36 = jsonDiff34.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction38 = jsonDiff34.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper39 = instruction38.oper;
        instruction30.oper = oper39;
        instruction27.oper = oper39;
        instruction16.oper = oper39;
        instruction5.oper = oper39;
        instruction5.index = 100;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + oper13 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper13.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(wrapper25);
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(instruction38);
        org.junit.Assert.assertTrue("'" + oper39 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper39.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07649");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.Leaf leaf10 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray11 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = jsonDiff9.accept(leaf10, jzonArray11, jzonObject12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
    }

    @Test
    public void test07650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07650");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        instruction6.key = "hi!";
        int int9 = instruction6.index;
        foodev.jsondiff.Oper oper10 = instruction6.oper;
        java.lang.String str11 = instruction6.key;
        java.lang.String str12 = instruction6.key;
        boolean boolean13 = instruction6.isIndexed();
        instruction6.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + oper10 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper10.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test07651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07651");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff3.getVisitor();
        int int10 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff3.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor11);
    }

    @Test
    public void test07652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07652");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff9.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject14 = jsonDiff9.diff(jzonElement12, jzonElement13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(wrapper11);
    }

    @Test
    public void test07653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07653");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement5 = gsonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
    }

    @Test
    public void test07654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07654");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        int int11 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int13 = jsonDiff1.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff1.create("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor19 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement20, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNull(wildcardVisitor19);
    }

    @Test
    public void test07655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07655");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper4 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper4);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper4);
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper4);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff11.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff11.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = gsonWrapper0.wrap((java.lang.Object) jsonDiff11);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(instruction14);
    }

    @Test
    public void test07656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07656");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        instruction6.key = "hi!";
        int int9 = instruction6.index;
        java.lang.String str10 = instruction6.key;
        boolean boolean11 = instruction6.isIndexed();
        instruction6.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test07657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07657");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException17);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException24.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException30);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray36 = jacksonWrapperException35.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray40 = jacksonWrapperException39.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException41);
        jacksonWrapperException35.addSuppressed((java.lang.Throwable) jacksonWrapperException41);
        jacksonWrapperException34.addSuppressed((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException35);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray49 = jacksonWrapperException48.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray53 = jacksonWrapperException52.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException54);
        jacksonWrapperException48.addSuppressed((java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray61 = jacksonWrapperException60.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException60);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException62);
        jacksonWrapperException54.addSuppressed((java.lang.Throwable) jacksonWrapperException62);
        jacksonWrapperException35.addSuppressed((java.lang.Throwable) jacksonWrapperException62);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException62);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException62);
        java.lang.Throwable throwable69 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", throwable69);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException73 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException74 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException73);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException75 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException73);
        jacksonWrapperException70.addSuppressed((java.lang.Throwable) jacksonWrapperException75);
        jacksonWrapperException62.addSuppressed((java.lang.Throwable) jacksonWrapperException75);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException78 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException75);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException79 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException75);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException75);
        java.lang.String str81 = jacksonWrapperException75.toString();
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str81, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
    }

    @Test
    public void test07658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07658");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException6);
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException17);
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray20);
    }

    @Test
    public void test07659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07659");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~");
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        java.lang.String str7 = jacksonWrapperException6.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~" + "'", str7, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
    }

    @Test
    public void test07660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07660");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.Visitor<?> wildcardVisitor21 = jsonDiff20.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement22 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff20.checkIndex(jzonElement22, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNull(wildcardVisitor21);
    }

    @Test
    public void test07661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07661");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~");
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException28);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException31);
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException32.getSuppressed();
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException36);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray33);
    }

    @Test
    public void test07662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07662");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement11, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test07663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07663");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff11.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff11.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff11.getVisitor();
        foodev.jsondiff.Leaf leaf16 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray17 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = jsonDiff11.accept(leaf16, jzonArray17, jzonObject18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNull(wildcardVisitor15);
    }

    @Test
    public void test07664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07664");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper4);
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff7.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff7.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction11.index = (short) 100;
        boolean boolean14 = instruction11.isIndexed();
        java.lang.String str15 = instruction11.key;
        java.lang.String str16 = instruction11.key;
        instruction11.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = jacksonWrapper0.wrap((java.lang.Object) instruction11);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str15, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str16, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test07665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07665");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff3.factory;
        foodev.jsondiff.Leaf leaf20 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray21 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject22 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = jsonDiff3.accept(leaf20, jzonArray21, jzonObject22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertNotNull(wrapper19);
    }

    @Test
    public void test07666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07666");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff9.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff9.checkIndex(jzonElement15, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
    }

    @Test
    public void test07667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07667");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff8.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff13.getVisitor();
        int int16 = jsonDiff13.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff13.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException21.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray35 = jacksonWrapperException34.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException38.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException40);
        jacksonWrapperException34.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray47 = jacksonWrapperException46.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray51 = jacksonWrapperException50.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray55 = jacksonWrapperException54.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException56);
        jacksonWrapperException50.addSuppressed((java.lang.Throwable) jacksonWrapperException56);
        jacksonWrapperException48.addSuppressed((java.lang.Throwable) jacksonWrapperException50);
        jacksonWrapperException43.addSuppressed((java.lang.Throwable) jacksonWrapperException48);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException62);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException63);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj65 = jsonDiff8.diff((java.lang.Object) wrapper17, (java.lang.Object) jacksonWrapperException64);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray55);
    }

    @Test
    public void test07668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07668");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff13.apply(jzonElement14, jzonElement15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test07669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07669");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int13 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject17 = jsonDiff1.diff(jzonElement15, jzonElement16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(wrapper14);
    }

    @Test
    public void test07670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07670");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException16);
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException28);
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException35);
        jacksonWrapperException28.addSuppressed((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray43 = jacksonWrapperException42.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray47 = jacksonWrapperException46.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException48);
        jacksonWrapperException42.addSuppressed((java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException52);
        jacksonWrapperException36.addSuppressed((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException61);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException61);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException61);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException64);
        jacksonWrapperException36.addSuppressed((java.lang.Throwable) jacksonWrapperException65);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException36);
        java.lang.Throwable[] throwableArray68 = jacksonWrapperException36.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray68);
    }

    @Test
    public void test07671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07671");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int10 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = wrapper13.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper13);
    }

    @Test
    public void test07672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07672");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply(jzonElement8, jzonElement9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
    }

    @Test
    public void test07673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07673");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff1.factory;
        int int15 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff18.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff18.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor23 = jsonDiff18.getVisitor();
        int int25 = jsonDiff18.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper26 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff(wrapper26);
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff(wrapper26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper29);
        foodev.jsondiff.jsonwrap.Wrapper wrapper31 = jsonDiff30.factory;
        foodev.jsondiff.JsonDiff jsonDiff32 = new foodev.jsondiff.JsonDiff(wrapper31);
        foodev.jsondiff.JsonDiff.Instruction instruction34 = jsonDiff32.create("");
        int int36 = jsonDiff32.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction38 = jsonDiff32.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction40 = jsonDiff32.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction42 = jsonDiff32.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction42.index = 100;
        int int45 = instruction42.index;
        foodev.jsondiff.Oper oper46 = instruction42.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff48 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper47);
        foodev.jsondiff.jsonwrap.Wrapper wrapper49 = jsonDiff48.factory;
        foodev.jsondiff.JsonDiff jsonDiff50 = new foodev.jsondiff.JsonDiff(wrapper49);
        foodev.jsondiff.JsonDiff.Instruction instruction52 = jsonDiff50.create("");
        int int54 = jsonDiff50.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction56 = jsonDiff50.create("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff58 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper57);
        foodev.jsondiff.jsonwrap.Wrapper wrapper59 = jsonDiff58.factory;
        foodev.jsondiff.JsonDiff jsonDiff60 = new foodev.jsondiff.JsonDiff(wrapper59);
        foodev.jsondiff.JsonDiff.Instruction instruction62 = jsonDiff60.create("");
        boolean boolean63 = instruction62.isIndexed();
        instruction62.index = (short) -1;
        instruction62.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction62.key = "hi!";
        foodev.jsondiff.Oper oper70 = instruction62.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper71 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff72 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper71);
        foodev.jsondiff.jsonwrap.Wrapper wrapper73 = jsonDiff72.factory;
        foodev.jsondiff.JsonDiff jsonDiff74 = new foodev.jsondiff.JsonDiff(wrapper73);
        foodev.jsondiff.JsonDiff.Instruction instruction76 = jsonDiff74.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean77 = instruction76.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper78 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff79 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper78);
        int int81 = jsonDiff79.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction83 = jsonDiff79.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper84 = instruction83.oper;
        instruction76.oper = oper84;
        instruction62.oper = oper84;
        instruction56.oper = oper84;
        instruction42.oper = oper84;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply((java.lang.Object) jsonDiff28, (java.lang.Object) oper84);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertNull(wildcardVisitor23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(wrapper26);
        org.junit.Assert.assertNotNull(wrapper31);
        org.junit.Assert.assertNotNull(instruction34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(instruction38);
        org.junit.Assert.assertNotNull(instruction40);
        org.junit.Assert.assertNotNull(instruction42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        org.junit.Assert.assertTrue("'" + oper46 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper46.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper49);
        org.junit.Assert.assertNotNull(instruction52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(instruction56);
        org.junit.Assert.assertNotNull(wrapper59);
        org.junit.Assert.assertNotNull(instruction62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + oper70 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper70.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper73);
        org.junit.Assert.assertNotNull(instruction76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(instruction83);
        org.junit.Assert.assertTrue("'" + oper84 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper84.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07674");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException25);
        jacksonWrapperException23.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray43 = jacksonWrapperException42.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray47 = jacksonWrapperException46.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException48);
        jacksonWrapperException42.addSuppressed((java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray55 = jacksonWrapperException54.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException54);
        jacksonWrapperException52.addSuppressed((java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException52);
        jacksonWrapperException40.addSuppressed((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray61 = jacksonWrapperException60.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException60);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray65 = jacksonWrapperException64.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException64);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException66);
        jacksonWrapperException60.addSuppressed((java.lang.Throwable) jacksonWrapperException66);
        java.lang.Throwable[] throwableArray69 = jacksonWrapperException60.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException71 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray72 = jacksonWrapperException71.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException73 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException71);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException75 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray76 = jacksonWrapperException75.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException77 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException75);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException78 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException77);
        jacksonWrapperException71.addSuppressed((java.lang.Throwable) jacksonWrapperException77);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException80 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException77);
        java.lang.Throwable[] throwableArray81 = jacksonWrapperException77.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException84 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException85 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException84);
        jacksonWrapperException77.addSuppressed((java.lang.Throwable) jacksonWrapperException85);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException87 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException85);
        jacksonWrapperException60.addSuppressed((java.lang.Throwable) jacksonWrapperException87);
        jacksonWrapperException40.addSuppressed((java.lang.Throwable) jacksonWrapperException60);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException60);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement91 = wrapper6.wrap((java.lang.Object) jacksonWrapperException15);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(throwableArray72);
        org.junit.Assert.assertNotNull(throwableArray76);
        org.junit.Assert.assertNotNull(throwableArray81);
    }

    @Test
    public void test07675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07675");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int16 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        java.lang.Throwable[] throwableArray36 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray45 = jacksonWrapperException44.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray48 = jacksonWrapperException47.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException47.addSuppressed((java.lang.Throwable) jacksonWrapperException49);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray52 = jacksonWrapperException51.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray56 = jacksonWrapperException55.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException55);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException57);
        jacksonWrapperException51.addSuppressed((java.lang.Throwable) jacksonWrapperException57);
        jacksonWrapperException47.addSuppressed((java.lang.Throwable) jacksonWrapperException57);
        jacksonWrapperException46.addSuppressed((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException46);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj64 = jsonDiff3.diff((java.lang.Object) jacksonWrapperException39, (java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray56);
    }

    @Test
    public void test07676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07676");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        int int6 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff4.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff4.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = wrapper10.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test07677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07677");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement3 = gsonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
    }

    @Test
    public void test07678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07678");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff13.apply(jzonElement14, jzonElement15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test07679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07679");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement13, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test07680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07680");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.Visitor<?> wildcardVisitor18 = jsonDiff17.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff17.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff17.factory;
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff(wrapper20);
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff21.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff21.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str28 = jsonDiff21.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNull(wildcardVisitor18);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertNotNull(instruction25);
    }

    @Test
    public void test07681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07681");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException32.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException34);
        jacksonWrapperException30.addSuppressed((java.lang.Throwable) jacksonWrapperException34);
        java.lang.Throwable[] throwableArray37 = jacksonWrapperException34.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement38 = wrapper10.wrap((java.lang.Object) jacksonWrapperException34);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray37);
    }

    @Test
    public void test07682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07682");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper1);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff4.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction8.index = (short) 100;
        boolean boolean11 = instruction8.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction12 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper13 = instruction12.oper;
        instruction12.key = "~";
        int int16 = instruction12.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        int int20 = jsonDiff18.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff18.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean23 = instruction22.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper24);
        int int27 = jsonDiff25.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff25.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper30 = instruction29.oper;
        instruction22.oper = oper30;
        instruction12.oper = oper30;
        foodev.jsondiff.Oper oper33 = instruction12.oper;
        instruction8.oper = oper33;
        instruction8.index = (-1);
        boolean boolean37 = instruction8.isIndexed();
        instruction8.key = "hi!";
        int int40 = instruction8.index;
        java.lang.Class<?> wildcardClass41 = instruction8.getClass();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement42 = jacksonWrapper0.wrap((java.lang.Object) wildcardClass41);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Class cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(oper13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(instruction29);
        org.junit.Assert.assertTrue("'" + oper30 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper30.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper33 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper33.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test07683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07683");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = wrapper5.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper5);
    }

    @Test
    public void test07684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07684");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper3);
        int int6 = jsonDiff4.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff4.factory;
        int int9 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff4.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff15.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff15.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = gsonWrapper0.wrap((java.lang.Object) wrapper17);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(wrapper17);
    }

    @Test
    public void test07685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07685");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper14);
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff15.factory;
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper16);
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff17.create("");
        int int21 = jsonDiff17.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff17.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff17.create("");
        int int25 = instruction24.index;
        instruction24.index = '4';
        foodev.jsondiff.jsonwrap.JzonElement jzonElement28 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement13, instruction24, jzonElement28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test07686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07686");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        java.lang.String str9 = instruction8.key;
        instruction8.index = (short) -1;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        int int15 = jsonDiff13.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean18 = instruction17.isIndexed();
        foodev.jsondiff.Oper oper19 = null;
        instruction17.oper = oper19;
        instruction17.index = ' ';
        foodev.jsondiff.Oper oper23 = instruction17.oper;
        instruction17.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper26);
        foodev.jsondiff.jsonwrap.Wrapper wrapper28 = jsonDiff27.factory;
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff(wrapper28);
        foodev.jsondiff.JsonDiff.Instruction instruction31 = jsonDiff29.create("");
        boolean boolean32 = instruction31.isIndexed();
        instruction31.index = (short) -1;
        int int35 = instruction31.index;
        int int36 = instruction31.index;
        foodev.jsondiff.JsonDiff.Instruction instruction37 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper38 = instruction37.oper;
        instruction37.key = "~";
        instruction37.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff44 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper43);
        foodev.jsondiff.jsonwrap.Wrapper wrapper45 = jsonDiff44.factory;
        foodev.jsondiff.JsonDiff jsonDiff46 = new foodev.jsondiff.JsonDiff(wrapper45);
        foodev.jsondiff.JsonDiff.Instruction instruction48 = jsonDiff46.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction50 = jsonDiff46.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction50.index = (short) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff54 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper53);
        foodev.jsondiff.jsonwrap.Wrapper wrapper55 = jsonDiff54.factory;
        foodev.jsondiff.JsonDiff jsonDiff56 = new foodev.jsondiff.JsonDiff(wrapper55);
        foodev.jsondiff.JsonDiff.Instruction instruction58 = jsonDiff56.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction60 = jsonDiff56.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction60.index = (short) 100;
        boolean boolean63 = instruction60.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction64 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper65 = instruction64.oper;
        instruction64.key = "~";
        int int68 = instruction64.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff70 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper69);
        int int72 = jsonDiff70.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction74 = jsonDiff70.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean75 = instruction74.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper76 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff77 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper76);
        int int79 = jsonDiff77.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction81 = jsonDiff77.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper82 = instruction81.oper;
        instruction74.oper = oper82;
        instruction64.oper = oper82;
        foodev.jsondiff.Oper oper85 = instruction64.oper;
        instruction60.oper = oper85;
        instruction50.oper = oper85;
        instruction37.oper = oper85;
        instruction31.oper = oper85;
        foodev.jsondiff.Oper oper90 = instruction31.oper;
        instruction17.oper = oper90;
        instruction8.oper = oper90;
        java.lang.String str93 = instruction8.key;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(oper23);
        org.junit.Assert.assertNotNull(wrapper28);
        org.junit.Assert.assertNotNull(instruction31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(oper38);
        org.junit.Assert.assertNotNull(wrapper45);
        org.junit.Assert.assertNotNull(instruction48);
        org.junit.Assert.assertNotNull(instruction50);
        org.junit.Assert.assertNotNull(wrapper55);
        org.junit.Assert.assertNotNull(instruction58);
        org.junit.Assert.assertNotNull(instruction60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(oper65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(instruction74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(instruction81);
        org.junit.Assert.assertTrue("'" + oper82 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper82.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper85 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper85.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper90 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper90.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "" + "'", str93, "");
    }

    @Test
    public void test07687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07687");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int10 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException24.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException26);
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        jacksonWrapperException18.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException18.getSuppressed();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException18.getSuppressed();
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException18);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement34 = wrapper13.wrap((java.lang.Object) jacksonWrapperException18);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray32);
    }

    @Test
    public void test07688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07688");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff19.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff19.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper23);
        int int26 = jsonDiff24.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper27 = jsonDiff24.factory;
        int int29 = jsonDiff24.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction31 = jsonDiff24.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper32 = jsonDiff24.factory;
        foodev.jsondiff.JsonDiff jsonDiff33 = new foodev.jsondiff.JsonDiff(wrapper32);
        foodev.jsondiff.JsonDiff jsonDiff34 = new foodev.jsondiff.JsonDiff(wrapper32);
        foodev.jsondiff.JsonDiff jsonDiff35 = new foodev.jsondiff.JsonDiff(wrapper32);
        foodev.jsondiff.jsonwrap.Wrapper wrapper36 = jsonDiff35.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper37 = jsonDiff35.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper38 = jsonDiff35.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper39 = jsonDiff35.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement40 = wrapper22.wrap((java.lang.Object) jsonDiff35);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(wrapper27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(instruction31);
        org.junit.Assert.assertNotNull(wrapper32);
        org.junit.Assert.assertNotNull(wrapper36);
        org.junit.Assert.assertNotNull(wrapper37);
        org.junit.Assert.assertNotNull(wrapper38);
        org.junit.Assert.assertNotNull(wrapper39);
    }

    @Test
    public void test07689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07689");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException9);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException24.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException26);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement30 = gsonWrapper0.wrap((java.lang.Object) jacksonWrapperException12);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray25);
    }

    @Test
    public void test07690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07690");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = wrapper13.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
    }

    @Test
    public void test07691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07691");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff10.getVisitor();
        int int13 = jsonDiff10.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff10.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff10.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor17 = jsonDiff10.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff10.factory;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = gsonWrapper0.wrap((java.lang.Object) jsonDiff19);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertNull(wildcardVisitor17);
        org.junit.Assert.assertNotNull(wrapper18);
    }

    @Test
    public void test07692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07692");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException28);
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray36 = jacksonWrapperException35.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray40 = jacksonWrapperException39.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException41);
        jacksonWrapperException35.addSuppressed((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray47 = jacksonWrapperException46.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray51 = jacksonWrapperException50.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException52);
        jacksonWrapperException46.addSuppressed((java.lang.Throwable) jacksonWrapperException52);
        jacksonWrapperException45.addSuppressed((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException46);
        jacksonWrapperException28.addSuppressed((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException46);
        jacksonWrapperException19.addSuppressed((java.lang.Throwable) jacksonWrapperException58);
        java.lang.Throwable[] throwableArray60 = jacksonWrapperException58.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException58);
        java.lang.Throwable[] throwableArray62 = jacksonWrapperException61.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(throwableArray62);
    }

    @Test
    public void test07693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07693");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int12 = jsonDiff3.isIndexed("hi!");
        foodev.jsondiff.Node node13 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.Leaf[] leafArray15 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList16 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList16, leafArray15);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap18 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf19 = jsonDiff3.findLeaves(node13, jzonElement14, (java.util.List<foodev.jsondiff.Leaf>) leafList16, intMap18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(leafArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test07694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07694");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException16);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException16);
        java.lang.String str21 = jacksonWrapperException16.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str21, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
    }

    @Test
    public void test07695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07695");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException20.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement24 = jacksonWrapper0.wrap((java.lang.Object) throwableArray23);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: [Ljava.lang.Throwable; cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray23);
    }

    @Test
    public void test07696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07696");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException23.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        java.lang.String str30 = jacksonWrapperException27.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str30, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test07697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07697");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException9);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException3);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        java.lang.String str24 = jacksonWrapperException3.toString();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str24, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test07698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07698");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException1.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray3);
    }

    @Test
    public void test07699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07699");
        foodev.jsondiff.JsonDiff.Instruction instruction0 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction0.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper3);
        int int6 = jsonDiff4.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper9 = instruction8.oper;
        instruction0.oper = oper9;
        java.lang.String str11 = instruction0.key;
        int int12 = instruction0.index;
        instruction0.index = (short) 1;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff18.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff18.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction22.index = (short) 100;
        boolean boolean25 = instruction22.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper26);
        foodev.jsondiff.jsonwrap.Wrapper wrapper28 = jsonDiff27.factory;
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff(wrapper28);
        foodev.jsondiff.JsonDiff.Instruction instruction31 = jsonDiff29.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction31.key = "hi!";
        foodev.jsondiff.Oper oper34 = instruction31.oper;
        instruction22.oper = oper34;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper36);
        foodev.jsondiff.jsonwrap.Wrapper wrapper38 = jsonDiff37.factory;
        foodev.jsondiff.JsonDiff jsonDiff39 = new foodev.jsondiff.JsonDiff(wrapper38);
        foodev.jsondiff.JsonDiff.Instruction instruction41 = jsonDiff39.create("");
        int int43 = jsonDiff39.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction45 = jsonDiff39.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction47 = jsonDiff39.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction47.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        java.lang.String str50 = instruction47.key;
        boolean boolean51 = instruction47.isIndexed();
        foodev.jsondiff.Oper oper52 = instruction47.oper;
        instruction22.oper = oper52;
        instruction0.oper = oper52;
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + oper9 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper9.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wrapper28);
        org.junit.Assert.assertNotNull(instruction31);
        org.junit.Assert.assertTrue("'" + oper34 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper34.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper38);
        org.junit.Assert.assertNotNull(instruction41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(instruction45);
        org.junit.Assert.assertNotNull(instruction47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str50, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + oper52 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper52.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07700");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        boolean boolean13 = instruction12.isIndexed();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test07701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07701");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        int int9 = jsonDiff7.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Leaf leaf10 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray11 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = jsonDiff7.accept(leaf10, jzonArray11, jzonObject12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test07702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07702");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff3.getVisitor();
        int int10 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = jsonDiff3.diff("", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test07703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07703");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        int int13 = jsonDiff11.isIndexed("~");
        java.lang.Class<?> wildcardClass14 = jsonDiff11.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test07704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07704");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException26);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException26);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray22);
    }

    @Test
    public void test07705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07705");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = wrapper15.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
    }

    @Test
    public void test07706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07706");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff7.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff7.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff12.checkIndex(jzonElement13, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper11);
    }

    @Test
    public void test07707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07707");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = jsonDiff3.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
    }

    @Test
    public void test07708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07708");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper4);
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.String str11 = instruction10.key;
        boolean boolean12 = instruction10.isIndexed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = jacksonWrapper0.wrap((java.lang.Object) instruction10);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str11, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test07709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07709");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int10 = jsonDiff3.isIndexed("");
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int14 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        foodev.jsondiff.JsonDiff.Instruction instruction16 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction16.key = "";
        instruction16.index = 'a';
        instruction16.index = 1;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper23);
        foodev.jsondiff.jsonwrap.Wrapper wrapper25 = jsonDiff24.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction27.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        foodev.jsondiff.JsonDiff.Instruction instruction30 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction30.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff34 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper33);
        int int36 = jsonDiff34.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction38 = jsonDiff34.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper39 = instruction38.oper;
        instruction30.oper = oper39;
        instruction27.oper = oper39;
        instruction16.oper = oper39;
        boolean boolean43 = instruction16.isIndexed();
        java.lang.String str44 = instruction16.key;
        instruction16.index = (-1);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement47 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement15, instruction16, jzonElement47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wrapper25);
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(instruction38);
        org.junit.Assert.assertTrue("'" + oper39 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper39.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
    }

    @Test
    public void test07710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07710");
        foodev.jsondiff.jsonwrap.Wrapper wrapper0 = null;
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff(wrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        instruction5.key = "~";
        org.junit.Assert.assertNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertNotNull(instruction5);
    }

    @Test
    public void test07711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07711");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException25);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException38.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray43 = jacksonWrapperException42.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException44);
        jacksonWrapperException38.addSuppressed((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray51 = jacksonWrapperException50.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException52);
        jacksonWrapperException44.addSuppressed((java.lang.Throwable) jacksonWrapperException52);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException52);
        java.lang.Throwable throwable59 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", throwable59);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException63);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException63);
        jacksonWrapperException60.addSuppressed((java.lang.Throwable) jacksonWrapperException65);
        jacksonWrapperException52.addSuppressed((java.lang.Throwable) jacksonWrapperException65);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException65);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException65);
        java.lang.Class<?> wildcardClass70 = jacksonWrapperException65.getClass();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test07712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07712");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff13.apply(jzonElement14, jzonElement15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test07713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07713");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Visitor<?> wildcardVisitor20 = jsonDiff17.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement23 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff10.applyPartial(jzonElement11, instruction22, jzonElement23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertNull(wildcardVisitor20);
        org.junit.Assert.assertNotNull(instruction22);
    }

    @Test
    public void test07714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07714");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper3);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = wrapper3.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
    }

    @Test
    public void test07715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07715");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff.Instruction instruction3 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = jsonDiff1.diff("", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(instruction3);
    }

    @Test
    public void test07716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07716");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction7.index = (short) 100;
        boolean boolean10 = instruction7.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper12 = instruction11.oper;
        instruction11.key = "~";
        int int15 = instruction11.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        int int19 = jsonDiff17.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean22 = instruction21.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper23);
        int int26 = jsonDiff24.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper29 = instruction28.oper;
        instruction21.oper = oper29;
        instruction11.oper = oper29;
        foodev.jsondiff.Oper oper32 = instruction11.oper;
        instruction7.oper = oper32;
        instruction7.index = (-1);
        boolean boolean36 = instruction7.isIndexed();
        foodev.jsondiff.Oper oper37 = instruction7.oper;
        java.lang.String str38 = instruction7.key;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(oper12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertTrue("'" + oper29 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper29.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper32 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper32.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + oper37 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper37.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str38, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test07717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07717");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int7 = jsonDiff1.isIndexed("");
        int int9 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        int int18 = jsonDiff16.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff16.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper21 = instruction20.oper;
        int int22 = instruction20.index;
        foodev.jsondiff.Oper oper23 = instruction20.oper;
        java.lang.String str24 = instruction20.key;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement25 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff13.applyPartial(jzonElement14, instruction20, jzonElement25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertTrue("'" + oper21 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper21.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + oper23 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper23.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str24, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test07718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07718");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        int int9 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper20);
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff21.factory;
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff(wrapper22);
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff23.create("");
        int int27 = jsonDiff23.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper28 = jsonDiff23.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction30 = jsonDiff23.create("");
        java.lang.String str31 = instruction30.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff33 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper32);
        foodev.jsondiff.jsonwrap.Wrapper wrapper34 = jsonDiff33.factory;
        foodev.jsondiff.JsonDiff jsonDiff35 = new foodev.jsondiff.JsonDiff(wrapper34);
        foodev.jsondiff.JsonDiff.Instruction instruction37 = jsonDiff35.create("");
        int int39 = jsonDiff35.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction41 = jsonDiff35.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction43 = jsonDiff35.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction45 = jsonDiff35.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor46 = jsonDiff35.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper47 = jsonDiff35.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction49 = jsonDiff35.create("~");
        foodev.jsondiff.Oper oper50 = instruction49.oper;
        instruction30.oper = oper50;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Object) oper50);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(wrapper28);
        org.junit.Assert.assertNotNull(instruction30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(wrapper34);
        org.junit.Assert.assertNotNull(instruction37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(instruction41);
        org.junit.Assert.assertNotNull(instruction43);
        org.junit.Assert.assertNotNull(instruction45);
        org.junit.Assert.assertNull(wildcardVisitor46);
        org.junit.Assert.assertNotNull(wrapper47);
        org.junit.Assert.assertNotNull(instruction49);
        org.junit.Assert.assertTrue("'" + oper50 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper50.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07719");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff3.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = jsonDiff3.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNull(wildcardVisitor11);
    }

    @Test
    public void test07720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07720");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException18);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        java.lang.Class<?> wildcardClass22 = jacksonWrapperException21.getClass();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test07721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07721");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff6.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff6.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff6.apply(jzonElement10, jzonElement11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction9);
    }

    @Test
    public void test07722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07722");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        int int13 = jsonDiff11.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff11.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff11.apply(jzonElement15, jzonElement16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(wrapper14);
    }

    @Test
    public void test07723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07723");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = jsonDiff1.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test07724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07724");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff9.create("");
        int int13 = jsonDiff9.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff9.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction17.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper20 = null;
        instruction17.oper = oper20;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper22);
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = jsonDiff23.factory;
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff(wrapper24);
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff25.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff25.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction31 = jsonDiff25.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction33 = jsonDiff25.create("hi!");
        instruction33.index = (short) 0;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper36);
        foodev.jsondiff.jsonwrap.Wrapper wrapper38 = jsonDiff37.factory;
        foodev.jsondiff.JsonDiff jsonDiff39 = new foodev.jsondiff.JsonDiff(wrapper38);
        foodev.jsondiff.JsonDiff.Instruction instruction41 = jsonDiff39.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction43 = jsonDiff39.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction43.index = (short) 100;
        boolean boolean46 = instruction43.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff48 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper47);
        foodev.jsondiff.jsonwrap.Wrapper wrapper49 = jsonDiff48.factory;
        foodev.jsondiff.JsonDiff jsonDiff50 = new foodev.jsondiff.JsonDiff(wrapper49);
        foodev.jsondiff.JsonDiff.Instruction instruction52 = jsonDiff50.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction52.key = "hi!";
        foodev.jsondiff.Oper oper55 = instruction52.oper;
        instruction43.oper = oper55;
        foodev.jsondiff.Oper oper57 = instruction43.oper;
        instruction33.oper = oper57;
        instruction17.oper = oper57;
        instruction17.index = (short) -1;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement62 = gsonWrapper0.wrap((java.lang.Object) instruction17);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNotNull(wrapper24);
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertNotNull(instruction29);
        org.junit.Assert.assertNotNull(instruction31);
        org.junit.Assert.assertNotNull(instruction33);
        org.junit.Assert.assertNotNull(wrapper38);
        org.junit.Assert.assertNotNull(instruction41);
        org.junit.Assert.assertNotNull(instruction43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wrapper49);
        org.junit.Assert.assertNotNull(instruction52);
        org.junit.Assert.assertTrue("'" + oper55 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper55.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper57 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper57.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07725");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException5);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException5);
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray16);
    }

    @Test
    public void test07726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07726");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        int int11 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = wrapper14.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(wrapper14);
    }

    @Test
    public void test07727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07727");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff4.create("hi!");
        java.lang.String str7 = instruction6.key;
        boolean boolean8 = instruction6.isIndexed();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test07728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07728");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff15.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff15.create("");
        instruction18.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper21 = instruction18.oper;
        foodev.jsondiff.Oper oper22 = instruction18.oper;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement23 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement11, instruction18, jzonElement23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertTrue("'" + oper21 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper21.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper22 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper22.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07729");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement4 = jacksonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
    }

    @Test
    public void test07730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07730");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff3.create("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor18 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor20 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement21 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement21, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNull(wildcardVisitor18);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNull(wildcardVisitor20);
    }

    @Test
    public void test07731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07731");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = jsonDiff1.diff("hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertNotNull(instruction14);
    }

    @Test
    public void test07732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07732");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        int int14 = jsonDiff1.isIndexed("");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement15, 35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test07733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07733");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        java.lang.Class<?> wildcardClass10 = jsonDiff8.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test07734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07734");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        java.lang.Object obj6 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff10.create("");
        int int14 = jsonDiff10.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff10.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff10.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction18.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper21 = null;
        instruction18.oper = oper21;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper23);
        foodev.jsondiff.jsonwrap.Wrapper wrapper25 = jsonDiff24.factory;
        foodev.jsondiff.JsonDiff jsonDiff26 = new foodev.jsondiff.JsonDiff(wrapper25);
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff26.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction30 = jsonDiff26.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff26.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction34 = jsonDiff26.create("hi!");
        instruction34.index = (short) 0;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff38 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper37);
        foodev.jsondiff.jsonwrap.Wrapper wrapper39 = jsonDiff38.factory;
        foodev.jsondiff.JsonDiff jsonDiff40 = new foodev.jsondiff.JsonDiff(wrapper39);
        foodev.jsondiff.JsonDiff.Instruction instruction42 = jsonDiff40.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction44 = jsonDiff40.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction44.index = (short) 100;
        boolean boolean47 = instruction44.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff49 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper48);
        foodev.jsondiff.jsonwrap.Wrapper wrapper50 = jsonDiff49.factory;
        foodev.jsondiff.JsonDiff jsonDiff51 = new foodev.jsondiff.JsonDiff(wrapper50);
        foodev.jsondiff.JsonDiff.Instruction instruction53 = jsonDiff51.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction53.key = "hi!";
        foodev.jsondiff.Oper oper56 = instruction53.oper;
        instruction44.oper = oper56;
        foodev.jsondiff.Oper oper58 = instruction44.oper;
        instruction34.oper = oper58;
        instruction18.oper = oper58;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj61 = jsonDiff5.diff(obj6, (java.lang.Object) oper58);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertNotNull(wrapper25);
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertNotNull(instruction30);
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertNotNull(instruction34);
        org.junit.Assert.assertNotNull(wrapper39);
        org.junit.Assert.assertNotNull(instruction42);
        org.junit.Assert.assertNotNull(instruction44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wrapper50);
        org.junit.Assert.assertNotNull(instruction53);
        org.junit.Assert.assertTrue("'" + oper56 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper56.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper58 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper58.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07735");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNull(wildcardVisitor13);
        org.junit.Assert.assertNotNull(wrapper14);
    }

    @Test
    public void test07736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07736");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement11, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test07737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07737");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        int int10 = jsonDiff8.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff8.create("");
        java.lang.Object obj14 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        int int18 = jsonDiff16.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff16.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction20.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        int int23 = instruction20.index;
        instruction20.index = 0;
        boolean boolean26 = instruction20.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper27);
        foodev.jsondiff.jsonwrap.Wrapper wrapper29 = jsonDiff28.factory;
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff(wrapper29);
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff30.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor33 = jsonDiff30.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction35 = jsonDiff30.create("hi!");
        instruction35.index = '4';
        foodev.jsondiff.Oper oper38 = instruction35.oper;
        instruction20.oper = oper38;
        java.lang.String str40 = instruction20.key;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff8.apply(obj14, (java.lang.Object) instruction20);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wrapper29);
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertNull(wildcardVisitor33);
        org.junit.Assert.assertNotNull(instruction35);
        org.junit.Assert.assertTrue("'" + oper38 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper38.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str40, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test07738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07738");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement7, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
    }

    @Test
    public void test07739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07739");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff9.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff9.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper19);
        foodev.jsondiff.jsonwrap.Wrapper wrapper21 = jsonDiff20.factory;
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff(wrapper21);
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff22.create("hi!");
        int int25 = instruction24.index;
        foodev.jsondiff.Oper oper26 = instruction24.oper;
        int int27 = instruction24.index;
        java.lang.String str28 = instruction24.key;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement29 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff17.applyPartial(jzonElement18, instruction24, jzonElement29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper21);
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + oper26 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper26.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
    }

    @Test
    public void test07740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07740");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff.Instruction instruction2 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper3 = instruction2.oper;
        boolean boolean4 = instruction2.isIndexed();
        instruction2.index = 97;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff10.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff10.getVisitor();
        int int15 = jsonDiff10.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff10.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction17.key = "~";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper20);
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff21.factory;
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff(wrapper22);
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff23.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff23.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction27.index = (short) 100;
        boolean boolean30 = instruction27.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction31 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper32 = instruction31.oper;
        instruction31.key = "~";
        int int35 = instruction31.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper36);
        int int39 = jsonDiff37.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction41 = jsonDiff37.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean42 = instruction41.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff44 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper43);
        int int46 = jsonDiff44.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction48 = jsonDiff44.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper49 = instruction48.oper;
        instruction41.oper = oper49;
        instruction31.oper = oper49;
        foodev.jsondiff.Oper oper52 = instruction31.oper;
        instruction27.oper = oper52;
        instruction27.index = (-1);
        boolean boolean56 = instruction27.isIndexed();
        java.lang.String str57 = instruction27.key;
        foodev.jsondiff.JsonDiff.Instruction instruction58 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction58.key = "";
        instruction58.index = 'a';
        instruction58.index = 1;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff66 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper65);
        foodev.jsondiff.jsonwrap.Wrapper wrapper67 = jsonDiff66.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction69 = jsonDiff66.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction69.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        foodev.jsondiff.JsonDiff.Instruction instruction72 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction72.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper75 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff76 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper75);
        int int78 = jsonDiff76.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction80 = jsonDiff76.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper81 = instruction80.oper;
        instruction72.oper = oper81;
        instruction69.oper = oper81;
        instruction58.oper = oper81;
        instruction27.oper = oper81;
        instruction17.oper = oper81;
        instruction2.oper = oper81;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement88 = jacksonWrapper0.wrap((java.lang.Object) oper81);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(oper3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertNull(wildcardVisitor13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(oper32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(instruction41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(instruction48);
        org.junit.Assert.assertTrue("'" + oper49 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper49.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper52 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper52.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str57, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertNotNull(wrapper67);
        org.junit.Assert.assertNotNull(instruction69);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(instruction80);
        org.junit.Assert.assertTrue("'" + oper81 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper81.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07741");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        int int9 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
    }

    @Test
    public void test07742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07742");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        int int13 = jsonDiff11.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff11.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff11.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff11.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff20.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff20.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff20.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff20.create("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper29 = jsonDiff20.factory;
        java.lang.Object obj30 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff11.apply((java.lang.Object) wrapper29, obj30);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNull(wildcardVisitor15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertNotNull(wrapper29);
    }

    @Test
    public void test07743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07743");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement5 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff4.apply(jzonElement5, jzonElement6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
    }

    @Test
    public void test07744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07744");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff9.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff9.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = gsonWrapper0.wrap((java.lang.Object) jsonDiff9);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
    }

    @Test
    public void test07745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07745");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff1.getVisitor();
        foodev.jsondiff.Leaf leaf12 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray13 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = jsonDiff1.accept(leaf12, jzonArray13, jzonObject14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(wildcardVisitor11);
    }

    @Test
    public void test07746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07746");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff2.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = wrapper4.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
    }

    @Test
    public void test07747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07747");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int10 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("~");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int19 = jsonDiff13.isIndexed("hi!");
        foodev.jsondiff.Node node20 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement21 = null;
        foodev.jsondiff.Leaf[] leafArray22 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList23 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList23, leafArray22);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap25 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf26 = jsonDiff13.findLeaves(node20, jzonElement21, (java.util.List<foodev.jsondiff.Leaf>) leafList23, intMap25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(leafArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test07748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07748");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper4);
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff7.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff7.create("");
        instruction10.key = "hi!";
        int int13 = instruction10.index;
        foodev.jsondiff.Oper oper14 = instruction10.oper;
        boolean boolean15 = instruction10.isIndexed();
        foodev.jsondiff.Oper oper16 = instruction10.oper;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = jacksonWrapper0.wrap((java.lang.Object) oper16);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + oper14 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper14.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + oper16 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper16.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07749");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        java.lang.Class<?> wildcardClass10 = jacksonWrapperException9.getClass();
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test07750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07750");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException14);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
    }

    @Test
    public void test07751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07751");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException9);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray14);
    }

    @Test
    public void test07752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07752");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper10);
        int int14 = jsonDiff12.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff17.factory;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff19.create("");
        int int23 = jsonDiff19.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff19.create("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper26);
        foodev.jsondiff.jsonwrap.Wrapper wrapper28 = jsonDiff27.factory;
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff(wrapper28);
        foodev.jsondiff.JsonDiff.Instruction instruction31 = jsonDiff29.create("");
        boolean boolean32 = instruction31.isIndexed();
        instruction31.index = (short) -1;
        instruction31.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction31.key = "hi!";
        foodev.jsondiff.Oper oper39 = instruction31.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff41 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper40);
        foodev.jsondiff.jsonwrap.Wrapper wrapper42 = jsonDiff41.factory;
        foodev.jsondiff.JsonDiff jsonDiff43 = new foodev.jsondiff.JsonDiff(wrapper42);
        foodev.jsondiff.JsonDiff.Instruction instruction45 = jsonDiff43.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean46 = instruction45.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff48 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper47);
        int int50 = jsonDiff48.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction52 = jsonDiff48.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper53 = instruction52.oper;
        instruction45.oper = oper53;
        instruction31.oper = oper53;
        instruction25.oper = oper53;
        java.lang.String str57 = instruction25.key;
        foodev.jsondiff.Oper oper58 = instruction25.oper;
        foodev.jsondiff.Oper oper59 = instruction25.oper;
        boolean boolean60 = instruction25.isIndexed();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement61 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff12.applyPartial(jzonElement15, instruction25, jzonElement61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertNotNull(wrapper28);
        org.junit.Assert.assertNotNull(instruction31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + oper39 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper39.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper42);
        org.junit.Assert.assertNotNull(instruction45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(instruction52);
        org.junit.Assert.assertTrue("'" + oper53 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper53.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertTrue("'" + oper58 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper58.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper59 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper59.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test07753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07753");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff3.create("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor18 = jsonDiff3.getVisitor();
        foodev.jsondiff.Leaf leaf19 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray20 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject21 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = jsonDiff3.accept(leaf19, jzonArray20, jzonObject21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNull(wildcardVisitor18);
    }

    @Test
    public void test07754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07754");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        int int13 = jsonDiff11.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff11.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = jsonDiff11.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor14);
    }

    @Test
    public void test07755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07755");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff1.getVisitor();
        foodev.jsondiff.Leaf leaf12 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray13 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = jsonDiff1.accept(leaf12, jzonArray13, jzonObject14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
    }

    @Test
    public void test07756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07756");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff15.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff15.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction19.index = (short) 100;
        boolean boolean22 = instruction19.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper23);
        foodev.jsondiff.jsonwrap.Wrapper wrapper25 = jsonDiff24.factory;
        foodev.jsondiff.JsonDiff jsonDiff26 = new foodev.jsondiff.JsonDiff(wrapper25);
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff26.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction28.key = "hi!";
        foodev.jsondiff.Oper oper31 = instruction28.oper;
        instruction19.oper = oper31;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff34 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper33);
        foodev.jsondiff.jsonwrap.Wrapper wrapper35 = jsonDiff34.factory;
        foodev.jsondiff.JsonDiff jsonDiff36 = new foodev.jsondiff.JsonDiff(wrapper35);
        foodev.jsondiff.JsonDiff.Instruction instruction38 = jsonDiff36.create("");
        int int40 = jsonDiff36.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction42 = jsonDiff36.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction44 = jsonDiff36.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction44.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        java.lang.String str47 = instruction44.key;
        boolean boolean48 = instruction44.isIndexed();
        foodev.jsondiff.Oper oper49 = instruction44.oper;
        instruction19.oper = oper49;
        instruction11.oper = oper49;
        foodev.jsondiff.Oper oper52 = null;
        instruction11.oper = oper52;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wrapper25);
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertTrue("'" + oper31 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper31.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper35);
        org.junit.Assert.assertNotNull(instruction38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(instruction42);
        org.junit.Assert.assertNotNull(instruction44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str47, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + oper49 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper49.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07757");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = wrapper5.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(wrapper5);
    }

    @Test
    public void test07758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07758");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException9);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException22);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException31.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException33);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException33);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray41 = jacksonWrapperException40.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray45 = jacksonWrapperException44.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException46);
        jacksonWrapperException40.addSuppressed((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray53 = jacksonWrapperException52.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException54);
        jacksonWrapperException46.addSuppressed((java.lang.Throwable) jacksonWrapperException54);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException58);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException59);
        java.lang.Class<?> wildcardClass61 = jacksonWrapperException59.getClass();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test07759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07759");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper5);
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff6.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff8.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff8.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff8.factory;
        int int14 = jsonDiff8.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff8.factory;
        int int17 = jsonDiff8.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff8.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff8.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper21 = jsonDiff8.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff8.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff(wrapper23);
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff(wrapper23);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement26 = jacksonWrapper0.wrap((java.lang.Object) wrapper23);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNotNull(wrapper21);
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertNotNull(wrapper23);
    }

    @Test
    public void test07760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07760");
        foodev.jsondiff.jsonwrap.Wrapper wrapper0 = null;
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff(wrapper0);
        foodev.jsondiff.JsonDiff.Instruction instruction3 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int10 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply(jzonElement11, jzonElement12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(instruction3);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test07761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07761");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        java.lang.Class<?> wildcardClass10 = jacksonWrapperException5.getClass();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test07762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07762");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff3.create("~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = jsonDiff3.apply("hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(instruction15);
    }

    @Test
    public void test07763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07763");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException17);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException31.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException33);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException33);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        java.lang.Throwable[] throwableArray37 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException27);
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException38.getSuppressed();
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        java.lang.Throwable[] throwableArray41 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException42);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray41);
    }

    @Test
    public void test07764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07764");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = jsonDiff1.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction12);
    }

    @Test
    public void test07765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07765");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int10 = jsonDiff4.isIndexed("~");
        foodev.jsondiff.Node node11 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.Leaf[] leafArray13 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList14 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList14, leafArray13);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap16 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf17 = jsonDiff4.findLeaves(node11, jzonElement12, (java.util.List<foodev.jsondiff.Leaf>) leafList14, intMap16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(leafArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test07766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07766");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = wrapper8.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNotNull(wrapper8);
    }

    @Test
    public void test07767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07767");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int13 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int15 = jsonDiff3.isIndexed("hi!");
        int int17 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = jsonDiff3.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test07768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07768");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException8);
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException18);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException31.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException33);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray42 = jacksonWrapperException41.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException45.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException47);
        jacksonWrapperException41.addSuppressed((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray55 = jacksonWrapperException54.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray59 = jacksonWrapperException58.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException58);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException60);
        jacksonWrapperException54.addSuppressed((java.lang.Throwable) jacksonWrapperException60);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException60);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException60);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray66 = jacksonWrapperException65.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException65);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray70 = jacksonWrapperException69.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException71 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException69);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException72 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException71);
        jacksonWrapperException65.addSuppressed((java.lang.Throwable) jacksonWrapperException71);
        jacksonWrapperException64.addSuppressed((java.lang.Throwable) jacksonWrapperException65);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException75 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException65);
        jacksonWrapperException47.addSuppressed((java.lang.Throwable) jacksonWrapperException65);
        jacksonWrapperException39.addSuppressed((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException78 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException79 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException47);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException47);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(throwableArray70);
    }

    @Test
    public void test07769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07769");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        boolean boolean14 = instruction13.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff18.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor21 = jsonDiff18.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff18.create("hi!");
        instruction23.index = '4';
        int int26 = instruction23.index;
        java.lang.String str27 = instruction23.key;
        foodev.jsondiff.Oper oper28 = instruction23.oper;
        boolean boolean29 = instruction23.isIndexed();
        foodev.jsondiff.Oper oper30 = instruction23.oper;
        foodev.jsondiff.Oper oper31 = instruction23.oper;
        instruction13.oper = oper31;
        int int33 = instruction13.index;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertNull(wildcardVisitor21);
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertTrue("'" + oper28 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper28.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + oper30 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper30.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper31 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper31.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
    }

    @Test
    public void test07770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07770");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        foodev.jsondiff.Leaf leaf11 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray12 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = jsonDiff3.accept(leaf11, jzonArray12, jzonObject13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor10);
    }

    @Test
    public void test07771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07771");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray1 = jacksonWrapperException0.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException6);
        jacksonWrapperException0.addSuppressed((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException17);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException28);
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        jacksonWrapperException21.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException38.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray43 = jacksonWrapperException42.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException44);
        jacksonWrapperException38.addSuppressed((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException44);
        java.lang.Throwable[] throwableArray48 = jacksonWrapperException44.getSuppressed();
        jacksonWrapperException36.addSuppressed((java.lang.Throwable) jacksonWrapperException44);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray58 = jacksonWrapperException57.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray62 = jacksonWrapperException61.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException61);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException63);
        jacksonWrapperException57.addSuppressed((java.lang.Throwable) jacksonWrapperException63);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException57);
        jacksonWrapperException55.addSuppressed((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException55);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException55);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException69);
        jacksonWrapperException51.addSuppressed((java.lang.Throwable) jacksonWrapperException70);
        org.junit.Assert.assertNotNull(throwableArray1);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(throwableArray62);
    }

    @Test
    public void test07772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07772");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException16);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray40 = jacksonWrapperException39.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray44 = jacksonWrapperException43.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray48 = jacksonWrapperException47.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException49);
        jacksonWrapperException43.addSuppressed((java.lang.Throwable) jacksonWrapperException49);
        jacksonWrapperException41.addSuppressed((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException41);
        jacksonWrapperException35.addSuppressed((java.lang.Throwable) jacksonWrapperException56);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException58);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException59);
        java.lang.String str61 = jacksonWrapperException1.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str61, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test07773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07773");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff3.factory;
        int int7 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        int int10 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test07774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07774");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = jsonDiff3.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test07775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07775");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff3.getVisitor();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNull(wildcardVisitor15);
    }

    @Test
    public void test07776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07776");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper2);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = jsonDiff5.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
    }

    @Test
    public void test07777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07777");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff9.getVisitor();
        int int13 = jsonDiff9.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = jsonDiff9.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test07778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07778");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff7.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff7.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff7.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff13.apply(jzonElement16, jzonElement17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
    }

    @Test
    public void test07779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07779");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        int int10 = jsonDiff1.isIndexed("");
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff15.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException25);
        jacksonWrapperException19.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray38 = jacksonWrapperException37.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException39);
        jacksonWrapperException35.addSuppressed((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray47 = jacksonWrapperException46.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException49);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException49);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray53 = jacksonWrapperException52.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException52);
        jacksonWrapperException49.addSuppressed((java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException56);
        java.lang.Throwable[] throwableArray58 = jacksonWrapperException57.getSuppressed();
        jacksonWrapperException43.addSuppressed((java.lang.Throwable) jacksonWrapperException57);
        jacksonWrapperException39.addSuppressed((java.lang.Throwable) jacksonWrapperException57);
        java.lang.Throwable[] throwableArray61 = jacksonWrapperException39.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj62 = jsonDiff1.diff((java.lang.Object) jsonDiff15, (java.lang.Object) throwableArray61);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(throwableArray61);
    }

    @Test
    public void test07780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07780");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff18.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff18.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int24 = jsonDiff18.isIndexed("hi!");
        int int26 = jsonDiff18.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper27 = jsonDiff18.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException31.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException31.addSuppressed((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException37);
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) wrapper27, (java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNull(wildcardVisitor13);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(wrapper27);
        org.junit.Assert.assertNotNull(throwableArray32);
    }

    @Test
    public void test07781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07781");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.jsonwrap.Wrapper wrapper1 = null;
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff(wrapper1);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff2.create("");
        int int7 = jsonDiff2.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff2.create("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff2.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = gsonWrapper0.wrap((java.lang.Object) jsonDiff2);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wrapper3);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNull(wrapper10);
    }

    @Test
    public void test07782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07782");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff9.getVisitor();
        foodev.jsondiff.Leaf leaf12 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray13 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = jsonDiff9.accept(leaf12, jzonArray13, jzonObject14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
    }

    @Test
    public void test07783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07783");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = jsonDiff3.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor9);
    }

    @Test
    public void test07784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07784");
        foodev.jsondiff.JsonDiff.Instruction instruction0 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper1 = instruction0.oper;
        instruction0.key = "~";
        instruction0.key = "";
        instruction0.index = (short) 1;
        instruction0.index = (byte) 10;
        foodev.jsondiff.JsonDiff.Instruction instruction10 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper11 = instruction10.oper;
        instruction10.key = "~";
        int int14 = instruction10.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        int int18 = jsonDiff16.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff16.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean21 = instruction20.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper22);
        int int25 = jsonDiff23.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff23.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper28 = instruction27.oper;
        instruction20.oper = oper28;
        instruction10.oper = oper28;
        java.lang.String str31 = instruction10.key;
        foodev.jsondiff.Oper oper32 = instruction10.oper;
        instruction0.oper = oper32;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff35 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper34);
        foodev.jsondiff.jsonwrap.Wrapper wrapper36 = jsonDiff35.factory;
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff(wrapper36);
        foodev.jsondiff.JsonDiff.Instruction instruction39 = jsonDiff37.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor40 = jsonDiff37.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction42 = jsonDiff37.create("hi!");
        instruction42.index = '4';
        int int45 = instruction42.index;
        java.lang.String str46 = instruction42.key;
        foodev.jsondiff.Oper oper47 = instruction42.oper;
        boolean boolean48 = instruction42.isIndexed();
        foodev.jsondiff.Oper oper49 = instruction42.oper;
        foodev.jsondiff.Oper oper50 = instruction42.oper;
        instruction0.oper = oper50;
        org.junit.Assert.assertNull(oper1);
        org.junit.Assert.assertNull(oper11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertTrue("'" + oper28 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper28.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "~" + "'", str31, "~");
        org.junit.Assert.assertTrue("'" + oper32 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper32.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper36);
        org.junit.Assert.assertNotNull(instruction39);
        org.junit.Assert.assertNull(wildcardVisitor40);
        org.junit.Assert.assertNotNull(instruction42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertTrue("'" + oper47 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper47.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + oper49 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper49.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper50 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper50.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07785");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject19 = jsonDiff16.diff(jzonElement17, jzonElement18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
    }

    @Test
    public void test07786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07786");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff7.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int10 = instruction9.index;
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test07787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07787");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.Node node11 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.Leaf[] leafArray13 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList14 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList14, leafArray13);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap16 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf17 = jsonDiff10.findLeaves(node11, jzonElement12, (java.util.List<foodev.jsondiff.Leaf>) leafList14, intMap16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(leafArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test07788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07788");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException2);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = jacksonWrapper0.wrap((java.lang.Object) jacksonWrapperException12);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
    }

    @Test
    public void test07789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07789");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException10);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException4);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException4);
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException21.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException32.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray37 = jacksonWrapperException36.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException32.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException31.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException18.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        java.lang.Throwable[] throwableArray47 = jacksonWrapperException45.getSuppressed();
        java.lang.String str48 = jacksonWrapperException45.toString();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str48, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
    }

    @Test
    public void test07790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07790");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        int int11 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = jsonDiff1.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test07791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07791");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject15 = jsonDiff1.diff(jzonElement13, jzonElement14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test07792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07792");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject9 = jsonDiff3.diff(jzonElement7, jzonElement8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNotNull(wrapper6);
    }

    @Test
    public void test07793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07793");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        int int18 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor20 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper21);
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff22.factory;
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff(wrapper23);
        foodev.jsondiff.Visitor<?> wildcardVisitor25 = jsonDiff24.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff24.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper28 = jsonDiff24.factory;
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff(wrapper28);
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff(wrapper28);
        foodev.jsondiff.Visitor<?> wildcardVisitor31 = jsonDiff30.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper32 = jsonDiff30.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor33 = jsonDiff30.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction35 = jsonDiff30.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper36 = jsonDiff30.factory;
        int int38 = jsonDiff30.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int40 = jsonDiff30.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int42 = jsonDiff30.isIndexed("");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff44 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper43);
        foodev.jsondiff.jsonwrap.Wrapper wrapper45 = jsonDiff44.factory;
        foodev.jsondiff.JsonDiff jsonDiff46 = new foodev.jsondiff.JsonDiff(wrapper45);
        foodev.jsondiff.JsonDiff jsonDiff47 = new foodev.jsondiff.JsonDiff(wrapper45);
        int int49 = jsonDiff47.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction51 = jsonDiff47.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor52 = jsonDiff47.getVisitor();
        int int54 = jsonDiff47.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper55 = jsonDiff47.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper56 = jsonDiff47.factory;
        int int58 = jsonDiff47.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper59 = jsonDiff47.factory;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) "", (java.lang.Object) wrapper59);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNull(wildcardVisitor20);
        org.junit.Assert.assertNotNull(wrapper23);
        org.junit.Assert.assertNull(wildcardVisitor25);
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertNotNull(wrapper28);
        org.junit.Assert.assertNull(wildcardVisitor31);
        org.junit.Assert.assertNotNull(wrapper32);
        org.junit.Assert.assertNull(wildcardVisitor33);
        org.junit.Assert.assertNotNull(instruction35);
        org.junit.Assert.assertNotNull(wrapper36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(wrapper45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(instruction51);
        org.junit.Assert.assertNull(wildcardVisitor52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(wrapper55);
        org.junit.Assert.assertNotNull(wrapper56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(wrapper59);
    }

    @Test
    public void test07794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07794");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff9.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff9.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper13);
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff14.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.Visitor<?> wildcardVisitor17 = jsonDiff16.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff16.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff16.factory;
        int int22 = jsonDiff16.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff16.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff(wrapper24);
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff25.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper28);
        int int31 = jsonDiff29.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor32 = jsonDiff29.getVisitor();
        int int34 = jsonDiff29.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction36 = jsonDiff29.create("");
        foodev.jsondiff.Oper oper37 = instruction36.oper;
        instruction27.oper = oper37;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff40 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper39);
        foodev.jsondiff.jsonwrap.Wrapper wrapper41 = jsonDiff40.factory;
        foodev.jsondiff.JsonDiff jsonDiff42 = new foodev.jsondiff.JsonDiff(wrapper41);
        foodev.jsondiff.Visitor<?> wildcardVisitor43 = jsonDiff42.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction45 = jsonDiff42.create("");
        int int47 = jsonDiff42.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper48 = jsonDiff42.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction50 = jsonDiff42.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction50.index = '#';
        boolean boolean53 = instruction50.isIndexed();
        instruction50.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction50.index = 100;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj58 = jsonDiff9.diff((java.lang.Object) instruction27, (java.lang.Object) instruction50);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNull(wildcardVisitor17);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(wrapper23);
        org.junit.Assert.assertNotNull(wrapper24);
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(instruction36);
        org.junit.Assert.assertTrue("'" + oper37 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper37.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper41);
        org.junit.Assert.assertNull(wildcardVisitor43);
        org.junit.Assert.assertNotNull(instruction45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(wrapper48);
        org.junit.Assert.assertNotNull(instruction50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test07795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07795");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~");
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException25);
        jacksonWrapperException19.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException28);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException30);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray40 = jacksonWrapperException39.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray44 = jacksonWrapperException43.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException45);
        jacksonWrapperException39.addSuppressed((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray52 = jacksonWrapperException51.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException53);
        jacksonWrapperException45.addSuppressed((java.lang.Throwable) jacksonWrapperException53);
        jacksonWrapperException36.addSuppressed((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException53);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray63 = jacksonWrapperException62.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException62.addSuppressed((java.lang.Throwable) jacksonWrapperException64);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException62);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException62);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException62);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException62);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException62);
        jacksonWrapperException57.addSuppressed((java.lang.Throwable) jacksonWrapperException70);
        java.lang.Class<?> wildcardClass72 = jacksonWrapperException70.getClass();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test07796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07796");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int14 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        int int19 = jsonDiff17.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction21.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        int int24 = instruction21.index;
        instruction21.index = 0;
        boolean boolean27 = instruction21.isIndexed();
        java.lang.String str28 = instruction21.key;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement29 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement15, instruction21, jzonElement29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str28, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test07797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07797");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test07798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07798");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException18);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException18);
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException24.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException32.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException34);
        jacksonWrapperException28.addSuppressed((java.lang.Throwable) jacksonWrapperException34);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        java.lang.Throwable[] throwableArray38 = jacksonWrapperException28.getSuppressed();
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException12);
        java.lang.Throwable[] throwableArray42 = jacksonWrapperException41.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException41);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement44 = gsonWrapper0.wrap((java.lang.Object) jacksonWrapperException43);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray42);
    }

    @Test
    public void test07799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07799");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = jsonDiff3.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction13);
    }

    @Test
    public void test07800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07800");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        int int13 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test07801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07801");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = wrapper10.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test07802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07802");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement4 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement5 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply(jzonElement4, jzonElement5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNotNull(wrapper3);
    }

    @Test
    public void test07803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07803");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff1.factory;
        foodev.jsondiff.Node node6 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = null;
        foodev.jsondiff.Leaf[] leafArray8 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList9 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList9, leafArray8);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap11 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf12 = jsonDiff1.findLeaves(node6, jzonElement7, (java.util.List<foodev.jsondiff.Leaf>) leafList9, intMap11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNotNull(leafArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test07804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07804");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff6.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff6.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = wrapper8.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
    }

    @Test
    public void test07805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07805");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("");
        int int12 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff18.create("");
        int int22 = jsonDiff18.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff18.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff18.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction26.index = (short) 1;
        int int29 = instruction26.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff31 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper30);
        foodev.jsondiff.jsonwrap.Wrapper wrapper32 = jsonDiff31.factory;
        foodev.jsondiff.JsonDiff jsonDiff33 = new foodev.jsondiff.JsonDiff(wrapper32);
        foodev.jsondiff.JsonDiff jsonDiff34 = new foodev.jsondiff.JsonDiff(wrapper32);
        int int36 = jsonDiff34.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction38 = jsonDiff34.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff40 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper39);
        foodev.jsondiff.jsonwrap.Wrapper wrapper41 = jsonDiff40.factory;
        foodev.jsondiff.JsonDiff jsonDiff42 = new foodev.jsondiff.JsonDiff(wrapper41);
        foodev.jsondiff.JsonDiff.Instruction instruction44 = jsonDiff42.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean45 = instruction44.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff47 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper46);
        int int49 = jsonDiff47.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction51 = jsonDiff47.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper52 = instruction51.oper;
        instruction44.oper = oper52;
        instruction38.oper = oper52;
        instruction26.oper = oper52;
        instruction26.index = (-1);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement58 = wrapper13.wrap((java.lang.Object) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Integer cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(wrapper32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(instruction38);
        org.junit.Assert.assertNotNull(wrapper41);
        org.junit.Assert.assertNotNull(instruction44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(instruction51);
        org.junit.Assert.assertTrue("'" + oper52 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper52.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07806");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException18);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException10);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement29 = jacksonWrapper0.wrap((java.lang.Object) jacksonWrapperException28);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray17);
    }

    @Test
    public void test07807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07807");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.String str8 = instruction7.key;
        instruction7.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction7.index = 1;
        instruction7.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        instruction7.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        instruction7.index = (short) 100;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str8, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test07808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07808");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        int int11 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement13, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test07809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07809");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff5.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff5.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff5.create("hi!");
        instruction10.index = '4';
        int int13 = instruction10.index;
        int int14 = instruction10.index;
        boolean boolean15 = instruction10.isIndexed();
        instruction10.index = 35;
        boolean boolean18 = instruction10.isIndexed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = jacksonWrapper0.wrap((java.lang.Object) boolean18);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Boolean cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test07810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07810");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        int int11 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("");
        boolean boolean14 = instruction13.isIndexed();
        java.lang.String str15 = instruction13.key;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test07811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07811");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("hi!");
        instruction8.index = '4';
        int int11 = instruction8.index;
        java.lang.String str12 = instruction8.key;
        foodev.jsondiff.Oper oper13 = instruction8.oper;
        int int14 = instruction8.index;
        instruction8.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        java.lang.String str17 = instruction8.key;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertTrue("'" + oper13 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper13.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str17, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
    }

    @Test
    public void test07812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07812");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        instruction14.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
    }

    @Test
    public void test07813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07813");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction7.index = (short) 100;
        boolean boolean10 = instruction7.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper12 = instruction11.oper;
        instruction11.key = "~";
        int int15 = instruction11.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        int int19 = jsonDiff17.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean22 = instruction21.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper23);
        int int26 = jsonDiff24.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper29 = instruction28.oper;
        instruction21.oper = oper29;
        instruction11.oper = oper29;
        foodev.jsondiff.Oper oper32 = instruction11.oper;
        instruction7.oper = oper32;
        instruction7.index = (-1);
        java.lang.String str36 = instruction7.key;
        java.lang.String str37 = instruction7.key;
        instruction7.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        foodev.jsondiff.Oper oper40 = null;
        instruction7.oper = oper40;
        boolean boolean42 = instruction7.isIndexed();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(oper12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertTrue("'" + oper29 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper29.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper32 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper32.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str36, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str37, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test07814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07814");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException16);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        java.lang.String str22 = jacksonWrapperException21.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str22, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test07815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07815");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int13 = jsonDiff9.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff9.create("~");
        instruction15.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        instruction15.index = (short) 0;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
    }

    @Test
    public void test07816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07816");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff18.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor20 = jsonDiff18.getVisitor();
        int int22 = jsonDiff18.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff18.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor24 = jsonDiff18.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper25 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff jsonDiff26 = new foodev.jsondiff.JsonDiff(wrapper25);
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff26.create("~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement29 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement16, instruction28, jzonElement29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNull(wildcardVisitor20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(wrapper23);
        org.junit.Assert.assertNull(wildcardVisitor24);
        org.junit.Assert.assertNotNull(wrapper25);
        org.junit.Assert.assertNotNull(instruction28);
    }

    @Test
    public void test07817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07817");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("");
        boolean boolean16 = instruction15.isIndexed();
        instruction15.index = (short) -1;
        int int19 = instruction15.index;
        int int20 = instruction15.index;
        foodev.jsondiff.JsonDiff.Instruction instruction21 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper22 = instruction21.oper;
        instruction21.key = "~";
        instruction21.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper27);
        foodev.jsondiff.jsonwrap.Wrapper wrapper29 = jsonDiff28.factory;
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff(wrapper29);
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff30.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction34 = jsonDiff30.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction34.index = (short) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff38 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper37);
        foodev.jsondiff.jsonwrap.Wrapper wrapper39 = jsonDiff38.factory;
        foodev.jsondiff.JsonDiff jsonDiff40 = new foodev.jsondiff.JsonDiff(wrapper39);
        foodev.jsondiff.JsonDiff.Instruction instruction42 = jsonDiff40.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction44 = jsonDiff40.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction44.index = (short) 100;
        boolean boolean47 = instruction44.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction48 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper49 = instruction48.oper;
        instruction48.key = "~";
        int int52 = instruction48.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff54 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper53);
        int int56 = jsonDiff54.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction58 = jsonDiff54.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean59 = instruction58.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff61 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper60);
        int int63 = jsonDiff61.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction65 = jsonDiff61.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper66 = instruction65.oper;
        instruction58.oper = oper66;
        instruction48.oper = oper66;
        foodev.jsondiff.Oper oper69 = instruction48.oper;
        instruction44.oper = oper69;
        instruction34.oper = oper69;
        instruction21.oper = oper69;
        instruction15.oper = oper69;
        instruction15.key = "";
        java.lang.Object obj76 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) "", obj76);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(oper22);
        org.junit.Assert.assertNotNull(wrapper29);
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertNotNull(instruction34);
        org.junit.Assert.assertNotNull(wrapper39);
        org.junit.Assert.assertNotNull(instruction42);
        org.junit.Assert.assertNotNull(instruction44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(oper49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(instruction58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(instruction65);
        org.junit.Assert.assertTrue("'" + oper66 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper66.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper69 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper69.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07818");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        int int6 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int8 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        foodev.jsondiff.JsonDiff.Instruction instruction10 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper11 = instruction10.oper;
        instruction10.key = "~";
        instruction10.key = "";
        foodev.jsondiff.JsonDiff.Instruction instruction16 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction16.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper19);
        int int22 = jsonDiff20.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff20.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper25 = instruction24.oper;
        instruction16.oper = oper25;
        instruction10.oper = oper25;
        boolean boolean28 = instruction10.isIndexed();
        instruction10.index = ' ';
        int int31 = instruction10.index;
        instruction10.index = 0;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement34 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff4.applyPartial(jzonElement9, instruction10, jzonElement34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(oper11);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertTrue("'" + oper25 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper25.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 32 + "'", int31 == 32);
    }

    @Test
    public void test07819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07819");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff12.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement21 = wrapper18.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(wrapper18);
    }

    @Test
    public void test07820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07820");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int13 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff1.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = jsonDiff1.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor14);
    }

    @Test
    public void test07821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07821");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        int int12 = jsonDiff3.isIndexed("");
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff3.factory;
        foodev.jsondiff.Node node15 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        foodev.jsondiff.Leaf[] leafArray17 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList18 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList18, leafArray17);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap20 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf21 = jsonDiff3.findLeaves(node15, jzonElement16, (java.util.List<foodev.jsondiff.Leaf>) leafList18, intMap20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor13);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(leafArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test07822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07822");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = jsonDiff3.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test07823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07823");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff3.getVisitor();
        int int14 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = jsonDiff3.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test07824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07824");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        int int18 = jsonDiff16.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper20);
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff21.factory;
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff(wrapper22);
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = jsonDiff23.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff23.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.String str27 = instruction26.key;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement28 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff16.applyPartial(jzonElement19, instruction26, jzonElement28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertNotNull(wrapper24);
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str27, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test07825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07825");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff8.checkIndex(jzonElement11, 35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction10);
    }

    @Test
    public void test07826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07826");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int12 = jsonDiff1.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement17, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(instruction16);
    }

    @Test
    public void test07827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07827");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException9);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray38 = jacksonWrapperException37.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray42 = jacksonWrapperException41.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException43);
        jacksonWrapperException37.addSuppressed((java.lang.Throwable) jacksonWrapperException43);
        jacksonWrapperException36.addSuppressed((java.lang.Throwable) jacksonWrapperException37);
        jacksonWrapperException23.addSuppressed((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException36);
        jacksonWrapperException21.addSuppressed((java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException48);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement51 = jacksonWrapper0.wrap((java.lang.Object) jacksonWrapperException50);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray42);
    }

    @Test
    public void test07828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07828");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper1);
        int int4 = jsonDiff2.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff2.factory;
        int int7 = jsonDiff2.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff2.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        int int13 = jsonDiff11.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff11.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        boolean boolean16 = instruction15.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff20.create("");
        boolean boolean23 = instruction22.isIndexed();
        int int24 = instruction22.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff26 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper25);
        foodev.jsondiff.jsonwrap.Wrapper wrapper27 = jsonDiff26.factory;
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff(wrapper27);
        foodev.jsondiff.Visitor<?> wildcardVisitor29 = jsonDiff28.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction31 = jsonDiff28.create("");
        instruction31.index = ' ';
        foodev.jsondiff.Oper oper34 = instruction31.oper;
        instruction22.oper = oper34;
        instruction15.oper = oper34;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement37 = gsonWrapper0.wrap((java.lang.Object) instruction15);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(wrapper27);
        org.junit.Assert.assertNull(wildcardVisitor29);
        org.junit.Assert.assertNotNull(instruction31);
        org.junit.Assert.assertTrue("'" + oper34 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper34.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07829");
        foodev.jsondiff.JsonDiff.Instruction instruction0 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper1 = instruction0.oper;
        instruction0.key = "~";
        java.lang.String str4 = instruction0.key;
        instruction0.index = (-1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff10.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff10.create("");
        int int14 = instruction13.index;
        foodev.jsondiff.Oper oper15 = instruction13.oper;
        instruction0.oper = oper15;
        java.lang.Class<?> wildcardClass17 = instruction0.getClass();
        org.junit.Assert.assertNull(oper1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "~" + "'", str4, "~");
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + oper15 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper15.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test07830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07830");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor18 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = null;
        foodev.jsondiff.JsonDiff.Instruction instruction20 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper21 = instruction20.oper;
        instruction20.key = "~";
        instruction20.key = "";
        foodev.jsondiff.JsonDiff.Instruction instruction26 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction26.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper29);
        int int32 = jsonDiff30.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction34 = jsonDiff30.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper35 = instruction34.oper;
        instruction26.oper = oper35;
        instruction20.oper = oper35;
        boolean boolean38 = instruction20.isIndexed();
        instruction20.index = ' ';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff42 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper41);
        foodev.jsondiff.jsonwrap.Wrapper wrapper43 = jsonDiff42.factory;
        foodev.jsondiff.JsonDiff jsonDiff44 = new foodev.jsondiff.JsonDiff(wrapper43);
        foodev.jsondiff.JsonDiff.Instruction instruction46 = jsonDiff44.create("");
        int int47 = instruction46.index;
        boolean boolean48 = instruction46.isIndexed();
        instruction46.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff52 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper51);
        foodev.jsondiff.jsonwrap.Wrapper wrapper53 = jsonDiff52.factory;
        foodev.jsondiff.JsonDiff jsonDiff54 = new foodev.jsondiff.JsonDiff(wrapper53);
        foodev.jsondiff.JsonDiff.Instruction instruction56 = jsonDiff54.create("");
        boolean boolean57 = instruction56.isIndexed();
        instruction56.index = (short) -1;
        foodev.jsondiff.Oper oper60 = instruction56.oper;
        instruction46.oper = oper60;
        instruction20.oper = oper60;
        instruction20.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff66 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper65);
        int int68 = jsonDiff66.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction70 = jsonDiff66.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper71 = jsonDiff66.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction73 = jsonDiff66.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor74 = jsonDiff66.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction76 = jsonDiff66.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction78 = jsonDiff66.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction80 = jsonDiff66.create("hi!");
        int int82 = jsonDiff66.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction84 = jsonDiff66.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Oper oper85 = instruction84.oper;
        instruction20.oper = oper85;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement87 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement19, instruction20, jzonElement87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNull(wildcardVisitor18);
        org.junit.Assert.assertNull(oper21);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(instruction34);
        org.junit.Assert.assertTrue("'" + oper35 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper35.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wrapper43);
        org.junit.Assert.assertNotNull(instruction46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wrapper53);
        org.junit.Assert.assertNotNull(instruction56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + oper60 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper60.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(instruction70);
        org.junit.Assert.assertNotNull(wrapper71);
        org.junit.Assert.assertNotNull(instruction73);
        org.junit.Assert.assertNull(wildcardVisitor74);
        org.junit.Assert.assertNotNull(instruction76);
        org.junit.Assert.assertNotNull(instruction78);
        org.junit.Assert.assertNotNull(instruction80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(instruction84);
        org.junit.Assert.assertTrue("'" + oper85 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper85.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07831");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException16);
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~");
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) jacksonWrapperException23, (java.lang.Object) jacksonWrapperException25);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray26);
    }

    @Test
    public void test07832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07832");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException26);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        jacksonWrapperException39.addSuppressed((java.lang.Throwable) jacksonWrapperException41);
        java.lang.String str43 = jacksonWrapperException41.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str43, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
    }

    @Test
    public void test07833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07833");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.Visitor<?> wildcardVisitor18 = jsonDiff17.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff17.factory;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.jsonwrap.Wrapper wrapper21 = jsonDiff20.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper22);
        int int25 = jsonDiff23.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper26 = jsonDiff23.factory;
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff(wrapper26);
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff(wrapper26);
        int int30 = jsonDiff28.isIndexed("hi!");
        java.lang.Object obj31 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff20.apply((java.lang.Object) "hi!", obj31);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNull(wildcardVisitor18);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(wrapper21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(wrapper26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
    }

    @Test
    public void test07834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07834");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff1.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = jsonDiff1.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(wildcardVisitor11);
    }

    @Test
    public void test07835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07835");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff2.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Node node11 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.Leaf[] leafArray13 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList14 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList14, leafArray13);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap16 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf17 = jsonDiff8.findLeaves(node11, jzonElement12, (java.util.List<foodev.jsondiff.Leaf>) leafList14, intMap16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(leafArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test07836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07836");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int15 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int17 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Node node18 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = null;
        foodev.jsondiff.Leaf[] leafArray20 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList21 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList21, leafArray20);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap23 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf24 = jsonDiff3.findLeaves(node18, jzonElement19, (java.util.List<foodev.jsondiff.Leaf>) leafList21, intMap23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(leafArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test07837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07837");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        int int9 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        int int14 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Node node17 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = null;
        foodev.jsondiff.Leaf[] leafArray19 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList20 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList20, leafArray19);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap22 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf23 = jsonDiff3.findLeaves(node17, jzonElement18, (java.util.List<foodev.jsondiff.Leaf>) leafList20, intMap22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertNotNull(leafArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test07838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07838");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException24);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException24);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray35 = jacksonWrapperException34.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException36);
        jacksonWrapperException30.addSuppressed((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray42 = jacksonWrapperException41.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException45.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException47);
        jacksonWrapperException41.addSuppressed((java.lang.Throwable) jacksonWrapperException47);
        jacksonWrapperException40.addSuppressed((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray54 = jacksonWrapperException53.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray58 = jacksonWrapperException57.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException59);
        jacksonWrapperException53.addSuppressed((java.lang.Throwable) jacksonWrapperException59);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException59);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException59);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray65 = jacksonWrapperException64.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException64);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray69 = jacksonWrapperException68.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException68);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException71 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException70);
        jacksonWrapperException64.addSuppressed((java.lang.Throwable) jacksonWrapperException70);
        jacksonWrapperException63.addSuppressed((java.lang.Throwable) jacksonWrapperException64);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException74 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException64);
        java.lang.Throwable[] throwableArray75 = jacksonWrapperException74.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException76 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException74);
        java.lang.Throwable[] throwableArray77 = jacksonWrapperException76.getSuppressed();
        jacksonWrapperException40.addSuppressed((java.lang.Throwable) jacksonWrapperException76);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        java.lang.Class<?> wildcardClass80 = jacksonWrapperException24.getClass();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test07839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07839");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean6 = instruction5.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        int int10 = jsonDiff8.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper13 = instruction12.oper;
        instruction5.oper = oper13;
        foodev.jsondiff.Oper oper15 = instruction5.oper;
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + oper13 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper13.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper15 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper15.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07840");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        int int4 = jsonDiff1.isIndexed("hi!");
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = jsonDiff1.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test07841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07841");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = gsonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: ");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
    }

    @Test
    public void test07842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07842");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff9.apply(jzonElement15, jzonElement16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertNotNull(instruction14);
    }

    @Test
    public void test07843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07843");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int10 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply(jzonElement11, jzonElement12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test07844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07844");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException9);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException14);
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException24.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException24);
        java.lang.Throwable throwable28 = null;
        // The following exception was thrown during execution in test generation
        try {
            jacksonWrapperException24.addSuppressed(throwable28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray25);
    }

    @Test
    public void test07845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07845");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff2.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff2.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff2.getVisitor();
        foodev.jsondiff.Leaf leaf9 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray10 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = jsonDiff2.accept(leaf9, jzonArray10, jzonObject11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNull(wildcardVisitor8);
    }

    @Test
    public void test07846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07846");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        boolean boolean7 = instruction6.isIndexed();
        instruction6.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        boolean boolean10 = instruction6.isIndexed();
        instruction6.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test07847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07847");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean6 = instruction5.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        int int10 = jsonDiff8.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper13 = instruction12.oper;
        instruction5.oper = oper13;
        int int15 = instruction5.index;
        instruction5.index = 97;
        int int18 = instruction5.index;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + oper13 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper13.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 97 + "'", int18 == 97);
    }

    @Test
    public void test07848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07848");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff15.create("");
        int int19 = jsonDiff15.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff15.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int23 = jsonDiff15.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = jsonDiff15.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff15.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        boolean boolean27 = instruction26.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper28);
        foodev.jsondiff.jsonwrap.Wrapper wrapper30 = jsonDiff29.factory;
        foodev.jsondiff.JsonDiff jsonDiff31 = new foodev.jsondiff.JsonDiff(wrapper30);
        foodev.jsondiff.JsonDiff.Instruction instruction33 = jsonDiff31.create("");
        boolean boolean34 = instruction33.isIndexed();
        instruction33.key = "~";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff38 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper37);
        foodev.jsondiff.jsonwrap.Wrapper wrapper39 = jsonDiff38.factory;
        foodev.jsondiff.JsonDiff jsonDiff40 = new foodev.jsondiff.JsonDiff(wrapper39);
        foodev.jsondiff.JsonDiff.Instruction instruction42 = jsonDiff40.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction44 = jsonDiff40.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction44.index = (short) 100;
        boolean boolean47 = instruction44.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction48 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper49 = instruction48.oper;
        instruction48.key = "~";
        int int52 = instruction48.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff54 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper53);
        int int56 = jsonDiff54.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction58 = jsonDiff54.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean59 = instruction58.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff61 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper60);
        int int63 = jsonDiff61.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction65 = jsonDiff61.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper66 = instruction65.oper;
        instruction58.oper = oper66;
        instruction48.oper = oper66;
        foodev.jsondiff.Oper oper69 = instruction48.oper;
        instruction44.oper = oper69;
        instruction33.oper = oper69;
        foodev.jsondiff.JsonDiff.Instruction instruction72 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper73 = instruction72.oper;
        instruction72.key = "~";
        instruction72.key = "";
        foodev.jsondiff.JsonDiff.Instruction instruction78 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction78.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper81 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff82 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper81);
        int int84 = jsonDiff82.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction86 = jsonDiff82.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper87 = instruction86.oper;
        instruction78.oper = oper87;
        instruction72.oper = oper87;
        instruction33.oper = oper87;
        java.lang.String str91 = instruction33.key;
        instruction33.index = 32;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj94 = jsonDiff1.diff((java.lang.Object) instruction26, (java.lang.Object) instruction33);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(wrapper24);
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wrapper30);
        org.junit.Assert.assertNotNull(instruction33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wrapper39);
        org.junit.Assert.assertNotNull(instruction42);
        org.junit.Assert.assertNotNull(instruction44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(oper49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(instruction58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(instruction65);
        org.junit.Assert.assertTrue("'" + oper66 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper66.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper69 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper69.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNull(oper73);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(instruction86);
        org.junit.Assert.assertTrue("'" + oper87 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper87.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "~" + "'", str91, "~");
    }

    @Test
    public void test07849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07849");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = jsonDiff1.apply("", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
    }

    @Test
    public void test07850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07850");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int7 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Node node8 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        java.util.List<foodev.jsondiff.Leaf> leafList10 = null;
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap11 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf12 = jsonDiff3.findLeaves(node8, jzonElement9, leafList10, intMap11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test07851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07851");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff14.create("");
        int int18 = jsonDiff14.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff14.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff14.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff14.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int26 = jsonDiff14.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff14.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement29 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement10, instruction28, jzonElement29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(instruction28);
    }

    @Test
    public void test07852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07852");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        java.lang.Class<?> wildcardClass12 = instruction11.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test07853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07853");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int13 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement18, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(instruction17);
    }

    @Test
    public void test07854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07854");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff12.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff12.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff20.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction22.key = "hi!";
        foodev.jsondiff.Oper oper25 = instruction22.oper;
        java.lang.String str26 = instruction22.key;
        foodev.jsondiff.Oper oper27 = instruction22.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper28);
        int int31 = jsonDiff29.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor32 = jsonDiff29.getVisitor();
        int int34 = jsonDiff29.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction36 = jsonDiff29.create("");
        int int37 = instruction36.index;
        instruction36.index = (byte) 100;
        foodev.jsondiff.Oper oper40 = instruction36.oper;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff12.apply((java.lang.Object) instruction22, (java.lang.Object) instruction36);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNull(wildcardVisitor15);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertTrue("'" + oper25 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper25.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertTrue("'" + oper27 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper27.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(instruction36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + oper40 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper40.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07855");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff9.create("");
        instruction12.index = ' ';
        foodev.jsondiff.Oper oper15 = instruction12.oper;
        java.lang.String str16 = instruction12.key;
        boolean boolean17 = instruction12.isIndexed();
        instruction12.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = gsonWrapper0.wrap((java.lang.Object) instruction12);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + oper15 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper15.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test07856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07856");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int10 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("~");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = jsonDiff13.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNotNull(instruction19);
    }

    @Test
    public void test07857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07857");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff.Instruction instruction3 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper4 = instruction3.oper;
        instruction3.key = "~";
        instruction3.key = "";
        instruction3.index = (byte) 10;
        instruction3.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = gsonWrapper0.wrap((java.lang.Object) instruction3);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(oper4);
    }

    @Test
    public void test07858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07858");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff19.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = jsonDiff19.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(instruction21);
    }

    @Test
    public void test07859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07859");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int10 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper12 = instruction11.oper;
        instruction11.index = (-1);
        java.lang.String str15 = instruction11.key;
        boolean boolean16 = instruction11.isIndexed();
        instruction11.index = (short) 0;
        instruction11.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        java.lang.Class<?> wildcardClass21 = instruction11.getClass();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper22);
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = jsonDiff23.factory;
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff(wrapper24);
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff25.create("");
        boolean boolean28 = instruction27.isIndexed();
        instruction27.index = (short) -1;
        instruction27.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        boolean boolean33 = instruction27.isIndexed();
        int int34 = instruction27.index;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) wildcardClass21, (java.lang.Object) int34);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Class cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(oper12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wrapper24);
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    }

    @Test
    public void test07860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07860");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException6);
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException19.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray21);
    }

    @Test
    public void test07861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07861");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff11.create("hi!");
        int int15 = jsonDiff11.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff20.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff20.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.String str25 = instruction24.key;
        java.lang.String str26 = instruction24.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper27);
        foodev.jsondiff.jsonwrap.Wrapper wrapper29 = jsonDiff28.factory;
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff(wrapper29);
        foodev.jsondiff.Visitor<?> wildcardVisitor31 = jsonDiff30.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction33 = jsonDiff30.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper34 = jsonDiff30.factory;
        int int36 = jsonDiff30.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction38 = jsonDiff30.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor39 = jsonDiff30.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction41 = jsonDiff30.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction43 = jsonDiff30.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper44 = instruction43.oper;
        instruction24.oper = oper44;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff47 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper46);
        int int49 = jsonDiff47.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor50 = jsonDiff47.getVisitor();
        int int52 = jsonDiff47.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper53 = jsonDiff47.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction55 = jsonDiff47.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper56 = jsonDiff47.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction58 = jsonDiff47.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction60 = jsonDiff47.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff62 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper61);
        foodev.jsondiff.jsonwrap.Wrapper wrapper63 = jsonDiff62.factory;
        foodev.jsondiff.JsonDiff jsonDiff64 = new foodev.jsondiff.JsonDiff(wrapper63);
        foodev.jsondiff.JsonDiff.Instruction instruction66 = jsonDiff64.create("");
        boolean boolean67 = instruction66.isIndexed();
        instruction66.index = (short) -1;
        foodev.jsondiff.Oper oper70 = instruction66.oper;
        instruction60.oper = oper70;
        instruction24.oper = oper70;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement73 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff11.applyPartial(jzonElement16, instruction24, jzonElement73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str25, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str26, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertNotNull(wrapper29);
        org.junit.Assert.assertNull(wildcardVisitor31);
        org.junit.Assert.assertNotNull(instruction33);
        org.junit.Assert.assertNotNull(wrapper34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(instruction38);
        org.junit.Assert.assertNull(wildcardVisitor39);
        org.junit.Assert.assertNotNull(instruction41);
        org.junit.Assert.assertNotNull(instruction43);
        org.junit.Assert.assertTrue("'" + oper44 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper44.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(wrapper53);
        org.junit.Assert.assertNotNull(instruction55);
        org.junit.Assert.assertNotNull(wrapper56);
        org.junit.Assert.assertNotNull(instruction58);
        org.junit.Assert.assertNotNull(instruction60);
        org.junit.Assert.assertNotNull(wrapper63);
        org.junit.Assert.assertNotNull(instruction66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + oper70 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper70.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07862");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff18.create("");
        int int22 = jsonDiff18.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff18.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff18.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff18.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        boolean boolean29 = instruction28.isIndexed();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement30 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff13.applyPartial(jzonElement14, instruction28, jzonElement30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test07863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07863");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff1.factory;
        foodev.jsondiff.Node node4 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement5 = null;
        foodev.jsondiff.Leaf[] leafArray6 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList7 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList7, leafArray6);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap9 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf10 = jsonDiff1.findLeaves(node4, jzonElement5, (java.util.List<foodev.jsondiff.Leaf>) leafList7, intMap9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(leafArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test07864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07864");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        int int11 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int13 = jsonDiff1.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff1.create("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff1.getVisitor();
        foodev.jsondiff.Leaf leaf17 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray18 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = jsonDiff1.accept(leaf17, jzonArray18, jzonObject19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNull(wildcardVisitor16);
    }

    @Test
    public void test07865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07865");
        foodev.jsondiff.jsonwrap.Wrapper wrapper0 = null;
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff(wrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int9 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.Node node12 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        foodev.jsondiff.Leaf[] leafArray14 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList15 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList15, leafArray14);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap17 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf18 = jsonDiff1.findLeaves(node12, jzonElement13, (java.util.List<foodev.jsondiff.Leaf>) leafList15, intMap17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wrapper11);
        org.junit.Assert.assertNotNull(leafArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test07866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07866");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper3);
        int int6 = jsonDiff4.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff4.getVisitor();
        int int9 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff11.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = jacksonWrapper0.wrap((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction13);
    }

    @Test
    public void test07867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07867");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray1 = jacksonWrapperException0.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException6);
        jacksonWrapperException0.addSuppressed((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException28.getSuppressed();
        java.lang.String str32 = jacksonWrapperException28.toString();
        org.junit.Assert.assertNotNull(throwableArray1);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str32, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
    }

    @Test
    public void test07868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07868");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper4);
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff7.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean10 = instruction9.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        int int14 = jsonDiff12.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper17 = instruction16.oper;
        instruction9.oper = oper17;
        int int19 = instruction9.index;
        foodev.jsondiff.JsonDiff.Instruction instruction20 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper21 = instruction20.oper;
        instruction20.key = "~";
        int int24 = instruction20.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff26 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper25);
        int int28 = jsonDiff26.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction30 = jsonDiff26.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean31 = instruction30.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff33 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper32);
        int int35 = jsonDiff33.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction37 = jsonDiff33.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper38 = instruction37.oper;
        instruction30.oper = oper38;
        instruction20.oper = oper38;
        instruction9.oper = oper38;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement42 = jacksonWrapper0.wrap((java.lang.Object) instruction9);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertTrue("'" + oper17 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper17.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(oper21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(instruction30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(instruction37);
        org.junit.Assert.assertTrue("'" + oper38 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper38.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07869");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        int int11 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int13 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = jsonDiff1.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test07870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07870");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply(jzonElement12, jzonElement13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(wildcardVisitor11);
    }

    @Test
    public void test07871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07871");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        int int6 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff4.getVisitor();
        int int11 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff4.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff4.factory;
        int int15 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff4.checkIndex(jzonElement16, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test07872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07872");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        int int5 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper8);
        int int11 = jsonDiff9.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff15.factory;
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper16);
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        java.lang.String str24 = instruction23.key;
        foodev.jsondiff.JsonDiff.Instruction instruction25 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper26 = instruction25.oper;
        instruction25.key = "~";
        instruction25.key = "";
        foodev.jsondiff.JsonDiff.Instruction instruction31 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction31.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff35 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper34);
        int int37 = jsonDiff35.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction39 = jsonDiff35.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper40 = instruction39.oper;
        instruction31.oper = oper40;
        instruction25.oper = oper40;
        boolean boolean43 = instruction25.isIndexed();
        instruction25.index = ' ';
        java.lang.String str46 = instruction25.key;
        instruction25.index = '#';
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) str24, (java.lang.Object) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str24, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        org.junit.Assert.assertNull(oper26);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(instruction39);
        org.junit.Assert.assertTrue("'" + oper40 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper40.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
    }

    @Test
    public void test07873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07873");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException17);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException2);
        java.lang.String str21 = jacksonWrapperException2.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str21, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test07874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07874");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray1 = jacksonWrapperException0.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException6);
        jacksonWrapperException0.addSuppressed((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException23.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException31.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException33);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException33);
        jacksonWrapperException23.addSuppressed((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException38.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray43 = jacksonWrapperException42.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException44);
        jacksonWrapperException38.addSuppressed((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray50 = jacksonWrapperException49.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException49);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray54 = jacksonWrapperException53.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException55);
        jacksonWrapperException49.addSuppressed((java.lang.Throwable) jacksonWrapperException55);
        jacksonWrapperException48.addSuppressed((java.lang.Throwable) jacksonWrapperException49);
        jacksonWrapperException23.addSuppressed((java.lang.Throwable) jacksonWrapperException49);
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException49);
        java.lang.Throwable[] throwableArray61 = jacksonWrapperException49.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException49);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException62);
        java.lang.String str64 = jacksonWrapperException63.toString();
        org.junit.Assert.assertNotNull(throwableArray1);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str64, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test07875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07875");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper5);
        int int8 = jsonDiff6.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff6.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean11 = instruction10.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff15.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff15.create("");
        instruction18.key = "hi!";
        int int21 = instruction18.index;
        foodev.jsondiff.Oper oper22 = instruction18.oper;
        instruction10.oper = oper22;
        int int24 = instruction10.index;
        instruction10.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        java.lang.String str27 = instruction10.key;
        instruction10.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement30 = wrapper3.wrap((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + oper22 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper22.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~" + "'", str27, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
    }

    @Test
    public void test07876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07876");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        int int9 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement12, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
    }

    @Test
    public void test07877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07877");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException31.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray36 = jacksonWrapperException35.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException37);
        jacksonWrapperException31.addSuppressed((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException40);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException42);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException42);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement45 = wrapper9.wrap((java.lang.Object) jacksonWrapperException14);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray36);
    }

    @Test
    public void test07878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07878");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException22);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException16);
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray44 = jacksonWrapperException43.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray48 = jacksonWrapperException47.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray52 = jacksonWrapperException51.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException53);
        jacksonWrapperException47.addSuppressed((java.lang.Throwable) jacksonWrapperException53);
        jacksonWrapperException45.addSuppressed((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException45);
        jacksonWrapperException39.addSuppressed((java.lang.Throwable) jacksonWrapperException60);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException39);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException62);
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray52);
    }

    @Test
    public void test07879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07879");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        int int16 = jsonDiff3.isIndexed("");
        int int18 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Node node19 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = null;
        foodev.jsondiff.Leaf[] leafArray21 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList22 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList22, leafArray21);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap24 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf25 = jsonDiff3.findLeaves(node19, jzonElement20, (java.util.List<foodev.jsondiff.Leaf>) leafList22, intMap24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(leafArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test07880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07880");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        int int9 = jsonDiff7.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Leaf leaf10 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray11 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = jsonDiff7.accept(leaf10, jzonArray11, jzonObject12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test07881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07881");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement5 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject7 = jsonDiff3.diff(jzonElement5, jzonElement6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor4);
    }

    @Test
    public void test07882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07882");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.Leaf leaf16 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray17 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = jsonDiff3.accept(leaf16, jzonArray17, jzonObject18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
    }

    @Test
    public void test07883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07883");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        int int12 = jsonDiff9.isIndexed("~");
        int int14 = jsonDiff9.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff9.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff9.apply(jzonElement16, jzonElement17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor15);
    }

    @Test
    public void test07884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07884");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff14.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction16.key = "hi!";
        boolean boolean19 = instruction16.isIndexed();
        instruction16.index = 0;
        instruction16.index = (byte) 100;
        instruction16.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        int int26 = instruction16.index;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement27 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement10, instruction16, jzonElement27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
    }

    @Test
    public void test07885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07885");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff15.create("");
        int int19 = jsonDiff15.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff15.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff15.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff15.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor26 = jsonDiff15.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper27 = jsonDiff15.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor28 = jsonDiff15.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor29 = jsonDiff15.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction31 = jsonDiff15.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        instruction31.index = '#';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff35 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper34);
        int int37 = jsonDiff35.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor38 = jsonDiff35.getVisitor();
        int int40 = jsonDiff35.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction42 = jsonDiff35.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper43 = instruction42.oper;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) '#', (java.lang.Object) instruction42);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Character cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertNull(wildcardVisitor26);
        org.junit.Assert.assertNotNull(wrapper27);
        org.junit.Assert.assertNull(wildcardVisitor28);
        org.junit.Assert.assertNull(wildcardVisitor29);
        org.junit.Assert.assertNotNull(instruction31);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(instruction42);
        org.junit.Assert.assertTrue("'" + oper43 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper43.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07886");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper11 = instruction10.oper;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + oper11 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper11.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07887");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper1);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.Visitor<?> wildcardVisitor5 = jsonDiff4.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff4.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff4.factory;
        int int10 = jsonDiff4.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff4.factory;
        int int13 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff4.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff4.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        java.lang.String str19 = instruction18.key;
        foodev.jsondiff.Oper oper20 = instruction18.oper;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement21 = jacksonWrapper0.wrap((java.lang.Object) instruction18);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNull(wildcardVisitor5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str19, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        org.junit.Assert.assertTrue("'" + oper20 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper20.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07888");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int10 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = jsonDiff1.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test07889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07889");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException18);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement25 = gsonWrapper0.wrap((java.lang.Object) jacksonWrapperException22);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray17);
    }

    @Test
    public void test07890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07890");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException24.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException30);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException37);
        jacksonWrapperException30.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException45.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray50 = jacksonWrapperException49.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException49);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException51);
        jacksonWrapperException45.addSuppressed((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException51.addSuppressed((java.lang.Throwable) jacksonWrapperException55);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray60 = jacksonWrapperException59.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException59);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray63 = jacksonWrapperException62.getSuppressed();
        jacksonWrapperException61.addSuppressed((java.lang.Throwable) jacksonWrapperException62);
        jacksonWrapperException57.addSuppressed((java.lang.Throwable) jacksonWrapperException62);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException57);
        java.lang.String str68 = jacksonWrapperException67.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str68, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
    }

    @Test
    public void test07891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07891");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int10 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject16 = jsonDiff13.diff(jzonElement14, jzonElement15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test07892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07892");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction5.key = "hi!";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper8);
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff11.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff11.create("");
        int int16 = jsonDiff11.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff11.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction19.index = '#';
        boolean boolean22 = instruction19.isIndexed();
        instruction19.index = (byte) 10;
        foodev.jsondiff.Oper oper25 = instruction19.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper26);
        foodev.jsondiff.jsonwrap.Wrapper wrapper28 = jsonDiff27.factory;
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff(wrapper28);
        foodev.jsondiff.JsonDiff.Instruction instruction31 = jsonDiff29.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction33 = jsonDiff29.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int35 = jsonDiff29.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction37 = jsonDiff29.create("");
        foodev.jsondiff.Oper oper38 = instruction37.oper;
        foodev.jsondiff.Oper oper39 = instruction37.oper;
        instruction19.oper = oper39;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff42 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper41);
        int int44 = jsonDiff42.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction46 = jsonDiff42.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff48 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper47);
        int int50 = jsonDiff48.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction52 = jsonDiff48.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean53 = instruction52.isIndexed();
        int int54 = instruction52.index;
        int int55 = instruction52.index;
        foodev.jsondiff.Oper oper56 = instruction52.oper;
        int int57 = instruction52.index;
        int int58 = instruction52.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff60 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper59);
        foodev.jsondiff.jsonwrap.Wrapper wrapper61 = jsonDiff60.factory;
        foodev.jsondiff.JsonDiff jsonDiff62 = new foodev.jsondiff.JsonDiff(wrapper61);
        foodev.jsondiff.JsonDiff.Instruction instruction64 = jsonDiff62.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor65 = jsonDiff62.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction67 = jsonDiff62.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction67.index = 100;
        instruction67.index = 0;
        foodev.jsondiff.Oper oper72 = instruction67.oper;
        instruction52.oper = oper72;
        instruction46.oper = oper72;
        instruction19.oper = oper72;
        instruction5.oper = oper72;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + oper25 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper25.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper28);
        org.junit.Assert.assertNotNull(instruction31);
        org.junit.Assert.assertNotNull(instruction33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(instruction37);
        org.junit.Assert.assertTrue("'" + oper38 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper38.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper39 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper39.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(instruction46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(instruction52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + oper56 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper56.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(wrapper61);
        org.junit.Assert.assertNotNull(instruction64);
        org.junit.Assert.assertNull(wildcardVisitor65);
        org.junit.Assert.assertNotNull(instruction67);
        org.junit.Assert.assertTrue("'" + oper72 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper72.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07893");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException17);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray35 = jacksonWrapperException34.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException38.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException40);
        jacksonWrapperException34.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray47 = jacksonWrapperException46.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException46);
        jacksonWrapperException44.addSuppressed((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException44);
        jacksonWrapperException32.addSuppressed((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray53 = jacksonWrapperException52.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray57 = jacksonWrapperException56.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException56);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException58);
        jacksonWrapperException52.addSuppressed((java.lang.Throwable) jacksonWrapperException58);
        java.lang.Throwable[] throwableArray61 = jacksonWrapperException52.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray64 = jacksonWrapperException63.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException63);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray68 = jacksonWrapperException67.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException67);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException69);
        jacksonWrapperException63.addSuppressed((java.lang.Throwable) jacksonWrapperException69);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException72 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException69);
        java.lang.Throwable[] throwableArray73 = jacksonWrapperException69.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException76 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException77 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException76);
        jacksonWrapperException69.addSuppressed((java.lang.Throwable) jacksonWrapperException77);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException79 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException77);
        jacksonWrapperException52.addSuppressed((java.lang.Throwable) jacksonWrapperException79);
        jacksonWrapperException32.addSuppressed((java.lang.Throwable) jacksonWrapperException52);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException83 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException7);
        java.lang.Class<?> wildcardClass84 = jacksonWrapperException7.getClass();
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test07894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07894");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        boolean boolean6 = instruction5.isIndexed();
        instruction5.index = (short) -1;
        int int9 = instruction5.index;
        int int10 = instruction5.index;
        foodev.jsondiff.JsonDiff.Instruction instruction11 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper12 = instruction11.oper;
        instruction11.key = "~";
        instruction11.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff20.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff20.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction24.index = (short) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper27);
        foodev.jsondiff.jsonwrap.Wrapper wrapper29 = jsonDiff28.factory;
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff(wrapper29);
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff30.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction34 = jsonDiff30.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction34.index = (short) 100;
        boolean boolean37 = instruction34.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction38 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper39 = instruction38.oper;
        instruction38.key = "~";
        int int42 = instruction38.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff44 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper43);
        int int46 = jsonDiff44.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction48 = jsonDiff44.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean49 = instruction48.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff51 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper50);
        int int53 = jsonDiff51.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction55 = jsonDiff51.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper56 = instruction55.oper;
        instruction48.oper = oper56;
        instruction38.oper = oper56;
        foodev.jsondiff.Oper oper59 = instruction38.oper;
        instruction34.oper = oper59;
        instruction24.oper = oper59;
        instruction11.oper = oper59;
        instruction5.oper = oper59;
        instruction5.index = (byte) 10;
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        foodev.jsondiff.Oper oper68 = instruction5.oper;
        instruction5.key = "~";
        foodev.jsondiff.Oper oper71 = instruction5.oper;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(oper12);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertNotNull(wrapper29);
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertNotNull(instruction34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(oper39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(instruction48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(instruction55);
        org.junit.Assert.assertTrue("'" + oper56 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper56.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper59 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper59.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper68 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper68.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper71 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper71.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07895");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff5.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff5.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff5.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff5.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException25);
        jacksonWrapperException19.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement31 = wrapper13.wrap((java.lang.Object) jacksonWrapperException17);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray29);
    }

    @Test
    public void test07896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07896");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper11);
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
    }

    @Test
    public void test07897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07897");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff9.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff9.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject15 = jsonDiff9.diff(jzonElement13, jzonElement14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test07898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07898");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("hi!");
        instruction8.index = '4';
        int int11 = instruction8.index;
        java.lang.String str12 = instruction8.key;
        foodev.jsondiff.Oper oper13 = instruction8.oper;
        java.lang.String str14 = instruction8.key;
        int int15 = instruction8.index;
        boolean boolean16 = instruction8.isIndexed();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertTrue("'" + oper13 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper13.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test07899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07899");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff19.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement21 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper22);
        int int25 = jsonDiff23.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff23.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean28 = instruction27.isIndexed();
        foodev.jsondiff.Oper oper29 = null;
        instruction27.oper = oper29;
        foodev.jsondiff.Oper oper31 = instruction27.oper;
        instruction27.key = "~";
        java.lang.String str34 = instruction27.key;
        boolean boolean35 = instruction27.isIndexed();
        boolean boolean36 = instruction27.isIndexed();
        instruction27.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        java.lang.String str39 = instruction27.key;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement40 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff19.applyPartial(jzonElement21, instruction27, jzonElement40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(oper31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "~" + "'", str34, "~");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str39, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
    }

    @Test
    public void test07900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07900");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        int int12 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper13);
        int int16 = jsonDiff14.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff14.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper19 = instruction18.oper;
        int int20 = instruction18.index;
        java.lang.String str21 = instruction18.key;
        int int22 = instruction18.index;
        instruction18.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction18.key = "hi!";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper27);
        foodev.jsondiff.jsonwrap.Wrapper wrapper29 = jsonDiff28.factory;
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff(wrapper29);
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff30.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction34 = jsonDiff30.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction34.index = (short) 100;
        boolean boolean37 = instruction34.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff39 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper38);
        foodev.jsondiff.jsonwrap.Wrapper wrapper40 = jsonDiff39.factory;
        foodev.jsondiff.JsonDiff jsonDiff41 = new foodev.jsondiff.JsonDiff(wrapper40);
        foodev.jsondiff.JsonDiff.Instruction instruction43 = jsonDiff41.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction43.key = "hi!";
        foodev.jsondiff.Oper oper46 = instruction43.oper;
        instruction34.oper = oper46;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff49 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper48);
        foodev.jsondiff.jsonwrap.Wrapper wrapper50 = jsonDiff49.factory;
        foodev.jsondiff.JsonDiff jsonDiff51 = new foodev.jsondiff.JsonDiff(wrapper50);
        foodev.jsondiff.JsonDiff.Instruction instruction53 = jsonDiff51.create("");
        int int55 = jsonDiff51.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction57 = jsonDiff51.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction59 = jsonDiff51.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction59.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        java.lang.String str62 = instruction59.key;
        boolean boolean63 = instruction59.isIndexed();
        foodev.jsondiff.Oper oper64 = instruction59.oper;
        instruction34.oper = oper64;
        boolean boolean66 = instruction34.isIndexed();
        instruction34.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        foodev.jsondiff.Oper oper69 = instruction34.oper;
        instruction18.oper = oper69;
        foodev.jsondiff.JsonDiff.Instruction instruction71 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction71.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper74 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff75 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper74);
        int int77 = jsonDiff75.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction79 = jsonDiff75.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper80 = instruction79.oper;
        instruction71.oper = oper80;
        instruction71.index = 1;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) oper69, (java.lang.Object) instruction71);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertTrue("'" + oper19 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper19.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str21, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(wrapper29);
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertNotNull(instruction34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wrapper40);
        org.junit.Assert.assertNotNull(instruction43);
        org.junit.Assert.assertTrue("'" + oper46 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper46.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper50);
        org.junit.Assert.assertNotNull(instruction53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(instruction57);
        org.junit.Assert.assertNotNull(instruction59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str62, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + oper64 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper64.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + oper69 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper69.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(instruction79);
        org.junit.Assert.assertTrue("'" + oper80 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper80.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07901");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException24.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException26);
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException30);
        jacksonWrapperException19.addSuppressed((java.lang.Throwable) jacksonWrapperException30);
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException30.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray33);
    }

    @Test
    public void test07902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07902");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff11.getVisitor();
        int int14 = jsonDiff11.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Node node15 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        foodev.jsondiff.Leaf[] leafArray17 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList18 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList18, leafArray17);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap20 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf21 = jsonDiff11.findLeaves(node15, jzonElement16, (java.util.List<foodev.jsondiff.Leaf>) leafList18, intMap20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(leafArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test07903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07903");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor5 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement6, jzonElement7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNull(wildcardVisitor5);
    }

    @Test
    public void test07904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07904");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = gsonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
    }

    @Test
    public void test07905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07905");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff14.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff14.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff14.factory;
        int int20 = jsonDiff14.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper21 = jsonDiff14.factory;
        int int23 = jsonDiff14.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff14.create("~");
        int int26 = instruction25.index;
        boolean boolean27 = instruction25.isIndexed();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement28 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement10, instruction25, jzonElement28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNull(wildcardVisitor15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(wrapper21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test07906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07906");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Node node9 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.Leaf[] leafArray11 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList12 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList12, leafArray11);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap14 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf15 = jsonDiff3.findLeaves(node9, jzonElement10, (java.util.List<foodev.jsondiff.Leaf>) leafList12, intMap14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(leafArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test07907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07907");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor5 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = null;
        foodev.jsondiff.JsonDiff.Instruction instruction7 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper8 = instruction7.oper;
        instruction7.key = "~";
        instruction7.key = "";
        foodev.jsondiff.Oper oper13 = instruction7.oper;
        boolean boolean14 = instruction7.isIndexed();
        boolean boolean15 = instruction7.isIndexed();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement6, instruction7, jzonElement16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertNull(wildcardVisitor5);
        org.junit.Assert.assertNull(oper8);
        org.junit.Assert.assertNull(oper13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test07908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07908");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction9);
    }

    @Test
    public void test07909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07909");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff.Instruction instruction2 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper3 = instruction2.oper;
        instruction2.key = "~";
        instruction2.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper8);
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff11.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff11.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction15.index = (short) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper18);
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff19.factory;
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff(wrapper20);
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff21.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff21.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction25.index = (short) 100;
        boolean boolean28 = instruction25.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction29 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper30 = instruction29.oper;
        instruction29.key = "~";
        int int33 = instruction29.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff35 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper34);
        int int37 = jsonDiff35.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction39 = jsonDiff35.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean40 = instruction39.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff42 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper41);
        int int44 = jsonDiff42.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction46 = jsonDiff42.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper47 = instruction46.oper;
        instruction39.oper = oper47;
        instruction29.oper = oper47;
        foodev.jsondiff.Oper oper50 = instruction29.oper;
        instruction25.oper = oper50;
        instruction15.oper = oper50;
        instruction2.oper = oper50;
        instruction2.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        instruction2.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        foodev.jsondiff.Oper oper58 = instruction2.oper;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement59 = gsonWrapper0.wrap((java.lang.Object) oper58);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(oper3);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(oper30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(instruction39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(instruction46);
        org.junit.Assert.assertTrue("'" + oper47 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper47.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper50 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper50.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper58 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper58.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07910");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        java.lang.String str9 = jacksonWrapperException7.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str9, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
    }

    @Test
    public void test07911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07911");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        int int7 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Node node8 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        foodev.jsondiff.Leaf[] leafArray10 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList11 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList11, leafArray10);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap13 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf14 = jsonDiff4.findLeaves(node8, jzonElement9, (java.util.List<foodev.jsondiff.Leaf>) leafList11, intMap13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(leafArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test07912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07912");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int11 = jsonDiff3.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff3.factory;
        int int16 = jsonDiff3.isIndexed("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor17 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException23.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        java.lang.Throwable[] throwableArray35 = jacksonWrapperException23.getSuppressed();
        java.lang.Throwable[] throwableArray36 = jacksonWrapperException23.getSuppressed();
        java.lang.Throwable[] throwableArray37 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff41 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper40);
        foodev.jsondiff.jsonwrap.Wrapper wrapper42 = jsonDiff41.factory;
        foodev.jsondiff.JsonDiff jsonDiff43 = new foodev.jsondiff.JsonDiff(wrapper42);
        foodev.jsondiff.JsonDiff.Instruction instruction45 = jsonDiff43.create("");
        int int47 = jsonDiff43.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction49 = jsonDiff43.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction51 = jsonDiff43.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction53 = jsonDiff43.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor54 = jsonDiff43.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper55 = jsonDiff43.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction57 = jsonDiff43.create("~");
        foodev.jsondiff.JsonDiff.Instruction instruction59 = jsonDiff43.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.String str60 = instruction59.key;
        foodev.jsondiff.JsonDiff.Instruction instruction61 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper62 = instruction61.oper;
        instruction61.key = "~";
        instruction61.key = "";
        foodev.jsondiff.Oper oper67 = instruction61.oper;
        boolean boolean68 = instruction61.isIndexed();
        boolean boolean69 = instruction61.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff71 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper70);
        foodev.jsondiff.jsonwrap.Wrapper wrapper72 = jsonDiff71.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction74 = jsonDiff71.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction74.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        java.lang.String str77 = instruction74.key;
        int int78 = instruction74.index;
        java.lang.String str79 = instruction74.key;
        foodev.jsondiff.Oper oper80 = instruction74.oper;
        instruction61.oper = oper80;
        instruction59.oper = oper80;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj83 = jsonDiff3.diff((java.lang.Object) jacksonWrapperException39, (java.lang.Object) oper80);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor17);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(wrapper42);
        org.junit.Assert.assertNotNull(instruction45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(instruction49);
        org.junit.Assert.assertNotNull(instruction51);
        org.junit.Assert.assertNotNull(instruction53);
        org.junit.Assert.assertNull(wildcardVisitor54);
        org.junit.Assert.assertNotNull(wrapper55);
        org.junit.Assert.assertNotNull(instruction57);
        org.junit.Assert.assertNotNull(instruction59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str60, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertNull(oper62);
        org.junit.Assert.assertNull(oper67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wrapper72);
        org.junit.Assert.assertNotNull(instruction74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~" + "'", str77, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~" + "'", str79, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        org.junit.Assert.assertTrue("'" + oper80 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper80.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07913");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        int int11 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Leaf leaf12 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray13 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = jsonDiff1.accept(leaf12, jzonArray13, jzonObject14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test07914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07914");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement4 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement4, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test07915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07915");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        foodev.jsondiff.JsonDiff.Instruction instruction10 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction10.key = "";
        instruction10.index = 'a';
        instruction10.index = 1;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff18.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction21.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        foodev.jsondiff.JsonDiff.Instruction instruction24 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction24.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper27);
        int int30 = jsonDiff28.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff28.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper33 = instruction32.oper;
        instruction24.oper = oper33;
        instruction21.oper = oper33;
        instruction10.oper = oper33;
        foodev.jsondiff.Oper oper37 = instruction10.oper;
        int int38 = instruction10.index;
        int int39 = instruction10.index;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement40 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff8.applyPartial(jzonElement9, instruction10, jzonElement40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertTrue("'" + oper33 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper33.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper37 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper37.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
    }

    @Test
    public void test07916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07916");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction7.index = (short) 100;
        boolean boolean10 = instruction7.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper12 = instruction11.oper;
        instruction11.key = "~";
        int int15 = instruction11.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        int int19 = jsonDiff17.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean22 = instruction21.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper23);
        int int26 = jsonDiff24.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper29 = instruction28.oper;
        instruction21.oper = oper29;
        instruction11.oper = oper29;
        foodev.jsondiff.Oper oper32 = instruction11.oper;
        instruction7.oper = oper32;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff35 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper34);
        foodev.jsondiff.jsonwrap.Wrapper wrapper36 = jsonDiff35.factory;
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff(wrapper36);
        foodev.jsondiff.Visitor<?> wildcardVisitor38 = jsonDiff37.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction40 = jsonDiff37.create("");
        instruction40.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper43 = instruction40.oper;
        instruction7.oper = oper43;
        foodev.jsondiff.Oper oper45 = instruction7.oper;
        foodev.jsondiff.Oper oper46 = instruction7.oper;
        instruction7.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(oper12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertTrue("'" + oper29 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper29.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper32 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper32.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper36);
        org.junit.Assert.assertNull(wildcardVisitor38);
        org.junit.Assert.assertNotNull(instruction40);
        org.junit.Assert.assertTrue("'" + oper43 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper43.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper45 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper45.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper46 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper46.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07917");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff3.create("~");
        int int19 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int21 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement22 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement23 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject24 = jsonDiff3.diff(jzonElement22, jzonElement23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test07918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07918");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean14 = instruction13.isIndexed();
        int int15 = instruction13.index;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test07919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07919");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        java.lang.Class<?> wildcardClass9 = jsonDiff3.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test07920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07920");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int15 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        boolean boolean20 = instruction19.isIndexed();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test07921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07921");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = jacksonWrapper0.wrap((java.lang.Object) jacksonWrapperException3);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray4);
    }

    @Test
    public void test07922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07922");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int7 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction17.index = (short) 100;
        boolean boolean20 = instruction17.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction21 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper22 = instruction21.oper;
        instruction21.key = "~";
        int int25 = instruction21.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper26);
        int int29 = jsonDiff27.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction31 = jsonDiff27.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean32 = instruction31.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff34 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper33);
        int int36 = jsonDiff34.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction38 = jsonDiff34.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper39 = instruction38.oper;
        instruction31.oper = oper39;
        instruction21.oper = oper39;
        foodev.jsondiff.Oper oper42 = instruction21.oper;
        instruction17.oper = oper42;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff45 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper44);
        foodev.jsondiff.jsonwrap.Wrapper wrapper46 = jsonDiff45.factory;
        foodev.jsondiff.JsonDiff jsonDiff47 = new foodev.jsondiff.JsonDiff(wrapper46);
        foodev.jsondiff.Visitor<?> wildcardVisitor48 = jsonDiff47.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction50 = jsonDiff47.create("");
        instruction50.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper53 = instruction50.oper;
        instruction17.oper = oper53;
        foodev.jsondiff.Oper oper55 = instruction17.oper;
        foodev.jsondiff.Oper oper56 = instruction17.oper;
        java.lang.String str57 = instruction17.key;
        instruction17.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        instruction17.index = 0;
        boolean boolean62 = instruction17.isIndexed();
        boolean boolean63 = instruction17.isIndexed();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement64 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement9, instruction17, jzonElement64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(oper22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(instruction31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(instruction38);
        org.junit.Assert.assertTrue("'" + oper39 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper39.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper42 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper42.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper46);
        org.junit.Assert.assertNull(wildcardVisitor48);
        org.junit.Assert.assertNotNull(instruction50);
        org.junit.Assert.assertTrue("'" + oper53 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper53.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper55 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper55.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper56 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper56.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str57, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test07923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07923");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int9 = instruction8.index;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test07924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07924");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        int int11 = jsonDiff1.isIndexed("~");
        int int13 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        int int18 = jsonDiff16.isIndexed("hi!");
        int int20 = jsonDiff16.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper21 = jsonDiff16.factory;
        int int23 = jsonDiff16.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff16.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff16.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Oper oper29 = instruction28.oper;
        int int30 = instruction28.index;
        int int31 = instruction28.index;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement32 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement14, instruction28, jzonElement32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(wrapper21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(wrapper24);
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertTrue("'" + oper29 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper29.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
    }

    @Test
    public void test07925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07925");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("~");
        int int10 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff15.create("");
        int int19 = jsonDiff15.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff15.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff15.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction23.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction23.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.JsonDiff.Instruction instruction28 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper29 = instruction28.oper;
        instruction28.key = "~";
        instruction28.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff35 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper34);
        foodev.jsondiff.jsonwrap.Wrapper wrapper36 = jsonDiff35.factory;
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff(wrapper36);
        foodev.jsondiff.JsonDiff.Instruction instruction39 = jsonDiff37.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction41 = jsonDiff37.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction41.index = (short) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff45 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper44);
        foodev.jsondiff.jsonwrap.Wrapper wrapper46 = jsonDiff45.factory;
        foodev.jsondiff.JsonDiff jsonDiff47 = new foodev.jsondiff.JsonDiff(wrapper46);
        foodev.jsondiff.JsonDiff.Instruction instruction49 = jsonDiff47.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction51 = jsonDiff47.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction51.index = (short) 100;
        boolean boolean54 = instruction51.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction55 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper56 = instruction55.oper;
        instruction55.key = "~";
        int int59 = instruction55.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff61 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper60);
        int int63 = jsonDiff61.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction65 = jsonDiff61.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean66 = instruction65.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff68 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper67);
        int int70 = jsonDiff68.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction72 = jsonDiff68.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper73 = instruction72.oper;
        instruction65.oper = oper73;
        instruction55.oper = oper73;
        foodev.jsondiff.Oper oper76 = instruction55.oper;
        instruction51.oper = oper76;
        instruction41.oper = oper76;
        instruction28.oper = oper76;
        instruction23.oper = oper76;
        boolean boolean81 = instruction23.isIndexed();
        java.lang.String str82 = instruction23.key;
        java.lang.String str83 = instruction23.key;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement84 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement11, instruction23, jzonElement84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertNull(oper29);
        org.junit.Assert.assertNotNull(wrapper36);
        org.junit.Assert.assertNotNull(instruction39);
        org.junit.Assert.assertNotNull(instruction41);
        org.junit.Assert.assertNotNull(wrapper46);
        org.junit.Assert.assertNotNull(instruction49);
        org.junit.Assert.assertNotNull(instruction51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(oper56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(instruction65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(instruction72);
        org.junit.Assert.assertTrue("'" + oper73 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper73.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper76 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper76.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str82, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str83, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test07926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07926");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.Visitor<?> wildcardVisitor18 = jsonDiff17.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff17.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff17.factory;
        foodev.jsondiff.Leaf leaf21 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray22 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject23 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean24 = jsonDiff17.accept(leaf21, jzonArray22, jzonObject23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNull(wildcardVisitor18);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(wrapper20);
    }

    @Test
    public void test07927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07927");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff9.create("");
        boolean boolean12 = instruction11.isIndexed();
        instruction11.index = (short) -1;
        instruction11.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        boolean boolean17 = instruction11.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper18);
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff19.factory;
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff(wrapper20);
        foodev.jsondiff.Visitor<?> wildcardVisitor22 = jsonDiff21.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff21.create("");
        instruction24.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper27 = instruction24.oper;
        instruction24.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff31 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper30);
        foodev.jsondiff.jsonwrap.Wrapper wrapper32 = jsonDiff31.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction34 = jsonDiff31.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction35 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction35.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff39 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper38);
        int int41 = jsonDiff39.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction43 = jsonDiff39.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper44 = instruction43.oper;
        instruction35.oper = oper44;
        instruction34.oper = oper44;
        instruction24.oper = oper44;
        instruction11.oper = oper44;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff50 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper49);
        foodev.jsondiff.jsonwrap.Wrapper wrapper51 = jsonDiff50.factory;
        foodev.jsondiff.JsonDiff jsonDiff52 = new foodev.jsondiff.JsonDiff(wrapper51);
        foodev.jsondiff.JsonDiff.Instruction instruction54 = jsonDiff52.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean55 = instruction54.isIndexed();
        foodev.jsondiff.Oper oper56 = instruction54.oper;
        instruction11.oper = oper56;
        instruction11.index = 100;
        boolean boolean60 = instruction11.isIndexed();
        boolean boolean61 = instruction11.isIndexed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement62 = gsonWrapper0.wrap((java.lang.Object) instruction11);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNull(wildcardVisitor22);
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertTrue("'" + oper27 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper27.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper32);
        org.junit.Assert.assertNotNull(instruction34);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(instruction43);
        org.junit.Assert.assertTrue("'" + oper44 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper44.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper51);
        org.junit.Assert.assertNotNull(instruction54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + oper56 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper56.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test07928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07928");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        int int12 = jsonDiff3.isIndexed("");
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff3.getVisitor();
        int int15 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        java.lang.Object obj16 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff20.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean23 = instruction22.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper24);
        int int27 = jsonDiff25.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff25.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper30 = instruction29.oper;
        instruction22.oper = oper30;
        int int32 = instruction22.index;
        foodev.jsondiff.JsonDiff.Instruction instruction33 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction33.key = "";
        instruction33.index = 'a';
        instruction33.index = 1;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff41 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper40);
        foodev.jsondiff.jsonwrap.Wrapper wrapper42 = jsonDiff41.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction44 = jsonDiff41.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction44.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        foodev.jsondiff.JsonDiff.Instruction instruction47 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction47.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff51 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper50);
        int int53 = jsonDiff51.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction55 = jsonDiff51.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper56 = instruction55.oper;
        instruction47.oper = oper56;
        instruction44.oper = oper56;
        instruction33.oper = oper56;
        instruction22.oper = oper56;
        instruction22.index = (short) 0;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(obj16, (java.lang.Object) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Short cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(instruction29);
        org.junit.Assert.assertTrue("'" + oper30 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper30.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(wrapper42);
        org.junit.Assert.assertNotNull(instruction44);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(instruction55);
        org.junit.Assert.assertTrue("'" + oper56 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper56.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07929");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff7.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff7.checkIndex(jzonElement9, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNull(wildcardVisitor8);
    }

    @Test
    public void test07930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07930");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff3.getVisitor();
        foodev.jsondiff.Leaf leaf12 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray13 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = jsonDiff3.accept(leaf12, jzonArray13, jzonObject14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(wildcardVisitor11);
    }

    @Test
    public void test07931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07931");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        int int10 = jsonDiff1.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = wrapper12.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test07932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07932");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff11.checkIndex(jzonElement12, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test07933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07933");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper13);
        int int16 = jsonDiff14.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff14.factory;
        int int19 = jsonDiff14.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff14.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff14.factory;
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff(wrapper22);
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff(wrapper22);
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement27 = wrapper10.wrap((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertNotNull(instruction26);
    }

    @Test
    public void test07934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07934");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement7, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertNotNull(instruction6);
    }

    @Test
    public void test07935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07935");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff9.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff15.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = null;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.Visitor<?> wildcardVisitor19 = jsonDiff18.getVisitor();
        int int21 = jsonDiff18.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement22 = wrapper16.wrap((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNull(wildcardVisitor19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test07936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07936");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff3.factory;
        int int19 = jsonDiff3.isIndexed("~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = jsonDiff3.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test07937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07937");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff10.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper13);
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff14.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff16.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff16.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.String str21 = instruction20.key;
        int int22 = instruction20.index;
        instruction20.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff26 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper25);
        foodev.jsondiff.jsonwrap.Wrapper wrapper27 = jsonDiff26.factory;
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff(wrapper27);
        foodev.jsondiff.JsonDiff.Instruction instruction30 = jsonDiff28.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff28.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction32.index = (short) 100;
        boolean boolean35 = instruction32.isIndexed();
        instruction32.index = (short) 10;
        foodev.jsondiff.Oper oper38 = instruction32.oper;
        instruction20.oper = oper38;
        instruction12.oper = oper38;
        instruction12.index = (byte) 10;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str21, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(wrapper27);
        org.junit.Assert.assertNotNull(instruction30);
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + oper38 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper38.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07938");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper5);
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff6.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff8.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int14 = jsonDiff8.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff8.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff8.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff8.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = jacksonWrapper0.wrap((java.lang.Object) wrapper18);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor15);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(wrapper18);
    }

    @Test
    public void test07939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07939");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff4.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff4.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper9);
        int int12 = jsonDiff10.isIndexed("hi!");
        int int14 = jsonDiff10.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff10.factory;
        int int17 = jsonDiff10.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff10.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff10.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement21 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff4.applyPartial(jzonElement8, instruction20, jzonElement21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNotNull(instruction20);
    }

    @Test
    public void test07940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07940");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = wrapper7.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
    }

    @Test
    public void test07941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07941");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Leaf leaf7 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray8 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject9 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = jsonDiff1.accept(leaf7, jzonArray8, jzonObject9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
    }

    @Test
    public void test07942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07942");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean6 = instruction5.isIndexed();
        int int7 = instruction5.index;
        java.lang.String str8 = instruction5.key;
        java.lang.String str9 = instruction5.key;
        instruction5.index = 100;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str8, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str9, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test07943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07943");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException16);
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException16.getSuppressed();
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException26);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException24);
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException24.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException24);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        java.lang.Throwable[] throwableArray44 = jacksonWrapperException7.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement45 = jacksonWrapper0.wrap((java.lang.Object) throwableArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: [Ljava.lang.Throwable; cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray44);
    }

    @Test
    public void test07944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07944");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff10.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff12.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff12.getVisitor();
        int int17 = jsonDiff12.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor18 = jsonDiff12.getVisitor();
        int int20 = jsonDiff12.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor21 = jsonDiff12.getVisitor();
        int int23 = jsonDiff12.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = jsonDiff12.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff26 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper25);
        int int28 = jsonDiff26.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction30 = jsonDiff26.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean31 = instruction30.isIndexed();
        int int32 = instruction30.index;
        int int33 = instruction30.index;
        foodev.jsondiff.Oper oper34 = instruction30.oper;
        int int35 = instruction30.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper36);
        int int39 = jsonDiff37.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction41 = jsonDiff37.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean42 = instruction41.isIndexed();
        int int43 = instruction41.index;
        int int44 = instruction41.index;
        foodev.jsondiff.Oper oper45 = instruction41.oper;
        int int46 = instruction41.index;
        int int47 = instruction41.index;
        foodev.jsondiff.Oper oper48 = instruction41.oper;
        instruction30.oper = oper48;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj50 = jsonDiff3.diff((java.lang.Object) jsonDiff12, (java.lang.Object) oper48);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNull(wildcardVisitor15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(wrapper24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(instruction30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + oper34 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper34.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(instruction41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + oper45 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper45.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + oper48 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper48.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07945");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff8.getVisitor();
        foodev.jsondiff.Node node10 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.Leaf[] leafArray12 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList13 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList13, leafArray12);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap15 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf16 = jsonDiff8.findLeaves(node10, jzonElement11, (java.util.List<foodev.jsondiff.Leaf>) leafList13, intMap15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(leafArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test07946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07946");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        int int13 = jsonDiff11.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = jsonDiff11.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test07947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07947");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = jsonDiff1.apply("", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNull(wildcardVisitor3);
    }

    @Test
    public void test07948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07948");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException10);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException10);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException21);
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException21.getSuppressed();
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        java.lang.String str25 = jacksonWrapperException21.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str25, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
    }

    @Test
    public void test07949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07949");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException10);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~");
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException31.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray36 = jacksonWrapperException35.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException37);
        jacksonWrapperException31.addSuppressed((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException45.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray50 = jacksonWrapperException49.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException49);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException51);
        jacksonWrapperException45.addSuppressed((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException54);
        jacksonWrapperException41.addSuppressed((java.lang.Throwable) jacksonWrapperException56);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException41);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray64 = jacksonWrapperException63.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException63.addSuppressed((java.lang.Throwable) jacksonWrapperException65);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException65);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException67);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException68);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException72 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        java.lang.Throwable[] throwableArray73 = jacksonWrapperException72.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException74 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException72);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException75 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException72);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException75);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(throwableArray73);
    }

    @Test
    public void test07950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07950");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = wrapper16.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
    }

    @Test
    public void test07951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07951");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        int int16 = jsonDiff3.isIndexed("");
        int int18 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff21.factory;
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff(wrapper22);
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff(wrapper22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff26 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper25);
        foodev.jsondiff.jsonwrap.Wrapper wrapper27 = jsonDiff26.factory;
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff(wrapper27);
        foodev.jsondiff.JsonDiff.Instruction instruction30 = jsonDiff28.create("");
        boolean boolean31 = instruction30.isIndexed();
        instruction30.key = "~";
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement34 = wrapper22.wrap((java.lang.Object) instruction30);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertNotNull(wrapper27);
        org.junit.Assert.assertNotNull(instruction30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test07952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07952");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = jsonDiff1.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
    }

    @Test
    public void test07953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07953");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.Class<?> wildcardClass9 = instruction8.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test07954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07954");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("");
        java.lang.String str15 = instruction14.key;
        instruction14.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        foodev.jsondiff.Oper oper18 = instruction14.oper;
        instruction14.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + oper18 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper18.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07955");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper4);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper4);
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper4);
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper4);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        int int11 = jsonDiff8.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = gsonWrapper0.wrap((java.lang.Object) jsonDiff8);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test07956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07956");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int15 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int17 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor18 = jsonDiff3.getVisitor();
        foodev.jsondiff.Leaf leaf19 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray20 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject21 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = jsonDiff3.accept(leaf19, jzonArray20, jzonObject21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor18);
    }

    @Test
    public void test07957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07957");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException32.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException34);
        jacksonWrapperException28.addSuppressed((java.lang.Throwable) jacksonWrapperException34);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException28);
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException38.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException45);
        jacksonWrapperException38.addSuppressed((java.lang.Throwable) jacksonWrapperException48);
        java.lang.Throwable[] throwableArray50 = jacksonWrapperException48.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement51 = wrapper12.wrap((java.lang.Object) throwableArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: [Ljava.lang.Throwable; cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray50);
    }

    @Test
    public void test07958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07958");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = jsonDiff3.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction13);
    }

    @Test
    public void test07959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07959");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int6 = instruction5.index;
        boolean boolean7 = instruction5.isIndexed();
        instruction5.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("");
        boolean boolean16 = instruction15.isIndexed();
        instruction15.index = (short) -1;
        foodev.jsondiff.Oper oper19 = instruction15.oper;
        instruction5.oper = oper19;
        java.lang.String str21 = instruction5.key;
        instruction5.index = (byte) 10;
        foodev.jsondiff.Oper oper24 = instruction5.oper;
        java.lang.Class<?> wildcardClass25 = oper24.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + oper19 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper19.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + oper24 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper24.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test07960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07960");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException24);
        jacksonWrapperException18.addSuppressed((java.lang.Throwable) jacksonWrapperException24);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException28.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        java.lang.Throwable[] throwableArray35 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException38.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray43 = jacksonWrapperException42.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException44);
        jacksonWrapperException38.addSuppressed((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException44);
        java.lang.Throwable[] throwableArray49 = jacksonWrapperException48.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException48);
        jacksonWrapperException28.addSuppressed((java.lang.Throwable) jacksonWrapperException50);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement52 = gsonWrapper0.wrap((java.lang.Object) jacksonWrapperException50);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray49);
    }

    @Test
    public void test07961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07961");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = wrapper14.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper14);
    }

    @Test
    public void test07962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07962");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff9.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff9.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction14.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        int int17 = instruction14.index;
        instruction14.index = 97;
        boolean boolean20 = instruction14.isIndexed();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test07963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07963");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        int int9 = jsonDiff3.isIndexed("");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement12, jzonElement13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test07964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07964");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.Visitor<?> wildcardVisitor18 = jsonDiff17.getVisitor();
        int int20 = jsonDiff17.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement21 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper22);
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = jsonDiff23.factory;
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff(wrapper24);
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff25.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean28 = instruction27.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper29);
        int int32 = jsonDiff30.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction34 = jsonDiff30.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper35 = instruction34.oper;
        instruction27.oper = oper35;
        int int37 = instruction27.index;
        int int38 = instruction27.index;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement39 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff17.applyPartial(jzonElement21, instruction27, jzonElement39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNull(wildcardVisitor18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(wrapper24);
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(instruction34);
        org.junit.Assert.assertTrue("'" + oper35 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper35.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
    }

    @Test
    public void test07965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07965");
        foodev.jsondiff.jsonwrap.Wrapper wrapper0 = null;
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff(wrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNull(wrapper3);
        org.junit.Assert.assertNull(wildcardVisitor4);
    }

    @Test
    public void test07966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07966");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException13);
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException31.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray36 = jacksonWrapperException35.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException37);
        jacksonWrapperException31.addSuppressed((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException29.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException29);
        java.lang.Throwable[] throwableArray44 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray49 = jacksonWrapperException48.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray53 = jacksonWrapperException52.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException54);
        jacksonWrapperException48.addSuppressed((java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException54.addSuppressed((java.lang.Throwable) jacksonWrapperException58);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException60);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException60);
        jacksonWrapperException45.addSuppressed((java.lang.Throwable) jacksonWrapperException62);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException45);
        java.lang.String str65 = jacksonWrapperException25.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str65, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
    }

    @Test
    public void test07967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07967");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper11 = instruction10.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff15.create("");
        boolean boolean18 = instruction17.isIndexed();
        instruction17.index = (byte) 10;
        instruction17.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction17.index = (byte) 10;
        foodev.jsondiff.Oper oper25 = instruction17.oper;
        instruction10.oper = oper25;
        instruction10.index = ' ';
        java.lang.String str29 = instruction10.key;
        boolean boolean30 = instruction10.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray35 = jacksonWrapperException34.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException38.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException40);
        jacksonWrapperException34.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray49 = jacksonWrapperException48.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray53 = jacksonWrapperException52.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException54);
        jacksonWrapperException48.addSuppressed((java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray62 = jacksonWrapperException61.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException61);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException63);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray66 = jacksonWrapperException65.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException65);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException71 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException73 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray74 = jacksonWrapperException73.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException75 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException73);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException77 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray78 = jacksonWrapperException77.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException79 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException77);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException80 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException79);
        jacksonWrapperException73.addSuppressed((java.lang.Throwable) jacksonWrapperException79);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException82 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException73);
        jacksonWrapperException71.addSuppressed((java.lang.Throwable) jacksonWrapperException73);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException84 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException71);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException85 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException71);
        jacksonWrapperException65.addSuppressed((java.lang.Throwable) jacksonWrapperException71);
        jacksonWrapperException64.addSuppressed((java.lang.Throwable) jacksonWrapperException71);
        jacksonWrapperException54.addSuppressed((java.lang.Throwable) jacksonWrapperException71);
        jacksonWrapperException40.addSuppressed((java.lang.Throwable) jacksonWrapperException71);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException90 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException71);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj91 = jsonDiff3.diff((java.lang.Object) instruction10, (java.lang.Object) jacksonWrapperException90);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(oper11);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + oper25 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper25.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertNotNull(throwableArray78);
    }

    @Test
    public void test07968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07968");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException17);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        java.lang.Class<?> wildcardClass21 = jacksonWrapperException18.getClass();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test07969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07969");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper3);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff6.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff6.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int12 = jsonDiff6.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff6.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff6.getVisitor();
        int int16 = jsonDiff6.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff6.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int20 = jsonDiff6.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper21 = jsonDiff6.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement22 = jacksonWrapper0.wrap((java.lang.Object) wrapper21);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(wrapper21);
    }

    @Test
    public void test07970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07970");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException25);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray38 = jacksonWrapperException37.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        java.lang.Throwable[] throwableArray42 = jacksonWrapperException41.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray42);
    }

    @Test
    public void test07971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07971");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff12.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject18 = jsonDiff12.diff(jzonElement16, jzonElement17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNull(wildcardVisitor15);
    }

    @Test
    public void test07972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07972");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.Leaf leaf13 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray14 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = jsonDiff12.accept(leaf13, jzonArray14, jzonObject15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test07973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07973");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException24.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException26);
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException32.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray37 = jacksonWrapperException36.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray41 = jacksonWrapperException40.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException42);
        jacksonWrapperException36.addSuppressed((java.lang.Throwable) jacksonWrapperException42);
        jacksonWrapperException34.addSuppressed((java.lang.Throwable) jacksonWrapperException36);
        jacksonWrapperException29.addSuppressed((java.lang.Throwable) jacksonWrapperException34);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException48);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException49);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException49);
        java.lang.String str52 = jacksonWrapperException51.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str52, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test07974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07974");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff11.getVisitor();
        int int14 = jsonDiff11.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int16 = jsonDiff11.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = jsonDiff11.diff("~", "hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test07975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07975");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.Visitor<?> wildcardVisitor18 = jsonDiff17.getVisitor();
        int int20 = jsonDiff17.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = jsonDiff17.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNull(wildcardVisitor18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test07976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07976");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        int int10 = jsonDiff1.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = jsonDiff1.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
    }

    @Test
    public void test07977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07977");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction7.index = (short) 100;
        boolean boolean10 = instruction7.isIndexed();
        instruction7.index = (short) 10;
        foodev.jsondiff.Oper oper13 = instruction7.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper14);
        int int17 = jsonDiff15.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff15.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper20);
        int int23 = jsonDiff21.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff21.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean26 = instruction25.isIndexed();
        int int27 = instruction25.index;
        int int28 = instruction25.index;
        foodev.jsondiff.Oper oper29 = instruction25.oper;
        int int30 = instruction25.index;
        int int31 = instruction25.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff33 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper32);
        foodev.jsondiff.jsonwrap.Wrapper wrapper34 = jsonDiff33.factory;
        foodev.jsondiff.JsonDiff jsonDiff35 = new foodev.jsondiff.JsonDiff(wrapper34);
        foodev.jsondiff.JsonDiff.Instruction instruction37 = jsonDiff35.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor38 = jsonDiff35.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction40 = jsonDiff35.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction40.index = 100;
        instruction40.index = 0;
        foodev.jsondiff.Oper oper45 = instruction40.oper;
        instruction25.oper = oper45;
        instruction19.oper = oper45;
        instruction7.oper = oper45;
        java.lang.Class<?> wildcardClass49 = oper45.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + oper13 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper13.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + oper29 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper29.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(wrapper34);
        org.junit.Assert.assertNotNull(instruction37);
        org.junit.Assert.assertNull(wildcardVisitor38);
        org.junit.Assert.assertNotNull(instruction40);
        org.junit.Assert.assertTrue("'" + oper45 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper45.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test07978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07978");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff1.getVisitor();
        int int14 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff1.getVisitor();
        int int17 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply(jzonElement18, jzonElement19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test07979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07979");
        foodev.jsondiff.jsonwrap.Wrapper wrapper0 = null;
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff(wrapper0);
        int int3 = jsonDiff1.isIndexed("");
        int int5 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test07980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07980");
        foodev.jsondiff.JsonDiff.Instruction instruction0 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper1 = instruction0.oper;
        instruction0.key = "~";
        instruction0.key = "";
        foodev.jsondiff.JsonDiff.Instruction instruction6 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction6.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper9);
        int int12 = jsonDiff10.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff10.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper15 = instruction14.oper;
        instruction6.oper = oper15;
        instruction0.oper = oper15;
        instruction0.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        instruction0.index = (byte) 0;
        instruction0.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        java.lang.Class<?> wildcardClass24 = instruction0.getClass();
        org.junit.Assert.assertNull(oper1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + oper15 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper15.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test07981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07981");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray18);
    }

    @Test
    public void test07982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07982");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException9);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        java.lang.Throwable[] throwableArray36 = jacksonWrapperException32.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException39);
        jacksonWrapperException32.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException40);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray48 = jacksonWrapperException47.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray52 = jacksonWrapperException51.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException53);
        jacksonWrapperException47.addSuppressed((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException53.addSuppressed((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray62 = jacksonWrapperException61.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException61);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray65 = jacksonWrapperException64.getSuppressed();
        jacksonWrapperException63.addSuppressed((java.lang.Throwable) jacksonWrapperException64);
        jacksonWrapperException59.addSuppressed((java.lang.Throwable) jacksonWrapperException64);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException59);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException73 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray74 = jacksonWrapperException73.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException75 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException73);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException77 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray78 = jacksonWrapperException77.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException79 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException77);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException80 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException79);
        jacksonWrapperException73.addSuppressed((java.lang.Throwable) jacksonWrapperException79);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException82 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException79);
        java.lang.Throwable[] throwableArray83 = jacksonWrapperException79.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException86 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException87 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException86);
        jacksonWrapperException79.addSuppressed((java.lang.Throwable) jacksonWrapperException87);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException89 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException87);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException90 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException89);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException91 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException89);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException92 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException89);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException89);
        java.lang.Throwable[] throwableArray94 = jacksonWrapperException89.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertNotNull(throwableArray78);
        org.junit.Assert.assertNotNull(throwableArray83);
        org.junit.Assert.assertNotNull(throwableArray94);
    }

    @Test
    public void test07983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07983");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff7.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff14.create("");
        instruction16.key = "hi!";
        int int19 = instruction16.index;
        foodev.jsondiff.Oper oper20 = instruction16.oper;
        instruction16.index = 97;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement23 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff7.applyPartial(jzonElement10, instruction16, jzonElement23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + oper20 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper20.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07984");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff6.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int10 = jsonDiff6.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff6.getVisitor();
        foodev.jsondiff.Node node12 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        foodev.jsondiff.Leaf[] leafArray14 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList15 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList15, leafArray14);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap17 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf18 = jsonDiff6.findLeaves(node12, jzonElement13, (java.util.List<foodev.jsondiff.Leaf>) leafList15, intMap17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(leafArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test07985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07985");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff6.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff6.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff6.apply(jzonElement9, jzonElement10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNull(wildcardVisitor8);
    }

    @Test
    public void test07986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07986");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper8);
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff11.create("");
        int int15 = jsonDiff11.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff11.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int19 = jsonDiff11.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff11.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor21 = jsonDiff11.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor22 = jsonDiff11.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = null;
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff(wrapper23);
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff24.create("~");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper29);
        foodev.jsondiff.jsonwrap.Wrapper wrapper31 = jsonDiff30.factory;
        foodev.jsondiff.JsonDiff jsonDiff32 = new foodev.jsondiff.JsonDiff(wrapper31);
        foodev.jsondiff.Visitor<?> wildcardVisitor33 = jsonDiff32.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction35 = jsonDiff32.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper36 = jsonDiff32.factory;
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff(wrapper36);
        foodev.jsondiff.JsonDiff jsonDiff38 = new foodev.jsondiff.JsonDiff(wrapper36);
        foodev.jsondiff.Visitor<?> wildcardVisitor39 = jsonDiff38.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor40 = jsonDiff38.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction42 = jsonDiff38.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction44 = jsonDiff38.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper45 = instruction44.oper;
        instruction28.oper = oper45;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) jsonDiff11, (java.lang.Object) instruction28);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNull(wildcardVisitor21);
        org.junit.Assert.assertNull(wildcardVisitor22);
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertNotNull(wrapper31);
        org.junit.Assert.assertNull(wildcardVisitor33);
        org.junit.Assert.assertNotNull(instruction35);
        org.junit.Assert.assertNotNull(wrapper36);
        org.junit.Assert.assertNull(wildcardVisitor39);
        org.junit.Assert.assertNull(wildcardVisitor40);
        org.junit.Assert.assertNotNull(instruction42);
        org.junit.Assert.assertNotNull(instruction44);
        org.junit.Assert.assertTrue("'" + oper45 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper45.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07987");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = gsonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
    }

    @Test
    public void test07988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07988");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff10.create("");
        int int13 = instruction12.index;
        boolean boolean14 = instruction12.isIndexed();
        instruction12.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff20.create("");
        boolean boolean23 = instruction22.isIndexed();
        instruction22.index = (short) -1;
        foodev.jsondiff.Oper oper26 = instruction22.oper;
        instruction12.oper = oper26;
        instruction12.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        int int30 = instruction12.index;
        instruction12.index = 100;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement33 = gsonWrapper0.wrap((java.lang.Object) instruction12);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + oper26 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper26.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 97 + "'", int30 == 97);
    }

    @Test
    public void test07989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07989");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.Leaf leaf11 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray12 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = jsonDiff3.accept(leaf11, jzonArray12, jzonObject13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test07990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07990");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff5.create("");
        int int9 = jsonDiff5.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff5.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction13.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        java.lang.String str16 = instruction13.key;
        boolean boolean17 = instruction13.isIndexed();
        foodev.jsondiff.Oper oper18 = instruction13.oper;
        foodev.jsondiff.Oper oper19 = instruction13.oper;
        boolean boolean20 = instruction13.isIndexed();
        java.lang.String str21 = instruction13.key;
        boolean boolean22 = instruction13.isIndexed();
        instruction13.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement25 = jacksonWrapper0.wrap((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str16, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + oper18 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper18.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper19 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper19.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str21, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test07991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07991");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int11 = jsonDiff3.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        int int19 = jsonDiff17.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean22 = instruction21.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper23);
        foodev.jsondiff.jsonwrap.Wrapper wrapper25 = jsonDiff24.factory;
        foodev.jsondiff.JsonDiff jsonDiff26 = new foodev.jsondiff.JsonDiff(wrapper25);
        foodev.jsondiff.Visitor<?> wildcardVisitor27 = jsonDiff26.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff26.create("");
        instruction29.key = "hi!";
        int int32 = instruction29.index;
        foodev.jsondiff.Oper oper33 = instruction29.oper;
        instruction21.oper = oper33;
        int int35 = instruction21.index;
        java.lang.String str36 = instruction21.key;
        java.lang.String str37 = instruction21.key;
        foodev.jsondiff.Oper oper38 = null;
        instruction21.oper = oper38;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray42 = jacksonWrapperException41.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException45.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException47);
        jacksonWrapperException41.addSuppressed((java.lang.Throwable) jacksonWrapperException47);
        java.lang.Throwable[] throwableArray50 = jacksonWrapperException41.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray53 = jacksonWrapperException52.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray57 = jacksonWrapperException56.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException56);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException58);
        jacksonWrapperException52.addSuppressed((java.lang.Throwable) jacksonWrapperException58);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException58);
        java.lang.Throwable[] throwableArray62 = jacksonWrapperException58.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException65);
        jacksonWrapperException58.addSuppressed((java.lang.Throwable) jacksonWrapperException66);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException66);
        jacksonWrapperException41.addSuppressed((java.lang.Throwable) jacksonWrapperException68);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray71 = jacksonWrapperException70.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException72 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException70);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException73 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray74 = jacksonWrapperException73.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException75 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException73.addSuppressed((java.lang.Throwable) jacksonWrapperException75);
        java.lang.Throwable[] throwableArray77 = jacksonWrapperException75.getSuppressed();
        jacksonWrapperException70.addSuppressed((java.lang.Throwable) jacksonWrapperException75);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException80 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray81 = jacksonWrapperException80.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException82 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException80);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException84 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray85 = jacksonWrapperException84.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException86 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException84);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException87 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException86);
        jacksonWrapperException80.addSuppressed((java.lang.Throwable) jacksonWrapperException86);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException89 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException86);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException90 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException89);
        jacksonWrapperException75.addSuppressed((java.lang.Throwable) jacksonWrapperException90);
        jacksonWrapperException41.addSuppressed((java.lang.Throwable) jacksonWrapperException90);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException93 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException41);
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff15.apply((java.lang.Object) oper38, (java.lang.Object) jacksonWrapperException93);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wrapper25);
        org.junit.Assert.assertNull(wildcardVisitor27);
        org.junit.Assert.assertNotNull(instruction29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + oper33 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper33.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str36, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str37, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertNotNull(throwableArray81);
        org.junit.Assert.assertNotNull(throwableArray85);
    }

    @Test
    public void test07992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07992");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        int int12 = jsonDiff10.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff10.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff10.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject18 = jsonDiff10.diff(jzonElement16, jzonElement17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
    }

    @Test
    public void test07993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07993");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int5 = instruction4.index;
        instruction4.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        java.lang.String str8 = instruction4.key;
        boolean boolean9 = instruction4.isIndexed();
        boolean boolean10 = instruction4.isIndexed();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~" + "'", str8, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test07994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07994");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.Leaf leaf13 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray14 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = jsonDiff12.accept(leaf13, jzonArray14, jzonObject15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test07995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07995");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = wrapper10.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test07996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07996");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int16 = jsonDiff1.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Leaf leaf19 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray20 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject21 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = jsonDiff1.accept(leaf19, jzonArray20, jzonObject21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(instruction18);
    }

    @Test
    public void test07997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07997");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        int int6 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff4.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean16 = instruction15.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        int int20 = jsonDiff18.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff18.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper23 = instruction22.oper;
        instruction15.oper = oper23;
        int int25 = instruction15.index;
        foodev.jsondiff.JsonDiff.Instruction instruction26 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper27 = instruction26.oper;
        instruction26.key = "~";
        int int30 = instruction26.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff32 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper31);
        int int34 = jsonDiff32.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction36 = jsonDiff32.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean37 = instruction36.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff39 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper38);
        int int41 = jsonDiff39.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction43 = jsonDiff39.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper44 = instruction43.oper;
        instruction36.oper = oper44;
        instruction26.oper = oper44;
        instruction15.oper = oper44;
        java.lang.String str48 = instruction15.key;
        foodev.jsondiff.Oper oper49 = instruction15.oper;
        java.lang.Object obj50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj51 = jsonDiff4.diff((java.lang.Object) oper49, obj50);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertTrue("'" + oper23 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper23.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(oper27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(instruction36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(instruction43);
        org.junit.Assert.assertTrue("'" + oper44 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper44.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str48, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + oper49 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper49.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test07998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07998");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int18 = jsonDiff12.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff12.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = jsonDiff12.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wrapper19);
    }

    @Test
    public void test07999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07999");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        int int18 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper21 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement23 = wrapper21.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNotNull(wrapper21);
    }

    @Test
    public void test08000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test08000");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement5 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement5, jzonElement6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
    }
}

