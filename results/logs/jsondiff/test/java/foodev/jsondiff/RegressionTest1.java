package foodev.jsondiff;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test00501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00501");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.Node node10 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.Leaf[] leafArray12 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList13 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList13, leafArray12);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap15 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf16 = jsonDiff3.findLeaves(node10, jzonElement11, (java.util.List<foodev.jsondiff.Leaf>) leafList13, intMap15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(leafArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test00502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00502");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = wrapper10.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test00503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00503");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff10.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff12.create("");
        int int16 = jsonDiff12.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff12.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction20.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        java.lang.String str23 = instruction20.key;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement24 = wrapper8.wrap((java.lang.Object) str23);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str23, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test00504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00504");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException6);
        java.lang.String str8 = jacksonWrapperException7.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str8, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
    }

    @Test
    public void test00505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00505");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException3);
        java.lang.String str7 = jacksonWrapperException6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str7, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
    }

    @Test
    public void test00506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00506");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff7.checkIndex(jzonElement9, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
    }

    @Test
    public void test00507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00507");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper3);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper3);
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff10.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff12.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction19 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper20 = instruction19.oper;
        instruction19.key = "~";
        instruction19.key = "";
        foodev.jsondiff.JsonDiff.Instruction instruction25 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction25.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper28);
        int int31 = jsonDiff29.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction33 = jsonDiff29.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper34 = instruction33.oper;
        instruction25.oper = oper34;
        instruction19.oper = oper34;
        instruction18.oper = oper34;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply((java.lang.Object) wrapper6, (java.lang.Object) instruction18);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertNull(oper20);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(instruction33);
        org.junit.Assert.assertTrue("'" + oper34 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper34.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test00508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00508");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper2);
        java.lang.Class<?> wildcardClass6 = jsonDiff5.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test00509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00509");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject15 = jsonDiff3.diff(jzonElement13, jzonElement14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test00510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00510");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff17.factory;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff19.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.Class<?> wildcardClass22 = instruction21.getClass();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement23 = wrapper15.wrap((java.lang.Object) instruction21);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test00511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00511");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper13);
        int int16 = jsonDiff14.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff14.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean19 = instruction18.isIndexed();
        foodev.jsondiff.Oper oper20 = null;
        instruction18.oper = oper20;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement22 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement12, instruction18, jzonElement22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test00512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00512");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int11 = jsonDiff3.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject14 = jsonDiff3.diff(jzonElement12, jzonElement13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test00513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00513");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.util.logging.Logger logger6 = foodev.jsondiff.JsonDiff.LOG;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff10.create("");
        int int14 = jsonDiff10.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff10.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff10.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction18.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        java.lang.String str21 = instruction18.key;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = jsonDiff1.diff((java.lang.Object) logger6, (java.lang.Object) instruction18);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.logging.Logger cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(logger6);
        org.junit.Assert.assertEquals(logger6.getName(), "foodev.jsondiff.JsonDiff");
        org.junit.Assert.assertNull("logger6.getResourceBundleName() == null", logger6.getResourceBundleName());
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str21, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test00514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00514");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff7.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction9 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper10 = instruction9.oper;
        boolean boolean11 = instruction9.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction17.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper20);
        int int23 = jsonDiff21.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff21.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper26 = instruction25.oper;
        instruction17.oper = oper26;
        instruction16.oper = oper26;
        instruction9.oper = oper26;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException30.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray35 = jacksonWrapperException34.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException38.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException40);
        jacksonWrapperException34.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        jacksonWrapperException30.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff7.apply((java.lang.Object) oper26, (java.lang.Object) jacksonWrapperException30);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNull(oper10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertTrue("'" + oper26 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper26.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray39);
    }

    @Test
    public void test00515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00515");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper14);
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff15.factory;
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper16);
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff17.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor20 = jsonDiff17.getVisitor();
        int int22 = jsonDiff17.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff17.create("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff26 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper25);
        foodev.jsondiff.jsonwrap.Wrapper wrapper27 = jsonDiff26.factory;
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff(wrapper27);
        foodev.jsondiff.JsonDiff.Instruction instruction30 = jsonDiff28.create("");
        boolean boolean31 = instruction30.isIndexed();
        instruction30.index = (short) -1;
        foodev.jsondiff.Oper oper34 = instruction30.oper;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) jsonDiff17, (java.lang.Object) oper34);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertNull(wildcardVisitor20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertNotNull(wrapper27);
        org.junit.Assert.assertNotNull(instruction30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + oper34 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper34.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test00516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00516");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = jsonDiff1.diff("hi!", "hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
    }

    @Test
    public void test00517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00517");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = jsonDiff1.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
    }

    @Test
    public void test00518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00518");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        java.lang.Throwable throwable9 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", throwable9);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = wrapper6.wrap((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
    }

    @Test
    public void test00519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00519");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Leaf leaf13 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray14 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = jsonDiff3.accept(leaf13, jzonArray14, jzonObject15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test00520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00520");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor17 = jsonDiff13.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = jsonDiff3.diff((java.lang.Object) (-1.0f), (java.lang.Object) wildcardVisitor17);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Float cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertNull(wildcardVisitor17);
    }

    @Test
    public void test00521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00521");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.Leaf leaf8 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray9 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = jsonDiff1.accept(leaf8, jzonArray9, jzonObject10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
    }

    @Test
    public void test00522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00522");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper8);
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff11.getVisitor();
        int int14 = jsonDiff11.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = wrapper7.wrap((java.lang.Object) jsonDiff18);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper17);
    }

    @Test
    public void test00523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00523");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement9, jzonElement10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper8);
    }

    @Test
    public void test00524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00524");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff13.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff13.create("");
        instruction16.key = "hi!";
        int int19 = instruction16.index;
        foodev.jsondiff.Oper oper20 = instruction16.oper;
        java.lang.String str21 = instruction16.key;
        instruction16.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException38.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray43 = jacksonWrapperException42.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException44);
        jacksonWrapperException38.addSuppressed((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray50 = jacksonWrapperException49.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException49);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray54 = jacksonWrapperException53.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException55);
        jacksonWrapperException49.addSuppressed((java.lang.Throwable) jacksonWrapperException55);
        jacksonWrapperException48.addSuppressed((java.lang.Throwable) jacksonWrapperException49);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException49);
        jacksonWrapperException31.addSuppressed((java.lang.Throwable) jacksonWrapperException49);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray63 = jacksonWrapperException62.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException62);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray67 = jacksonWrapperException66.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException66);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException68);
        jacksonWrapperException62.addSuppressed((java.lang.Throwable) jacksonWrapperException68);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException71 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException68);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException72 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException68);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException74 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray75 = jacksonWrapperException74.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException76 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException74);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException77 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException76);
        jacksonWrapperException68.addSuppressed((java.lang.Throwable) jacksonWrapperException76);
        jacksonWrapperException49.addSuppressed((java.lang.Throwable) jacksonWrapperException76);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException81 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray82 = jacksonWrapperException81.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException83 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException81);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException85 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray86 = jacksonWrapperException85.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException87 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException85);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException88 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException87);
        jacksonWrapperException81.addSuppressed((java.lang.Throwable) jacksonWrapperException87);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException90 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException81);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException91 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException90);
        jacksonWrapperException49.addSuppressed((java.lang.Throwable) jacksonWrapperException90);
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Object) jacksonWrapperException90);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + oper20 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper20.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(throwableArray86);
    }

    @Test
    public void test00525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00525");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = jsonDiff4.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper5);
    }

    @Test
    public void test00526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00526");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement12, jzonElement13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
    }

    @Test
    public void test00527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00527");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff17.factory;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff19.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff19.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.String str24 = instruction23.key;
        int int25 = instruction23.index;
        instruction23.key = "~";
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj29 = jsonDiff3.diff((java.lang.Object) "~", (java.lang.Object) 1.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str24, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test00528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00528");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff5.apply(jzonElement6, jzonElement7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
    }

    @Test
    public void test00529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00529");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException32.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException34);
        jacksonWrapperException28.addSuppressed((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray42 = jacksonWrapperException41.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException45.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException47);
        jacksonWrapperException41.addSuppressed((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray53 = jacksonWrapperException52.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray57 = jacksonWrapperException56.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException56);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException58);
        jacksonWrapperException52.addSuppressed((java.lang.Throwable) jacksonWrapperException58);
        jacksonWrapperException51.addSuppressed((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException52);
        jacksonWrapperException34.addSuppressed((java.lang.Throwable) jacksonWrapperException52);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray66 = jacksonWrapperException65.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException65.addSuppressed((java.lang.Throwable) jacksonWrapperException67);
        java.lang.Throwable[] throwableArray69 = jacksonWrapperException67.getSuppressed();
        jacksonWrapperException34.addSuppressed((java.lang.Throwable) jacksonWrapperException67);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException71 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj72 = jsonDiff3.diff((java.lang.Object) '4', (java.lang.Object) jacksonWrapperException71);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Character cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(throwableArray69);
    }

    @Test
    public void test00530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00530");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement3 = gsonWrapper0.wrap((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00531");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement11, jzonElement12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test00532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00532");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff5.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff5.create("");
        instruction8.index = ' ';
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = jacksonWrapper0.wrap((java.lang.Object) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Character cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
    }

    @Test
    public void test00533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00533");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff7.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = jsonDiff7.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor8);
    }

    @Test
    public void test00534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00534");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException17);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException17);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException24);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException24);
        java.lang.Class<?> wildcardClass27 = jacksonWrapperException11.getClass();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement28 = wrapper5.wrap((java.lang.Object) wildcardClass27);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Class cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test00535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00535");
        foodev.jsondiff.JsonDiff.Instruction instruction0 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction0.key = "";
        instruction0.index = 'a';
        instruction0.index = 1;
        int int7 = instruction0.index;
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }

    @Test
    public void test00536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00536");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        foodev.jsondiff.Leaf leaf5 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray6 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = jsonDiff1.accept(leaf5, jzonArray6, jzonObject7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
    }

    @Test
    public void test00537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00537");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff16.checkIndex(jzonElement18, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper17);
    }

    @Test
    public void test00538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00538");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = jsonDiff3.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test00539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00539");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int10 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement11, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test00540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00540");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper19);
        foodev.jsondiff.jsonwrap.Wrapper wrapper21 = jsonDiff20.factory;
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff(wrapper21);
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff22.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff22.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int27 = instruction26.index;
        int int28 = instruction26.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper29);
        int int32 = jsonDiff30.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper33 = jsonDiff30.factory;
        int int35 = jsonDiff30.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int37 = jsonDiff30.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff18.apply((java.lang.Object) int28, (java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Integer cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(wrapper21);
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(wrapper33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
    }

    @Test
    public void test00541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00541");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
    }

    @Test
    public void test00542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00542");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper3);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff6.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff6.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction10.index = (short) 100;
        boolean boolean13 = instruction10.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction14 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper15 = instruction14.oper;
        instruction14.key = "~";
        int int18 = instruction14.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper19);
        int int22 = jsonDiff20.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff20.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean25 = instruction24.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper26);
        int int29 = jsonDiff27.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction31 = jsonDiff27.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper32 = instruction31.oper;
        instruction24.oper = oper32;
        instruction14.oper = oper32;
        foodev.jsondiff.Oper oper35 = instruction14.oper;
        instruction10.oper = oper35;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff38 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper37);
        foodev.jsondiff.jsonwrap.Wrapper wrapper39 = jsonDiff38.factory;
        foodev.jsondiff.JsonDiff jsonDiff40 = new foodev.jsondiff.JsonDiff(wrapper39);
        foodev.jsondiff.Visitor<?> wildcardVisitor41 = jsonDiff40.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction43 = jsonDiff40.create("");
        instruction43.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper46 = instruction43.oper;
        instruction10.oper = oper46;
        foodev.jsondiff.Oper oper48 = instruction10.oper;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement49 = gsonWrapper0.wrap((java.lang.Object) instruction10);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(oper15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(instruction31);
        org.junit.Assert.assertTrue("'" + oper32 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper32.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper35 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper35.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper39);
        org.junit.Assert.assertNull(wildcardVisitor41);
        org.junit.Assert.assertNotNull(instruction43);
        org.junit.Assert.assertTrue("'" + oper46 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper46.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper48 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper48.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test00543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00543");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        int int9 = jsonDiff3.isIndexed("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test00544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00544");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper10 = instruction9.oper;
        instruction9.key = "~";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper13);
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff14.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.Visitor<?> wildcardVisitor17 = jsonDiff16.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff16.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff16.factory;
        int int22 = jsonDiff16.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff16.factory;
        int int25 = jsonDiff16.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff16.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper28 = jsonDiff16.factory;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) "~", (java.lang.Object) wrapper28);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(oper10);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNull(wildcardVisitor17);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(wrapper23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertNotNull(wrapper28);
    }

    @Test
    public void test00545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00545");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int11 = jsonDiff3.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper13);
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff14.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff14.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff14.create("~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement12, instruction18, jzonElement19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(instruction18);
    }

    @Test
    public void test00546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00546");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        java.lang.Object obj12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = jsonDiff11.diff(obj12, (java.lang.Object) 100.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Double cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test00547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00547");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject16 = jsonDiff1.diff(jzonElement14, jzonElement15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
    }

    @Test
    public void test00548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00548");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff2.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff2.apply(jzonElement7, jzonElement8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction6);
    }

    @Test
    public void test00549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00549");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper3);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff6.create("");
        foodev.jsondiff.Oper oper9 = instruction8.oper;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = jacksonWrapper0.wrap((java.lang.Object) instruction8);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + oper9 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper9.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test00550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00550");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.Class<?> wildcardClass2 = jacksonWrapperException1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test00551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00551");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper9);
        int int12 = jsonDiff10.isIndexed("hi!");
        int int14 = jsonDiff10.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff10.factory;
        int int17 = jsonDiff10.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff10.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff10.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = wrapper7.wrap((java.lang.Object) wrapper19);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNotNull(wrapper19);
    }

    @Test
    public void test00552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00552");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff13.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff13.create("");
        instruction16.key = "hi!";
        int int19 = instruction16.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        java.lang.Throwable[] throwableArray36 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj39 = jsonDiff1.diff((java.lang.Object) instruction16, (java.lang.Object) jacksonWrapperException37);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray36);
    }

    @Test
    public void test00553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00553");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException16);
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException23.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray35 = jacksonWrapperException34.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException38.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException40);
        jacksonWrapperException34.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        jacksonWrapperException33.addSuppressed((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException34);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray47 = jacksonWrapperException46.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException46);
        jacksonWrapperException34.addSuppressed((java.lang.Throwable) jacksonWrapperException48);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement50 = wrapper8.wrap((java.lang.Object) jacksonWrapperException34);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray47);
    }

    @Test
    public void test00554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00554");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException18);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement21 = gsonWrapper0.wrap((java.lang.Object) jacksonWrapperException11);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray15);
    }

    @Test
    public void test00555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00555");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement5 = gsonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00556");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Leaf leaf8 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray9 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = jsonDiff3.accept(leaf8, jzonArray9, jzonObject10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
    }

    @Test
    public void test00557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00557");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff4.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = wrapper6.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNotNull(wrapper6);
    }

    @Test
    public void test00558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00558");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        java.lang.Class<?> wildcardClass5 = jacksonWrapperException3.getClass();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = gsonWrapper0.wrap((java.lang.Object) jacksonWrapperException3);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test00559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00559");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException16);
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException16);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException10);
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException24);
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply((java.lang.Object) jacksonWrapperException21, (java.lang.Object) jacksonWrapperException25);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray20);
    }

    @Test
    public void test00560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00560");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = wrapper4.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
    }

    @Test
    public void test00561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00561");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        java.lang.Class<?> wildcardClass2 = gsonWrapper0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test00562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00562");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction7 = new foodev.jsondiff.JsonDiff.Instruction();
        java.lang.Class<?> wildcardClass8 = instruction7.getClass();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = wrapper6.wrap((java.lang.Object) instruction7);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test00563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00563");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement3 = jacksonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00564");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement4 = wrapper2.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
    }

    @Test
    public void test00565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00565");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        java.lang.Object obj14 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply(obj14, (java.lang.Object) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Character cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
    }

    @Test
    public void test00566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00566");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = wrapper7.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
    }

    @Test
    public void test00567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00567");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper3);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = jsonDiff5.diff("hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
    }

    @Test
    public void test00568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00568");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException22);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement28 = wrapper7.wrap((java.lang.Object) jacksonWrapperException27);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray21);
    }

    @Test
    public void test00569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00569");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.Leaf leaf10 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray11 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = jsonDiff8.accept(leaf10, jzonArray11, jzonObject12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test00570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00570");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject16 = jsonDiff3.diff(jzonElement14, jzonElement15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
    }

    @Test
    public void test00571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00571");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        foodev.jsondiff.Node node4 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement5 = null;
        java.util.List<foodev.jsondiff.Leaf> leafList6 = null;
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap7 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf8 = jsonDiff1.findLeaves(node4, jzonElement5, leafList6, intMap7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNull(wildcardVisitor3);
    }

    @Test
    public void test00572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00572");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff.Instruction instruction1 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper2 = instruction1.oper;
        instruction1.key = "~";
        instruction1.key = "";
        int int7 = instruction1.index;
        int int8 = instruction1.index;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = gsonWrapper0.wrap((java.lang.Object) instruction1);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(oper2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test00573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00573");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff10.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff10.create("");
        instruction13.key = "hi!";
        int int16 = instruction13.index;
        foodev.jsondiff.Oper oper17 = instruction13.oper;
        java.lang.String str18 = instruction13.key;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff4.applyPartial(jzonElement6, instruction13, jzonElement19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + oper17 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper17.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test00574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00574");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = jsonDiff1.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
    }

    @Test
    public void test00575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00575");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement12, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
    }

    @Test
    public void test00576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00576");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException14);
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException14.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement25 = wrapper8.wrap((java.lang.Object) throwableArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: [Ljava.lang.Throwable; cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray24);
    }

    @Test
    public void test00577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00577");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test00578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00578");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement4 = wrapper2.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
    }

    @Test
    public void test00579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00579");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff3.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = jsonDiff3.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor8);
    }

    @Test
    public void test00580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00580");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = jsonDiff1.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test00581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00581");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int10 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = jsonDiff1.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test00582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00582");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff3.factory;
        foodev.jsondiff.Leaf leaf10 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray11 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = jsonDiff3.accept(leaf10, jzonArray11, jzonObject12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test00583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00583");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Node node11 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.Leaf[] leafArray13 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList14 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList14, leafArray13);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap16 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf17 = jsonDiff3.findLeaves(node11, jzonElement12, (java.util.List<foodev.jsondiff.Leaf>) leafList14, intMap16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(leafArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test00584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00584");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff9.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.String str14 = instruction13.key;
        int int15 = instruction13.index;
        instruction13.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = wrapper5.wrap((java.lang.Object) instruction13);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str14, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test00585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00585");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException21.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException19.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException33.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException35);
        jacksonWrapperException19.addSuppressed((java.lang.Throwable) jacksonWrapperException36);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement38 = wrapper15.wrap((java.lang.Object) jacksonWrapperException19);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray34);
    }

    @Test
    public void test00586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00586");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(wrapper15);
    }

    @Test
    public void test00587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00587");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("hi!");
        instruction8.index = '4';
        instruction8.index = 97;
        java.lang.Class<?> wildcardClass13 = instruction8.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test00588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00588");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException5);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException3);
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException3.getSuppressed();
        java.lang.String str19 = jacksonWrapperException3.toString();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str19, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
    }

    @Test
    public void test00589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00589");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper1);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff4.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff4.getVisitor();
        int int9 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff4.getVisitor();
        int int12 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = gsonWrapper0.wrap((java.lang.Object) int12);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Integer cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test00590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00590");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException17);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException28);
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        jacksonWrapperException21.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException22);
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException32.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff35 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper34);
        int int37 = jsonDiff35.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction39 = jsonDiff35.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction39.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply((java.lang.Object) jacksonWrapperException32, (java.lang.Object) instruction39);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(instruction39);
    }

    @Test
    public void test00591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00591");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement4 = jacksonWrapper0.wrap((java.lang.Object) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00592");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        int int10 = jsonDiff1.isIndexed("");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement11, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test00593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00593");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int10 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = jsonDiff1.diff("hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test00594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00594");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper5);
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff6.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff8.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff8.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff8.factory;
        int int14 = jsonDiff8.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff8.factory;
        int int17 = jsonDiff8.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = gsonWrapper0.wrap((java.lang.Object) int17);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Integer cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test00595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00595");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.Leaf leaf6 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray7 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = jsonDiff5.accept(leaf6, jzonArray7, jzonObject8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
    }

    @Test
    public void test00596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00596");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff17.factory;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        foodev.jsondiff.Visitor<?> wildcardVisitor20 = jsonDiff19.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff19.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff19.factory;
        int int25 = jsonDiff19.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper26 = jsonDiff19.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper27 = jsonDiff19.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff19.create("");
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement30 = wrapper15.wrap((java.lang.Object) "");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNull(wildcardVisitor20);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertNotNull(wrapper23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(wrapper26);
        org.junit.Assert.assertNotNull(wrapper27);
        org.junit.Assert.assertNotNull(instruction29);
    }

    @Test
    public void test00597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00597");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement22 = gsonWrapper0.wrap((java.lang.Object) jacksonWrapperException11);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray18);
    }

    @Test
    public void test00598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00598");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction5.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper8);
        int int11 = jsonDiff9.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper14 = instruction13.oper;
        instruction5.oper = oper14;
        instruction4.oper = oper14;
        boolean boolean17 = instruction4.isIndexed();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + oper14 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper14.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test00599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00599");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper2 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper2);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper2);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = jacksonWrapper0.wrap((java.lang.Object) jsonDiff5);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00600");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException7.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = wrapper6.wrap((java.lang.Object) throwableArray16);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: [Ljava.lang.Throwable; cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
    }

    @Test
    public void test00601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00601");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff10.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff12.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff12.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff12.factory;
        int int18 = jsonDiff12.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff12.factory;
        int int21 = jsonDiff12.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff12.create("~");
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff12.create("");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException31.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException33);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        java.lang.Throwable[] throwableArray37 = jacksonWrapperException33.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException40);
        jacksonWrapperException33.addSuppressed((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException45.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException47);
        jacksonWrapperException43.addSuppressed((java.lang.Throwable) jacksonWrapperException47);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj50 = jsonDiff3.diff((java.lang.Object) instruction25, (java.lang.Object) jacksonWrapperException47);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNull(wildcardVisitor13);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray46);
    }

    @Test
    public void test00602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00602");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper36);
        int int39 = jsonDiff37.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction41 = jsonDiff37.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper42 = jsonDiff37.factory;
        foodev.jsondiff.JsonDiff jsonDiff43 = new foodev.jsondiff.JsonDiff(wrapper42);
        foodev.jsondiff.jsonwrap.Wrapper wrapper44 = jsonDiff43.factory;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply((java.lang.Object) jacksonWrapperException25, (java.lang.Object) jsonDiff43);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(instruction41);
        org.junit.Assert.assertNotNull(wrapper42);
        org.junit.Assert.assertNotNull(wrapper44);
    }

    @Test
    public void test00603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00603");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = null;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper9 = instruction8.oper;
        instruction8.index = (-1);
        java.lang.String str12 = instruction8.key;
        instruction8.key = "~";
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement7, instruction8, jzonElement15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNull(oper9);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test00604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00604");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = jsonDiff1.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test00605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00605");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = jsonDiff3.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
    }

    @Test
    public void test00606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00606");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply(jzonElement6, jzonElement7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
    }

    @Test
    public void test00607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00607");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Leaf leaf11 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray12 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = jsonDiff3.accept(leaf11, jzonArray12, jzonObject13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
    }

    @Test
    public void test00608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00608");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff15.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff15.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction19.index = (short) 100;
        boolean boolean22 = instruction19.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction23 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper24 = instruction23.oper;
        instruction23.key = "~";
        int int27 = instruction23.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper28);
        int int31 = jsonDiff29.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction33 = jsonDiff29.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean34 = instruction33.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff36 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper35);
        int int38 = jsonDiff36.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction40 = jsonDiff36.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper41 = instruction40.oper;
        instruction33.oper = oper41;
        instruction23.oper = oper41;
        foodev.jsondiff.Oper oper44 = instruction23.oper;
        instruction19.oper = oper44;
        instruction19.index = (-1);
        java.lang.String str48 = instruction19.key;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement49 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement11, instruction19, jzonElement49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(oper24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(instruction33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(instruction40);
        org.junit.Assert.assertTrue("'" + oper41 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper41.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper44 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper44.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str48, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test00609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00609");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        foodev.jsondiff.Node node5 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = null;
        foodev.jsondiff.Leaf[] leafArray7 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList8 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList8, leafArray7);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap10 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf11 = jsonDiff1.findLeaves(node5, jzonElement6, (java.util.List<foodev.jsondiff.Leaf>) leafList8, intMap10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(leafArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test00610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00610");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject13 = jsonDiff10.diff(jzonElement11, jzonElement12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test00611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00611");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        foodev.jsondiff.Node node5 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = null;
        foodev.jsondiff.Leaf[] leafArray7 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList8 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList8, leafArray7);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap10 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf11 = jsonDiff1.findLeaves(node5, jzonElement6, (java.util.List<foodev.jsondiff.Leaf>) leafList8, intMap10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(leafArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test00612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00612");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = jsonDiff3.apply("", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNull(wildcardVisitor10);
    }

    @Test
    public void test00613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00613");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement3 = gsonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00614");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = jsonDiff1.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test00615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00615");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject15 = jsonDiff3.diff(jzonElement13, jzonElement14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test00616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00616");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.Node node8 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        foodev.jsondiff.Leaf[] leafArray10 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList11 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList11, leafArray10);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap13 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf14 = jsonDiff1.findLeaves(node8, jzonElement9, (java.util.List<foodev.jsondiff.Leaf>) leafList11, intMap13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(leafArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test00617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00617");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff4.checkIndex(jzonElement6, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper5);
    }

    @Test
    public void test00618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00618");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement9, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
    }

    @Test
    public void test00619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00619");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        foodev.jsondiff.Node node4 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement5 = null;
        foodev.jsondiff.Leaf[] leafArray6 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList7 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList7, leafArray6);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap9 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf10 = jsonDiff1.findLeaves(node4, jzonElement5, (java.util.List<foodev.jsondiff.Leaf>) leafList7, intMap9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertNotNull(leafArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test00620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00620");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper1);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff4.create("");
        boolean boolean7 = instruction6.isIndexed();
        instruction6.index = (short) -1;
        instruction6.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = gsonWrapper0.wrap((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test00621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00621");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.Node node10 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.Leaf[] leafArray12 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList13 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList13, leafArray12);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap15 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf16 = jsonDiff3.findLeaves(node10, jzonElement11, (java.util.List<foodev.jsondiff.Leaf>) leafList13, intMap15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(leafArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test00622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00622");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement10, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction9);
    }

    @Test
    public void test00623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00623");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper3);
        int int7 = jsonDiff5.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        int int14 = jsonDiff12.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff12.create("");
        boolean boolean20 = instruction19.isIndexed();
        instruction19.index = (byte) 100;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement23 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff5.applyPartial(jzonElement10, instruction19, jzonElement23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test00624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00624");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int11 = jsonDiff3.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement12, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test00625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00625");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException24);
        jacksonWrapperException18.addSuppressed((java.lang.Throwable) jacksonWrapperException24);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException24);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) jacksonWrapperException29, (java.lang.Object) jacksonWrapperException31);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray23);
    }

    @Test
    public void test00626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00626");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException1.getSuppressed();
        java.lang.Class<?> wildcardClass4 = throwableArray3.getClass();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test00627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00627");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper1);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.Visitor<?> wildcardVisitor5 = jsonDiff4.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff4.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff10.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff10.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff10.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = jacksonWrapper0.wrap((java.lang.Object) jsonDiff10);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNull(wildcardVisitor5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNull(wildcardVisitor13);
    }

    @Test
    public void test00628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00628");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = wrapper7.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
    }

    @Test
    public void test00629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00629");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = wrapper9.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test00630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00630");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff5.create("");
        int int9 = jsonDiff5.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = jacksonWrapper0.wrap((java.lang.Object) wrapper10);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test00631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00631");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = null;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException17);
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) instruction14, (java.lang.Object) "~");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(instruction14);
    }

    @Test
    public void test00632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00632");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.Node node10 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.Leaf[] leafArray12 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList13 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList13, leafArray12);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap15 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf16 = jsonDiff8.findLeaves(node10, jzonElement11, (java.util.List<foodev.jsondiff.Leaf>) leafList13, intMap15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(leafArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test00633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00633");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
    }

    @Test
    public void test00634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00634");
        foodev.jsondiff.jsonwrap.Wrapper wrapper0 = null;
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff(wrapper0);
        foodev.jsondiff.JsonDiff.Instruction instruction3 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = jsonDiff1.apply("hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(instruction3);
    }

    @Test
    public void test00635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00635");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper8 = instruction7.oper;
        foodev.jsondiff.Oper oper9 = instruction7.oper;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = jsonDiff3.diff((java.lang.Object) oper9, (java.lang.Object) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Byte cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(oper8);
        org.junit.Assert.assertNull(oper9);
    }

    @Test
    public void test00636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00636");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("hi!");
        int int10 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement11, jzonElement12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test00637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00637");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        java.lang.String str24 = jacksonWrapperException17.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~" + "'", str24, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
    }

    @Test
    public void test00638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00638");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff3.getVisitor();
        foodev.jsondiff.Node node12 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        foodev.jsondiff.Leaf[] leafArray14 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList15 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList15, leafArray14);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap17 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf18 = jsonDiff3.findLeaves(node12, jzonElement13, (java.util.List<foodev.jsondiff.Leaf>) leafList15, intMap17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(leafArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test00639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00639");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException2);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = jacksonWrapper0.wrap((java.lang.Object) jacksonWrapperException5);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray3);
    }

    @Test
    public void test00640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00640");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff9.create("");
        instruction12.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper15 = instruction12.oper;
        instruction12.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction12.index = 10;
        boolean boolean20 = instruction12.isIndexed();
        instruction12.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException23.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException36);
        jacksonWrapperException29.addSuppressed((java.lang.Throwable) jacksonWrapperException37);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj39 = jsonDiff3.diff((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Object) jacksonWrapperException37);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + oper15 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper15.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray33);
    }

    @Test
    public void test00641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00641");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = gsonWrapper0.wrap((java.lang.Object) 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Long cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00642");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement3 = jacksonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00643");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction11.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        java.lang.String str14 = instruction11.key;
        boolean boolean15 = instruction11.isIndexed();
        foodev.jsondiff.Oper oper16 = instruction11.oper;
        java.lang.Class<?> wildcardClass17 = instruction11.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str14, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + oper16 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper16.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test00644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00644");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper1);
        int int4 = jsonDiff2.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor5 = jsonDiff2.getVisitor();
        int int7 = jsonDiff2.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff2.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = jacksonWrapper0.wrap((java.lang.Object) instruction10);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction10);
    }

    @Test
    public void test00645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00645");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.Node node11 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.Leaf[] leafArray13 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList14 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList14, leafArray13);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap16 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf17 = jsonDiff10.findLeaves(node11, jzonElement12, (java.util.List<foodev.jsondiff.Leaf>) leafList14, intMap16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(leafArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test00646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00646");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        instruction6.key = "hi!";
        int int9 = instruction6.index;
        foodev.jsondiff.Oper oper10 = instruction6.oper;
        java.lang.String str11 = instruction6.key;
        instruction6.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        boolean boolean14 = instruction6.isIndexed();
        java.lang.Class<?> wildcardClass15 = instruction6.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + oper10 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper10.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test00647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00647");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper15 = instruction14.oper;
        instruction14.index = (-1);
        java.lang.String str18 = instruction14.key;
        boolean boolean19 = instruction14.isIndexed();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement13, instruction14, jzonElement20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNull(oper15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test00648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00648");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = wrapper9.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test00649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00649");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper3);
        int int6 = jsonDiff4.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean9 = instruction8.isIndexed();
        foodev.jsondiff.Oper oper10 = null;
        instruction8.oper = oper10;
        instruction8.index = ' ';
        instruction8.key = "hi!";
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = jacksonWrapper0.wrap((java.lang.Object) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test00650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00650");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement4 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper5);
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff6.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff8.create("");
        int int12 = jsonDiff8.isIndexed("");
        int int14 = jsonDiff8.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff8.create("~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement4, instruction16, jzonElement17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(instruction16);
    }

    @Test
    public void test00651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00651");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray1 = jacksonWrapperException0.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException6);
        jacksonWrapperException0.addSuppressed((java.lang.Throwable) jacksonWrapperException6);
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException0.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException0);
        java.lang.String str11 = jacksonWrapperException0.toString();
        org.junit.Assert.assertNotNull(throwableArray1);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str11, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test00652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00652");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = jsonDiff4.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper5);
    }

    @Test
    public void test00653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00653");
        foodev.jsondiff.jsonwrap.Wrapper wrapper0 = null;
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff(wrapper0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = jsonDiff1.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00654");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement9, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
    }

    @Test
    public void test00655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00655");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = jsonDiff3.diff("~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNotNull(instruction9);
    }

    @Test
    public void test00656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00656");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement4 = jacksonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00657");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper12 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper12);
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper12);
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff15.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = wrapper9.wrap((java.lang.Object) wrapper16);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.gson.GsonWrapper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper16);
    }

    @Test
    public void test00658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00658");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        boolean boolean6 = instruction5.isIndexed();
        instruction5.index = (short) -1;
        int int9 = instruction5.index;
        int int10 = instruction5.index;
        java.lang.String str11 = instruction5.key;
        java.lang.String str12 = instruction5.key;
        instruction5.index = (byte) 0;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test00659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00659");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement5 = gsonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00660");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        int int15 = jsonDiff13.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff13.create("");
        boolean boolean21 = instruction20.isIndexed();
        foodev.jsondiff.Oper oper22 = instruction20.oper;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement23 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement11, instruction20, jzonElement23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + oper22 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper22.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test00661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00661");
        foodev.jsondiff.jsonwrap.Wrapper wrapper0 = null;
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff(wrapper0);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement2 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement3 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject4 = jsonDiff1.diff(jzonElement2, jzonElement3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00662");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff.Instruction instruction1 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper2 = instruction1.oper;
        instruction1.key = "~";
        int int5 = instruction1.index;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = gsonWrapper0.wrap((java.lang.Object) instruction1);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(oper2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test00663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00663");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException22);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException16);
        java.lang.String str27 = jacksonWrapperException16.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str27, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test00664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00664");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = gsonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: ~");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00665");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException22);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException16);
        java.lang.String str27 = jacksonWrapperException15.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str27, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test00666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00666");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction12 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper13 = instruction12.oper;
        instruction12.key = "~";
        java.lang.String str16 = instruction12.key;
        instruction12.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper19);
        foodev.jsondiff.jsonwrap.Wrapper wrapper21 = jsonDiff20.factory;
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff(wrapper21);
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff(wrapper21);
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff(wrapper21);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj25 = jsonDiff1.diff((java.lang.Object) instruction12, (java.lang.Object) wrapper21);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNull(oper13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "~" + "'", str16, "~");
        org.junit.Assert.assertNotNull(wrapper21);
    }

    @Test
    public void test00667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00667");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int7 = jsonDiff1.isIndexed("");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject10 = jsonDiff1.diff(jzonElement8, jzonElement9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test00668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00668");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        java.lang.Class<?> wildcardClass12 = instruction11.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test00669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00669");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff10.create("");
        int int14 = jsonDiff10.isIndexed("");
        int int16 = jsonDiff10.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff10.create("~");
        java.lang.Object obj19 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) jsonDiff10, obj19);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(instruction18);
    }

    @Test
    public void test00670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00670");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff15.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff15.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff15.factory;
        int int21 = jsonDiff15.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff15.factory;
        int int24 = jsonDiff15.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff15.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper27 = jsonDiff15.factory;
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff(wrapper27);
        foodev.jsondiff.jsonwrap.Wrapper wrapper29 = jsonDiff28.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff31 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper30);
        foodev.jsondiff.jsonwrap.Wrapper wrapper32 = jsonDiff31.factory;
        foodev.jsondiff.JsonDiff jsonDiff33 = new foodev.jsondiff.JsonDiff(wrapper32);
        foodev.jsondiff.JsonDiff.Instruction instruction35 = jsonDiff33.create("");
        boolean boolean36 = instruction35.isIndexed();
        instruction35.key = "~";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff40 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper39);
        foodev.jsondiff.jsonwrap.Wrapper wrapper41 = jsonDiff40.factory;
        foodev.jsondiff.JsonDiff jsonDiff42 = new foodev.jsondiff.JsonDiff(wrapper41);
        foodev.jsondiff.JsonDiff.Instruction instruction44 = jsonDiff42.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction46 = jsonDiff42.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction46.index = (short) 100;
        boolean boolean49 = instruction46.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction50 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper51 = instruction50.oper;
        instruction50.key = "~";
        int int54 = instruction50.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff56 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper55);
        int int58 = jsonDiff56.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction60 = jsonDiff56.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean61 = instruction60.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff63 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper62);
        int int65 = jsonDiff63.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction67 = jsonDiff63.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper68 = instruction67.oper;
        instruction60.oper = oper68;
        instruction50.oper = oper68;
        foodev.jsondiff.Oper oper71 = instruction50.oper;
        instruction46.oper = oper71;
        instruction35.oper = oper71;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj74 = jsonDiff3.diff((java.lang.Object) jsonDiff28, (java.lang.Object) instruction35);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertNotNull(wrapper27);
        org.junit.Assert.assertNotNull(wrapper29);
        org.junit.Assert.assertNotNull(wrapper32);
        org.junit.Assert.assertNotNull(instruction35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wrapper41);
        org.junit.Assert.assertNotNull(instruction44);
        org.junit.Assert.assertNotNull(instruction46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(oper51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(instruction60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(instruction67);
        org.junit.Assert.assertTrue("'" + oper68 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper68.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper71 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper71.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test00671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00671");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement12, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(wildcardVisitor11);
    }

    @Test
    public void test00672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00672");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        int int10 = jsonDiff1.isIndexed("");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply(jzonElement11, jzonElement12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test00673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00673");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject9 = jsonDiff3.diff(jzonElement7, jzonElement8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test00674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00674");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Node node15 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        foodev.jsondiff.Leaf[] leafArray17 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList18 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList18, leafArray17);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap20 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf21 = jsonDiff12.findLeaves(node15, jzonElement16, (java.util.List<foodev.jsondiff.Leaf>) leafList18, intMap20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(leafArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test00675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00675");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper3);
        int int6 = jsonDiff4.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff4.getVisitor();
        int int9 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff4.create("");
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = jacksonWrapper0.wrap((java.lang.Object) jsonDiff4);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
    }

    @Test
    public void test00676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00676");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        int int11 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement12, 97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test00677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00677");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException18);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException18.getSuppressed();
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException18);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement24 = wrapper7.wrap((java.lang.Object) jacksonWrapperException10);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray22);
    }

    @Test
    public void test00678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00678");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray1 = jacksonWrapperException0.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException6);
        jacksonWrapperException0.addSuppressed((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        java.lang.Class<?> wildcardClass13 = jacksonWrapperException6.getClass();
        org.junit.Assert.assertNotNull(throwableArray1);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test00679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00679");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement3 = gsonWrapper0.wrap((java.lang.Object) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Long cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00680");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.JsonDiff.Instruction instruction11 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper12 = instruction11.oper;
        instruction11.key = "~";
        instruction11.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff20.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff20.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction24.index = (short) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper27);
        foodev.jsondiff.jsonwrap.Wrapper wrapper29 = jsonDiff28.factory;
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff(wrapper29);
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff30.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction34 = jsonDiff30.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction34.index = (short) 100;
        boolean boolean37 = instruction34.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction38 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper39 = instruction38.oper;
        instruction38.key = "~";
        int int42 = instruction38.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff44 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper43);
        int int46 = jsonDiff44.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction48 = jsonDiff44.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean49 = instruction48.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff51 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper50);
        int int53 = jsonDiff51.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction55 = jsonDiff51.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper56 = instruction55.oper;
        instruction48.oper = oper56;
        instruction38.oper = oper56;
        foodev.jsondiff.Oper oper59 = instruction38.oper;
        instruction34.oper = oper59;
        instruction24.oper = oper59;
        instruction11.oper = oper59;
        instruction11.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        foodev.jsondiff.jsonwrap.JzonElement jzonElement65 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement10, instruction11, jzonElement65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNull(oper12);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertNotNull(wrapper29);
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertNotNull(instruction34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(oper39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(instruction48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(instruction55);
        org.junit.Assert.assertTrue("'" + oper56 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper56.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper59 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper59.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test00681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00681");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException16);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        java.lang.String str21 = jacksonWrapperException19.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str21, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test00682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00682");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement7, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test00683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00683");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.Node node10 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.Leaf[] leafArray12 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList13 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList13, leafArray12);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap15 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf16 = jsonDiff1.findLeaves(node10, jzonElement11, (java.util.List<foodev.jsondiff.Leaf>) leafList13, intMap15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(leafArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test00684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00684");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff15.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff15.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff15.factory;
        int int21 = jsonDiff15.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff15.factory;
        int int24 = jsonDiff15.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff26 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper25);
        foodev.jsondiff.jsonwrap.Wrapper wrapper27 = jsonDiff26.factory;
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff(wrapper27);
        foodev.jsondiff.JsonDiff.Instruction instruction30 = jsonDiff28.create("");
        int int32 = jsonDiff28.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction34 = jsonDiff28.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction36 = jsonDiff28.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction38 = jsonDiff28.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj39 = jsonDiff11.diff((java.lang.Object) jsonDiff15, (java.lang.Object) jsonDiff28);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(wrapper27);
        org.junit.Assert.assertNotNull(instruction30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(instruction34);
        org.junit.Assert.assertNotNull(instruction36);
        org.junit.Assert.assertNotNull(instruction38);
    }

    @Test
    public void test00685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00685");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = jsonDiff7.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
    }

    @Test
    public void test00686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00686");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException16);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        java.lang.String str21 = jacksonWrapperException20.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str21, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test00687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00687");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement12, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test00688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00688");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.JsonDiff.Instruction instruction12 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper13 = instruction12.oper;
        instruction12.key = "~";
        instruction12.key = "";
        foodev.jsondiff.JsonDiff.Instruction instruction18 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction18.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper21);
        int int24 = jsonDiff22.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff22.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper27 = instruction26.oper;
        instruction18.oper = oper27;
        instruction12.oper = oper27;
        boolean boolean30 = instruction12.isIndexed();
        instruction12.index = ' ';
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = jsonDiff3.diff((java.lang.Object) throwableArray11, (java.lang.Object) instruction12);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: [Ljava.lang.Throwable; cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNull(oper13);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertTrue("'" + oper27 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper27.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test00689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00689");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff14.create("");
        boolean boolean17 = instruction16.isIndexed();
        instruction16.index = (byte) 10;
        boolean boolean20 = instruction16.isIndexed();
        instruction16.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        foodev.jsondiff.jsonwrap.JzonElement jzonElement23 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement10, instruction16, jzonElement23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test00690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00690");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff10.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper14);
        int int17 = jsonDiff15.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff15.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper20 = instruction19.oper;
        int int21 = instruction19.index;
        java.lang.String str22 = instruction19.key;
        int int23 = instruction19.index;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement24 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff10.applyPartial(jzonElement13, instruction19, jzonElement24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertTrue("'" + oper20 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper20.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str22, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test00691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00691");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        java.lang.String str3 = jacksonWrapperException1.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str3, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
    }

    @Test
    public void test00692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00692");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper1);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.Visitor<?> wildcardVisitor5 = jsonDiff4.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff4.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff4.factory;
        int int10 = jsonDiff4.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff4.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = jacksonWrapper0.wrap((java.lang.Object) wrapper11);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNull(wildcardVisitor5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
    }

    @Test
    public void test00693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00693");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        java.lang.Object obj5 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply((java.lang.Object) 1L, obj5);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Long cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
    }

    @Test
    public void test00694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00694");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper9);
        int int12 = jsonDiff10.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff10.factory;
        int int15 = jsonDiff10.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff10.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff10.factory;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = wrapper7.wrap((java.lang.Object) jsonDiff19);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNotNull(wrapper18);
    }

    @Test
    public void test00695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00695");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper3);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff6.getVisitor();
        int int9 = jsonDiff6.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff6.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper12);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = jacksonWrapper0.wrap((java.lang.Object) jsonDiff14);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test00696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00696");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff15.create("");
        boolean boolean18 = instruction17.isIndexed();
        instruction17.index = 97;
        int int21 = instruction17.index;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement22 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement11, instruction17, jzonElement22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 97 + "'", int21 == 97);
    }

    @Test
    public void test00697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00697");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.JsonDiff.Instruction instruction13 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff11.applyPartial(jzonElement12, instruction13, jzonElement14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test00698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00698");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff26 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper25);
        foodev.jsondiff.jsonwrap.Wrapper wrapper27 = jsonDiff26.factory;
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff(wrapper27);
        foodev.jsondiff.JsonDiff.Instruction instruction30 = jsonDiff28.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff28.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction32.index = (short) 100;
        boolean boolean35 = instruction32.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction36 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper37 = instruction36.oper;
        instruction36.key = "~";
        int int40 = instruction36.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff42 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper41);
        int int44 = jsonDiff42.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction46 = jsonDiff42.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean47 = instruction46.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff49 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper48);
        int int51 = jsonDiff49.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction53 = jsonDiff49.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper54 = instruction53.oper;
        instruction46.oper = oper54;
        instruction36.oper = oper54;
        foodev.jsondiff.Oper oper57 = instruction36.oper;
        instruction32.oper = oper57;
        instruction32.index = (-1);
        java.lang.String str61 = instruction32.key;
        instruction32.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj64 = jsonDiff3.diff((java.lang.Object) jacksonWrapperException24, (java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(wrapper27);
        org.junit.Assert.assertNotNull(instruction30);
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(oper37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(instruction46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(instruction53);
        org.junit.Assert.assertTrue("'" + oper54 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper54.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper57 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper57.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str61, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test00699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00699");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper13 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException22);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException33.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException35);
        jacksonWrapperException29.addSuppressed((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray41 = jacksonWrapperException40.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray45 = jacksonWrapperException44.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException46);
        jacksonWrapperException40.addSuppressed((java.lang.Throwable) jacksonWrapperException46);
        jacksonWrapperException39.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException40);
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj52 = jsonDiff3.diff((java.lang.Object) jsonDiff14, (java.lang.Object) jacksonWrapperException40);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray45);
    }

    @Test
    public void test00700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00700");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException6);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException24.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException26);
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException33.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray38 = jacksonWrapperException37.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException39);
        jacksonWrapperException33.addSuppressed((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray45 = jacksonWrapperException44.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray49 = jacksonWrapperException48.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException50);
        jacksonWrapperException44.addSuppressed((java.lang.Throwable) jacksonWrapperException50);
        jacksonWrapperException43.addSuppressed((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException44);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException44);
        jacksonWrapperException18.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray58 = jacksonWrapperException57.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException57.addSuppressed((java.lang.Throwable) jacksonWrapperException59);
        java.lang.Throwable[] throwableArray61 = jacksonWrapperException59.getSuppressed();
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException59);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException63);
        java.lang.String str65 = jacksonWrapperException63.toString();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str65, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test00701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00701");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper5);
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff6.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff6.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = wrapper4.wrap((java.lang.Object) jsonDiff6);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper8);
    }

    @Test
    public void test00702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00702");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = jsonDiff4.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
    }

    @Test
    public void test00703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00703");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement3 = gsonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00704");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject8 = jsonDiff1.diff(jzonElement6, jzonElement7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertNotNull(instruction5);
    }

    @Test
    public void test00705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00705");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException17);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException17);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException24);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException24);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement27 = gsonWrapper0.wrap((java.lang.Object) jacksonWrapperException24);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray21);
    }

    @Test
    public void test00706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00706");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = jsonDiff1.apply("~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test00707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00707");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = gsonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00708");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement2 = gsonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00709");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = jsonDiff3.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
    }

    @Test
    public void test00710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00710");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException31.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray36 = jacksonWrapperException35.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException37);
        jacksonWrapperException31.addSuppressed((java.lang.Throwable) jacksonWrapperException37);
        jacksonWrapperException29.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        java.lang.String str43 = jacksonWrapperException29.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str43, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test00711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00711");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        foodev.jsondiff.Node node10 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.Leaf[] leafArray12 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList13 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList13, leafArray12);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap15 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf16 = jsonDiff3.findLeaves(node10, jzonElement11, (java.util.List<foodev.jsondiff.Leaf>) leafList13, intMap15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(leafArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test00712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00712");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray1 = jacksonWrapperException0.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException6);
        jacksonWrapperException0.addSuppressed((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        java.lang.Throwable throwable10 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException(throwable10);
        // The following exception was thrown during execution in test generation
        try {
            jacksonWrapperException6.addSuppressed(throwable10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray1);
        org.junit.Assert.assertNotNull(throwableArray5);
    }

    @Test
    public void test00713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00713");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException5.getSuppressed();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException5.getSuppressed();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException5.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = jacksonWrapper0.wrap((java.lang.Object) throwableArray19);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: [Ljava.lang.Throwable; cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray19);
    }

    @Test
    public void test00714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00714");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = jsonDiff1.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
    }

    @Test
    public void test00715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00715");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException24.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException26);
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement33 = gsonWrapper0.wrap((java.lang.Object) jacksonWrapperException31);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray25);
    }

    @Test
    public void test00716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00716");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException16);
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException16.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = gsonWrapper0.wrap((java.lang.Object) throwableArray18);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: [Ljava.lang.Throwable; cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray18);
    }

    @Test
    public void test00717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00717");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper9);
        int int12 = jsonDiff10.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff10.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff10.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff10.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper18);
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff19.factory;
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff(wrapper20);
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff21.create("");
        int int25 = jsonDiff21.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff21.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int29 = jsonDiff21.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper30 = jsonDiff21.factory;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) jsonDiff10, (java.lang.Object) jsonDiff21);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(wrapper30);
    }

    @Test
    public void test00718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00718");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: hi!");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(wrapper5);
    }

    @Test
    public void test00719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00719");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper3);
        int int7 = jsonDiff5.isIndexed("");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff15.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff15.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction19.index = (short) 100;
        boolean boolean22 = instruction19.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction23 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper24 = instruction23.oper;
        instruction23.key = "~";
        int int27 = instruction23.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper28);
        int int31 = jsonDiff29.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction33 = jsonDiff29.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean34 = instruction33.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff36 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper35);
        int int38 = jsonDiff36.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction40 = jsonDiff36.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper41 = instruction40.oper;
        instruction33.oper = oper41;
        instruction23.oper = oper41;
        foodev.jsondiff.Oper oper44 = instruction23.oper;
        instruction19.oper = oper44;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff47 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper46);
        foodev.jsondiff.jsonwrap.Wrapper wrapper48 = jsonDiff47.factory;
        foodev.jsondiff.JsonDiff jsonDiff49 = new foodev.jsondiff.JsonDiff(wrapper48);
        foodev.jsondiff.Visitor<?> wildcardVisitor50 = jsonDiff49.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction52 = jsonDiff49.create("");
        instruction52.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper55 = instruction52.oper;
        instruction19.oper = oper55;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff5.apply((java.lang.Object) "", (java.lang.Object) instruction19);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(oper24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(instruction33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(instruction40);
        org.junit.Assert.assertTrue("'" + oper41 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper41.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper44 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper44.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper48);
        org.junit.Assert.assertNull(wildcardVisitor50);
        org.junit.Assert.assertNotNull(instruction52);
        org.junit.Assert.assertTrue("'" + oper55 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper55.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test00720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00720");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException9);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = jacksonWrapper0.wrap((java.lang.Object) jacksonWrapperException3);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
    }

    @Test
    public void test00721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00721");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = gsonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: ");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00722");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper16 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper16);
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper16);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = jsonDiff3.diff((java.lang.Object) "hi!", (java.lang.Object) gsonWrapper16);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(throwableArray12);
    }

    @Test
    public void test00723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00723");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement3 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement3, 32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
    }

    @Test
    public void test00724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00724");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Leaf leaf9 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray10 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = jsonDiff1.accept(leaf9, jzonArray10, jzonObject11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test00725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00725");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = gsonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00726");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException26);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement31 = wrapper9.wrap((java.lang.Object) jacksonWrapperException30);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray22);
    }

    @Test
    public void test00727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00727");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement7, 32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test00728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00728");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject11 = jsonDiff3.diff(jzonElement9, jzonElement10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test00729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00729");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = jsonDiff8.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
    }

    @Test
    public void test00730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00730");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction9 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper10 = instruction9.oper;
        instruction9.key = "~";
        instruction9.key = "";
        foodev.jsondiff.JsonDiff.Instruction instruction15 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction15.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper18);
        int int21 = jsonDiff19.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff19.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper24 = instruction23.oper;
        instruction15.oper = oper24;
        instruction9.oper = oper24;
        boolean boolean27 = instruction9.isIndexed();
        instruction9.index = ' ';
        int int30 = instruction9.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff32 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper31);
        foodev.jsondiff.jsonwrap.Wrapper wrapper33 = jsonDiff32.factory;
        foodev.jsondiff.JsonDiff jsonDiff34 = new foodev.jsondiff.JsonDiff(wrapper33);
        foodev.jsondiff.Visitor<?> wildcardVisitor35 = jsonDiff34.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction37 = jsonDiff34.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper38 = jsonDiff34.factory;
        int int40 = jsonDiff34.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper41 = jsonDiff34.factory;
        int int43 = jsonDiff34.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction45 = jsonDiff34.create("~");
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff7.apply((java.lang.Object) instruction9, (java.lang.Object) jsonDiff34);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(oper10);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertTrue("'" + oper24 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper24.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 32 + "'", int30 == 32);
        org.junit.Assert.assertNotNull(wrapper33);
        org.junit.Assert.assertNull(wildcardVisitor35);
        org.junit.Assert.assertNotNull(instruction37);
        org.junit.Assert.assertNotNull(wrapper38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(wrapper41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(instruction45);
    }

    @Test
    public void test00731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00731");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff10.getVisitor();
        int int13 = jsonDiff10.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff10.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff10.create("");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement6, instruction16, jzonElement17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction16);
    }

    @Test
    public void test00732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00732");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int10 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = jsonDiff1.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
    }

    @Test
    public void test00733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00733");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject19 = jsonDiff3.diff(jzonElement17, jzonElement18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
    }

    @Test
    public void test00734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00734");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff.Instruction instruction3 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper4 = instruction3.oper;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement5 = jacksonWrapper0.wrap((java.lang.Object) instruction3);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(oper4);
    }

    @Test
    public void test00735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00735");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper8);
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff11.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction13.key = "hi!";
        foodev.jsondiff.Oper oper16 = instruction13.oper;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement7, instruction13, jzonElement17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + oper16 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper16.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test00736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00736");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.Leaf leaf12 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray13 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = jsonDiff11.accept(leaf12, jzonArray13, jzonObject14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test00737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00737");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException9);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException16);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException19.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement26 = jacksonWrapper0.wrap((java.lang.Object) jacksonWrapperException19);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray22);
    }

    @Test
    public void test00738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00738");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff15.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff15.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff15.factory;
        int int21 = jsonDiff15.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff15.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff15.factory;
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff(wrapper23);
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper27 = instruction26.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper28);
        int int31 = jsonDiff29.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction33 = jsonDiff29.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean34 = instruction33.isIndexed();
        int int35 = instruction33.index;
        int int36 = instruction33.index;
        foodev.jsondiff.Oper oper37 = instruction33.oper;
        int int38 = instruction33.index;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj39 = jsonDiff1.diff((java.lang.Object) instruction26, (java.lang.Object) instruction33);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertNotNull(wrapper23);
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertTrue("'" + oper27 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper27.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(instruction33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + oper37 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper37.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
    }

    @Test
    public void test00739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00739");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement7, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
    }

    @Test
    public void test00740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00740");
        foodev.jsondiff.jsonwrap.Wrapper wrapper0 = null;
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff(wrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement4 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement5 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply(jzonElement4, jzonElement5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
    }

    @Test
    public void test00741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00741");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = jsonDiff9.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
    }

    @Test
    public void test00742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00742");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff9.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = wrapper5.wrap((java.lang.Object) jsonDiff14);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertNotNull(wrapper13);
    }

    @Test
    public void test00743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00743");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.Node node10 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.Leaf[] leafArray12 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList13 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList13, leafArray12);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap15 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf16 = jsonDiff9.findLeaves(node10, jzonElement11, (java.util.List<foodev.jsondiff.Leaf>) leafList13, intMap15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(leafArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test00744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00744");
        foodev.jsondiff.jsonwrap.Wrapper wrapper0 = null;
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff(wrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Leaf leaf3 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray4 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject5 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = jsonDiff1.accept(leaf3, jzonArray4, jzonObject5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wrapper2);
    }

    @Test
    public void test00745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00745");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper5);
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff6.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff8.create("");
        boolean boolean11 = instruction10.isIndexed();
        instruction10.index = (short) -1;
        int int14 = instruction10.index;
        int int15 = instruction10.index;
        foodev.jsondiff.JsonDiff.Instruction instruction16 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper17 = instruction16.oper;
        instruction16.key = "~";
        instruction16.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper22);
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = jsonDiff23.factory;
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff(wrapper24);
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff25.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff25.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction29.index = (short) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff33 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper32);
        foodev.jsondiff.jsonwrap.Wrapper wrapper34 = jsonDiff33.factory;
        foodev.jsondiff.JsonDiff jsonDiff35 = new foodev.jsondiff.JsonDiff(wrapper34);
        foodev.jsondiff.JsonDiff.Instruction instruction37 = jsonDiff35.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction39 = jsonDiff35.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction39.index = (short) 100;
        boolean boolean42 = instruction39.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction43 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper44 = instruction43.oper;
        instruction43.key = "~";
        int int47 = instruction43.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff49 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper48);
        int int51 = jsonDiff49.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction53 = jsonDiff49.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean54 = instruction53.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff56 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper55);
        int int58 = jsonDiff56.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction60 = jsonDiff56.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper61 = instruction60.oper;
        instruction53.oper = oper61;
        instruction43.oper = oper61;
        foodev.jsondiff.Oper oper64 = instruction43.oper;
        instruction39.oper = oper64;
        instruction29.oper = oper64;
        instruction16.oper = oper64;
        instruction10.oper = oper64;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff70 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper69);
        foodev.jsondiff.JsonDiff jsonDiff71 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper69);
        foodev.jsondiff.jsonwrap.Wrapper wrapper72 = jsonDiff71.factory;
        foodev.jsondiff.JsonDiff jsonDiff73 = new foodev.jsondiff.JsonDiff(wrapper72);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj74 = jsonDiff4.diff((java.lang.Object) oper64, (java.lang.Object) wrapper72);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(oper17);
        org.junit.Assert.assertNotNull(wrapper24);
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertNotNull(instruction29);
        org.junit.Assert.assertNotNull(wrapper34);
        org.junit.Assert.assertNotNull(instruction37);
        org.junit.Assert.assertNotNull(instruction39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(oper44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(instruction53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(instruction60);
        org.junit.Assert.assertTrue("'" + oper61 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper61.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper64 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper64.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper72);
    }

    @Test
    public void test00746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00746");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff12.apply(jzonElement13, jzonElement14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
    }

    @Test
    public void test00747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00747");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException17);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = jsonDiff3.diff((java.lang.Object) jacksonWrapperException14, (java.lang.Object) jacksonWrapperException18);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(throwableArray13);
    }

    @Test
    public void test00748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00748");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction8.index = 100;
        java.lang.Class<?> wildcardClass11 = instruction8.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test00749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00749");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff5.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff5.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff5.factory;
        int int11 = jsonDiff5.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff5.factory;
        int int14 = jsonDiff5.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff5.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff5.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff5.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = jacksonWrapper0.wrap((java.lang.Object) jsonDiff5);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(wrapper18);
    }

    @Test
    public void test00750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00750");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.Leaf leaf15 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray16 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = jsonDiff3.accept(leaf15, jzonArray16, jzonObject17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
    }

    @Test
    public void test00751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00751");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = jsonDiff4.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper5);
    }

    @Test
    public void test00752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00752");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper1);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff4.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction8.index = (short) 100;
        boolean boolean11 = instruction8.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff15.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction17.key = "hi!";
        foodev.jsondiff.Oper oper20 = instruction17.oper;
        instruction8.oper = oper20;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement22 = jacksonWrapper0.wrap((java.lang.Object) oper20);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + oper20 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper20.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test00753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00753");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff9.factory;
        java.lang.Class<?> wildcardClass12 = wrapper11.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test00754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00754");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = jsonDiff3.apply("hi!", "");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
    }

    @Test
    public void test00755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00755");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException28);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException33.getSuppressed();
        java.lang.Class<?> wildcardClass35 = jacksonWrapperException33.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj36 = jsonDiff9.diff((java.lang.Object) jacksonWrapperException28, (java.lang.Object) wildcardClass35);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test00756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00756");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff32 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper31);
        int int34 = jsonDiff32.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction36 = jsonDiff32.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean37 = instruction36.isIndexed();
        int int38 = instruction36.index;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj39 = jsonDiff8.diff((java.lang.Object) throwableArray30, (java.lang.Object) instruction36);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: [Ljava.lang.Throwable; cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(instruction36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
    }

    @Test
    public void test00757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00757");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        int int11 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement12, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test00758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00758");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException24);
        jacksonWrapperException18.addSuppressed((java.lang.Throwable) jacksonWrapperException24);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException18);
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException18);
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement32 = gsonWrapper0.wrap((java.lang.Object) jacksonWrapperException11);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray30);
    }

    @Test
    public void test00759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00759");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper1);
        int int4 = jsonDiff2.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff2.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff2.create("");
        boolean boolean10 = instruction9.isIndexed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = gsonWrapper0.wrap((java.lang.Object) instruction9);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test00760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00760");
        foodev.jsondiff.jsonwrap.Wrapper wrapper0 = null;
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff(wrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        int int4 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement5 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        int int12 = jsonDiff9.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement5, instruction14, jzonElement15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wrapper2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
    }

    @Test
    public void test00761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00761");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper13);
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff14.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff16.create("");
        boolean boolean19 = instruction18.isIndexed();
        instruction18.index = (short) -1;
        instruction18.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction18.key = "hi!";
        foodev.jsondiff.Oper oper26 = instruction18.oper;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement27 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement12, instruction18, jzonElement27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + oper26 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper26.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test00762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00762");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper1);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff4.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff4.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff4.create("hi!");
        instruction9.index = '4';
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = gsonWrapper0.wrap((java.lang.Object) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Character cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(instruction9);
    }

    @Test
    public void test00763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00763");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException9);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException3);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException3);
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException3.getSuppressed();
        java.lang.String str15 = jacksonWrapperException3.toString();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str15, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test00764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00764");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = gsonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00765");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        int int13 = jsonDiff11.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff11.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction15.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction15.index = (short) 0;
        foodev.jsondiff.JsonDiff.Instruction instruction20 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction20.key = "";
        instruction20.index = 'a';
        int int25 = instruction20.index;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff9.apply((java.lang.Object) (short) 0, (java.lang.Object) instruction20);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Short cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 97 + "'", int25 == 97);
    }

    @Test
    public void test00766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00766");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        foodev.jsondiff.Leaf leaf8 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray9 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = jsonDiff3.accept(leaf8, jzonArray9, jzonObject10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
    }

    @Test
    public void test00767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00767");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException16);
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException33.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException35);
        jacksonWrapperException29.addSuppressed((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray43 = jacksonWrapperException42.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray47 = jacksonWrapperException46.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException48);
        jacksonWrapperException42.addSuppressed((java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray54 = jacksonWrapperException53.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray58 = jacksonWrapperException57.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException59);
        jacksonWrapperException53.addSuppressed((java.lang.Throwable) jacksonWrapperException59);
        jacksonWrapperException52.addSuppressed((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException53);
        jacksonWrapperException35.addSuppressed((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException53);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException53);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement67 = wrapper8.wrap((java.lang.Object) jacksonWrapperException53);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray58);
    }

    @Test
    public void test00768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00768");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper4);
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff8.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff8.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = gsonWrapper0.wrap((java.lang.Object) jsonDiff8);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(wildcardVisitor11);
    }

    @Test
    public void test00769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00769");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff10.apply(jzonElement11, jzonElement12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test00770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00770");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement5 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply(jzonElement5, jzonElement6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
    }

    @Test
    public void test00771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00771");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff11.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction14.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        foodev.jsondiff.JsonDiff.Instruction instruction17 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction17.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper20);
        int int23 = jsonDiff21.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff21.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper26 = instruction25.oper;
        instruction17.oper = oper26;
        instruction14.oper = oper26;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement29 = wrapper8.wrap((java.lang.Object) instruction14);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertTrue("'" + oper26 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper26.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test00772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00772");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff9.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff9.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = jsonDiff9.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNull(wildcardVisitor12);
    }

    @Test
    public void test00773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00773");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        int int10 = jsonDiff8.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper13 = instruction12.oper;
        int int14 = instruction12.index;
        java.lang.String str15 = instruction12.key;
        int int16 = instruction12.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.Visitor<?> wildcardVisitor21 = jsonDiff20.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff20.create("");
        instruction23.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper26 = instruction23.oper;
        instruction23.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        boolean boolean29 = instruction23.isIndexed();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj30 = jsonDiff3.diff((java.lang.Object) instruction12, (java.lang.Object) boolean29);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + oper13 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper13.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str15, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNull(wildcardVisitor21);
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertTrue("'" + oper26 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper26.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test00774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00774");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement4 = jacksonWrapper0.wrap((java.lang.Object) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Integer cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00775");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("hi!");
        int int10 = jsonDiff3.isIndexed("");
        foodev.jsondiff.Leaf leaf11 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray12 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = jsonDiff3.accept(leaf11, jzonArray12, jzonObject13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test00776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00776");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = wrapper10.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test00777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00777");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException10);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException32.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException34);
        jacksonWrapperException28.addSuppressed((java.lang.Throwable) jacksonWrapperException34);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException28);
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray42 = jacksonWrapperException41.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException45.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException47);
        jacksonWrapperException41.addSuppressed((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray54 = jacksonWrapperException53.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException55);
        jacksonWrapperException47.addSuppressed((java.lang.Throwable) jacksonWrapperException55);
        jacksonWrapperException28.addSuppressed((java.lang.Throwable) jacksonWrapperException55);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff60 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper59);
        foodev.jsondiff.jsonwrap.Wrapper wrapper61 = jsonDiff60.factory;
        foodev.jsondiff.JsonDiff jsonDiff62 = new foodev.jsondiff.JsonDiff(wrapper61);
        foodev.jsondiff.JsonDiff.Instruction instruction64 = jsonDiff62.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor65 = jsonDiff62.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction67 = jsonDiff62.create("hi!");
        instruction67.index = '4';
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj70 = jsonDiff1.diff((java.lang.Object) jacksonWrapperException55, (java.lang.Object) instruction67);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(wrapper61);
        org.junit.Assert.assertNotNull(instruction64);
        org.junit.Assert.assertNull(wildcardVisitor65);
        org.junit.Assert.assertNotNull(instruction67);
    }

    @Test
    public void test00778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00778");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff.Instruction instruction1 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper2 = instruction1.oper;
        instruction1.key = "~";
        instruction1.key = "";
        foodev.jsondiff.JsonDiff.Instruction instruction7 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction7.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        int int13 = jsonDiff11.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff11.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper16 = instruction15.oper;
        instruction7.oper = oper16;
        instruction1.oper = oper16;
        boolean boolean19 = instruction1.isIndexed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = gsonWrapper0.wrap((java.lang.Object) boolean19);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Boolean cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(oper2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + oper16 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper16.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test00779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00779");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement10, jzonElement11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test00780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00780");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement4 = jacksonWrapper0.wrap((java.lang.Object) 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Long cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00781");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException25);
        jacksonWrapperException19.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement30 = wrapper17.wrap((java.lang.Object) jacksonWrapperException28);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray24);
    }

    @Test
    public void test00782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00782");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff.Instruction instruction12 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper13 = instruction12.oper;
        instruction12.index = (-1);
        java.lang.String str16 = instruction12.key;
        instruction12.key = "~";
        int int19 = instruction12.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException21.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException36);
        jacksonWrapperException30.addSuppressed((java.lang.Throwable) jacksonWrapperException36);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj39 = jsonDiff11.diff((java.lang.Object) int19, (java.lang.Object) jacksonWrapperException36);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Integer cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(oper13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray26);
    }

    @Test
    public void test00783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00783");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int11 = jsonDiff3.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement12, jzonElement13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test00784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00784");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement3 = gsonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: ");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00785");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int10 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.JsonDiff.Instruction instruction13 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper14 = instruction13.oper;
        instruction13.key = "~";
        java.lang.String str17 = instruction13.key;
        int int18 = instruction13.index;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement12, instruction13, jzonElement19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNull(oper14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "~" + "'", str17, "~");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test00786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00786");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff15.create("");
        int int19 = jsonDiff15.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff15.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff15.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction23.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction23.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.jsonwrap.JzonElement jzonElement28 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement11, instruction23, jzonElement28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertNotNull(instruction23);
    }

    @Test
    public void test00787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00787");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException16);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException16);
        java.lang.Throwable throwable19 = null;
        // The following exception was thrown during execution in test generation
        try {
            jacksonWrapperException1.addSuppressed(throwable19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
    }

    @Test
    public void test00788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00788");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement10, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
    }

    @Test
    public void test00789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00789");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff9.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff14.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction16.key = "hi!";
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = wrapper10.wrap((java.lang.Object) instruction16);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(instruction16);
    }

    @Test
    public void test00790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00790");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException10);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException32.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException34);
        jacksonWrapperException28.addSuppressed((java.lang.Throwable) jacksonWrapperException34);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException28);
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray42 = jacksonWrapperException41.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException45.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException47);
        jacksonWrapperException41.addSuppressed((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray54 = jacksonWrapperException53.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException55);
        jacksonWrapperException47.addSuppressed((java.lang.Throwable) jacksonWrapperException55);
        jacksonWrapperException28.addSuppressed((java.lang.Throwable) jacksonWrapperException55);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement59 = jacksonWrapper0.wrap((java.lang.Object) jacksonWrapperException55);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray54);
    }

    @Test
    public void test00791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00791");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException7);
        java.lang.String str9 = jacksonWrapperException8.toString();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str9, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
    }

    @Test
    public void test00792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00792");
        foodev.jsondiff.jsonwrap.Wrapper wrapper0 = null;
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff(wrapper0);
        foodev.jsondiff.JsonDiff.Instruction instruction3 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = jsonDiff1.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(instruction3);
        org.junit.Assert.assertNotNull(instruction5);
    }

    @Test
    public void test00793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00793");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject13 = jsonDiff3.diff(jzonElement11, jzonElement12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
    }

    @Test
    public void test00794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00794");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = gsonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: ~");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00795");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper13);
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff14.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff16.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper19);
        foodev.jsondiff.jsonwrap.Wrapper wrapper21 = jsonDiff20.factory;
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff(wrapper21);
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff22.create("");
        int int26 = jsonDiff22.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff22.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction29 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper30 = instruction29.oper;
        instruction29.index = (-1);
        instruction29.index = (byte) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff36 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper35);
        foodev.jsondiff.jsonwrap.Wrapper wrapper37 = jsonDiff36.factory;
        foodev.jsondiff.JsonDiff jsonDiff38 = new foodev.jsondiff.JsonDiff(wrapper37);
        foodev.jsondiff.Visitor<?> wildcardVisitor39 = jsonDiff38.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction41 = jsonDiff38.create("");
        instruction41.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper44 = instruction41.oper;
        instruction29.oper = oper44;
        instruction28.oper = oper44;
        instruction18.oper = oper44;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement48 = wrapper12.wrap((java.lang.Object) oper44);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertNotNull(wrapper21);
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertNull(oper30);
        org.junit.Assert.assertNotNull(wrapper37);
        org.junit.Assert.assertNull(wildcardVisitor39);
        org.junit.Assert.assertNotNull(instruction41);
        org.junit.Assert.assertTrue("'" + oper44 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper44.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test00796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00796");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException7.getSuppressed();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException7.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement21 = gsonWrapper0.wrap((java.lang.Object) jacksonWrapperException7);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray20);
    }

    @Test
    public void test00797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00797");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff15.create("");
        instruction17.key = "hi!";
        int int20 = instruction17.index;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement21 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement11, instruction17, jzonElement21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test00798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00798");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff7.checkIndex(jzonElement8, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
    }

    @Test
    public void test00799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00799");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Node node4 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement5 = null;
        foodev.jsondiff.Leaf[] leafArray6 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList7 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList7, leafArray6);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap9 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf10 = jsonDiff1.findLeaves(node4, jzonElement5, (java.util.List<foodev.jsondiff.Leaf>) leafList7, intMap9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(leafArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test00800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00800");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException18);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException31.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray36 = jacksonWrapperException35.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException37);
        jacksonWrapperException31.addSuppressed((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException40);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        java.lang.Throwable[] throwableArray43 = jacksonWrapperException25.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj44 = jsonDiff3.diff((java.lang.Object) jacksonWrapperException23, (java.lang.Object) jacksonWrapperException25);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray43);
    }

    @Test
    public void test00801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00801");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = jsonDiff3.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
    }

    @Test
    public void test00802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00802");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff8.apply(jzonElement9, jzonElement10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
    }

    @Test
    public void test00803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00803");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper5);
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff6.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff8.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction12.index = (short) 100;
        boolean boolean15 = instruction12.isIndexed();
        java.lang.String str16 = instruction12.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.Visitor<?> wildcardVisitor21 = jsonDiff20.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff20.create("");
        instruction23.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper26 = instruction23.oper;
        instruction23.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper29);
        foodev.jsondiff.jsonwrap.Wrapper wrapper31 = jsonDiff30.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction33 = jsonDiff30.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction34 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction34.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff38 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper37);
        int int40 = jsonDiff38.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction42 = jsonDiff38.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper43 = instruction42.oper;
        instruction34.oper = oper43;
        instruction33.oper = oper43;
        instruction23.oper = oper43;
        instruction12.oper = oper43;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement48 = gsonWrapper0.wrap((java.lang.Object) instruction12);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str16, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNull(wildcardVisitor21);
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertTrue("'" + oper26 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper26.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper31);
        org.junit.Assert.assertNotNull(instruction33);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(instruction42);
        org.junit.Assert.assertTrue("'" + oper43 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper43.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test00804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00804");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff11.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction13.index = ' ';
        instruction13.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException23.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException21.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj36 = jsonDiff3.diff((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Object) jacksonWrapperException21);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray28);
    }

    @Test
    public void test00805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00805");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement5 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject7 = jsonDiff3.diff(jzonElement5, jzonElement6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
    }

    @Test
    public void test00806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00806");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int10 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.Object obj11 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        int int15 = jsonDiff13.isIndexed("~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = jsonDiff3.diff(obj11, (java.lang.Object) "~");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test00807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00807");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff5.apply(jzonElement8, jzonElement9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction7);
    }

    @Test
    public void test00808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00808");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.Leaf leaf10 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray11 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = jsonDiff3.accept(leaf10, jzonArray11, jzonObject12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
    }

    @Test
    public void test00809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00809");
        foodev.jsondiff.JsonDiff.Instruction instruction0 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper1 = instruction0.oper;
        instruction0.index = (-1);
        java.lang.String str4 = instruction0.key;
        instruction0.key = "~";
        boolean boolean7 = instruction0.isIndexed();
        boolean boolean8 = instruction0.isIndexed();
        int int9 = instruction0.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction17.index = (short) 100;
        boolean boolean20 = instruction17.isIndexed();
        java.lang.String str21 = instruction17.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper22);
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = jsonDiff23.factory;
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff(wrapper24);
        foodev.jsondiff.Visitor<?> wildcardVisitor26 = jsonDiff25.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff25.create("");
        instruction28.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper31 = instruction28.oper;
        instruction28.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff35 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper34);
        foodev.jsondiff.jsonwrap.Wrapper wrapper36 = jsonDiff35.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction38 = jsonDiff35.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction39 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction39.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff43 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper42);
        int int45 = jsonDiff43.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction47 = jsonDiff43.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper48 = instruction47.oper;
        instruction39.oper = oper48;
        instruction38.oper = oper48;
        instruction28.oper = oper48;
        instruction17.oper = oper48;
        instruction0.oper = oper48;
        java.lang.Class<?> wildcardClass54 = oper48.getClass();
        org.junit.Assert.assertNull(oper1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str21, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertNotNull(wrapper24);
        org.junit.Assert.assertNull(wildcardVisitor26);
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertTrue("'" + oper31 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper31.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper36);
        org.junit.Assert.assertNotNull(instruction38);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(instruction47);
        org.junit.Assert.assertTrue("'" + oper48 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper48.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test00810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00810");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction17.index = (short) 100;
        boolean boolean20 = instruction17.isIndexed();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement21 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement9, instruction17, jzonElement21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test00811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00811");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = jsonDiff7.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
    }

    @Test
    public void test00812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00812");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff9.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff9.apply(jzonElement14, jzonElement15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(instruction13);
    }

    @Test
    public void test00813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00813");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement13, jzonElement14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test00814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00814");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException22);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement25 = gsonWrapper0.wrap((java.lang.Object) jacksonWrapperException22);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
    }

    @Test
    public void test00815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00815");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        foodev.jsondiff.JsonDiff.Instruction instruction7 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper8 = instruction7.oper;
        instruction7.key = "~";
        instruction7.key = "";
        foodev.jsondiff.JsonDiff.Instruction instruction13 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction13.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        int int19 = jsonDiff17.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper22 = instruction21.oper;
        instruction13.oper = oper22;
        instruction7.oper = oper22;
        instruction7.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        instruction7.index = (byte) 0;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement29 = wrapper5.wrap((java.lang.Object) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Byte cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNull(oper8);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + oper22 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper22.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test00816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00816");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement3 = gsonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: ~");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00817");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement10, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
    }

    @Test
    public void test00818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00818");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray1 = jacksonWrapperException0.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException6);
        jacksonWrapperException0.addSuppressed((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        java.lang.String str31 = jacksonWrapperException28.toString();
        org.junit.Assert.assertNotNull(throwableArray1);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str31, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
    }

    @Test
    public void test00819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00819");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement13, jzonElement14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNull(wildcardVisitor12);
    }

    @Test
    public void test00820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00820");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper18);
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff19.factory;
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff(wrapper20);
        foodev.jsondiff.Visitor<?> wildcardVisitor22 = jsonDiff21.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff21.create("");
        instruction24.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper27 = instruction24.oper;
        instruction24.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction24.index = 10;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement32 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement17, instruction24, jzonElement32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNull(wildcardVisitor22);
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertTrue("'" + oper27 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper27.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test00821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00821");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper3);
        int int7 = jsonDiff5.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject12 = jsonDiff5.diff(jzonElement10, jzonElement11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
    }

    @Test
    public void test00822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00822");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = jsonDiff1.apply("", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
    }

    @Test
    public void test00823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00823");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int10 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.Leaf leaf12 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray13 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = jsonDiff1.accept(leaf12, jzonArray13, jzonObject14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
    }

    @Test
    public void test00824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00824");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement5 = gsonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00825");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int6 = instruction5.index;
        boolean boolean7 = instruction5.isIndexed();
        instruction5.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("");
        boolean boolean16 = instruction15.isIndexed();
        instruction15.index = (short) -1;
        foodev.jsondiff.Oper oper19 = instruction15.oper;
        instruction5.oper = oper19;
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        instruction5.index = (byte) 1;
        int int25 = instruction5.index;
        boolean boolean26 = instruction5.isIndexed();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + oper19 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper19.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test00826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00826");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        int int13 = jsonDiff11.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff11.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff11.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = wrapper7.wrap((java.lang.Object) instruction18);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(instruction18);
    }

    @Test
    public void test00827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00827");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~");
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        java.lang.Class<?> wildcardClass14 = throwableArray13.getClass();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        int int18 = jsonDiff16.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff16.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean21 = instruction20.isIndexed();
        foodev.jsondiff.Oper oper22 = null;
        instruction20.oper = oper22;
        foodev.jsondiff.Oper oper24 = instruction20.oper;
        instruction20.key = "~";
        java.lang.String str27 = instruction20.key;
        boolean boolean28 = instruction20.isIndexed();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj29 = jsonDiff3.diff((java.lang.Object) wildcardClass14, (java.lang.Object) boolean28);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Class cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(oper24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "~" + "'", str27, "~");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test00828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00828");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        int int4 = jsonDiff1.isIndexed("");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement5 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement5, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test00829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00829");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement8, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
    }

    @Test
    public void test00830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00830");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int10 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff15.create("");
        boolean boolean18 = instruction17.isIndexed();
        instruction17.index = (byte) 10;
        instruction17.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        boolean boolean23 = instruction17.isIndexed();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement24 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement11, instruction17, jzonElement24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test00831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00831");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff1.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = jsonDiff1.diff("hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(wrapper5);
    }

    @Test
    public void test00832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00832");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper9);
        int int12 = jsonDiff10.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff10.factory;
        int int15 = jsonDiff10.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff10.create("");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement8, instruction17, jzonElement18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(instruction17);
    }

    @Test
    public void test00833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00833");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = jsonDiff1.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertNotNull(instruction6);
    }

    @Test
    public void test00834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00834");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff.Instruction instruction2 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper3 = instruction2.oper;
        instruction2.key = "~";
        int int6 = instruction2.index;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = jacksonWrapper0.wrap((java.lang.Object) int6);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Integer cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(oper3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test00835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00835");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean9 = instruction8.isIndexed();
        int int10 = instruction8.index;
        instruction8.index = 1;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test00836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00836");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement7, jzonElement8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test00837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00837");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.Node node3 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement4 = null;
        foodev.jsondiff.Leaf[] leafArray5 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList6 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList6, leafArray5);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap8 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf9 = jsonDiff2.findLeaves(node3, jzonElement4, (java.util.List<foodev.jsondiff.Leaf>) leafList6, intMap8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(leafArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test00838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00838");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException12.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = jacksonWrapper0.wrap((java.lang.Object) jacksonWrapperException12);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray14);
    }

    @Test
    public void test00839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00839");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject17 = jsonDiff3.diff(jzonElement15, jzonElement16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
    }

    @Test
    public void test00840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00840");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff10.create("");
        boolean boolean13 = instruction12.isIndexed();
        int int14 = instruction12.index;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = wrapper6.wrap((java.lang.Object) instruction12);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test00841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00841");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement5 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff9.create("");
        int int13 = jsonDiff9.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff9.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement5, instruction19, jzonElement20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNotNull(instruction19);
    }

    @Test
    public void test00842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00842");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        java.lang.String str12 = jacksonWrapperException10.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~" + "'", str12, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
    }

    @Test
    public void test00843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00843");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement11, 52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor10);
    }

    @Test
    public void test00844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00844");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement11, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction10);
    }

    @Test
    public void test00845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00845");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int10 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff15.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor18 = jsonDiff15.getVisitor();
        int int20 = jsonDiff15.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff15.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction22.key = "~";
        foodev.jsondiff.jsonwrap.JzonElement jzonElement25 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement11, instruction22, jzonElement25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNull(wildcardVisitor18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(instruction22);
    }

    @Test
    public void test00846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00846");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement2 = jacksonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00847");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = wrapper5.parse("~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper5);
    }

    @Test
    public void test00848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00848");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = wrapper8.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
    }

    @Test
    public void test00849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00849");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff2.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = jsonDiff2.diff("~", "hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction6);
    }

    @Test
    public void test00850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00850");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff9.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff14.create("");
        foodev.jsondiff.Oper oper17 = instruction16.oper;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = wrapper10.wrap((java.lang.Object) oper17);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertTrue("'" + oper17 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper17.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test00851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00851");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement5 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement5, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
    }

    @Test
    public void test00852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00852");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement13, jzonElement14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test00853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00853");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException6);
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException4.getSuppressed();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException4.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = gsonWrapper0.wrap((java.lang.Object) throwableArray17);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: [Ljava.lang.Throwable; cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray17);
    }

    @Test
    public void test00854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00854");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper1 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper1);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper1);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper1);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        int int9 = jsonDiff7.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = jacksonWrapper0.wrap((java.lang.Object) jsonDiff7);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test00855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00855");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject12 = jsonDiff9.diff(jzonElement10, jzonElement11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
    }

    @Test
    public void test00856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00856");
        foodev.jsondiff.JsonDiff.Instruction instruction0 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper1 = instruction0.oper;
        instruction0.index = (-1);
        instruction0.index = (byte) 100;
        int int6 = instruction0.index;
        int int7 = instruction0.index;
        org.junit.Assert.assertNull(oper1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    }

    @Test
    public void test00857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00857");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int10 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject13 = jsonDiff1.diff(jzonElement11, jzonElement12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test00858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00858");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement12, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
    }

    @Test
    public void test00859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00859");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = jsonDiff1.apply("", "hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
    }

    @Test
    public void test00860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00860");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement23 = gsonWrapper0.wrap((java.lang.Object) jacksonWrapperException17);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray20);
    }

    @Test
    public void test00861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00861");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper1);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff4.create("");
        int int8 = jsonDiff4.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff4.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction12.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        java.lang.String str15 = instruction12.key;
        boolean boolean16 = instruction12.isIndexed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = jacksonWrapper0.wrap((java.lang.Object) boolean16);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Boolean cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str15, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test00862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00862");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException6);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException24.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException26);
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException33.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray38 = jacksonWrapperException37.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException39);
        jacksonWrapperException33.addSuppressed((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray45 = jacksonWrapperException44.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray49 = jacksonWrapperException48.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException50);
        jacksonWrapperException44.addSuppressed((java.lang.Throwable) jacksonWrapperException50);
        jacksonWrapperException43.addSuppressed((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException44);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException44);
        jacksonWrapperException18.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray58 = jacksonWrapperException57.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException57.addSuppressed((java.lang.Throwable) jacksonWrapperException59);
        java.lang.Throwable[] throwableArray61 = jacksonWrapperException59.getSuppressed();
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException59);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException59);
        java.lang.String str64 = jacksonWrapperException63.toString();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str64, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test00863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00863");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement4 = jacksonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00864");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff5.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = jacksonWrapper0.wrap((java.lang.Object) instruction11);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
    }

    @Test
    public void test00865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00865");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement14, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction13);
    }

    @Test
    public void test00866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00866");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException25);
        jacksonWrapperException19.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement31 = wrapper13.wrap((java.lang.Object) jacksonWrapperException30);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray24);
    }

    @Test
    public void test00867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00867");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = wrapper16.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
    }

    @Test
    public void test00868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00868");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException1);
        java.lang.String str6 = jacksonWrapperException5.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str6, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
    }

    @Test
    public void test00869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00869");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int11 = jsonDiff3.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.Node node13 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.Leaf[] leafArray15 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList16 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList16, leafArray15);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap18 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf19 = jsonDiff3.findLeaves(node13, jzonElement14, (java.util.List<foodev.jsondiff.Leaf>) leafList16, intMap18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(leafArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test00870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00870");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement12, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(wildcardVisitor11);
    }

    @Test
    public void test00871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00871");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.Leaf leaf11 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray12 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = jsonDiff9.accept(leaf11, jzonArray12, jzonObject13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
    }

    @Test
    public void test00872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00872");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper4);
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff7.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff7.create("");
        instruction10.key = "hi!";
        int int13 = instruction10.index;
        foodev.jsondiff.Oper oper14 = instruction10.oper;
        java.lang.String str15 = instruction10.key;
        instruction10.index = 0;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = gsonWrapper0.wrap((java.lang.Object) instruction10);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + oper14 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper14.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test00873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00873");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = jsonDiff1.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
    }

    @Test
    public void test00874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00874");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = jsonDiff3.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNull(wildcardVisitor9);
    }

    @Test
    public void test00875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00875");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject12 = jsonDiff3.diff(jzonElement10, jzonElement11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNull(wildcardVisitor9);
    }

    @Test
    public void test00876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00876");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper9 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper9);
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff10.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        int int15 = jsonDiff13.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        foodev.jsondiff.Visitor<?> wildcardVisitor20 = jsonDiff19.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff19.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj23 = jsonDiff3.diff((java.lang.Object) wildcardVisitor11, (java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNull(wildcardVisitor20);
        org.junit.Assert.assertNotNull(instruction22);
    }

    @Test
    public void test00877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00877");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper19);
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper19);
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff21.factory;
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff(wrapper22);
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff(wrapper22);
        int int26 = jsonDiff24.isIndexed("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj27 = jsonDiff3.diff((java.lang.Object) jacksonWrapperException17, (java.lang.Object) int26);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
    }

    @Test
    public void test00878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00878");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff.Instruction instruction4 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper5 = instruction4.oper;
        instruction4.key = "~";
        int int8 = instruction4.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper9);
        int int12 = jsonDiff10.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff10.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean15 = instruction14.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        int int19 = jsonDiff17.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper22 = instruction21.oper;
        instruction14.oper = oper22;
        instruction4.oper = oper22;
        foodev.jsondiff.Oper oper25 = instruction4.oper;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement26 = gsonWrapper0.wrap((java.lang.Object) instruction4);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(oper5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + oper22 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper22.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper25 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper25.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test00879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00879");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int10 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Leaf leaf11 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray12 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = jsonDiff1.accept(leaf11, jzonArray12, jzonObject13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test00880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00880");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject14 = jsonDiff11.diff(jzonElement12, jzonElement13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test00881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00881");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = jsonDiff3.apply("~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
    }

    @Test
    public void test00882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00882");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException5);
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        java.lang.Throwable throwable22 = null;
        // The following exception was thrown during execution in test generation
        try {
            jacksonWrapperException20.addSuppressed(throwable22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray18);
    }

    @Test
    public void test00883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00883");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.Leaf leaf11 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray12 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = jsonDiff3.accept(leaf11, jzonArray12, jzonObject13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test00884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00884");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = jsonDiff8.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
    }

    @Test
    public void test00885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00885");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = wrapper5.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(wrapper5);
    }

    @Test
    public void test00886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00886");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = wrapper5.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(wrapper5);
    }

    @Test
    public void test00887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00887");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject14 = jsonDiff3.diff(jzonElement12, jzonElement13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test00888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00888");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = wrapper10.parse("hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test00889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00889");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper14);
        int int17 = jsonDiff15.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff15.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff15.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff15.create("");
        boolean boolean23 = instruction22.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper24);
        foodev.jsondiff.jsonwrap.Wrapper wrapper26 = jsonDiff25.factory;
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff(wrapper26);
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff27.create("");
        int int30 = instruction29.index;
        boolean boolean31 = instruction29.isIndexed();
        instruction29.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff35 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper34);
        foodev.jsondiff.jsonwrap.Wrapper wrapper36 = jsonDiff35.factory;
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff(wrapper36);
        foodev.jsondiff.JsonDiff.Instruction instruction39 = jsonDiff37.create("");
        boolean boolean40 = instruction39.isIndexed();
        instruction39.index = (short) -1;
        foodev.jsondiff.Oper oper43 = instruction39.oper;
        instruction29.oper = oper43;
        foodev.jsondiff.JsonDiff.Instruction instruction45 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper46 = instruction45.oper;
        instruction45.key = "~";
        java.lang.String str49 = instruction45.key;
        foodev.jsondiff.JsonDiff.Instruction instruction50 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper51 = instruction50.oper;
        instruction50.index = (-1);
        java.lang.String str54 = instruction50.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff56 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper55);
        foodev.jsondiff.jsonwrap.Wrapper wrapper57 = jsonDiff56.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction59 = jsonDiff56.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction60 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction60.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff64 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper63);
        int int66 = jsonDiff64.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction68 = jsonDiff64.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper69 = instruction68.oper;
        instruction60.oper = oper69;
        instruction59.oper = oper69;
        instruction50.oper = oper69;
        instruction45.oper = oper69;
        instruction29.oper = oper69;
        instruction22.oper = oper69;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper76 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff77 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper76);
        foodev.jsondiff.jsonwrap.Wrapper wrapper78 = jsonDiff77.factory;
        foodev.jsondiff.JsonDiff jsonDiff79 = new foodev.jsondiff.JsonDiff(wrapper78);
        foodev.jsondiff.JsonDiff.Instruction instruction81 = jsonDiff79.create("");
        int int83 = jsonDiff79.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction85 = jsonDiff79.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int87 = jsonDiff79.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper88 = jsonDiff79.factory;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff13.apply((java.lang.Object) oper69, (java.lang.Object) wrapper88);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wrapper26);
        org.junit.Assert.assertNotNull(instruction29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wrapper36);
        org.junit.Assert.assertNotNull(instruction39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + oper43 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper43.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNull(oper46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "~" + "'", str49, "~");
        org.junit.Assert.assertNull(oper51);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(wrapper57);
        org.junit.Assert.assertNotNull(instruction59);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(instruction68);
        org.junit.Assert.assertTrue("'" + oper69 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper69.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper78);
        org.junit.Assert.assertNotNull(instruction81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(instruction85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(wrapper88);
    }

    @Test
    public void test00890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00890");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("~");
        foodev.jsondiff.Leaf leaf7 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray8 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject9 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = jsonDiff3.accept(leaf7, jzonArray8, jzonObject9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction6);
    }

    @Test
    public void test00891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00891");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement2 = gsonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00892");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Node node10 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.Leaf[] leafArray12 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList13 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList13, leafArray12);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap15 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf16 = jsonDiff3.findLeaves(node10, jzonElement11, (java.util.List<foodev.jsondiff.Leaf>) leafList13, intMap15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(leafArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test00893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00893");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement16, jzonElement17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
    }

    @Test
    public void test00894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00894");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = null;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff5.create("");
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = gsonWrapper0.wrap((java.lang.Object) jsonDiff5);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
    }

    @Test
    public void test00895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00895");
        foodev.jsondiff.jsonwrap.Wrapper wrapper0 = null;
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff(wrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement5 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper6);
        int int9 = jsonDiff7.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff7.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff7.create("~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement5, instruction14, jzonElement15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction14);
    }

    @Test
    public void test00896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00896");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        int int15 = jsonDiff13.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean18 = instruction17.isIndexed();
        int int19 = instruction17.index;
        int int20 = instruction17.index;
        foodev.jsondiff.Oper oper21 = instruction17.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException31.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException33);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException33);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        java.lang.Throwable[] throwableArray37 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException40);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) instruction17, (java.lang.Object) jacksonWrapperException27);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + oper21 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper21.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray37);
    }

    @Test
    public void test00897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00897");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement3 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement3, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
    }

    @Test
    public void test00898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00898");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper13);
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff14.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff16.create("");
        boolean boolean19 = instruction18.isIndexed();
        instruction18.index = (short) -1;
        int int22 = instruction18.index;
        int int23 = instruction18.index;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement24 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement12, instruction18, jzonElement24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test00899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00899");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper1);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.Visitor<?> wildcardVisitor5 = jsonDiff4.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff4.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff4.factory;
        int int10 = jsonDiff4.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff4.factory;
        int int13 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff4.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper16);
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff17.factory;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = jacksonWrapper0.wrap((java.lang.Object) jsonDiff19);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNull(wildcardVisitor5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(wrapper18);
    }

    @Test
    public void test00900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00900");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff2.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = jsonDiff2.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
    }

    @Test
    public void test00901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00901");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException3);
        java.lang.Throwable throwable6 = null;
        // The following exception was thrown during execution in test generation
        try {
            jacksonWrapperException5.addSuppressed(throwable6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00902");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.Leaf leaf11 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray12 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = jsonDiff3.accept(leaf11, jzonArray12, jzonObject13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test00903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00903");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper10 = instruction9.oper;
        instruction9.key = "~";
        java.lang.String str13 = instruction9.key;
        instruction9.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        boolean boolean16 = instruction9.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        int int20 = jsonDiff18.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper21 = jsonDiff18.factory;
        int int23 = jsonDiff18.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff18.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper26 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff(wrapper26);
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff(wrapper26);
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply((java.lang.Object) boolean16, (java.lang.Object) jsonDiff28);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Boolean cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(oper10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "~" + "'", str13, "~");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(wrapper21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertNotNull(wrapper26);
    }

    @Test
    public void test00904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00904");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = jsonDiff3.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
    }

    @Test
    public void test00905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00905");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff10.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff10.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff10.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        java.lang.Class<?> wildcardClass16 = jsonDiff15.getClass();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff20.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff20.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int26 = jsonDiff20.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        java.lang.Class<?> wildcardClass27 = jsonDiff20.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj28 = jsonDiff1.diff((java.lang.Object) jsonDiff15, (java.lang.Object) wildcardClass27);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test00906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00906");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.Node node15 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        foodev.jsondiff.Leaf[] leafArray17 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList18 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList18, leafArray17);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap20 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf21 = jsonDiff3.findLeaves(node15, jzonElement16, (java.util.List<foodev.jsondiff.Leaf>) leafList18, intMap20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(leafArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test00907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00907");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff15.create("");
        boolean boolean18 = instruction17.isIndexed();
        int int19 = instruction17.index;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement11, instruction17, jzonElement20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test00908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00908");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff2.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor5 = jsonDiff2.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = jsonDiff2.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNull(wildcardVisitor5);
    }

    @Test
    public void test00909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00909");
        foodev.jsondiff.jsonwrap.Wrapper wrapper0 = null;
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff(wrapper0);
        foodev.jsondiff.Leaf leaf2 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray3 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject4 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = jsonDiff1.accept(leaf2, jzonArray3, jzonObject4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00910");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = wrapper7.parse("hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
    }

    @Test
    public void test00911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00911");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff9.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = wrapper10.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test00912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00912");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper3);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff6.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff6.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff6.factory;
        int int12 = jsonDiff6.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff6.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff6.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff15.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException24);
        jacksonWrapperException18.addSuppressed((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff2.apply((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Object) jacksonWrapperException24);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray23);
    }

    @Test
    public void test00913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00913");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement6, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(wrapper5);
    }

    @Test
    public void test00914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00914");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = wrapper10.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test00915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00915");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper9);
        int int12 = jsonDiff10.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff10.factory;
        int int15 = jsonDiff10.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff10.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff10.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction19 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper20 = instruction19.oper;
        instruction19.key = "~";
        java.lang.String str23 = instruction19.key;
        foodev.jsondiff.JsonDiff.Instruction instruction24 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper25 = instruction24.oper;
        instruction24.index = (-1);
        java.lang.String str28 = instruction24.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper29);
        foodev.jsondiff.jsonwrap.Wrapper wrapper31 = jsonDiff30.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction33 = jsonDiff30.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction34 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction34.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff38 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper37);
        int int40 = jsonDiff38.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction42 = jsonDiff38.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper43 = instruction42.oper;
        instruction34.oper = oper43;
        instruction33.oper = oper43;
        instruction24.oper = oper43;
        instruction19.oper = oper43;
        java.lang.String str48 = instruction19.key;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj49 = jsonDiff3.diff((java.lang.Object) jsonDiff10, (java.lang.Object) instruction19);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNull(oper20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "~" + "'", str23, "~");
        org.junit.Assert.assertNull(oper25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(wrapper31);
        org.junit.Assert.assertNotNull(instruction33);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(instruction42);
        org.junit.Assert.assertTrue("'" + oper43 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper43.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "~" + "'", str48, "~");
    }

    @Test
    public void test00916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00916");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper18);
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff19.factory;
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff(wrapper20);
        foodev.jsondiff.Visitor<?> wildcardVisitor22 = jsonDiff21.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff21.create("");
        instruction24.key = "hi!";
        int int27 = instruction24.index;
        foodev.jsondiff.Oper oper28 = instruction24.oper;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement29 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement17, instruction24, jzonElement29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNull(wildcardVisitor22);
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + oper28 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper28.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test00917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00917");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper4);
        int int7 = jsonDiff5.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean10 = instruction9.isIndexed();
        foodev.jsondiff.Oper oper11 = null;
        instruction9.oper = oper11;
        foodev.jsondiff.Oper oper13 = instruction9.oper;
        instruction9.key = "~";
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = gsonWrapper0.wrap((java.lang.Object) instruction9);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(oper13);
    }

    @Test
    public void test00918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00918");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff5.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = wrapper6.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper6);
    }

    @Test
    public void test00919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00919");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException22);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        java.lang.Throwable throwable29 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", throwable29);
        // The following exception was thrown during execution in test generation
        try {
            jacksonWrapperException27.addSuppressed(throwable29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray21);
    }

    @Test
    public void test00920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00920");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper8);
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff11.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff11.getVisitor();
        int int16 = jsonDiff11.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor17 = jsonDiff11.getVisitor();
        int int19 = jsonDiff11.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int21 = jsonDiff11.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff11.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper24);
        foodev.jsondiff.jsonwrap.Wrapper wrapper26 = jsonDiff25.factory;
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff(wrapper26);
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff27.create("");
        int int31 = jsonDiff27.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction33 = jsonDiff27.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        instruction33.key = "hi!";
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj36 = jsonDiff1.diff((java.lang.Object) jsonDiff11, (java.lang.Object) instruction33);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertNotNull(wrapper26);
        org.junit.Assert.assertNotNull(instruction29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(instruction33);
    }

    @Test
    public void test00921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00921");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper3);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff6.create("");
        boolean boolean9 = instruction8.isIndexed();
        instruction8.index = (short) -1;
        int int12 = instruction8.index;
        int int13 = instruction8.index;
        java.lang.String str14 = instruction8.key;
        instruction8.index = 0;
        java.lang.String str17 = instruction8.key;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = jacksonWrapper0.wrap((java.lang.Object) instruction8);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test00922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00922");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject12 = jsonDiff1.diff(jzonElement10, jzonElement11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
    }

    @Test
    public void test00923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00923");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper5);
        int int8 = jsonDiff6.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff6.getVisitor();
        int int11 = jsonDiff6.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int13 = jsonDiff6.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff6.create("");
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = wrapper3.wrap((java.lang.Object) jsonDiff6);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
    }

    @Test
    public void test00924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00924");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException7);
        java.lang.String str19 = jacksonWrapperException18.toString();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str19, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
    }

    @Test
    public void test00925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00925");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        int int14 = jsonDiff12.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff12.create("");
        boolean boolean20 = instruction19.isIndexed();
        instruction19.index = (byte) 100;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement23 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement10, instruction19, jzonElement23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test00926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00926");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement9, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
    }

    @Test
    public void test00927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00927");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = jsonDiff2.diff("~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00928");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = jsonDiff3.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(instruction11);
    }

    @Test
    public void test00929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00929");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int11 = jsonDiff3.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject15 = jsonDiff3.diff(jzonElement13, jzonElement14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test00930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00930");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement11, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNull(wildcardVisitor10);
    }

    @Test
    public void test00931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00931");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement2 = jacksonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00932");
        foodev.jsondiff.jsonwrap.Wrapper wrapper0 = null;
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff(wrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement4 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement5 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject6 = jsonDiff1.diff(jzonElement4, jzonElement5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
    }

    @Test
    public void test00933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00933");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test00934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00934");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject9 = jsonDiff3.diff(jzonElement7, jzonElement8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
    }

    @Test
    public void test00935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00935");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = jsonDiff3.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test00936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00936");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        java.lang.Object obj16 = null;
        foodev.jsondiff.JsonDiff.Instruction instruction17 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper18 = instruction17.oper;
        instruction17.key = "~";
        instruction17.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper23);
        foodev.jsondiff.jsonwrap.Wrapper wrapper25 = jsonDiff24.factory;
        foodev.jsondiff.JsonDiff jsonDiff26 = new foodev.jsondiff.JsonDiff(wrapper25);
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff26.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction30 = jsonDiff26.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction30.index = (short) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff34 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper33);
        foodev.jsondiff.jsonwrap.Wrapper wrapper35 = jsonDiff34.factory;
        foodev.jsondiff.JsonDiff jsonDiff36 = new foodev.jsondiff.JsonDiff(wrapper35);
        foodev.jsondiff.JsonDiff.Instruction instruction38 = jsonDiff36.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction40 = jsonDiff36.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction40.index = (short) 100;
        boolean boolean43 = instruction40.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction44 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper45 = instruction44.oper;
        instruction44.key = "~";
        int int48 = instruction44.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff50 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper49);
        int int52 = jsonDiff50.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction54 = jsonDiff50.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean55 = instruction54.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff57 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper56);
        int int59 = jsonDiff57.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction61 = jsonDiff57.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper62 = instruction61.oper;
        instruction54.oper = oper62;
        instruction44.oper = oper62;
        foodev.jsondiff.Oper oper65 = instruction44.oper;
        instruction40.oper = oper65;
        instruction30.oper = oper65;
        instruction17.oper = oper65;
        foodev.jsondiff.Oper oper69 = instruction17.oper;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(obj16, (java.lang.Object) instruction17);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNull(oper18);
        org.junit.Assert.assertNotNull(wrapper25);
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertNotNull(instruction30);
        org.junit.Assert.assertNotNull(wrapper35);
        org.junit.Assert.assertNotNull(instruction38);
        org.junit.Assert.assertNotNull(instruction40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(oper45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(instruction54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(instruction61);
        org.junit.Assert.assertTrue("'" + oper62 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper62.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper65 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper65.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper69 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper69.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test00937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00937");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Leaf leaf12 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray13 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = jsonDiff1.accept(leaf12, jzonArray13, jzonObject14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
    }

    @Test
    public void test00938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00938");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement9, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test00939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00939");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement2 = jacksonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00940");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = wrapper7.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
    }

    @Test
    public void test00941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00941");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor5 = jsonDiff1.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = jsonDiff1.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertNull(wildcardVisitor5);
    }

    @Test
    public void test00942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00942");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        java.lang.Class<?> wildcardClass15 = jacksonWrapperException14.getClass();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test00943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00943");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper5);
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff6.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff8.create("");
        int int11 = instruction10.index;
        boolean boolean12 = instruction10.isIndexed();
        instruction10.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff18.create("");
        boolean boolean21 = instruction20.isIndexed();
        instruction20.index = (short) -1;
        foodev.jsondiff.Oper oper24 = instruction20.oper;
        instruction10.oper = oper24;
        foodev.jsondiff.JsonDiff.Instruction instruction26 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper27 = instruction26.oper;
        instruction26.key = "~";
        java.lang.String str30 = instruction26.key;
        foodev.jsondiff.JsonDiff.Instruction instruction31 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper32 = instruction31.oper;
        instruction31.index = (-1);
        java.lang.String str35 = instruction31.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper36);
        foodev.jsondiff.jsonwrap.Wrapper wrapper38 = jsonDiff37.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction40 = jsonDiff37.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction41 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction41.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff45 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper44);
        int int47 = jsonDiff45.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction49 = jsonDiff45.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper50 = instruction49.oper;
        instruction41.oper = oper50;
        instruction40.oper = oper50;
        instruction31.oper = oper50;
        instruction26.oper = oper50;
        instruction10.oper = oper50;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement56 = gsonWrapper0.wrap((java.lang.Object) instruction10);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + oper24 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper24.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNull(oper27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "~" + "'", str30, "~");
        org.junit.Assert.assertNull(oper32);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(wrapper38);
        org.junit.Assert.assertNotNull(instruction40);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(instruction49);
        org.junit.Assert.assertTrue("'" + oper50 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper50.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test00944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00944");
        foodev.jsondiff.jsonwrap.Wrapper wrapper0 = null;
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff(wrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        foodev.jsondiff.Node node4 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement5 = null;
        foodev.jsondiff.Leaf[] leafArray6 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList7 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList7, leafArray6);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap9 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf10 = jsonDiff1.findLeaves(node4, jzonElement5, (java.util.List<foodev.jsondiff.Leaf>) leafList7, intMap9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertNotNull(leafArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test00945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00945");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper1);
        int int4 = jsonDiff2.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff2.factory;
        int int7 = jsonDiff2.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff2.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper10);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = jacksonWrapper0.wrap((java.lang.Object) jsonDiff12);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test00946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00946");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff5.create("");
        boolean boolean8 = instruction7.isIndexed();
        instruction7.index = 97;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = jacksonWrapper0.wrap((java.lang.Object) instruction7);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test00947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00947");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException5);
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException3.getSuppressed();
        java.lang.String str16 = jacksonWrapperException3.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str16, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test00948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00948");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = jacksonWrapper0.wrap((java.lang.Object) jacksonWrapperException12);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
    }

    @Test
    public void test00949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00949");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException25);
        jacksonWrapperException19.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException33.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray38 = jacksonWrapperException37.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException39);
        jacksonWrapperException33.addSuppressed((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray47 = jacksonWrapperException46.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray51 = jacksonWrapperException50.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException52);
        jacksonWrapperException46.addSuppressed((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray58 = jacksonWrapperException57.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray62 = jacksonWrapperException61.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException61);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException63);
        jacksonWrapperException57.addSuppressed((java.lang.Throwable) jacksonWrapperException63);
        jacksonWrapperException56.addSuppressed((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException57);
        jacksonWrapperException39.addSuppressed((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException57);
        jacksonWrapperException30.addSuppressed((java.lang.Throwable) jacksonWrapperException69);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException73 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray74 = jacksonWrapperException73.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException75 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException73.addSuppressed((java.lang.Throwable) jacksonWrapperException75);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException77 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException73);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException78 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException77);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj79 = jsonDiff3.diff((java.lang.Object) jacksonWrapperException69, (java.lang.Object) "");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(throwableArray74);
    }

    @Test
    public void test00950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00950");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.Leaf leaf4 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray5 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = jsonDiff2.accept(leaf4, jzonArray5, jzonObject6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
    }

    @Test
    public void test00951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00951");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject21 = jsonDiff18.diff(jzonElement19, jzonElement20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper17);
    }

    @Test
    public void test00952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00952");
        foodev.jsondiff.jsonwrap.Wrapper wrapper0 = null;
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff(wrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement3 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement4 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject5 = jsonDiff1.diff(jzonElement3, jzonElement4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
    }

    @Test
    public void test00953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00953");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff12.factory;
        java.lang.Class<?> wildcardClass15 = wrapper14.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test00954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00954");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper3);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = jsonDiff5.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
    }

    @Test
    public void test00955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00955");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = jsonDiff11.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test00956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00956");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int10 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        int int14 = jsonDiff12.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper17 = instruction16.oper;
        instruction16.index = (byte) -1;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper20);
        int int23 = jsonDiff21.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = jsonDiff21.factory;
        int int26 = jsonDiff21.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff21.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper29 = jsonDiff21.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj30 = jsonDiff1.diff((java.lang.Object) instruction16, (java.lang.Object) wrapper29);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertTrue("'" + oper17 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper17.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(wrapper24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertNotNull(wrapper29);
    }

    @Test
    public void test00957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00957");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement4 = jacksonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00958");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        int int15 = jsonDiff13.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        foodev.jsondiff.Visitor<?> wildcardVisitor20 = jsonDiff19.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff19.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction22.key = "";
        foodev.jsondiff.jsonwrap.JzonElement jzonElement25 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement11, instruction22, jzonElement25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNull(wildcardVisitor20);
        org.junit.Assert.assertNotNull(instruction22);
    }

    @Test
    public void test00959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00959");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply(jzonElement14, jzonElement15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
    }

    @Test
    public void test00960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00960");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff2.factory;
        int int6 = jsonDiff2.isIndexed("~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff2.apply(jzonElement7, jzonElement8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test00961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00961");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int7 = jsonDiff1.isIndexed("");
        foodev.jsondiff.Node node8 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        foodev.jsondiff.Leaf[] leafArray10 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList11 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList11, leafArray10);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap13 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf14 = jsonDiff1.findLeaves(node8, jzonElement9, (java.util.List<foodev.jsondiff.Leaf>) leafList11, intMap13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(leafArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test00962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00962");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException7);
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException7.getSuppressed();
        java.lang.String str10 = jacksonWrapperException7.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str10, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test00963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00963");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject12 = jsonDiff3.diff(jzonElement10, jzonElement11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNotNull(instruction9);
    }

    @Test
    public void test00964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00964");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement2 = jacksonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00965");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = gsonWrapper0.wrap((java.lang.Object) jacksonWrapperException12);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
    }

    @Test
    public void test00966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00966");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException28);
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray36 = jacksonWrapperException35.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray40 = jacksonWrapperException39.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException41);
        jacksonWrapperException35.addSuppressed((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray47 = jacksonWrapperException46.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray51 = jacksonWrapperException50.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException52);
        jacksonWrapperException46.addSuppressed((java.lang.Throwable) jacksonWrapperException52);
        jacksonWrapperException45.addSuppressed((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException46);
        jacksonWrapperException28.addSuppressed((java.lang.Throwable) jacksonWrapperException46);
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray60 = jacksonWrapperException59.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException59.addSuppressed((java.lang.Throwable) jacksonWrapperException61);
        java.lang.Throwable[] throwableArray63 = jacksonWrapperException61.getSuppressed();
        jacksonWrapperException28.addSuppressed((java.lang.Throwable) jacksonWrapperException61);
        java.lang.Throwable[] throwableArray65 = jacksonWrapperException61.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement66 = jacksonWrapper0.wrap((java.lang.Object) throwableArray65);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: [Ljava.lang.Throwable; cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray65);
    }

    @Test
    public void test00967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00967");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject14 = jsonDiff11.diff(jzonElement12, jzonElement13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test00968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00968");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction14);
    }

    @Test
    public void test00969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00969");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction7.index = (short) 100;
        boolean boolean10 = instruction7.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper12 = instruction11.oper;
        instruction11.key = "~";
        int int15 = instruction11.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        int int19 = jsonDiff17.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean22 = instruction21.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper23);
        int int26 = jsonDiff24.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper29 = instruction28.oper;
        instruction21.oper = oper29;
        instruction11.oper = oper29;
        foodev.jsondiff.Oper oper32 = instruction11.oper;
        instruction7.oper = oper32;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff35 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper34);
        foodev.jsondiff.jsonwrap.Wrapper wrapper36 = jsonDiff35.factory;
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff(wrapper36);
        foodev.jsondiff.Visitor<?> wildcardVisitor38 = jsonDiff37.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction40 = jsonDiff37.create("");
        instruction40.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper43 = instruction40.oper;
        instruction7.oper = oper43;
        foodev.jsondiff.Oper oper45 = instruction7.oper;
        java.lang.Class<?> wildcardClass46 = oper45.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(oper12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertTrue("'" + oper29 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper29.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper32 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper32.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper36);
        org.junit.Assert.assertNull(wildcardVisitor38);
        org.junit.Assert.assertNotNull(instruction40);
        org.junit.Assert.assertTrue("'" + oper43 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper43.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper45 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper45.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test00970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00970");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement22 = wrapper11.wrap((java.lang.Object) jacksonWrapperException17);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(throwableArray14);
    }

    @Test
    public void test00971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00971");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper13);
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff14.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff16.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff16.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement21 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement12, instruction20, jzonElement21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertNotNull(instruction20);
    }

    @Test
    public void test00972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00972");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException18);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException18);
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement25 = gsonWrapper0.wrap((java.lang.Object) jacksonWrapperException24);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray22);
    }

    @Test
    public void test00973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00973");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement11, jzonElement12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test00974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00974");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = jsonDiff3.apply("~", "hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
    }

    @Test
    public void test00975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00975");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("");
        foodev.jsondiff.Node node9 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.Leaf[] leafArray11 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList12 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList12, leafArray11);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap14 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf15 = jsonDiff3.findLeaves(node9, jzonElement10, (java.util.List<foodev.jsondiff.Leaf>) leafList12, intMap14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(leafArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test00976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00976");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Leaf leaf9 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray10 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = jsonDiff1.accept(leaf9, jzonArray10, jzonObject11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test00977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00977");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        int int10 = jsonDiff8.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff8.create("");
        boolean boolean16 = instruction15.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff20.create("");
        int int23 = instruction22.index;
        boolean boolean24 = instruction22.isIndexed();
        instruction22.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper27);
        foodev.jsondiff.jsonwrap.Wrapper wrapper29 = jsonDiff28.factory;
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff(wrapper29);
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff30.create("");
        boolean boolean33 = instruction32.isIndexed();
        instruction32.index = (short) -1;
        foodev.jsondiff.Oper oper36 = instruction32.oper;
        instruction22.oper = oper36;
        foodev.jsondiff.JsonDiff.Instruction instruction38 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper39 = instruction38.oper;
        instruction38.key = "~";
        java.lang.String str42 = instruction38.key;
        foodev.jsondiff.JsonDiff.Instruction instruction43 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper44 = instruction43.oper;
        instruction43.index = (-1);
        java.lang.String str47 = instruction43.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff49 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper48);
        foodev.jsondiff.jsonwrap.Wrapper wrapper50 = jsonDiff49.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction52 = jsonDiff49.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction53 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction53.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff57 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper56);
        int int59 = jsonDiff57.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction61 = jsonDiff57.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper62 = instruction61.oper;
        instruction53.oper = oper62;
        instruction52.oper = oper62;
        instruction43.oper = oper62;
        instruction38.oper = oper62;
        instruction22.oper = oper62;
        instruction15.oper = oper62;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff70 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper69);
        foodev.jsondiff.JsonDiff jsonDiff71 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper69);
        foodev.jsondiff.jsonwrap.Wrapper wrapper72 = jsonDiff71.factory;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff6.apply((java.lang.Object) instruction15, (java.lang.Object) wrapper72);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wrapper29);
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + oper36 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper36.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNull(oper39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "~" + "'", str42, "~");
        org.junit.Assert.assertNull(oper44);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(wrapper50);
        org.junit.Assert.assertNotNull(instruction52);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(instruction61);
        org.junit.Assert.assertTrue("'" + oper62 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper62.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper72);
    }

    @Test
    public void test00978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00978");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper3);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff6.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff6.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.String str11 = instruction10.key;
        int int12 = instruction10.index;
        instruction10.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        int int15 = instruction10.index;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = jacksonWrapper0.wrap((java.lang.Object) instruction10);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str11, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test00979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00979");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = jsonDiff7.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
    }

    @Test
    public void test00980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00980");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray35 = jacksonWrapperException34.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException36);
        jacksonWrapperException30.addSuppressed((java.lang.Throwable) jacksonWrapperException36);
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException30.getSuppressed();
        java.lang.Throwable[] throwableArray40 = jacksonWrapperException30.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj41 = jsonDiff1.diff((java.lang.Object) jacksonWrapperException29, (java.lang.Object) throwableArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray40);
    }

    @Test
    public void test00981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00981");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = jsonDiff1.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test00982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00982");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.Leaf leaf14 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray15 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = jsonDiff13.accept(leaf14, jzonArray15, jzonObject16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test00983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00983");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~");
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        java.lang.String str4 = jacksonWrapperException1.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~" + "'", str4, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
    }

    @Test
    public void test00984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00984");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement3 = null;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction4.key = "";
        java.lang.String str7 = instruction4.key;
        instruction4.index = 32;
        int int10 = instruction4.index;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement3, instruction4, jzonElement11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
    }

    @Test
    public void test00985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00985");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException5);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException3);
        java.lang.String str18 = jacksonWrapperException3.toString();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str18, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
    }

    @Test
    public void test00986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00986");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        java.lang.String str5 = jacksonWrapperException4.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str5, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
    }

    @Test
    public void test00987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00987");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException18);
        java.lang.String str20 = jacksonWrapperException18.toString();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str20, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test00988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00988");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.JsonDiff.Instruction instruction16 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction16.key = "";
        instruction16.index = 'a';
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj21 = jsonDiff6.diff((java.lang.Object) jacksonWrapperException9, (java.lang.Object) instruction16);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNotNull(throwableArray10);
    }

    @Test
    public void test00989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00989");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        int int6 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff4.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = jsonDiff4.diff("", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
    }

    @Test
    public void test00990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00990");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        java.lang.String str7 = jacksonWrapperException6.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str7, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
    }

    @Test
    public void test00991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00991");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray1 = jacksonWrapperException0.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException6);
        jacksonWrapperException0.addSuppressed((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException10);
        java.lang.String str12 = jacksonWrapperException6.toString();
        org.junit.Assert.assertNotNull(throwableArray1);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str12, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test00992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00992");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        int int6 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff4.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff4.apply(jzonElement8, jzonElement9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
    }

    @Test
    public void test00993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00993");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Node node9 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.Leaf[] leafArray11 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList12 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList12, leafArray11);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap14 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf15 = jsonDiff4.findLeaves(node9, jzonElement10, (java.util.List<foodev.jsondiff.Leaf>) leafList12, intMap14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(leafArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test00994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00994");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = jsonDiff9.apply("", "");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonJsonNull cannot be cast to foodev.jsondiff.jsonwrap.JzonObject");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor10);
    }

    @Test
    public void test00995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00995");
        foodev.jsondiff.jsonwrap.Wrapper wrapper0 = null;
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff(wrapper0);
        foodev.jsondiff.JsonDiff.Instruction instruction3 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement5 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement5, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(instruction3);
        org.junit.Assert.assertNull(wildcardVisitor4);
    }

    @Test
    public void test00996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00996");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        int int14 = jsonDiff12.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff12.factory;
        int int17 = jsonDiff12.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff12.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff(wrapper20);
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff(wrapper20);
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff(wrapper20);
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = jsonDiff23.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper25 = jsonDiff23.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper26);
        int int29 = jsonDiff27.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction31 = jsonDiff27.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction31.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        int int34 = instruction31.index;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) wrapper25, (java.lang.Object) instruction31);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNotNull(wrapper24);
        org.junit.Assert.assertNotNull(wrapper25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(instruction31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    }

    @Test
    public void test00997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00997");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int13 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff1.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = jsonDiff1.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor14);
    }

    @Test
    public void test00998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00998");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = wrapper5.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(wrapper5);
    }

    @Test
    public void test00999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test00999");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException32.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException34);
        jacksonWrapperException28.addSuppressed((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray40 = jacksonWrapperException39.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray44 = jacksonWrapperException43.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException45);
        jacksonWrapperException39.addSuppressed((java.lang.Throwable) jacksonWrapperException45);
        jacksonWrapperException38.addSuppressed((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException39);
        jacksonWrapperException21.addSuppressed((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        java.lang.Throwable[] throwableArray52 = jacksonWrapperException51.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff54 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper53);
        foodev.jsondiff.jsonwrap.Wrapper wrapper55 = jsonDiff54.factory;
        foodev.jsondiff.JsonDiff jsonDiff56 = new foodev.jsondiff.JsonDiff(wrapper55);
        foodev.jsondiff.JsonDiff.Instruction instruction58 = jsonDiff56.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor59 = jsonDiff56.getVisitor();
        int int61 = jsonDiff56.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor62 = jsonDiff56.getVisitor();
        int int64 = jsonDiff56.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int66 = jsonDiff56.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction68 = jsonDiff56.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply((java.lang.Object) jacksonWrapperException51, (java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(wrapper55);
        org.junit.Assert.assertNotNull(instruction58);
        org.junit.Assert.assertNull(wildcardVisitor59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(instruction68);
    }

    @Test
    public void test01000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test01000");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        java.lang.String str7 = jacksonWrapperException5.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str7, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
    }
}

