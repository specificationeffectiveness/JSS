package foodev.jsondiff;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest13 {

    public static boolean debug = false;

    @Test
    public void test06501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06501");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff4.create("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = jsonDiff8.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
    }

    @Test
    public void test06502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06502");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper4);
        int int8 = jsonDiff6.isIndexed("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = jsonDiff6.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test06503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06503");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper16 = instruction15.oper;
        foodev.jsondiff.Oper oper17 = null;
        instruction15.oper = oper17;
        int int19 = instruction15.index;
        int int20 = instruction15.index;
        java.lang.String str21 = instruction15.key;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = jsonDiff1.diff((java.lang.Object) jacksonWrapperException13, (java.lang.Object) str21);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNull(oper16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test06504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06504");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper1 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper1);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper1);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper1);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        int int9 = jsonDiff7.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff7.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = jacksonWrapper0.wrap((java.lang.Object) jsonDiff7);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor10);
    }

    @Test
    public void test06505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06505");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = wrapper9.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test06506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06506");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper8);
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff11.create("");
        boolean boolean14 = instruction13.isIndexed();
        instruction13.index = (short) -1;
        instruction13.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction13.key = "hi!";
        int int21 = instruction13.index;
        instruction13.index = 0;
        boolean boolean24 = instruction13.isIndexed();
        int int25 = instruction13.index;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement26 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff6.applyPartial(jzonElement7, instruction13, jzonElement26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test06507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06507");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff8.apply(jzonElement9, jzonElement10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
    }

    @Test
    public void test06508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06508");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        int int4 = jsonDiff1.isIndexed("");
        int int6 = jsonDiff1.isIndexed("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = jsonDiff1.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test06509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06509");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        int int11 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int13 = jsonDiff1.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff1.create("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor19 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper20);
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff21.factory;
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff(wrapper22);
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff23.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff23.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int29 = jsonDiff23.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction31 = jsonDiff23.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int32 = instruction31.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff34 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper33);
        foodev.jsondiff.jsonwrap.Wrapper wrapper35 = jsonDiff34.factory;
        foodev.jsondiff.JsonDiff jsonDiff36 = new foodev.jsondiff.JsonDiff(wrapper35);
        foodev.jsondiff.Visitor<?> wildcardVisitor37 = jsonDiff36.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction39 = jsonDiff36.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper40 = jsonDiff36.factory;
        int int42 = jsonDiff36.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction44 = jsonDiff36.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor45 = jsonDiff36.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction47 = jsonDiff36.create("hi!");
        int int49 = jsonDiff36.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj50 = jsonDiff1.diff((java.lang.Object) instruction31, (java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNull(wildcardVisitor19);
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(instruction31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(wrapper35);
        org.junit.Assert.assertNull(wildcardVisitor37);
        org.junit.Assert.assertNotNull(instruction39);
        org.junit.Assert.assertNotNull(wrapper40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(instruction44);
        org.junit.Assert.assertNull(wildcardVisitor45);
        org.junit.Assert.assertNotNull(instruction47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
    }

    @Test
    public void test06510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06510");
        foodev.jsondiff.JsonDiff.Instruction instruction0 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper1 = instruction0.oper;
        instruction0.index = (-1);
        instruction0.index = (byte) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff9.create("");
        instruction12.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper15 = instruction12.oper;
        instruction0.oper = oper15;
        int int17 = instruction0.index;
        java.lang.Class<?> wildcardClass18 = instruction0.getClass();
        org.junit.Assert.assertNull(oper1);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + oper15 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper15.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test06511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06511");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = jsonDiff1.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
    }

    @Test
    public void test06512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06512");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff7.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff7.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff7.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = wrapper11.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper11);
    }

    @Test
    public void test06513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06513");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        int int14 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = wrapper15.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wrapper15);
    }

    @Test
    public void test06514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06514");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff10.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff13.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = wrapper8.wrap((java.lang.Object) wrapper17);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(wrapper17);
    }

    @Test
    public void test06515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06515");
        foodev.jsondiff.jsonwrap.Wrapper wrapper0 = null;
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff(wrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        int int4 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Node node7 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = null;
        foodev.jsondiff.Leaf[] leafArray9 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList10 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList10, leafArray9);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap12 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf13 = jsonDiff1.findLeaves(node7, jzonElement8, (java.util.List<foodev.jsondiff.Leaf>) leafList10, intMap12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(leafArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test06516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06516");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        int int11 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int13 = jsonDiff1.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff1.create("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        foodev.jsondiff.Leaf leaf20 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray21 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject22 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = jsonDiff19.accept(leaf20, jzonArray21, jzonObject22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(wrapper18);
    }

    @Test
    public void test06517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06517");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper1);
        int int4 = jsonDiff2.isIndexed("hi!");
        int int6 = jsonDiff2.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff2.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff2.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff2.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff2.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = gsonWrapper0.wrap((java.lang.Object) jsonDiff2);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test06518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06518");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int11 = jsonDiff3.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray38 = jacksonWrapperException37.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray42 = jacksonWrapperException41.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException43);
        jacksonWrapperException37.addSuppressed((java.lang.Throwable) jacksonWrapperException43);
        jacksonWrapperException36.addSuppressed((java.lang.Throwable) jacksonWrapperException37);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException37);
        java.lang.Throwable[] throwableArray48 = jacksonWrapperException24.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray54 = jacksonWrapperException53.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray58 = jacksonWrapperException57.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException59);
        jacksonWrapperException53.addSuppressed((java.lang.Throwable) jacksonWrapperException59);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException59);
        java.lang.Throwable[] throwableArray63 = jacksonWrapperException59.getSuppressed();
        jacksonWrapperException51.addSuppressed((java.lang.Throwable) jacksonWrapperException59);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        java.lang.Throwable[] throwableArray67 = jacksonWrapperException66.getSuppressed();
        java.lang.Object obj68 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) throwableArray67, obj68);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: [Ljava.lang.Throwable; cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray67);
    }

    @Test
    public void test06519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06519");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        java.lang.Class<?> wildcardClass13 = instruction12.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test06520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06520");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper17);
        int int21 = jsonDiff19.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper22);
        int int25 = jsonDiff23.isIndexed("hi!");
        int int27 = jsonDiff23.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper28 = jsonDiff23.factory;
        int int30 = jsonDiff23.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper31 = jsonDiff23.factory;
        int int33 = jsonDiff23.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray38 = jacksonWrapperException37.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray42 = jacksonWrapperException41.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException43);
        jacksonWrapperException37.addSuppressed((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException49);
        java.lang.Throwable[] throwableArray51 = jacksonWrapperException49.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj52 = jsonDiff19.diff((java.lang.Object) int33, (java.lang.Object) jacksonWrapperException49);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Integer cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(wrapper28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(wrapper31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray51);
    }

    @Test
    public void test06521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06521");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement13, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor12);
    }

    @Test
    public void test06522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06522");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = jsonDiff6.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(wrapper5);
    }

    @Test
    public void test06523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06523");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor5 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = jsonDiff3.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNull(wildcardVisitor5);
        org.junit.Assert.assertNotNull(wrapper6);
    }

    @Test
    public void test06524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06524");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper1);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.Visitor<?> wildcardVisitor5 = jsonDiff4.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff4.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff4.factory;
        int int10 = jsonDiff4.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff4.factory;
        int int13 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff4.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff4.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff4.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff4.factory;
        int int20 = jsonDiff4.isIndexed("~");
        int int22 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement23 = gsonWrapper0.wrap((java.lang.Object) int22);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Integer cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNull(wildcardVisitor5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test06525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06525");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        int int9 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("hi!");
        int int13 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = jsonDiff3.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test06526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06526");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper10);
        int int14 = jsonDiff12.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Leaf leaf15 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray16 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = jsonDiff12.accept(leaf15, jzonArray16, jzonObject17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test06527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06527");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = wrapper11.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
    }

    @Test
    public void test06528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06528");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray1 = jacksonWrapperException0.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException6);
        jacksonWrapperException0.addSuppressed((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException33.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException35);
        jacksonWrapperException29.addSuppressed((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray43 = jacksonWrapperException42.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray47 = jacksonWrapperException46.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException48);
        jacksonWrapperException42.addSuppressed((java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray54 = jacksonWrapperException53.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray58 = jacksonWrapperException57.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException59);
        jacksonWrapperException53.addSuppressed((java.lang.Throwable) jacksonWrapperException59);
        jacksonWrapperException52.addSuppressed((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException53);
        jacksonWrapperException35.addSuppressed((java.lang.Throwable) jacksonWrapperException53);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray67 = jacksonWrapperException66.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException66.addSuppressed((java.lang.Throwable) jacksonWrapperException68);
        java.lang.Throwable[] throwableArray70 = jacksonWrapperException68.getSuppressed();
        jacksonWrapperException35.addSuppressed((java.lang.Throwable) jacksonWrapperException68);
        java.lang.Throwable[] throwableArray72 = jacksonWrapperException68.getSuppressed();
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException68);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException74 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException68);
        java.lang.String str75 = jacksonWrapperException68.toString();
        org.junit.Assert.assertNotNull(throwableArray1);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertNotNull(throwableArray72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str75, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test06529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06529");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = jsonDiff19.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(wrapper18);
    }

    @Test
    public void test06530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06530");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff6.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff6.getVisitor();
        foodev.jsondiff.Node node9 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.Leaf[] leafArray11 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList12 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList12, leafArray11);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap14 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf15 = jsonDiff6.findLeaves(node9, jzonElement10, (java.util.List<foodev.jsondiff.Leaf>) leafList12, intMap14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(leafArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test06531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06531");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff12.getVisitor();
        int int17 = jsonDiff12.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Leaf leaf18 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray19 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject20 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = jsonDiff12.accept(leaf18, jzonArray19, jzonObject20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNull(wildcardVisitor15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test06532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06532");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("~");
        instruction6.index = (-1);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction6);
    }

    @Test
    public void test06533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06533");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException17);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException24.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException30);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray37 = jacksonWrapperException36.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray41 = jacksonWrapperException40.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray45 = jacksonWrapperException44.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException46);
        jacksonWrapperException40.addSuppressed((java.lang.Throwable) jacksonWrapperException46);
        jacksonWrapperException38.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        jacksonWrapperException33.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper55 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff56 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper55);
        foodev.jsondiff.JsonDiff jsonDiff57 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper55);
        foodev.jsondiff.JsonDiff jsonDiff58 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper55);
        foodev.jsondiff.JsonDiff jsonDiff59 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper55);
        java.lang.Class<?> wildcardClass60 = jsonDiff59.getClass();
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply((java.lang.Object) jacksonWrapperException38, (java.lang.Object) jsonDiff59);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test06534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06534");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff5.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction9.index = (short) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff15.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff15.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction19.index = (short) 100;
        boolean boolean22 = instruction19.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction23 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper24 = instruction23.oper;
        instruction23.key = "~";
        int int27 = instruction23.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper28);
        int int31 = jsonDiff29.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction33 = jsonDiff29.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean34 = instruction33.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff36 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper35);
        int int38 = jsonDiff36.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction40 = jsonDiff36.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper41 = instruction40.oper;
        instruction33.oper = oper41;
        instruction23.oper = oper41;
        foodev.jsondiff.Oper oper44 = instruction23.oper;
        instruction19.oper = oper44;
        instruction9.oper = oper44;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement47 = jacksonWrapper0.wrap((java.lang.Object) instruction9);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(oper24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(instruction33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(instruction40);
        org.junit.Assert.assertTrue("'" + oper41 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper41.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper44 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper44.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test06535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06535");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException6);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = jacksonWrapper0.wrap((java.lang.Object) jacksonWrapperException7);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
    }

    @Test
    public void test06536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06536");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = jsonDiff9.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor10);
    }

    @Test
    public void test06537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06537");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException3);
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException3);
        java.lang.String str7 = jacksonWrapperException3.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str7, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test06538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06538");
        foodev.jsondiff.jsonwrap.Wrapper wrapper0 = null;
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff(wrapper0);
        foodev.jsondiff.JsonDiff.Instruction instruction3 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("~");
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper8 = instruction5.oper;
        boolean boolean9 = instruction5.isIndexed();
        org.junit.Assert.assertNotNull(instruction3);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + oper8 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper8.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test06539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06539");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff18.create("");
        int int22 = jsonDiff18.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff18.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int26 = jsonDiff18.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper27 = jsonDiff18.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper28 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff(wrapper28);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement30 = wrapper14.wrap((java.lang.Object) wrapper28);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(wrapper27);
        org.junit.Assert.assertNotNull(wrapper28);
    }

    @Test
    public void test06540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06540");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff9.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff9.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff9.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff9.create("");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff9.checkIndex(jzonElement18, 97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNull(wildcardVisitor15);
        org.junit.Assert.assertNotNull(instruction17);
    }

    @Test
    public void test06541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06541");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff2.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff2.getVisitor();
        int int9 = jsonDiff2.isIndexed("~");
        foodev.jsondiff.Node node10 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.Leaf[] leafArray12 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList13 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList13, leafArray12);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap15 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf16 = jsonDiff2.findLeaves(node10, jzonElement11, (java.util.List<foodev.jsondiff.Leaf>) leafList13, intMap15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(leafArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test06542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06542");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper1);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.Visitor<?> wildcardVisitor5 = jsonDiff4.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff4.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff10.getVisitor();
        int int13 = jsonDiff10.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff10.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper14);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = jacksonWrapper0.wrap((java.lang.Object) jsonDiff16);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNull(wildcardVisitor5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(wrapper14);
    }

    @Test
    public void test06543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06543");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        int int16 = jsonDiff14.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = jsonDiff14.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test06544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06544");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int8 = instruction7.index;
        int int9 = instruction7.index;
        boolean boolean10 = instruction7.isIndexed();
        instruction7.index = 10;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test06545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06545");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff9.create("");
        java.lang.String str12 = instruction11.key;
        instruction11.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.Visitor<?> wildcardVisitor19 = jsonDiff18.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff18.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff18.factory;
        int int24 = jsonDiff18.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper25 = jsonDiff18.factory;
        int int27 = jsonDiff18.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff18.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper30 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff jsonDiff31 = new foodev.jsondiff.JsonDiff(wrapper30);
        foodev.jsondiff.jsonwrap.Wrapper wrapper32 = jsonDiff31.factory;
        foodev.jsondiff.JsonDiff jsonDiff33 = new foodev.jsondiff.JsonDiff(wrapper32);
        foodev.jsondiff.Visitor<?> wildcardVisitor34 = jsonDiff33.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction36 = jsonDiff33.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Oper oper37 = instruction36.oper;
        instruction11.oper = oper37;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement39 = gsonWrapper0.wrap((java.lang.Object) oper37);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNull(wildcardVisitor19);
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(wrapper25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(instruction29);
        org.junit.Assert.assertNotNull(wrapper30);
        org.junit.Assert.assertNotNull(wrapper32);
        org.junit.Assert.assertNull(wildcardVisitor34);
        org.junit.Assert.assertNotNull(instruction36);
        org.junit.Assert.assertTrue("'" + oper37 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper37.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test06546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06546");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Leaf leaf13 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray14 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = jsonDiff3.accept(leaf13, jzonArray14, jzonObject15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test06547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06547");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper11);
        int int15 = jsonDiff13.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor18 = jsonDiff13.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff13.checkIndex(jzonElement19, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNull(wildcardVisitor18);
    }

    @Test
    public void test06548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06548");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff.Instruction instruction4 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction4.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        int int10 = jsonDiff8.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper13 = instruction12.oper;
        instruction4.oper = oper13;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException28);
        jacksonWrapperException21.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException32.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray37 = jacksonWrapperException36.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException32.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        java.lang.Throwable[] throwableArray42 = jacksonWrapperException38.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException45);
        jacksonWrapperException38.addSuppressed((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray51 = jacksonWrapperException50.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException52);
        jacksonWrapperException48.addSuppressed((java.lang.Throwable) jacksonWrapperException52);
        jacksonWrapperException29.addSuppressed((java.lang.Throwable) jacksonWrapperException48);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj56 = jsonDiff3.diff((java.lang.Object) instruction4, (java.lang.Object) jacksonWrapperException48);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + oper13 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper13.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray51);
    }

    @Test
    public void test06549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06549");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException24);
        jacksonWrapperException18.addSuppressed((java.lang.Throwable) jacksonWrapperException24);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        java.lang.Object obj32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = jsonDiff3.diff((java.lang.Object) jacksonWrapperException30, obj32);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray31);
    }

    @Test
    public void test06550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06550");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff9.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff9.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject17 = jsonDiff9.diff(jzonElement15, jzonElement16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
    }

    @Test
    public void test06551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06551");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException30);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException17);
        java.lang.String str36 = jacksonWrapperException17.toString();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str36, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test06552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06552");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction7.index = (short) 100;
        int int10 = instruction7.index;
        instruction7.index = (byte) -1;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
    }

    @Test
    public void test06553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06553");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff4.create("hi!");
        int int8 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int10 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Node node11 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.Leaf[] leafArray13 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList14 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList14, leafArray13);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap16 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf17 = jsonDiff4.findLeaves(node11, jzonElement12, (java.util.List<foodev.jsondiff.Leaf>) leafList14, intMap16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(leafArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test06554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06554");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff5.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff10.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff10.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff10.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff15.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff15.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper18);
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff19.factory;
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff(wrapper20);
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff21.create("");
        int int25 = jsonDiff21.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper26 = jsonDiff21.factory;
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff(wrapper26);
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff(wrapper26);
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff(wrapper26);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj30 = jsonDiff5.diff((java.lang.Object) jsonDiff15, (java.lang.Object) jsonDiff29);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(wrapper26);
    }

    @Test
    public void test06555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06555");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int13 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper18);
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff19.factory;
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff(wrapper20);
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff21.create("");
        boolean boolean24 = instruction23.isIndexed();
        instruction23.index = (short) -1;
        int int27 = instruction23.index;
        int int28 = instruction23.index;
        foodev.jsondiff.JsonDiff.Instruction instruction29 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper30 = instruction29.oper;
        instruction29.key = "~";
        instruction29.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff36 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper35);
        foodev.jsondiff.jsonwrap.Wrapper wrapper37 = jsonDiff36.factory;
        foodev.jsondiff.JsonDiff jsonDiff38 = new foodev.jsondiff.JsonDiff(wrapper37);
        foodev.jsondiff.JsonDiff.Instruction instruction40 = jsonDiff38.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction42 = jsonDiff38.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction42.index = (short) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff46 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper45);
        foodev.jsondiff.jsonwrap.Wrapper wrapper47 = jsonDiff46.factory;
        foodev.jsondiff.JsonDiff jsonDiff48 = new foodev.jsondiff.JsonDiff(wrapper47);
        foodev.jsondiff.JsonDiff.Instruction instruction50 = jsonDiff48.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction52 = jsonDiff48.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction52.index = (short) 100;
        boolean boolean55 = instruction52.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction56 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper57 = instruction56.oper;
        instruction56.key = "~";
        int int60 = instruction56.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff62 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper61);
        int int64 = jsonDiff62.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction66 = jsonDiff62.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean67 = instruction66.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff69 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper68);
        int int71 = jsonDiff69.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction73 = jsonDiff69.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper74 = instruction73.oper;
        instruction66.oper = oper74;
        instruction56.oper = oper74;
        foodev.jsondiff.Oper oper77 = instruction56.oper;
        instruction52.oper = oper77;
        instruction42.oper = oper77;
        instruction29.oper = oper77;
        instruction23.oper = oper77;
        instruction23.index = (byte) 10;
        instruction23.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        foodev.jsondiff.jsonwrap.JzonElement jzonElement86 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement17, instruction23, jzonElement86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(oper30);
        org.junit.Assert.assertNotNull(wrapper37);
        org.junit.Assert.assertNotNull(instruction40);
        org.junit.Assert.assertNotNull(instruction42);
        org.junit.Assert.assertNotNull(wrapper47);
        org.junit.Assert.assertNotNull(instruction50);
        org.junit.Assert.assertNotNull(instruction52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(oper57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(instruction66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(instruction73);
        org.junit.Assert.assertTrue("'" + oper74 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper74.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper77 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper77.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test06556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06556");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff15.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff15.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction19.index = (short) 100;
        boolean boolean22 = instruction19.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction23 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper24 = instruction23.oper;
        instruction23.key = "~";
        int int27 = instruction23.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper28);
        int int31 = jsonDiff29.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction33 = jsonDiff29.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean34 = instruction33.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff36 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper35);
        int int38 = jsonDiff36.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction40 = jsonDiff36.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper41 = instruction40.oper;
        instruction33.oper = oper41;
        instruction23.oper = oper41;
        foodev.jsondiff.Oper oper44 = instruction23.oper;
        instruction19.oper = oper44;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff47 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper46);
        foodev.jsondiff.jsonwrap.Wrapper wrapper48 = jsonDiff47.factory;
        foodev.jsondiff.JsonDiff jsonDiff49 = new foodev.jsondiff.JsonDiff(wrapper48);
        foodev.jsondiff.Visitor<?> wildcardVisitor50 = jsonDiff49.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction52 = jsonDiff49.create("");
        instruction52.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper55 = instruction52.oper;
        instruction19.oper = oper55;
        java.lang.String str57 = instruction19.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff59 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper58);
        int int61 = jsonDiff59.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction63 = jsonDiff59.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean64 = instruction63.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff66 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper65);
        int int68 = jsonDiff66.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction70 = jsonDiff66.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper71 = instruction70.oper;
        instruction63.oper = oper71;
        instruction19.oper = oper71;
        instruction11.oper = oper71;
        java.lang.String str75 = instruction11.key;
        foodev.jsondiff.Oper oper76 = instruction11.oper;
        instruction11.key = "hi!";
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(oper24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(instruction33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(instruction40);
        org.junit.Assert.assertTrue("'" + oper41 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper41.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper44 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper44.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper48);
        org.junit.Assert.assertNull(wildcardVisitor50);
        org.junit.Assert.assertNotNull(instruction52);
        org.junit.Assert.assertTrue("'" + oper55 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper55.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str57, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(instruction63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(instruction70);
        org.junit.Assert.assertTrue("'" + oper71 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper71.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str75, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + oper76 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper76.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test06557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06557");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray1 = jacksonWrapperException0.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException17);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException33.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray38 = jacksonWrapperException37.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException39);
        jacksonWrapperException33.addSuppressed((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException45.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException45.addSuppressed((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException49);
        jacksonWrapperException42.addSuppressed((java.lang.Throwable) jacksonWrapperException50);
        java.lang.Throwable[] throwableArray52 = jacksonWrapperException42.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray55 = jacksonWrapperException54.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException54.addSuppressed((java.lang.Throwable) jacksonWrapperException56);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException56);
        jacksonWrapperException42.addSuppressed((java.lang.Throwable) jacksonWrapperException58);
        jacksonWrapperException31.addSuppressed((java.lang.Throwable) jacksonWrapperException58);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException58);
        java.lang.String str62 = jacksonWrapperException58.toString();
        org.junit.Assert.assertNotNull(throwableArray1);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str62, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
    }

    @Test
    public void test06558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06558");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        int int9 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff18.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor21 = jsonDiff18.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff18.create("hi!");
        instruction23.index = '4';
        int int26 = instruction23.index;
        java.lang.String str27 = instruction23.key;
        instruction23.index = 0;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement30 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff13.applyPartial(jzonElement14, instruction23, jzonElement30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertNull(wildcardVisitor21);
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
    }

    @Test
    public void test06559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06559");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException24);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException24);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException24.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException33);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException34);
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray30);
    }

    @Test
    public void test06560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06560");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean6 = instruction5.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        int int10 = jsonDiff8.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper13 = instruction12.oper;
        instruction5.oper = oper13;
        foodev.jsondiff.Oper oper15 = instruction5.oper;
        instruction5.index = 100;
        instruction5.key = "";
        foodev.jsondiff.Oper oper20 = instruction5.oper;
        int int21 = instruction5.index;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + oper13 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper13.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper15 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper15.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper20 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper20.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
    }

    @Test
    public void test06561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06561");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException5);
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException3.getSuppressed();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException3.getSuppressed();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException3.getSuppressed();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException3.getSuppressed();
        java.lang.String str19 = jacksonWrapperException3.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str19, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test06562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06562");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        boolean boolean9 = instruction8.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("");
        int int16 = instruction15.index;
        boolean boolean17 = instruction15.isIndexed();
        instruction15.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper20);
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff21.factory;
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff(wrapper22);
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff23.create("");
        boolean boolean26 = instruction25.isIndexed();
        instruction25.index = (short) -1;
        foodev.jsondiff.Oper oper29 = instruction25.oper;
        instruction15.oper = oper29;
        foodev.jsondiff.JsonDiff.Instruction instruction31 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper32 = instruction31.oper;
        instruction31.key = "~";
        java.lang.String str35 = instruction31.key;
        foodev.jsondiff.JsonDiff.Instruction instruction36 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper37 = instruction36.oper;
        instruction36.index = (-1);
        java.lang.String str40 = instruction36.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff42 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper41);
        foodev.jsondiff.jsonwrap.Wrapper wrapper43 = jsonDiff42.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction45 = jsonDiff42.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction46 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction46.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff50 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper49);
        int int52 = jsonDiff50.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction54 = jsonDiff50.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper55 = instruction54.oper;
        instruction46.oper = oper55;
        instruction45.oper = oper55;
        instruction36.oper = oper55;
        instruction31.oper = oper55;
        instruction15.oper = oper55;
        instruction8.oper = oper55;
        java.lang.String str62 = instruction8.key;
        boolean boolean63 = instruction8.isIndexed();
        instruction8.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        instruction8.index = 97;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + oper29 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper29.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNull(oper32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "~" + "'", str35, "~");
        org.junit.Assert.assertNull(oper37);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(wrapper43);
        org.junit.Assert.assertNotNull(instruction45);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(instruction54);
        org.junit.Assert.assertTrue("'" + oper55 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper55.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test06563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06563");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.String str2 = jacksonWrapperException1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str2, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test06564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06564");
        foodev.jsondiff.jsonwrap.Wrapper wrapper0 = null;
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff(wrapper0);
        foodev.jsondiff.JsonDiff.Instruction instruction3 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("~");
        foodev.jsondiff.Node node6 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = null;
        foodev.jsondiff.Leaf[] leafArray8 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList9 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList9, leafArray8);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap11 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf12 = jsonDiff1.findLeaves(node6, jzonElement7, (java.util.List<foodev.jsondiff.Leaf>) leafList9, intMap11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(instruction3);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(leafArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test06565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06565");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        int int14 = jsonDiff12.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject17 = jsonDiff12.diff(jzonElement15, jzonElement16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test06566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06566");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction11.index = 100;
        boolean boolean14 = instruction11.isIndexed();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test06567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06567");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = wrapper7.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
    }

    @Test
    public void test06568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06568");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement12, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper11);
    }

    @Test
    public void test06569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06569");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("hi!");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff3.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNull(wildcardVisitor13);
    }

    @Test
    public void test06570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06570");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = wrapper10.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test06571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06571");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("hi!");
        instruction8.index = '4';
        int int11 = instruction8.index;
        int int12 = instruction8.index;
        boolean boolean13 = instruction8.isIndexed();
        instruction8.index = 35;
        boolean boolean16 = instruction8.isIndexed();
        instruction8.key = "~";
        int int19 = instruction8.index;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 35 + "'", int19 == 35);
    }

    @Test
    public void test06572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06572");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff9.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.JsonDiff.Instruction instruction12 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction12.key = "";
        instruction12.index = 'a';
        instruction12.index = 1;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper19);
        foodev.jsondiff.jsonwrap.Wrapper wrapper21 = jsonDiff20.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff20.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction23.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        foodev.jsondiff.JsonDiff.Instruction instruction26 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction26.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper29);
        int int32 = jsonDiff30.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction34 = jsonDiff30.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper35 = instruction34.oper;
        instruction26.oper = oper35;
        instruction23.oper = oper35;
        instruction12.oper = oper35;
        foodev.jsondiff.Oper oper39 = instruction12.oper;
        int int40 = instruction12.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff42 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper41);
        foodev.jsondiff.jsonwrap.Wrapper wrapper43 = jsonDiff42.factory;
        foodev.jsondiff.JsonDiff jsonDiff44 = new foodev.jsondiff.JsonDiff(wrapper43);
        foodev.jsondiff.JsonDiff.Instruction instruction46 = jsonDiff44.create("");
        foodev.jsondiff.Oper oper47 = instruction46.oper;
        instruction12.oper = oper47;
        instruction12.index = (short) -1;
        instruction12.index = (byte) 0;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement53 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff9.applyPartial(jzonElement11, instruction12, jzonElement53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper21);
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(instruction34);
        org.junit.Assert.assertTrue("'" + oper35 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper35.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper39 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper39.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(wrapper43);
        org.junit.Assert.assertNotNull(instruction46);
        org.junit.Assert.assertTrue("'" + oper47 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper47.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test06573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06573");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper20);
        int int23 = jsonDiff21.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff21.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean26 = instruction25.isIndexed();
        int int27 = instruction25.index;
        instruction25.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        int int30 = instruction25.index;
        instruction25.index = 0;
        java.lang.String str33 = instruction25.key;
        java.lang.String str34 = instruction25.key;
        foodev.jsondiff.Oper oper35 = instruction25.oper;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement36 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement19, instruction25, jzonElement36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str33, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str34, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + oper35 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper35.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test06574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06574");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        int int18 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray35 = jacksonWrapperException34.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException36);
        jacksonWrapperException30.addSuppressed((java.lang.Throwable) jacksonWrapperException36);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException36);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException41);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement43 = wrapper20.wrap((java.lang.Object) jacksonWrapperException42);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray35);
    }

    @Test
    public void test06575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06575");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException23);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement25 = jacksonWrapper0.wrap((java.lang.Object) jacksonWrapperException24);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray20);
    }

    @Test
    public void test06576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06576");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor17 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject20 = jsonDiff3.diff(jzonElement18, jzonElement19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertNull(wildcardVisitor17);
    }

    @Test
    public void test06577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06577");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray37 = jacksonWrapperException36.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray41 = jacksonWrapperException40.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException42);
        jacksonWrapperException36.addSuppressed((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException42.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException49);
        jacksonWrapperException42.addSuppressed((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException50);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException56);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException56);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException56);
        java.lang.String str60 = jacksonWrapperException56.toString();
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~" + "'", str60, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
    }

    @Test
    public void test06578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06578");
        foodev.jsondiff.JsonDiff.Instruction instruction0 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper1 = instruction0.oper;
        instruction0.key = "~";
        instruction0.key = "";
        foodev.jsondiff.JsonDiff.Instruction instruction6 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction6.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper9);
        int int12 = jsonDiff10.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff10.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper15 = instruction14.oper;
        instruction6.oper = oper15;
        instruction0.oper = oper15;
        instruction0.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        instruction0.index = (byte) 0;
        instruction0.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        instruction0.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        org.junit.Assert.assertNull(oper1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + oper15 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper15.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test06579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06579");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff5.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff5.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff5.factory;
        int int11 = jsonDiff5.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper12);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = jacksonWrapper0.wrap((java.lang.Object) jsonDiff14);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test06580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06580");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        int int9 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = jsonDiff13.diff("~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test06581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06581");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.Visitor<?> wildcardVisitor19 = jsonDiff18.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff18.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement22 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff18.checkIndex(jzonElement22, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNull(wildcardVisitor19);
        org.junit.Assert.assertNotNull(instruction21);
    }

    @Test
    public void test06582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06582");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff1.create("");
        java.lang.Class<?> wildcardClass10 = jsonDiff1.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test06583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06583");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        java.lang.String str7 = jacksonWrapperException6.toString();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str7, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
    }

    @Test
    public void test06584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06584");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.Node node10 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.Leaf[] leafArray12 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList13 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList13, leafArray12);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap15 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf16 = jsonDiff1.findLeaves(node10, jzonElement11, (java.util.List<foodev.jsondiff.Leaf>) leafList13, intMap15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(leafArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test06585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06585");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int13 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff18.create("");
        boolean boolean21 = instruction20.isIndexed();
        instruction20.index = (short) -1;
        instruction20.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction20.key = "hi!";
        int int28 = instruction20.index;
        instruction20.index = 0;
        java.lang.String str31 = instruction20.key;
        java.lang.String str32 = instruction20.key;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement33 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement14, instruction20, jzonElement33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
    }

    @Test
    public void test06586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06586");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = jsonDiff1.apply("~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
    }

    @Test
    public void test06587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06587");
        foodev.jsondiff.jsonwrap.Wrapper wrapper0 = null;
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff(wrapper0);
        foodev.jsondiff.JsonDiff.Instruction instruction3 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject8 = jsonDiff1.diff(jzonElement6, jzonElement7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(instruction3);
        org.junit.Assert.assertNotNull(instruction5);
    }

    @Test
    public void test06588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06588");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff10.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = jsonDiff10.diff("", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction12);
    }

    @Test
    public void test06589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06589");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException22);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException25);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException32.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray37 = jacksonWrapperException36.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException41);
        jacksonWrapperException32.addSuppressed((java.lang.Throwable) jacksonWrapperException41);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        java.lang.Class<?> wildcardClass45 = jacksonWrapperException25.getClass();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test06590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06590");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Node node12 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        foodev.jsondiff.Leaf[] leafArray14 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList15 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList15, leafArray14);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap17 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf18 = jsonDiff3.findLeaves(node12, jzonElement13, (java.util.List<foodev.jsondiff.Leaf>) leafList15, intMap17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(leafArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test06591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06591");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int11 = jsonDiff3.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff3.factory;
        int int16 = jsonDiff3.isIndexed("hi!");
        foodev.jsondiff.Leaf leaf17 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray18 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = jsonDiff3.accept(leaf17, jzonArray18, jzonObject19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test06592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06592");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff.Instruction instruction11 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper12 = instruction11.oper;
        instruction11.index = (-1);
        java.lang.String str15 = instruction11.key;
        boolean boolean16 = instruction11.isIndexed();
        instruction11.key = "";
        instruction11.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        java.lang.String str21 = instruction11.key;
        java.lang.String str22 = instruction11.key;
        boolean boolean23 = instruction11.isIndexed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement24 = wrapper9.wrap((java.lang.Object) instruction11);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(oper12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str21, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str22, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test06593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06593");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement11, jzonElement12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNull(wildcardVisitor10);
    }

    @Test
    public void test06594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06594");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean6 = instruction5.isIndexed();
        int int7 = instruction5.index;
        int int8 = instruction5.index;
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction5.index = (byte) 1;
        instruction5.index = 35;
        java.lang.String str15 = instruction5.key;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str15, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test06595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06595");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        int int11 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int13 = jsonDiff1.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff1.create("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff19.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = jsonDiff19.diff("", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNotNull(wrapper20);
    }

    @Test
    public void test06596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06596");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int10 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement13, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test06597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06597");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff9.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff9.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff9.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = wrapper13.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper13);
    }

    @Test
    public void test06598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06598");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        int int14 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper18);
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff19.factory;
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff(wrapper20);
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff21.create("");
        boolean boolean24 = instruction23.isIndexed();
        instruction23.index = (short) -1;
        instruction23.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        boolean boolean29 = instruction23.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff31 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper30);
        foodev.jsondiff.jsonwrap.Wrapper wrapper32 = jsonDiff31.factory;
        foodev.jsondiff.JsonDiff jsonDiff33 = new foodev.jsondiff.JsonDiff(wrapper32);
        foodev.jsondiff.Visitor<?> wildcardVisitor34 = jsonDiff33.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction36 = jsonDiff33.create("");
        instruction36.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper39 = instruction36.oper;
        instruction36.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff43 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper42);
        foodev.jsondiff.jsonwrap.Wrapper wrapper44 = jsonDiff43.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction46 = jsonDiff43.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction47 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction47.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff51 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper50);
        int int53 = jsonDiff51.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction55 = jsonDiff51.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper56 = instruction55.oper;
        instruction47.oper = oper56;
        instruction46.oper = oper56;
        instruction36.oper = oper56;
        instruction23.oper = oper56;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff62 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper61);
        foodev.jsondiff.jsonwrap.Wrapper wrapper63 = jsonDiff62.factory;
        foodev.jsondiff.JsonDiff jsonDiff64 = new foodev.jsondiff.JsonDiff(wrapper63);
        foodev.jsondiff.JsonDiff.Instruction instruction66 = jsonDiff64.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean67 = instruction66.isIndexed();
        foodev.jsondiff.Oper oper68 = instruction66.oper;
        instruction23.oper = oper68;
        instruction23.index = 100;
        boolean boolean72 = instruction23.isIndexed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement73 = wrapper15.wrap((java.lang.Object) instruction23);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wrapper32);
        org.junit.Assert.assertNull(wildcardVisitor34);
        org.junit.Assert.assertNotNull(instruction36);
        org.junit.Assert.assertTrue("'" + oper39 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper39.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper44);
        org.junit.Assert.assertNotNull(instruction46);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(instruction55);
        org.junit.Assert.assertTrue("'" + oper56 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper56.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper63);
        org.junit.Assert.assertNotNull(instruction66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + oper68 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper68.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test06599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06599");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = jsonDiff12.apply("~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test06600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06600");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        boolean boolean6 = instruction5.isIndexed();
        instruction5.index = (short) -1;
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction5.key = "hi!";
        int int13 = instruction5.index;
        foodev.jsondiff.Oper oper14 = instruction5.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        int int18 = jsonDiff16.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor19 = jsonDiff16.getVisitor();
        int int21 = jsonDiff16.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff16.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.String str24 = instruction23.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff26 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper25);
        foodev.jsondiff.jsonwrap.Wrapper wrapper27 = jsonDiff26.factory;
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff(wrapper27);
        foodev.jsondiff.JsonDiff.Instruction instruction30 = jsonDiff28.create("");
        int int31 = instruction30.index;
        boolean boolean32 = instruction30.isIndexed();
        instruction30.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff36 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper35);
        foodev.jsondiff.jsonwrap.Wrapper wrapper37 = jsonDiff36.factory;
        foodev.jsondiff.JsonDiff jsonDiff38 = new foodev.jsondiff.JsonDiff(wrapper37);
        foodev.jsondiff.JsonDiff.Instruction instruction40 = jsonDiff38.create("");
        boolean boolean41 = instruction40.isIndexed();
        instruction40.index = (short) -1;
        instruction40.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction40.key = "hi!";
        foodev.jsondiff.Oper oper48 = instruction40.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff50 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper49);
        foodev.jsondiff.jsonwrap.Wrapper wrapper51 = jsonDiff50.factory;
        foodev.jsondiff.JsonDiff jsonDiff52 = new foodev.jsondiff.JsonDiff(wrapper51);
        foodev.jsondiff.JsonDiff.Instruction instruction54 = jsonDiff52.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean55 = instruction54.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff57 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper56);
        int int59 = jsonDiff57.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction61 = jsonDiff57.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper62 = instruction61.oper;
        instruction54.oper = oper62;
        instruction40.oper = oper62;
        instruction30.oper = oper62;
        instruction23.oper = oper62;
        instruction5.oper = oper62;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff69 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper68);
        foodev.jsondiff.jsonwrap.Wrapper wrapper70 = jsonDiff69.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction72 = jsonDiff69.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int74 = jsonDiff69.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int76 = jsonDiff69.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction78 = jsonDiff69.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int80 = jsonDiff69.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction82 = jsonDiff69.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        java.lang.String str83 = instruction82.key;
        foodev.jsondiff.Oper oper84 = null;
        instruction82.oper = oper84;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper86 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff87 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper86);
        int int89 = jsonDiff87.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor90 = jsonDiff87.getVisitor();
        int int92 = jsonDiff87.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction94 = jsonDiff87.create("");
        foodev.jsondiff.Oper oper95 = instruction94.oper;
        instruction82.oper = oper95;
        instruction5.oper = oper95;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + oper14 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper14.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str24, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertNotNull(wrapper27);
        org.junit.Assert.assertNotNull(instruction30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wrapper37);
        org.junit.Assert.assertNotNull(instruction40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + oper48 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper48.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper51);
        org.junit.Assert.assertNotNull(instruction54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(instruction61);
        org.junit.Assert.assertTrue("'" + oper62 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper62.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper70);
        org.junit.Assert.assertNotNull(instruction72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(instruction78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(instruction82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str83, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor90);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNotNull(instruction94);
        org.junit.Assert.assertTrue("'" + oper95 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper95.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test06601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06601");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        int int9 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement10, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test06602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06602");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Node node10 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.Leaf[] leafArray12 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList13 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList13, leafArray12);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap15 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf16 = jsonDiff1.findLeaves(node10, jzonElement11, (java.util.List<foodev.jsondiff.Leaf>) leafList13, intMap15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(leafArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test06603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06603");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        java.lang.Throwable throwable13 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException(throwable13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException19.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException23.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException19.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException18.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray41 = jacksonWrapperException40.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException40.addSuppressed((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray59 = jacksonWrapperException58.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException58);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray63 = jacksonWrapperException62.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException62);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException64);
        jacksonWrapperException58.addSuppressed((java.lang.Throwable) jacksonWrapperException64);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException58);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException67);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException67);
        jacksonWrapperException55.addSuppressed((java.lang.Throwable) jacksonWrapperException67);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException71 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray72 = jacksonWrapperException71.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException73 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException71.addSuppressed((java.lang.Throwable) jacksonWrapperException73);
        jacksonWrapperException55.addSuppressed((java.lang.Throwable) jacksonWrapperException71);
        java.lang.Throwable[] throwableArray76 = jacksonWrapperException71.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException77 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException71);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException78 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException77);
        jacksonWrapperException46.addSuppressed((java.lang.Throwable) jacksonWrapperException78);
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) jacksonWrapperException14, (java.lang.Object) jacksonWrapperException46);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray72);
        org.junit.Assert.assertNotNull(throwableArray76);
    }

    @Test
    public void test06604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06604");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement30 = jacksonWrapper0.wrap((java.lang.Object) jacksonWrapperException20);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray24);
    }

    @Test
    public void test06605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06605");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException21.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray35 = jacksonWrapperException34.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException38.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException40);
        jacksonWrapperException34.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException45.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray50 = jacksonWrapperException49.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException49);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException51);
        jacksonWrapperException45.addSuppressed((java.lang.Throwable) jacksonWrapperException51);
        jacksonWrapperException44.addSuppressed((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException45);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException45);
        jacksonWrapperException19.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray59 = jacksonWrapperException58.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException58.addSuppressed((java.lang.Throwable) jacksonWrapperException60);
        java.lang.Throwable[] throwableArray62 = jacksonWrapperException60.getSuppressed();
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException60);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException60);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException64);
        java.lang.String str66 = jacksonWrapperException64.toString();
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str66, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test06606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06606");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement5 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff4.checkIndex(jzonElement5, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test06607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06607");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper5);
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff7.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff7.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.Class<?> wildcardClass11 = jsonDiff7.getClass();
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test06608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06608");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray36 = jacksonWrapperException35.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray40 = jacksonWrapperException39.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException41);
        jacksonWrapperException35.addSuppressed((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException45);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        java.lang.String str49 = jacksonWrapperException48.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str49, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test06609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06609");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff4.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = jsonDiff4.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNotNull(wrapper6);
    }

    @Test
    public void test06610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06610");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement5 = jacksonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
    }

    @Test
    public void test06611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06611");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = wrapper15.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(wrapper15);
    }

    @Test
    public void test06612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06612");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int8 = instruction7.index;
        foodev.jsondiff.Oper oper9 = null;
        instruction7.oper = oper9;
        int int11 = instruction7.index;
        int int12 = instruction7.index;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = jacksonWrapper0.wrap((java.lang.Object) instruction7);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test06613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06613");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff1.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass11 = wildcardVisitor10.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor10);
    }

    @Test
    public void test06614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06614");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        int int14 = jsonDiff11.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = jsonDiff11.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test06615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06615");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException31.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException33);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        java.lang.Throwable[] throwableArray40 = jacksonWrapperException37.getSuppressed();
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        java.lang.String str43 = jacksonWrapperException42.toString();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~" + "'", str43, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
    }

    @Test
    public void test06616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06616");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException24.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException30);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException30);
        jacksonWrapperException23.addSuppressed((java.lang.Throwable) jacksonWrapperException24);
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException23);
        java.lang.Throwable[] throwableArray36 = jacksonWrapperException35.getSuppressed();
        java.lang.Throwable[] throwableArray37 = jacksonWrapperException35.getSuppressed();
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException35);
        java.lang.String str39 = jacksonWrapperException8.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str39, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test06617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06617");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException32.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException34);
        jacksonWrapperException28.addSuppressed((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException39);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException39);
        jacksonWrapperException21.addSuppressed((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException21);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray33);
    }

    @Test
    public void test06618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06618");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff5.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = jsonDiff5.apply("", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNull(wildcardVisitor8);
    }

    @Test
    public void test06619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06619");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        int int18 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff3.factory;
        foodev.jsondiff.Leaf leaf21 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray22 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject23 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean24 = jsonDiff3.accept(leaf21, jzonArray22, jzonObject23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(wrapper20);
    }

    @Test
    public void test06620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06620");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int6 = instruction5.index;
        boolean boolean7 = instruction5.isIndexed();
        instruction5.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("");
        boolean boolean16 = instruction15.isIndexed();
        instruction15.index = (short) -1;
        foodev.jsondiff.Oper oper19 = instruction15.oper;
        instruction5.oper = oper19;
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        instruction5.index = (byte) 1;
        foodev.jsondiff.Oper oper25 = instruction5.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper26);
        foodev.jsondiff.jsonwrap.Wrapper wrapper28 = jsonDiff27.factory;
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff(wrapper28);
        foodev.jsondiff.JsonDiff.Instruction instruction31 = jsonDiff29.create("");
        boolean boolean32 = instruction31.isIndexed();
        instruction31.key = "~";
        boolean boolean35 = instruction31.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper36);
        foodev.jsondiff.jsonwrap.Wrapper wrapper38 = jsonDiff37.factory;
        foodev.jsondiff.JsonDiff jsonDiff39 = new foodev.jsondiff.JsonDiff(wrapper38);
        foodev.jsondiff.JsonDiff.Instruction instruction41 = jsonDiff39.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction43 = jsonDiff39.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction43.index = (short) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff47 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper46);
        foodev.jsondiff.jsonwrap.Wrapper wrapper48 = jsonDiff47.factory;
        foodev.jsondiff.JsonDiff jsonDiff49 = new foodev.jsondiff.JsonDiff(wrapper48);
        foodev.jsondiff.JsonDiff.Instruction instruction51 = jsonDiff49.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction53 = jsonDiff49.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction53.index = (short) 100;
        boolean boolean56 = instruction53.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction57 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper58 = instruction57.oper;
        instruction57.key = "~";
        int int61 = instruction57.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff63 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper62);
        int int65 = jsonDiff63.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction67 = jsonDiff63.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean68 = instruction67.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff70 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper69);
        int int72 = jsonDiff70.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction74 = jsonDiff70.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper75 = instruction74.oper;
        instruction67.oper = oper75;
        instruction57.oper = oper75;
        foodev.jsondiff.Oper oper78 = instruction57.oper;
        instruction53.oper = oper78;
        instruction43.oper = oper78;
        foodev.jsondiff.Oper oper81 = instruction43.oper;
        instruction31.oper = oper81;
        instruction5.oper = oper81;
        instruction5.key = "";
        instruction5.index = 97;
        instruction5.index = 1;
        instruction5.index = 'a';
        foodev.jsondiff.Oper oper92 = instruction5.oper;
        foodev.jsondiff.Oper oper93 = instruction5.oper;
        java.lang.String str94 = instruction5.key;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + oper19 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper19.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper25 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper25.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper28);
        org.junit.Assert.assertNotNull(instruction31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wrapper38);
        org.junit.Assert.assertNotNull(instruction41);
        org.junit.Assert.assertNotNull(instruction43);
        org.junit.Assert.assertNotNull(wrapper48);
        org.junit.Assert.assertNotNull(instruction51);
        org.junit.Assert.assertNotNull(instruction53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(oper58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(instruction67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(instruction74);
        org.junit.Assert.assertTrue("'" + oper75 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper75.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper78 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper78.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper81 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper81.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper92 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper92.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper93 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper93.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "" + "'", str94, "");
    }

    @Test
    public void test06621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06621");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff4.create("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff4.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff4.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper9);
        int int12 = jsonDiff10.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff10.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction14.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        boolean boolean17 = instruction14.isIndexed();
        instruction14.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper20 = instruction14.oper;
        instruction14.index = '4';
        int int23 = instruction14.index;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement24 = wrapper8.wrap((java.lang.Object) int23);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Integer cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + oper20 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper20.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
    }

    @Test
    public void test06622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06622");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException31.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray36 = jacksonWrapperException35.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException37);
        jacksonWrapperException31.addSuppressed((java.lang.Throwable) jacksonWrapperException37);
        jacksonWrapperException29.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        java.lang.Throwable[] throwableArray43 = jacksonWrapperException29.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray43);
    }

    @Test
    public void test06623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06623");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        int int10 = jsonDiff1.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Leaf leaf17 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray18 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = jsonDiff1.accept(leaf17, jzonArray18, jzonObject19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(instruction16);
    }

    @Test
    public void test06624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06624");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException21.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException30);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray37 = jacksonWrapperException36.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException36.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException32.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        java.lang.Throwable[] throwableArray42 = jacksonWrapperException40.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray42);
    }

    @Test
    public void test06625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06625");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff5.factory;
        foodev.jsondiff.Leaf leaf7 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray8 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject9 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = jsonDiff5.accept(leaf7, jzonArray8, jzonObject9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper6);
    }

    @Test
    public void test06626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06626");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        int int9 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Node node10 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.Leaf[] leafArray12 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList13 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList13, leafArray12);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap15 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf16 = jsonDiff1.findLeaves(node10, jzonElement11, (java.util.List<foodev.jsondiff.Leaf>) leafList13, intMap15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(leafArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test06627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06627");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Node node10 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.Leaf[] leafArray12 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList13 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList13, leafArray12);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap15 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf16 = jsonDiff3.findLeaves(node10, jzonElement11, (java.util.List<foodev.jsondiff.Leaf>) leafList13, intMap15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(leafArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test06628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06628");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean6 = instruction5.isIndexed();
        int int7 = instruction5.index;
        int int8 = instruction5.index;
        boolean boolean9 = instruction5.isIndexed();
        instruction5.index = (byte) 1;
        int int12 = instruction5.index;
        instruction5.key = "";
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }

    @Test
    public void test06629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06629");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int16 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction18 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper19 = instruction18.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper20);
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff21.factory;
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff(wrapper22);
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff23.create("");
        boolean boolean26 = instruction25.isIndexed();
        instruction25.index = (byte) 10;
        instruction25.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction25.index = (byte) 10;
        foodev.jsondiff.Oper oper33 = instruction25.oper;
        instruction18.oper = oper33;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray38 = jacksonWrapperException37.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray44 = jacksonWrapperException43.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException43);
        jacksonWrapperException40.addSuppressed((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray50 = jacksonWrapperException49.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException49.addSuppressed((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray54 = jacksonWrapperException53.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray58 = jacksonWrapperException57.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException59);
        jacksonWrapperException53.addSuppressed((java.lang.Throwable) jacksonWrapperException59);
        jacksonWrapperException49.addSuppressed((java.lang.Throwable) jacksonWrapperException59);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException49);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException63);
        jacksonWrapperException47.addSuppressed((java.lang.Throwable) jacksonWrapperException64);
        java.lang.Class<?> wildcardClass66 = jacksonWrapperException47.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj67 = jsonDiff3.diff((java.lang.Object) oper33, (java.lang.Object) wildcardClass66);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNull(oper19);
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + oper33 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper33.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test06630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06630");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff3.getVisitor();
        int int14 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int16 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Node node17 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = null;
        foodev.jsondiff.Leaf[] leafArray19 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList20 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList20, leafArray19);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap22 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf23 = jsonDiff3.findLeaves(node17, jzonElement18, (java.util.List<foodev.jsondiff.Leaf>) leafList20, intMap22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(leafArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test06631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06631");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff20.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff20.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction24.index = (short) 100;
        boolean boolean27 = instruction24.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction28 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper29 = instruction28.oper;
        instruction28.key = "~";
        int int32 = instruction28.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff34 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper33);
        int int36 = jsonDiff34.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction38 = jsonDiff34.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean39 = instruction38.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff41 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper40);
        int int43 = jsonDiff41.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction45 = jsonDiff41.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper46 = instruction45.oper;
        instruction38.oper = oper46;
        instruction28.oper = oper46;
        foodev.jsondiff.Oper oper49 = instruction28.oper;
        instruction24.oper = oper49;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff52 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper51);
        foodev.jsondiff.jsonwrap.Wrapper wrapper53 = jsonDiff52.factory;
        foodev.jsondiff.JsonDiff jsonDiff54 = new foodev.jsondiff.JsonDiff(wrapper53);
        foodev.jsondiff.Visitor<?> wildcardVisitor55 = jsonDiff54.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction57 = jsonDiff54.create("");
        instruction57.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper60 = instruction57.oper;
        instruction24.oper = oper60;
        foodev.jsondiff.Oper oper62 = instruction24.oper;
        foodev.jsondiff.Oper oper63 = instruction24.oper;
        java.lang.String str64 = instruction24.key;
        foodev.jsondiff.Oper oper65 = instruction24.oper;
        foodev.jsondiff.Oper oper66 = instruction24.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff68 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper67);
        foodev.jsondiff.jsonwrap.Wrapper wrapper69 = jsonDiff68.factory;
        foodev.jsondiff.JsonDiff jsonDiff70 = new foodev.jsondiff.JsonDiff(wrapper69);
        foodev.jsondiff.JsonDiff.Instruction instruction72 = jsonDiff70.create("");
        boolean boolean73 = instruction72.isIndexed();
        int int74 = instruction72.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper75 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff76 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper75);
        foodev.jsondiff.jsonwrap.Wrapper wrapper77 = jsonDiff76.factory;
        foodev.jsondiff.JsonDiff jsonDiff78 = new foodev.jsondiff.JsonDiff(wrapper77);
        foodev.jsondiff.Visitor<?> wildcardVisitor79 = jsonDiff78.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction81 = jsonDiff78.create("");
        instruction81.index = ' ';
        foodev.jsondiff.Oper oper84 = instruction81.oper;
        instruction72.oper = oper84;
        instruction24.oper = oper84;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement87 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement16, instruction24, jzonElement87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(oper29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(instruction38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(instruction45);
        org.junit.Assert.assertTrue("'" + oper46 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper46.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper49 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper49.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper53);
        org.junit.Assert.assertNull(wildcardVisitor55);
        org.junit.Assert.assertNotNull(instruction57);
        org.junit.Assert.assertTrue("'" + oper60 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper60.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper62 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper62.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper63 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper63.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str64, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + oper65 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper65.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper66 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper66.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper69);
        org.junit.Assert.assertNotNull(instruction72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(wrapper77);
        org.junit.Assert.assertNull(wildcardVisitor79);
        org.junit.Assert.assertNotNull(instruction81);
        org.junit.Assert.assertTrue("'" + oper84 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper84.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test06632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06632");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff3.getVisitor();
        int int13 = jsonDiff3.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int17 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        foodev.jsondiff.Node node20 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement21 = null;
        foodev.jsondiff.Leaf[] leafArray22 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList23 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList23, leafArray22);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap25 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf26 = jsonDiff19.findLeaves(node20, jzonElement21, (java.util.List<foodev.jsondiff.Leaf>) leafList23, intMap25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNotNull(leafArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test06633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06633");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff3.create("~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertNotNull(instruction18);
    }

    @Test
    public void test06634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06634");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff3.create("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor18 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff3.factory;
        int int21 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement22 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement22, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNull(wildcardVisitor18);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test06635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06635");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff9.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff9.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff9.create("");
        int int19 = jsonDiff9.isIndexed("~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement21 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject22 = jsonDiff9.diff(jzonElement20, jzonElement21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test06636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06636");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException23.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        java.lang.Class<?> wildcardClass31 = jacksonWrapperException25.getClass();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test06637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06637");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int18 = jsonDiff12.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff12.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement21 = wrapper19.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wrapper19);
    }

    @Test
    public void test06638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06638");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        int int6 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int8 = jsonDiff3.isIndexed("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = jsonDiff3.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test06639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06639");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        java.lang.String str26 = jacksonWrapperException15.toString();
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str26, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test06640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06640");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray40 = jacksonWrapperException39.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray44 = jacksonWrapperException43.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException45);
        jacksonWrapperException39.addSuppressed((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray51 = jacksonWrapperException50.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray55 = jacksonWrapperException54.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException56);
        jacksonWrapperException50.addSuppressed((java.lang.Throwable) jacksonWrapperException56);
        jacksonWrapperException49.addSuppressed((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException50);
        jacksonWrapperException32.addSuppressed((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray63 = jacksonWrapperException62.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException62);
        jacksonWrapperException50.addSuppressed((java.lang.Throwable) jacksonWrapperException64);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException64);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException64);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException67);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException68);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException72 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray73 = jacksonWrapperException72.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException74 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException72);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException75 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException74);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException76 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray77 = jacksonWrapperException76.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException78 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException76);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException80 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray81 = jacksonWrapperException80.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException82 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException80);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException83 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException82);
        jacksonWrapperException76.addSuppressed((java.lang.Throwable) jacksonWrapperException82);
        jacksonWrapperException74.addSuppressed((java.lang.Throwable) jacksonWrapperException76);
        java.lang.Throwable[] throwableArray86 = jacksonWrapperException76.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException89 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException90 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException89);
        jacksonWrapperException76.addSuppressed((java.lang.Throwable) jacksonWrapperException89);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException92 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException76);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException93 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException92);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException94 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException92);
        jacksonWrapperException69.addSuppressed((java.lang.Throwable) jacksonWrapperException94);
        jacksonWrapperException23.addSuppressed((java.lang.Throwable) jacksonWrapperException69);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException97 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException69);
        java.lang.String str98 = jacksonWrapperException97.toString();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertNotNull(throwableArray81);
        org.junit.Assert.assertNotNull(throwableArray86);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~" + "'", str98, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
    }

    @Test
    public void test06641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06641");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray1 = jacksonWrapperException0.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException17);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException24.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException30);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException36);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException36);
        java.lang.Throwable throwable41 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", throwable41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException42);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException43);
        java.lang.String str45 = jacksonWrapperException17.toString();
        org.junit.Assert.assertNotNull(throwableArray1);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str45, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
    }

    @Test
    public void test06642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06642");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff4.create("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff4.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff4.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff4.create("~");
        int int14 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        java.lang.Class<?> wildcardClass15 = jsonDiff4.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test06643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06643");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff12.apply(jzonElement15, jzonElement16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(instruction14);
    }

    @Test
    public void test06644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06644");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.String str8 = instruction7.key;
        instruction7.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction7.index = 1;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper13);
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff14.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.Visitor<?> wildcardVisitor17 = jsonDiff16.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff16.create("");
        instruction19.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper22 = instruction19.oper;
        instruction19.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction19.index = 10;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper27);
        foodev.jsondiff.jsonwrap.Wrapper wrapper29 = jsonDiff28.factory;
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff(wrapper29);
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff30.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction34 = jsonDiff30.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction34.index = (short) 100;
        boolean boolean37 = instruction34.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff39 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper38);
        foodev.jsondiff.jsonwrap.Wrapper wrapper40 = jsonDiff39.factory;
        foodev.jsondiff.JsonDiff jsonDiff41 = new foodev.jsondiff.JsonDiff(wrapper40);
        foodev.jsondiff.JsonDiff.Instruction instruction43 = jsonDiff41.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction43.key = "hi!";
        foodev.jsondiff.Oper oper46 = instruction43.oper;
        instruction34.oper = oper46;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff49 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper48);
        foodev.jsondiff.jsonwrap.Wrapper wrapper50 = jsonDiff49.factory;
        foodev.jsondiff.JsonDiff jsonDiff51 = new foodev.jsondiff.JsonDiff(wrapper50);
        foodev.jsondiff.JsonDiff.Instruction instruction53 = jsonDiff51.create("");
        int int55 = jsonDiff51.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction57 = jsonDiff51.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction59 = jsonDiff51.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction59.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        java.lang.String str62 = instruction59.key;
        boolean boolean63 = instruction59.isIndexed();
        foodev.jsondiff.Oper oper64 = instruction59.oper;
        instruction34.oper = oper64;
        instruction19.oper = oper64;
        instruction7.oper = oper64;
        int int68 = instruction7.index;
        instruction7.key = "";
        boolean boolean71 = instruction7.isIndexed();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str8, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNull(wildcardVisitor17);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertTrue("'" + oper22 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper22.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper29);
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertNotNull(instruction34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wrapper40);
        org.junit.Assert.assertNotNull(instruction43);
        org.junit.Assert.assertTrue("'" + oper46 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper46.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper50);
        org.junit.Assert.assertNotNull(instruction53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(instruction57);
        org.junit.Assert.assertNotNull(instruction59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str62, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + oper64 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper64.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test06645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06645");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        int int11 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = jsonDiff3.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(instruction13);
    }

    @Test
    public void test06646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06646");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject14 = jsonDiff1.diff(jzonElement12, jzonElement13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNull(wildcardVisitor11);
    }

    @Test
    public void test06647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06647");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        int int16 = jsonDiff3.isIndexed("");
        int int18 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff20.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff20.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper24);
        foodev.jsondiff.jsonwrap.Wrapper wrapper26 = jsonDiff25.factory;
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff(wrapper26);
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff27.create("");
        instruction29.key = "hi!";
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement32 = wrapper23.wrap((java.lang.Object) instruction29);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertNotNull(wrapper23);
        org.junit.Assert.assertNotNull(wrapper26);
        org.junit.Assert.assertNotNull(instruction29);
    }

    @Test
    public void test06648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06648");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        int int9 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        int int14 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int16 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper19);
        foodev.jsondiff.jsonwrap.Wrapper wrapper21 = jsonDiff20.factory;
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff(wrapper21);
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff22.create("");
        int int26 = jsonDiff22.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff22.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction30 = jsonDiff22.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff22.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor33 = jsonDiff22.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper34 = jsonDiff22.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper35 = jsonDiff22.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor36 = jsonDiff22.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction38 = jsonDiff22.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement39 = wrapper18.wrap((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNotNull(wrapper21);
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertNotNull(instruction30);
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertNull(wildcardVisitor33);
        org.junit.Assert.assertNotNull(wrapper34);
        org.junit.Assert.assertNotNull(wrapper35);
        org.junit.Assert.assertNull(wildcardVisitor36);
        org.junit.Assert.assertNotNull(instruction38);
    }

    @Test
    public void test06649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06649");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int13 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int15 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement16, jzonElement17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test06650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06650");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff5.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = wildcardVisitor8.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNull(wildcardVisitor8);
    }

    @Test
    public void test06651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06651");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff3.factory;
        foodev.jsondiff.Leaf leaf10 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray11 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = jsonDiff3.accept(leaf10, jzonArray11, jzonObject12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test06652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06652");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException18);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException24);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        java.lang.String str30 = jacksonWrapperException28.toString();
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str30, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test06653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06653");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.Leaf leaf7 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray8 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject9 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = jsonDiff3.accept(leaf7, jzonArray8, jzonObject9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test06654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06654");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper4);
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff7.create("");
        int int11 = jsonDiff7.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff7.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = gsonWrapper0.wrap((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(instruction13);
    }

    @Test
    public void test06655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06655");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        int int13 = jsonDiff11.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff11.factory;
        int int16 = jsonDiff11.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff11.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = wrapper17.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wrapper17);
    }

    @Test
    public void test06656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06656");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("hi!");
        instruction8.index = '4';
        int int11 = instruction8.index;
        int int12 = instruction8.index;
        boolean boolean13 = instruction8.isIndexed();
        boolean boolean14 = instruction8.isIndexed();
        instruction8.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        int int17 = instruction8.index;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
    }

    @Test
    public void test06657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06657");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement32 = gsonWrapper0.wrap((java.lang.Object) jacksonWrapperException28);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray25);
    }

    @Test
    public void test06658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06658");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        instruction8.index = (byte) 1;
        instruction8.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        java.lang.String str13 = instruction8.key;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str13, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test06659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06659");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = jsonDiff9.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction11);
    }

    @Test
    public void test06660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06660");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        int int12 = jsonDiff9.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff9.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = jsonDiff9.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
    }

    @Test
    public void test06661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06661");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = jsonDiff1.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
    }

    @Test
    public void test06662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06662");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int13 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int15 = jsonDiff3.isIndexed("");
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff3.getVisitor();
        int int18 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper19);
        foodev.jsondiff.jsonwrap.Wrapper wrapper21 = jsonDiff20.factory;
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff(wrapper21);
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff22.create("");
        int int26 = jsonDiff22.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff22.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction30 = jsonDiff22.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor31 = jsonDiff22.getVisitor();
        int int33 = jsonDiff22.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction35 = jsonDiff22.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction37 = jsonDiff22.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~");
        java.lang.Throwable[] throwableArray40 = jacksonWrapperException39.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray44 = jacksonWrapperException43.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray48 = jacksonWrapperException47.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException49);
        jacksonWrapperException43.addSuppressed((java.lang.Throwable) jacksonWrapperException49);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException49);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray58 = jacksonWrapperException57.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray62 = jacksonWrapperException61.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException61);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException63);
        jacksonWrapperException57.addSuppressed((java.lang.Throwable) jacksonWrapperException63);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException66);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException66);
        jacksonWrapperException53.addSuppressed((java.lang.Throwable) jacksonWrapperException68);
        jacksonWrapperException39.addSuppressed((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException74 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException75 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException74);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException77 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray78 = jacksonWrapperException77.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException79 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException77);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException81 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray82 = jacksonWrapperException81.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException83 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException81);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException84 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException83);
        jacksonWrapperException77.addSuppressed((java.lang.Throwable) jacksonWrapperException83);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException86 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException83);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException87 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException83);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException89 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray90 = jacksonWrapperException89.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException91 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException89);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException92 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException91);
        jacksonWrapperException83.addSuppressed((java.lang.Throwable) jacksonWrapperException91);
        jacksonWrapperException74.addSuppressed((java.lang.Throwable) jacksonWrapperException91);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException95 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException91);
        jacksonWrapperException39.addSuppressed((java.lang.Throwable) jacksonWrapperException95);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException97 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException95);
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) instruction37, (java.lang.Object) jacksonWrapperException97);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wrapper21);
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertNotNull(instruction30);
        org.junit.Assert.assertNull(wildcardVisitor31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(instruction35);
        org.junit.Assert.assertNotNull(instruction37);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(throwableArray78);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(throwableArray90);
    }

    @Test
    public void test06663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06663");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException24.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException30);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray36 = jacksonWrapperException35.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray40 = jacksonWrapperException39.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException41);
        jacksonWrapperException35.addSuppressed((java.lang.Throwable) jacksonWrapperException41);
        jacksonWrapperException34.addSuppressed((java.lang.Throwable) jacksonWrapperException35);
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException35);
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray56 = jacksonWrapperException55.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException55);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray60 = jacksonWrapperException59.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException59);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException61);
        jacksonWrapperException55.addSuppressed((java.lang.Throwable) jacksonWrapperException61);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException61);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException61);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray68 = jacksonWrapperException67.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException67);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException69);
        jacksonWrapperException61.addSuppressed((java.lang.Throwable) jacksonWrapperException69);
        jacksonWrapperException52.addSuppressed((java.lang.Throwable) jacksonWrapperException69);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException73 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException69);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException76 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray77 = jacksonWrapperException76.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException78 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException76);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException80 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray81 = jacksonWrapperException80.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException82 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException80);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException83 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException82);
        jacksonWrapperException76.addSuppressed((java.lang.Throwable) jacksonWrapperException82);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException85 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException82);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException86 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException85);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException87 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException86);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException88 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException86);
        java.lang.Throwable[] throwableArray89 = jacksonWrapperException86.getSuppressed();
        jacksonWrapperException69.addSuppressed((java.lang.Throwable) jacksonWrapperException86);
        jacksonWrapperException48.addSuppressed((java.lang.Throwable) jacksonWrapperException86);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement92 = wrapper11.wrap((java.lang.Object) jacksonWrapperException86);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertNotNull(throwableArray81);
        org.junit.Assert.assertNotNull(throwableArray89);
    }

    @Test
    public void test06664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06664");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        foodev.jsondiff.JsonDiff.Instruction instruction17 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper18 = instruction17.oper;
        instruction17.index = (-1);
        instruction17.index = (byte) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper23);
        foodev.jsondiff.jsonwrap.Wrapper wrapper25 = jsonDiff24.factory;
        foodev.jsondiff.JsonDiff jsonDiff26 = new foodev.jsondiff.JsonDiff(wrapper25);
        foodev.jsondiff.Visitor<?> wildcardVisitor27 = jsonDiff26.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff26.create("");
        instruction29.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper32 = instruction29.oper;
        instruction17.oper = oper32;
        int int34 = instruction17.index;
        boolean boolean35 = instruction17.isIndexed();
        boolean boolean36 = instruction17.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff38 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper37);
        foodev.jsondiff.jsonwrap.Wrapper wrapper39 = jsonDiff38.factory;
        foodev.jsondiff.JsonDiff jsonDiff40 = new foodev.jsondiff.JsonDiff(wrapper39);
        foodev.jsondiff.JsonDiff.Instruction instruction42 = jsonDiff40.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction44 = jsonDiff40.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int46 = jsonDiff40.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction48 = jsonDiff40.create("");
        foodev.jsondiff.Oper oper49 = instruction48.oper;
        instruction17.oper = oper49;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement51 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement16, instruction17, jzonElement51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNull(oper18);
        org.junit.Assert.assertNotNull(wrapper25);
        org.junit.Assert.assertNull(wildcardVisitor27);
        org.junit.Assert.assertNotNull(instruction29);
        org.junit.Assert.assertTrue("'" + oper32 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper32.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wrapper39);
        org.junit.Assert.assertNotNull(instruction42);
        org.junit.Assert.assertNotNull(instruction44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(instruction48);
        org.junit.Assert.assertTrue("'" + oper49 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper49.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test06665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06665");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int7 = jsonDiff1.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff1.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = jsonDiff1.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNull(wildcardVisitor10);
    }

    @Test
    public void test06666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06666");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff13.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff13.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff13.factory;
        int int19 = jsonDiff13.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff13.factory;
        int int22 = jsonDiff13.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff13.create("~");
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff13.create("~");
        int int28 = jsonDiff13.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper29);
        int int32 = jsonDiff30.isIndexed("hi!");
        int int34 = jsonDiff30.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper35 = jsonDiff30.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor36 = jsonDiff30.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper37 = jsonDiff30.factory;
        int int39 = jsonDiff30.isIndexed("");
        foodev.jsondiff.Visitor<?> wildcardVisitor40 = jsonDiff30.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Object) wildcardVisitor40);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(wrapper35);
        org.junit.Assert.assertNull(wildcardVisitor36);
        org.junit.Assert.assertNotNull(wrapper37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor40);
    }

    @Test
    public void test06667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06667");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff10.checkIndex(jzonElement11, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
    }

    @Test
    public void test06668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06668");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper26);
        int int29 = jsonDiff27.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction31 = jsonDiff27.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper32 = instruction31.oper;
        int int33 = instruction31.index;
        java.lang.String str34 = instruction31.key;
        int int35 = instruction31.index;
        instruction31.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction31.key = "hi!";
        int int40 = instruction31.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff42 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper41);
        foodev.jsondiff.jsonwrap.Wrapper wrapper43 = jsonDiff42.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction45 = jsonDiff42.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction45.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        java.lang.String str48 = instruction45.key;
        foodev.jsondiff.JsonDiff.Instruction instruction49 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction49.key = "";
        java.lang.String str52 = instruction49.key;
        foodev.jsondiff.JsonDiff.Instruction instruction53 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper54 = instruction53.oper;
        instruction53.index = (-1);
        instruction53.index = (byte) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff60 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper59);
        foodev.jsondiff.jsonwrap.Wrapper wrapper61 = jsonDiff60.factory;
        foodev.jsondiff.JsonDiff jsonDiff62 = new foodev.jsondiff.JsonDiff(wrapper61);
        foodev.jsondiff.Visitor<?> wildcardVisitor63 = jsonDiff62.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction65 = jsonDiff62.create("");
        instruction65.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper68 = instruction65.oper;
        instruction53.oper = oper68;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff71 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper70);
        foodev.jsondiff.jsonwrap.Wrapper wrapper72 = jsonDiff71.factory;
        foodev.jsondiff.JsonDiff jsonDiff73 = new foodev.jsondiff.JsonDiff(wrapper72);
        foodev.jsondiff.JsonDiff.Instruction instruction75 = jsonDiff73.create("");
        boolean boolean76 = instruction75.isIndexed();
        instruction75.index = (byte) 10;
        boolean boolean79 = instruction75.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction80 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction80.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper83 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff84 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper83);
        int int86 = jsonDiff84.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction88 = jsonDiff84.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper89 = instruction88.oper;
        instruction80.oper = oper89;
        instruction75.oper = oper89;
        instruction53.oper = oper89;
        instruction49.oper = oper89;
        instruction45.oper = oper89;
        instruction31.oper = oper89;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj96 = jsonDiff3.diff((java.lang.Object) jacksonWrapperException22, (java.lang.Object) instruction31);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(instruction31);
        org.junit.Assert.assertTrue("'" + oper32 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper32.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str34, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(wrapper43);
        org.junit.Assert.assertNotNull(instruction45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~" + "'", str48, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNull(oper54);
        org.junit.Assert.assertNotNull(wrapper61);
        org.junit.Assert.assertNull(wildcardVisitor63);
        org.junit.Assert.assertNotNull(instruction65);
        org.junit.Assert.assertTrue("'" + oper68 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper68.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper72);
        org.junit.Assert.assertNotNull(instruction75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(instruction88);
        org.junit.Assert.assertTrue("'" + oper89 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper89.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test06669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06669");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.Node node17 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = null;
        foodev.jsondiff.Leaf[] leafArray19 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList20 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList20, leafArray19);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap22 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf23 = jsonDiff3.findLeaves(node17, jzonElement18, (java.util.List<foodev.jsondiff.Leaf>) leafList20, intMap22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(leafArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test06670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06670");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff3.getVisitor();
        int int14 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Leaf leaf17 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray18 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = jsonDiff3.accept(leaf17, jzonArray18, jzonObject19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(instruction16);
    }

    @Test
    public void test06671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06671");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        foodev.jsondiff.Leaf leaf11 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray12 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = jsonDiff3.accept(leaf11, jzonArray12, jzonObject13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor10);
    }

    @Test
    public void test06672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06672");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = wrapper9.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test06673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06673");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = jacksonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
    }

    @Test
    public void test06674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06674");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff6.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper23);
        foodev.jsondiff.jsonwrap.Wrapper wrapper25 = jsonDiff24.factory;
        foodev.jsondiff.JsonDiff jsonDiff26 = new foodev.jsondiff.JsonDiff(wrapper25);
        foodev.jsondiff.Visitor<?> wildcardVisitor27 = jsonDiff26.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff26.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper30 = jsonDiff26.factory;
        int int32 = jsonDiff26.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction34 = jsonDiff26.create("");
        java.lang.String str35 = instruction34.key;
        boolean boolean36 = instruction34.isIndexed();
        instruction34.index = 0;
        foodev.jsondiff.jsonwrap.Wrapper wrapper39 = null;
        foodev.jsondiff.JsonDiff jsonDiff40 = new foodev.jsondiff.JsonDiff(wrapper39);
        foodev.jsondiff.JsonDiff.Instruction instruction42 = jsonDiff40.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction44 = jsonDiff40.create("~");
        instruction44.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper47 = instruction44.oper;
        instruction34.oper = oper47;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj49 = jsonDiff6.diff((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Object) oper47);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(wrapper25);
        org.junit.Assert.assertNull(wildcardVisitor27);
        org.junit.Assert.assertNotNull(instruction29);
        org.junit.Assert.assertNotNull(wrapper30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(instruction34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(instruction42);
        org.junit.Assert.assertNotNull(instruction44);
        org.junit.Assert.assertTrue("'" + oper47 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper47.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test06675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06675");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        int int13 = jsonDiff11.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff11.apply(jzonElement14, jzonElement15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test06676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06676");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = wrapper12.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test06677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06677");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Leaf leaf11 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray12 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = jsonDiff8.accept(leaf11, jzonArray12, jzonObject13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction10);
    }

    @Test
    public void test06678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06678");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int6 = instruction5.index;
        int int7 = instruction5.index;
        boolean boolean8 = instruction5.isIndexed();
        foodev.jsondiff.Oper oper9 = null;
        instruction5.oper = oper9;
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test06679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06679");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("hi!");
        instruction8.index = '4';
        int int11 = instruction8.index;
        java.lang.String str12 = instruction8.key;
        java.lang.String str13 = instruction8.key;
        int int14 = instruction8.index;
        java.lang.Class<?> wildcardClass15 = instruction8.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test06680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06680");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException17);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement27 = gsonWrapper0.wrap((java.lang.Object) jacksonWrapperException17);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray22);
    }

    @Test
    public void test06681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06681");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        int int18 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject21 = jsonDiff3.diff(jzonElement19, jzonElement20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test06682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06682");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper11 = instruction10.oper;
        instruction10.key = "~";
        instruction10.key = "";
        foodev.jsondiff.JsonDiff.Instruction instruction16 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction16.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper19);
        int int22 = jsonDiff20.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff20.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper25 = instruction24.oper;
        instruction16.oper = oper25;
        instruction10.oper = oper25;
        instruction9.oper = oper25;
        java.lang.String str29 = instruction9.key;
        foodev.jsondiff.Oper oper30 = instruction9.oper;
        java.lang.String str31 = instruction9.key;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNull(oper11);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertTrue("'" + oper25 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper25.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str29, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        org.junit.Assert.assertTrue("'" + oper30 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper30.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str31, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
    }

    @Test
    public void test06683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06683");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff15.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff15.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper19);
        foodev.jsondiff.jsonwrap.Wrapper wrapper21 = jsonDiff20.factory;
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff(wrapper21);
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff22.create("");
        int int26 = jsonDiff22.isIndexed("");
        int int28 = jsonDiff22.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction30 = jsonDiff22.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper31 = jsonDiff22.factory;
        int int33 = jsonDiff22.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction35 = jsonDiff22.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper36);
        foodev.jsondiff.jsonwrap.Wrapper wrapper38 = jsonDiff37.factory;
        foodev.jsondiff.JsonDiff jsonDiff39 = new foodev.jsondiff.JsonDiff(wrapper38);
        foodev.jsondiff.Visitor<?> wildcardVisitor40 = jsonDiff39.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction42 = jsonDiff39.create("");
        instruction42.index = ' ';
        foodev.jsondiff.Oper oper45 = instruction42.oper;
        instruction35.oper = oper45;
        java.lang.String str47 = instruction35.key;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = jsonDiff3.diff((java.lang.Object) jsonDiff18, (java.lang.Object) str47);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(wrapper21);
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(instruction30);
        org.junit.Assert.assertNotNull(wrapper31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(instruction35);
        org.junit.Assert.assertNotNull(wrapper38);
        org.junit.Assert.assertNull(wildcardVisitor40);
        org.junit.Assert.assertNotNull(instruction42);
        org.junit.Assert.assertTrue("'" + oper45 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper45.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str47, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test06684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06684");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff4.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff4.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper8);
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff9.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction15.index = (short) 100;
        foodev.jsondiff.Oper oper18 = instruction15.oper;
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = null;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff20.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        instruction22.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        instruction22.key = "~";
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff4.apply((java.lang.Object) instruction15, (java.lang.Object) instruction22);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertNull(wildcardVisitor13);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + oper18 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper18.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(instruction22);
    }

    @Test
    public void test06685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06685");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = jsonDiff13.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test06686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06686");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        int int13 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException24.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException26);
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException32.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException34);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException34);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff40 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper39);
        int int42 = jsonDiff40.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction44 = jsonDiff40.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper45 = jsonDiff40.factory;
        foodev.jsondiff.JsonDiff jsonDiff46 = new foodev.jsondiff.JsonDiff(wrapper45);
        foodev.jsondiff.jsonwrap.Wrapper wrapper47 = jsonDiff46.factory;
        foodev.jsondiff.JsonDiff jsonDiff48 = new foodev.jsondiff.JsonDiff(wrapper47);
        foodev.jsondiff.JsonDiff.Instruction instruction50 = jsonDiff48.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply((java.lang.Object) jacksonWrapperException38, (java.lang.Object) instruction50);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(instruction44);
        org.junit.Assert.assertNotNull(wrapper45);
        org.junit.Assert.assertNotNull(wrapper47);
        org.junit.Assert.assertNotNull(instruction50);
    }

    @Test
    public void test06687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06687");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper13);
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff14.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff16.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff16.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        java.lang.String str21 = instruction20.key;
        instruction20.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction20.index = 1;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper26);
        foodev.jsondiff.jsonwrap.Wrapper wrapper28 = jsonDiff27.factory;
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff(wrapper28);
        foodev.jsondiff.Visitor<?> wildcardVisitor30 = jsonDiff29.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff29.create("");
        instruction32.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper35 = instruction32.oper;
        instruction32.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction32.index = 10;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff41 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper40);
        foodev.jsondiff.jsonwrap.Wrapper wrapper42 = jsonDiff41.factory;
        foodev.jsondiff.JsonDiff jsonDiff43 = new foodev.jsondiff.JsonDiff(wrapper42);
        foodev.jsondiff.JsonDiff.Instruction instruction45 = jsonDiff43.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction47 = jsonDiff43.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction47.index = (short) 100;
        boolean boolean50 = instruction47.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff52 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper51);
        foodev.jsondiff.jsonwrap.Wrapper wrapper53 = jsonDiff52.factory;
        foodev.jsondiff.JsonDiff jsonDiff54 = new foodev.jsondiff.JsonDiff(wrapper53);
        foodev.jsondiff.JsonDiff.Instruction instruction56 = jsonDiff54.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction56.key = "hi!";
        foodev.jsondiff.Oper oper59 = instruction56.oper;
        instruction47.oper = oper59;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff62 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper61);
        foodev.jsondiff.jsonwrap.Wrapper wrapper63 = jsonDiff62.factory;
        foodev.jsondiff.JsonDiff jsonDiff64 = new foodev.jsondiff.JsonDiff(wrapper63);
        foodev.jsondiff.JsonDiff.Instruction instruction66 = jsonDiff64.create("");
        int int68 = jsonDiff64.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction70 = jsonDiff64.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction72 = jsonDiff64.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction72.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        java.lang.String str75 = instruction72.key;
        boolean boolean76 = instruction72.isIndexed();
        foodev.jsondiff.Oper oper77 = instruction72.oper;
        instruction47.oper = oper77;
        instruction32.oper = oper77;
        instruction20.oper = oper77;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement81 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement12, instruction20, jzonElement81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str21, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertNotNull(wrapper28);
        org.junit.Assert.assertNull(wildcardVisitor30);
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertTrue("'" + oper35 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper35.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper42);
        org.junit.Assert.assertNotNull(instruction45);
        org.junit.Assert.assertNotNull(instruction47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wrapper53);
        org.junit.Assert.assertNotNull(instruction56);
        org.junit.Assert.assertTrue("'" + oper59 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper59.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper63);
        org.junit.Assert.assertNotNull(instruction66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(instruction70);
        org.junit.Assert.assertNotNull(instruction72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str75, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + oper77 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper77.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test06688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06688");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int10 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = wrapper12.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test06689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06689");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff.Instruction instruction2 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper3 = instruction2.oper;
        boolean boolean4 = instruction2.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper5);
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff6.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff6.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction10.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper13);
        int int16 = jsonDiff14.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff14.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper19 = instruction18.oper;
        instruction10.oper = oper19;
        instruction9.oper = oper19;
        instruction2.oper = oper19;
        java.lang.String str23 = instruction2.key;
        foodev.jsondiff.JsonDiff.Instruction instruction24 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper25 = instruction24.oper;
        instruction24.index = (-1);
        java.lang.String str28 = instruction24.key;
        instruction24.key = "~";
        boolean boolean31 = instruction24.isIndexed();
        boolean boolean32 = instruction24.isIndexed();
        int int33 = instruction24.index;
        instruction24.index = '#';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper36);
        foodev.jsondiff.jsonwrap.Wrapper wrapper38 = jsonDiff37.factory;
        foodev.jsondiff.JsonDiff jsonDiff39 = new foodev.jsondiff.JsonDiff(wrapper38);
        foodev.jsondiff.JsonDiff.Instruction instruction41 = jsonDiff39.create("");
        int int42 = instruction41.index;
        boolean boolean43 = instruction41.isIndexed();
        instruction41.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff47 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper46);
        foodev.jsondiff.jsonwrap.Wrapper wrapper48 = jsonDiff47.factory;
        foodev.jsondiff.JsonDiff jsonDiff49 = new foodev.jsondiff.JsonDiff(wrapper48);
        foodev.jsondiff.JsonDiff.Instruction instruction51 = jsonDiff49.create("");
        boolean boolean52 = instruction51.isIndexed();
        instruction51.index = (short) -1;
        foodev.jsondiff.Oper oper55 = instruction51.oper;
        instruction41.oper = oper55;
        foodev.jsondiff.JsonDiff.Instruction instruction57 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper58 = instruction57.oper;
        instruction57.key = "~";
        java.lang.String str61 = instruction57.key;
        foodev.jsondiff.JsonDiff.Instruction instruction62 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper63 = instruction62.oper;
        instruction62.index = (-1);
        java.lang.String str66 = instruction62.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff68 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper67);
        foodev.jsondiff.jsonwrap.Wrapper wrapper69 = jsonDiff68.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction71 = jsonDiff68.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction72 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction72.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper75 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff76 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper75);
        int int78 = jsonDiff76.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction80 = jsonDiff76.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper81 = instruction80.oper;
        instruction72.oper = oper81;
        instruction71.oper = oper81;
        instruction62.oper = oper81;
        instruction57.oper = oper81;
        instruction41.oper = oper81;
        instruction24.oper = oper81;
        instruction2.oper = oper81;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement89 = jacksonWrapper0.wrap((java.lang.Object) oper81);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(oper3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertTrue("'" + oper19 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper19.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(oper25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(wrapper38);
        org.junit.Assert.assertNotNull(instruction41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wrapper48);
        org.junit.Assert.assertNotNull(instruction51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + oper55 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper55.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNull(oper58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "~" + "'", str61, "~");
        org.junit.Assert.assertNull(oper63);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(wrapper69);
        org.junit.Assert.assertNotNull(instruction71);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(instruction80);
        org.junit.Assert.assertTrue("'" + oper81 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper81.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test06690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06690");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int15 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int17 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException28);
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException35);
        jacksonWrapperException28.addSuppressed((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException39);
        java.lang.Throwable[] throwableArray41 = jacksonWrapperException40.getSuppressed();
        java.lang.Throwable[] throwableArray42 = jacksonWrapperException40.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException45.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray52 = jacksonWrapperException51.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException51);
        jacksonWrapperException48.addSuppressed((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException55);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray59 = jacksonWrapperException58.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException58);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException60);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray63 = jacksonWrapperException62.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException62);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray67 = jacksonWrapperException66.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException66);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException68);
        jacksonWrapperException62.addSuppressed((java.lang.Throwable) jacksonWrapperException68);
        jacksonWrapperException60.addSuppressed((java.lang.Throwable) jacksonWrapperException62);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException73 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray74 = jacksonWrapperException73.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException75 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException73);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException76 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException75);
        jacksonWrapperException62.addSuppressed((java.lang.Throwable) jacksonWrapperException75);
        jacksonWrapperException56.addSuppressed((java.lang.Throwable) jacksonWrapperException75);
        jacksonWrapperException40.addSuppressed((java.lang.Throwable) jacksonWrapperException56);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper80 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff81 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper80);
        int int83 = jsonDiff81.isIndexed("hi!");
        int int85 = jsonDiff81.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper86 = jsonDiff81.factory;
        int int88 = jsonDiff81.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper89 = jsonDiff81.factory;
        int int91 = jsonDiff81.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction93 = jsonDiff81.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj94 = jsonDiff3.diff((java.lang.Object) jacksonWrapperException40, (java.lang.Object) jsonDiff81);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(wrapper86);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(wrapper89);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertNotNull(instruction93);
    }

    @Test
    public void test06691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06691");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        int int6 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff4.factory;
        foodev.jsondiff.Node node8 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        foodev.jsondiff.Leaf[] leafArray10 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList11 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList11, leafArray10);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap13 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf14 = jsonDiff4.findLeaves(node8, jzonElement9, (java.util.List<foodev.jsondiff.Leaf>) leafList11, intMap13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(leafArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test06692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06692");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        int int11 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = wrapper12.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test06693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06693");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff2.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff2.getVisitor();
        int int9 = jsonDiff2.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = jsonDiff2.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test06694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06694");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = jsonDiff3.apply("hi!", "hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test06695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06695");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper3);
        int int6 = jsonDiff4.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper9 = instruction8.oper;
        int int10 = instruction8.index;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = gsonWrapper0.wrap((java.lang.Object) int10);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Integer cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + oper9 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper9.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test06696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06696");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff3.create("~");
        int int18 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor19 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Visitor<?> wildcardVisitor22 = jsonDiff3.getVisitor();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor19);
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertNull(wildcardVisitor22);
    }

    @Test
    public void test06697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06697");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff7.apply(jzonElement9, jzonElement10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
    }

    @Test
    public void test06698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06698");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject13 = jsonDiff10.diff(jzonElement11, jzonElement12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test06699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06699");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        int int4 = jsonDiff1.isIndexed("");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper5);
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff6.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean11 = instruction10.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        int int15 = jsonDiff13.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper18 = instruction17.oper;
        instruction10.oper = oper18;
        int int20 = instruction10.index;
        foodev.jsondiff.JsonDiff.Instruction instruction21 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper22 = instruction21.oper;
        instruction21.key = "~";
        int int25 = instruction21.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper26);
        int int29 = jsonDiff27.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction31 = jsonDiff27.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean32 = instruction31.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff34 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper33);
        int int36 = jsonDiff34.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction38 = jsonDiff34.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper39 = instruction38.oper;
        instruction31.oper = oper39;
        instruction21.oper = oper39;
        instruction10.oper = oper39;
        java.lang.String str43 = instruction10.key;
        foodev.jsondiff.Oper oper44 = instruction10.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff46 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper45);
        foodev.jsondiff.jsonwrap.Wrapper wrapper47 = jsonDiff46.factory;
        foodev.jsondiff.JsonDiff jsonDiff48 = new foodev.jsondiff.JsonDiff(wrapper47);
        foodev.jsondiff.Visitor<?> wildcardVisitor49 = jsonDiff48.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction51 = jsonDiff48.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper52 = jsonDiff48.factory;
        int int54 = jsonDiff48.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper55 = jsonDiff48.factory;
        foodev.jsondiff.JsonDiff jsonDiff56 = new foodev.jsondiff.JsonDiff(wrapper55);
        foodev.jsondiff.JsonDiff jsonDiff57 = new foodev.jsondiff.JsonDiff(wrapper55);
        int int59 = jsonDiff57.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper60 = jsonDiff57.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper61 = jsonDiff57.factory;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply((java.lang.Object) oper44, (java.lang.Object) wrapper61);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + oper18 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper18.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(oper22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(instruction31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(instruction38);
        org.junit.Assert.assertTrue("'" + oper39 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper39.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str43, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + oper44 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper44.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper47);
        org.junit.Assert.assertNull(wildcardVisitor49);
        org.junit.Assert.assertNotNull(instruction51);
        org.junit.Assert.assertNotNull(wrapper52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(wrapper55);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(wrapper60);
        org.junit.Assert.assertNotNull(wrapper61);
    }

    @Test
    public void test06700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06700");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        int int13 = jsonDiff11.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff11.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff11.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff17.factory;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff19.create("");
        boolean boolean22 = instruction21.isIndexed();
        instruction21.index = (short) -1;
        int int25 = instruction21.index;
        int int26 = instruction21.index;
        instruction21.key = "hi!";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper29);
        foodev.jsondiff.jsonwrap.Wrapper wrapper31 = jsonDiff30.factory;
        foodev.jsondiff.JsonDiff jsonDiff32 = new foodev.jsondiff.JsonDiff(wrapper31);
        foodev.jsondiff.Visitor<?> wildcardVisitor33 = jsonDiff32.getVisitor();
        int int35 = jsonDiff32.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper36 = jsonDiff32.factory;
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff(wrapper36);
        foodev.jsondiff.jsonwrap.Wrapper wrapper38 = jsonDiff37.factory;
        foodev.jsondiff.JsonDiff jsonDiff39 = new foodev.jsondiff.JsonDiff(wrapper38);
        foodev.jsondiff.Visitor<?> wildcardVisitor40 = jsonDiff39.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff11.apply((java.lang.Object) instruction21, (java.lang.Object) wildcardVisitor40);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNull(wildcardVisitor15);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(wrapper31);
        org.junit.Assert.assertNull(wildcardVisitor33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(wrapper36);
        org.junit.Assert.assertNotNull(wrapper38);
        org.junit.Assert.assertNull(wildcardVisitor40);
    }

    @Test
    public void test06701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06701");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper9);
        int int12 = jsonDiff10.isIndexed("hi!");
        int int14 = jsonDiff10.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff10.factory;
        int int17 = jsonDiff10.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff10.factory;
        int int20 = jsonDiff10.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff10.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException24.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException30);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException30);
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException24.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray36 = jacksonWrapperException35.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray40 = jacksonWrapperException39.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException41);
        jacksonWrapperException35.addSuppressed((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException41);
        java.lang.Throwable[] throwableArray45 = jacksonWrapperException41.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException48);
        jacksonWrapperException41.addSuppressed((java.lang.Throwable) jacksonWrapperException49);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException49);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException51);
        java.lang.Throwable[] throwableArray54 = jacksonWrapperException51.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj55 = jsonDiff3.diff((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Object) jacksonWrapperException51);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray54);
    }

    @Test
    public void test06702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06702");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor5 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff3.factory;
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject12 = jsonDiff3.diff(jzonElement10, jzonElement11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNull(wildcardVisitor5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
    }

    @Test
    public void test06703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06703");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException3);
    }

    @Test
    public void test06704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06704");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff1.getVisitor();
        int int13 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject16 = jsonDiff1.diff(jzonElement14, jzonElement15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test06705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06705");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement17, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(instruction16);
    }

    @Test
    public void test06706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06706");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff1.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = jsonDiff1.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor10);
    }

    @Test
    public void test06707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06707");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException8);
        java.lang.String str23 = jacksonWrapperException22.toString();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str23, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
    }

    @Test
    public void test06708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06708");
        foodev.jsondiff.jsonwrap.Wrapper wrapper0 = null;
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff(wrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        int int4 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int10 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement11, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test06709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06709");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int12 = jsonDiff1.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        java.lang.String str15 = instruction14.key;
        foodev.jsondiff.Oper oper16 = null;
        instruction14.oper = oper16;
        foodev.jsondiff.Oper oper18 = instruction14.oper;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str15, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        org.junit.Assert.assertNull(oper18);
    }

    @Test
    public void test06710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06710");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper6);
        java.lang.Class<?> wildcardClass9 = wrapper6.getClass();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test06711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06711");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff11.checkIndex(jzonElement12, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test06712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06712");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        int int16 = jsonDiff3.isIndexed("");
        int int18 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor20 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor21 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper22);
        int int25 = jsonDiff23.isIndexed("hi!");
        int int27 = jsonDiff23.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper28 = jsonDiff23.factory;
        int int30 = jsonDiff23.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper31 = jsonDiff23.factory;
        int int33 = jsonDiff23.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction35 = jsonDiff23.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper36);
        int int39 = jsonDiff37.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction41 = jsonDiff37.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper42 = jsonDiff37.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction44 = jsonDiff37.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper45 = jsonDiff37.factory;
        foodev.jsondiff.JsonDiff jsonDiff46 = new foodev.jsondiff.JsonDiff(wrapper45);
        foodev.jsondiff.JsonDiff.Instruction instruction48 = jsonDiff46.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int49 = instruction48.index;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) instruction35, (java.lang.Object) instruction48);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNull(wildcardVisitor20);
        org.junit.Assert.assertNull(wildcardVisitor21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(wrapper28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(wrapper31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(instruction35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(instruction41);
        org.junit.Assert.assertNotNull(wrapper42);
        org.junit.Assert.assertNotNull(instruction44);
        org.junit.Assert.assertNotNull(wrapper45);
        org.junit.Assert.assertNotNull(instruction48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
    }

    @Test
    public void test06713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06713");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int13 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        java.lang.String str16 = instruction15.key;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~" + "'", str16, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
    }

    @Test
    public void test06714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06714");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException21.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray40 = jacksonWrapperException39.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray44 = jacksonWrapperException43.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray48 = jacksonWrapperException47.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException49);
        jacksonWrapperException43.addSuppressed((java.lang.Throwable) jacksonWrapperException49);
        jacksonWrapperException41.addSuppressed((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException43);
        java.lang.Throwable[] throwableArray56 = jacksonWrapperException43.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException43);
        jacksonWrapperException31.addSuppressed((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        java.lang.Throwable[] throwableArray60 = jacksonWrapperException31.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray60);
    }

    @Test
    public void test06715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06715");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff1.factory;
        int int15 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Node node16 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        foodev.jsondiff.Leaf[] leafArray18 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList19 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList19, leafArray18);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap21 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf22 = jsonDiff1.findLeaves(node16, jzonElement17, (java.util.List<foodev.jsondiff.Leaf>) leafList19, intMap21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(leafArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test06716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06716");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException16);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        java.lang.String str20 = jacksonWrapperException19.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str20, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test06717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06717");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int6 = instruction5.index;
        boolean boolean7 = instruction5.isIndexed();
        instruction5.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("");
        boolean boolean16 = instruction15.isIndexed();
        instruction15.index = (short) -1;
        foodev.jsondiff.Oper oper19 = instruction15.oper;
        instruction5.oper = oper19;
        foodev.jsondiff.JsonDiff.Instruction instruction21 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper22 = instruction21.oper;
        instruction21.key = "~";
        java.lang.String str25 = instruction21.key;
        foodev.jsondiff.JsonDiff.Instruction instruction26 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper27 = instruction26.oper;
        instruction26.index = (-1);
        java.lang.String str30 = instruction26.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff32 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper31);
        foodev.jsondiff.jsonwrap.Wrapper wrapper33 = jsonDiff32.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction35 = jsonDiff32.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction36 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction36.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff40 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper39);
        int int42 = jsonDiff40.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction44 = jsonDiff40.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper45 = instruction44.oper;
        instruction36.oper = oper45;
        instruction35.oper = oper45;
        instruction26.oper = oper45;
        instruction21.oper = oper45;
        instruction5.oper = oper45;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff52 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper51);
        foodev.jsondiff.jsonwrap.Wrapper wrapper53 = jsonDiff52.factory;
        foodev.jsondiff.JsonDiff jsonDiff54 = new foodev.jsondiff.JsonDiff(wrapper53);
        foodev.jsondiff.Visitor<?> wildcardVisitor55 = jsonDiff54.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction57 = jsonDiff54.create("");
        int int59 = jsonDiff54.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper60 = jsonDiff54.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction62 = jsonDiff54.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper63 = instruction62.oper;
        instruction5.oper = oper63;
        boolean boolean65 = instruction5.isIndexed();
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + oper19 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper19.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNull(oper22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "~" + "'", str25, "~");
        org.junit.Assert.assertNull(oper27);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(wrapper33);
        org.junit.Assert.assertNotNull(instruction35);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(instruction44);
        org.junit.Assert.assertTrue("'" + oper45 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper45.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper53);
        org.junit.Assert.assertNull(wildcardVisitor55);
        org.junit.Assert.assertNotNull(instruction57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(wrapper60);
        org.junit.Assert.assertNotNull(instruction62);
        org.junit.Assert.assertTrue("'" + oper63 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper63.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test06718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06718");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        boolean boolean6 = instruction5.isIndexed();
        instruction5.key = "~";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff10.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff12.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction16.index = (short) 100;
        boolean boolean19 = instruction16.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction20 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper21 = instruction20.oper;
        instruction20.key = "~";
        int int24 = instruction20.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff26 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper25);
        int int28 = jsonDiff26.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction30 = jsonDiff26.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean31 = instruction30.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff33 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper32);
        int int35 = jsonDiff33.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction37 = jsonDiff33.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper38 = instruction37.oper;
        instruction30.oper = oper38;
        instruction20.oper = oper38;
        foodev.jsondiff.Oper oper41 = instruction20.oper;
        instruction16.oper = oper41;
        instruction5.oper = oper41;
        foodev.jsondiff.JsonDiff.Instruction instruction44 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper45 = instruction44.oper;
        instruction44.key = "~";
        instruction44.key = "";
        foodev.jsondiff.JsonDiff.Instruction instruction50 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction50.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff54 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper53);
        int int56 = jsonDiff54.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction58 = jsonDiff54.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper59 = instruction58.oper;
        instruction50.oper = oper59;
        instruction44.oper = oper59;
        instruction5.oper = oper59;
        java.lang.String str63 = instruction5.key;
        instruction5.index = 32;
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(oper21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(instruction30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(instruction37);
        org.junit.Assert.assertTrue("'" + oper38 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper38.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper41 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper41.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNull(oper45);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(instruction58);
        org.junit.Assert.assertTrue("'" + oper59 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper59.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "~" + "'", str63, "~");
    }

    @Test
    public void test06719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06719");
        foodev.jsondiff.JsonDiff.Instruction instruction0 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction0.key = "";
        instruction0.index = 'a';
        instruction0.index = 1;
        boolean boolean7 = instruction0.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper8);
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff11.create("");
        boolean boolean14 = instruction13.isIndexed();
        instruction13.index = (short) -1;
        int int17 = instruction13.index;
        int int18 = instruction13.index;
        foodev.jsondiff.JsonDiff.Instruction instruction19 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper20 = instruction19.oper;
        instruction19.key = "~";
        instruction19.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff26 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper25);
        foodev.jsondiff.jsonwrap.Wrapper wrapper27 = jsonDiff26.factory;
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff(wrapper27);
        foodev.jsondiff.JsonDiff.Instruction instruction30 = jsonDiff28.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff28.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction32.index = (short) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff36 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper35);
        foodev.jsondiff.jsonwrap.Wrapper wrapper37 = jsonDiff36.factory;
        foodev.jsondiff.JsonDiff jsonDiff38 = new foodev.jsondiff.JsonDiff(wrapper37);
        foodev.jsondiff.JsonDiff.Instruction instruction40 = jsonDiff38.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction42 = jsonDiff38.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction42.index = (short) 100;
        boolean boolean45 = instruction42.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction46 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper47 = instruction46.oper;
        instruction46.key = "~";
        int int50 = instruction46.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff52 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper51);
        int int54 = jsonDiff52.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction56 = jsonDiff52.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean57 = instruction56.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff59 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper58);
        int int61 = jsonDiff59.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction63 = jsonDiff59.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper64 = instruction63.oper;
        instruction56.oper = oper64;
        instruction46.oper = oper64;
        foodev.jsondiff.Oper oper67 = instruction46.oper;
        instruction42.oper = oper67;
        instruction32.oper = oper67;
        instruction19.oper = oper67;
        instruction13.oper = oper67;
        foodev.jsondiff.Oper oper72 = instruction13.oper;
        instruction0.oper = oper72;
        java.lang.String str74 = instruction0.key;
        boolean boolean75 = instruction0.isIndexed();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(oper20);
        org.junit.Assert.assertNotNull(wrapper27);
        org.junit.Assert.assertNotNull(instruction30);
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertNotNull(wrapper37);
        org.junit.Assert.assertNotNull(instruction40);
        org.junit.Assert.assertNotNull(instruction42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(oper47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(instruction56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(instruction63);
        org.junit.Assert.assertTrue("'" + oper64 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper64.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper67 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper67.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper72 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper72.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test06720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06720");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int13 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper16);
        int int19 = jsonDiff17.isIndexed("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = jsonDiff17.apply("", "");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonJsonNull cannot be cast to foodev.jsondiff.jsonwrap.JzonObject");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test06721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06721");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException9);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException14);
        java.lang.String str17 = jacksonWrapperException16.toString();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str17, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
    }

    @Test
    public void test06722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06722");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff9.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff9.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = jsonDiff9.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNull(wildcardVisitor12);
    }

    @Test
    public void test06723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06723");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff6.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff6.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException18);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException23.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException23);
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException33.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff38 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper37);
        foodev.jsondiff.jsonwrap.Wrapper wrapper39 = jsonDiff38.factory;
        foodev.jsondiff.JsonDiff jsonDiff40 = new foodev.jsondiff.JsonDiff(wrapper39);
        foodev.jsondiff.Visitor<?> wildcardVisitor41 = jsonDiff40.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction43 = jsonDiff40.create("");
        instruction43.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper46 = instruction43.oper;
        foodev.jsondiff.Oper oper47 = instruction43.oper;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff6.apply((java.lang.Object) jacksonWrapperException36, (java.lang.Object) oper47);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(wrapper39);
        org.junit.Assert.assertNull(wildcardVisitor41);
        org.junit.Assert.assertNotNull(instruction43);
        org.junit.Assert.assertTrue("'" + oper46 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper46.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper47 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper47.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test06724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06724");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = wrapper12.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test06725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06725");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException9);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException20);
        java.lang.String str22 = jacksonWrapperException21.toString();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~" + "'", str22, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
    }

    @Test
    public void test06726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06726");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper5);
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff7.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff7.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = jsonDiff7.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(instruction10);
    }

    @Test
    public void test06727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06727");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int13 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper16);
        int int19 = jsonDiff17.isIndexed("");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff17.checkIndex(jzonElement20, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test06728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06728");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff9.apply(jzonElement10, jzonElement11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
    }

    @Test
    public void test06729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06729");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        int int14 = jsonDiff11.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Node node15 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        foodev.jsondiff.Leaf[] leafArray17 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList18 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList18, leafArray17);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap20 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf21 = jsonDiff11.findLeaves(node15, jzonElement16, (java.util.List<foodev.jsondiff.Leaf>) leafList18, intMap20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(leafArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test06730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06730");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException18.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException20.getSuppressed();
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException38.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException36.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException36);
        java.lang.Throwable[] throwableArray43 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj45 = jsonDiff1.diff((java.lang.Object) jacksonWrapperException10, (java.lang.Object) jacksonWrapperException15);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray43);
    }

    @Test
    public void test06731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06731");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff10.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff10.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject17 = jsonDiff10.diff(jzonElement15, jzonElement16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertNotNull(instruction14);
    }

    @Test
    public void test06732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06732");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int14 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException23);
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException23.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement28 = wrapper15.wrap((java.lang.Object) jacksonWrapperException23);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray27);
    }

    @Test
    public void test06733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06733");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int10 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("~");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = jsonDiff13.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(instruction17);
    }

    @Test
    public void test06734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06734");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff12.getVisitor();
        int int17 = jsonDiff12.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper18);
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper18);
        foodev.jsondiff.jsonwrap.Wrapper wrapper21 = jsonDiff20.factory;
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff(wrapper21);
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff(wrapper21);
        int int25 = jsonDiff23.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff23.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int28 = instruction27.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException33.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray38 = jacksonWrapperException37.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray42 = jacksonWrapperException41.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException43);
        jacksonWrapperException37.addSuppressed((java.lang.Throwable) jacksonWrapperException43);
        jacksonWrapperException35.addSuppressed((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException37);
        java.lang.Throwable[] throwableArray49 = jacksonWrapperException48.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException48);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj52 = jsonDiff12.diff((java.lang.Object) int28, (java.lang.Object) jacksonWrapperException48);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Integer cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNull(wildcardVisitor15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(wrapper21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray49);
    }

    @Test
    public void test06735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06735");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper14);
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff15.factory;
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper16);
        foodev.jsondiff.Visitor<?> wildcardVisitor18 = jsonDiff17.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction20.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        boolean boolean23 = instruction20.isIndexed();
        instruction20.key = "";
        instruction20.key = "";
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement28 = wrapper12.wrap((java.lang.Object) instruction20);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNull(wildcardVisitor18);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test06736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06736");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff3.create("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor18 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement21 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper22);
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = jsonDiff23.factory;
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff(wrapper24);
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff25.create("");
        boolean boolean28 = instruction27.isIndexed();
        instruction27.key = "~";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff32 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper31);
        foodev.jsondiff.jsonwrap.Wrapper wrapper33 = jsonDiff32.factory;
        foodev.jsondiff.JsonDiff jsonDiff34 = new foodev.jsondiff.JsonDiff(wrapper33);
        foodev.jsondiff.JsonDiff.Instruction instruction36 = jsonDiff34.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction38 = jsonDiff34.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction38.index = (short) 100;
        boolean boolean41 = instruction38.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction42 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper43 = instruction42.oper;
        instruction42.key = "~";
        int int46 = instruction42.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff48 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper47);
        int int50 = jsonDiff48.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction52 = jsonDiff48.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean53 = instruction52.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff55 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper54);
        int int57 = jsonDiff55.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction59 = jsonDiff55.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper60 = instruction59.oper;
        instruction52.oper = oper60;
        instruction42.oper = oper60;
        foodev.jsondiff.Oper oper63 = instruction42.oper;
        instruction38.oper = oper63;
        instruction27.oper = oper63;
        java.lang.String str66 = instruction27.key;
        instruction27.key = "~";
        foodev.jsondiff.jsonwrap.JzonElement jzonElement69 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff20.applyPartial(jzonElement21, instruction27, jzonElement69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNull(wildcardVisitor18);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(wrapper24);
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wrapper33);
        org.junit.Assert.assertNotNull(instruction36);
        org.junit.Assert.assertNotNull(instruction38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(oper43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(instruction52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(instruction59);
        org.junit.Assert.assertTrue("'" + oper60 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper60.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper63 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper63.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "~" + "'", str66, "~");
    }

    @Test
    public void test06737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06737");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        boolean boolean6 = instruction5.isIndexed();
        java.lang.String str7 = instruction5.key;
        instruction5.index = (short) 100;
        instruction5.key = "hi!";
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test06738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06738");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff12.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff12.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        java.lang.Class<?> wildcardClass17 = instruction16.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(wildcardVisitor13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test06739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06739");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement14, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
    }

    @Test
    public void test06740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06740");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff9.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff9.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff9.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff9.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = wrapper18.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNotNull(wrapper18);
    }

    @Test
    public void test06741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06741");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException5);
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException21.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException33.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException33);
        jacksonWrapperException31.addSuppressed((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException37);
        java.lang.String str40 = jacksonWrapperException39.toString();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str40, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
    }

    @Test
    public void test06742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06742");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff.Instruction instruction4 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper5 = instruction4.oper;
        instruction4.index = (-1);
        java.lang.String str8 = instruction4.key;
        boolean boolean9 = instruction4.isIndexed();
        instruction4.index = (short) 0;
        foodev.jsondiff.Oper oper12 = instruction4.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper13);
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff14.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff16.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff16.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction20.index = (short) 100;
        boolean boolean23 = instruction20.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper24);
        foodev.jsondiff.jsonwrap.Wrapper wrapper26 = jsonDiff25.factory;
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff(wrapper26);
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff27.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction29.key = "hi!";
        foodev.jsondiff.Oper oper32 = instruction29.oper;
        instruction20.oper = oper32;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff35 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper34);
        foodev.jsondiff.jsonwrap.Wrapper wrapper36 = jsonDiff35.factory;
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff(wrapper36);
        foodev.jsondiff.JsonDiff.Instruction instruction39 = jsonDiff37.create("");
        int int41 = jsonDiff37.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction43 = jsonDiff37.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction45 = jsonDiff37.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction45.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        java.lang.String str48 = instruction45.key;
        boolean boolean49 = instruction45.isIndexed();
        foodev.jsondiff.Oper oper50 = instruction45.oper;
        instruction20.oper = oper50;
        foodev.jsondiff.Oper oper52 = instruction20.oper;
        instruction4.oper = oper52;
        java.lang.Class<?> wildcardClass54 = instruction4.getClass();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement55 = jacksonWrapper0.wrap((java.lang.Object) wildcardClass54);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Class cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(oper5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(oper12);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wrapper26);
        org.junit.Assert.assertNotNull(instruction29);
        org.junit.Assert.assertTrue("'" + oper32 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper32.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper36);
        org.junit.Assert.assertNotNull(instruction39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(instruction43);
        org.junit.Assert.assertNotNull(instruction45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str48, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + oper50 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper50.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper52 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper52.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test06743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06743");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction7.index = (short) 100;
        boolean boolean10 = instruction7.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper12 = instruction11.oper;
        instruction11.key = "~";
        int int15 = instruction11.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        int int19 = jsonDiff17.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean22 = instruction21.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper23);
        int int26 = jsonDiff24.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper29 = instruction28.oper;
        instruction21.oper = oper29;
        instruction11.oper = oper29;
        foodev.jsondiff.Oper oper32 = instruction11.oper;
        instruction7.oper = oper32;
        java.lang.String str34 = instruction7.key;
        int int35 = instruction7.index;
        java.lang.String str36 = instruction7.key;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(oper12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertTrue("'" + oper29 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper29.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper32 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper32.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str34, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str36, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test06744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06744");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException33.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException35);
        jacksonWrapperException29.addSuppressed((java.lang.Throwable) jacksonWrapperException35);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException42);
        jacksonWrapperException29.addSuppressed((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException45);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException45);
        java.lang.Throwable[] throwableArray48 = jacksonWrapperException8.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray48);
    }

    @Test
    public void test06745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06745");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction7.index = (short) 100;
        boolean boolean10 = instruction7.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper12 = instruction11.oper;
        instruction11.key = "~";
        int int15 = instruction11.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        int int19 = jsonDiff17.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean22 = instruction21.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper23);
        int int26 = jsonDiff24.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper29 = instruction28.oper;
        instruction21.oper = oper29;
        instruction11.oper = oper29;
        foodev.jsondiff.Oper oper32 = instruction11.oper;
        instruction7.oper = oper32;
        instruction7.index = (-1);
        boolean boolean36 = instruction7.isIndexed();
        boolean boolean37 = instruction7.isIndexed();
        instruction7.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(oper12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertTrue("'" + oper29 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper29.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper32 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper32.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test06746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06746");
        java.lang.Throwable throwable3 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", throwable3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException4);
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException16);
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException23.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray36 = jacksonWrapperException35.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray40 = jacksonWrapperException39.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray44 = jacksonWrapperException43.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException45);
        jacksonWrapperException39.addSuppressed((java.lang.Throwable) jacksonWrapperException45);
        jacksonWrapperException37.addSuppressed((java.lang.Throwable) jacksonWrapperException39);
        jacksonWrapperException32.addSuppressed((java.lang.Throwable) jacksonWrapperException37);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException51);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException51);
        java.lang.Throwable[] throwableArray55 = jacksonWrapperException5.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray55);
    }

    @Test
    public void test06747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06747");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff5.create("");
        int int9 = jsonDiff5.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff5.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff14.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff14.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff14.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = gsonWrapper0.wrap((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNull(wildcardVisitor15);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(instruction18);
    }

    @Test
    public void test06748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06748");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.Visitor<?> wildcardVisitor18 = jsonDiff17.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff17.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff17.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor21 = jsonDiff17.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement22 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement23 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff17.apply(jzonElement22, jzonElement23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNull(wildcardVisitor18);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNull(wildcardVisitor21);
    }

    @Test
    public void test06749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06749");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException25);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray38 = jacksonWrapperException37.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException39);
        java.lang.String str41 = jacksonWrapperException25.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str41, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test06750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06750");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int6 = instruction5.index;
        boolean boolean7 = instruction5.isIndexed();
        instruction5.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("");
        boolean boolean16 = instruction15.isIndexed();
        instruction15.index = (short) -1;
        foodev.jsondiff.Oper oper19 = instruction15.oper;
        instruction5.oper = oper19;
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        instruction5.index = (byte) 1;
        foodev.jsondiff.Oper oper25 = instruction5.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper26);
        foodev.jsondiff.jsonwrap.Wrapper wrapper28 = jsonDiff27.factory;
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff(wrapper28);
        foodev.jsondiff.JsonDiff.Instruction instruction31 = jsonDiff29.create("");
        boolean boolean32 = instruction31.isIndexed();
        instruction31.key = "~";
        boolean boolean35 = instruction31.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper36);
        foodev.jsondiff.jsonwrap.Wrapper wrapper38 = jsonDiff37.factory;
        foodev.jsondiff.JsonDiff jsonDiff39 = new foodev.jsondiff.JsonDiff(wrapper38);
        foodev.jsondiff.JsonDiff.Instruction instruction41 = jsonDiff39.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction43 = jsonDiff39.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction43.index = (short) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff47 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper46);
        foodev.jsondiff.jsonwrap.Wrapper wrapper48 = jsonDiff47.factory;
        foodev.jsondiff.JsonDiff jsonDiff49 = new foodev.jsondiff.JsonDiff(wrapper48);
        foodev.jsondiff.JsonDiff.Instruction instruction51 = jsonDiff49.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction53 = jsonDiff49.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction53.index = (short) 100;
        boolean boolean56 = instruction53.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction57 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper58 = instruction57.oper;
        instruction57.key = "~";
        int int61 = instruction57.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff63 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper62);
        int int65 = jsonDiff63.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction67 = jsonDiff63.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean68 = instruction67.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff70 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper69);
        int int72 = jsonDiff70.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction74 = jsonDiff70.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper75 = instruction74.oper;
        instruction67.oper = oper75;
        instruction57.oper = oper75;
        foodev.jsondiff.Oper oper78 = instruction57.oper;
        instruction53.oper = oper78;
        instruction43.oper = oper78;
        foodev.jsondiff.Oper oper81 = instruction43.oper;
        instruction31.oper = oper81;
        instruction5.oper = oper81;
        instruction5.key = "";
        boolean boolean86 = instruction5.isIndexed();
        int int87 = instruction5.index;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + oper19 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper19.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper25 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper25.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper28);
        org.junit.Assert.assertNotNull(instruction31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wrapper38);
        org.junit.Assert.assertNotNull(instruction41);
        org.junit.Assert.assertNotNull(instruction43);
        org.junit.Assert.assertNotNull(wrapper48);
        org.junit.Assert.assertNotNull(instruction51);
        org.junit.Assert.assertNotNull(instruction53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(oper58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(instruction67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(instruction74);
        org.junit.Assert.assertTrue("'" + oper75 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper75.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper78 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper78.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper81 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper81.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
    }

    @Test
    public void test06751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06751");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.Leaf leaf14 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray15 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = jsonDiff13.accept(leaf14, jzonArray15, jzonObject16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test06752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06752");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff15.create("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor18 = jsonDiff15.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper19);
        int int22 = jsonDiff20.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff20.factory;
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff(wrapper23);
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj29 = jsonDiff1.diff((java.lang.Object) wildcardVisitor18, (java.lang.Object) jsonDiff24);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNull(wildcardVisitor18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(wrapper23);
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertNotNull(instruction28);
    }

    @Test
    public void test06753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06753");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff9.create("~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff9.checkIndex(jzonElement12, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction11);
    }

    @Test
    public void test06754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06754");
        foodev.jsondiff.jsonwrap.Wrapper wrapper0 = null;
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff(wrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement4 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper5);
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff6.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff8.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff8.create("hi!");
        instruction16.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        int int19 = instruction16.index;
        boolean boolean20 = instruction16.isIndexed();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement21 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement4, instruction16, jzonElement21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test06755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06755");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff3.getVisitor();
        foodev.jsondiff.Node node12 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        foodev.jsondiff.Leaf[] leafArray14 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList15 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList15, leafArray14);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap17 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf18 = jsonDiff3.findLeaves(node12, jzonElement13, (java.util.List<foodev.jsondiff.Leaf>) leafList15, intMap17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(leafArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test06756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06756");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException15);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = wrapper7.wrap((java.lang.Object) "");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray14);
    }

    @Test
    public void test06757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06757");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper5);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = jacksonWrapper0.wrap((java.lang.Object) jsonDiff6);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
    }

    @Test
    public void test06758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06758");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        int int14 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = jsonDiff3.apply("", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test06759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06759");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        java.lang.String str26 = jacksonWrapperException8.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str26, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test06760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06760");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException9);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException21.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException19.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray36 = jacksonWrapperException35.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray40 = jacksonWrapperException39.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException41);
        jacksonWrapperException35.addSuppressed((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray49 = jacksonWrapperException48.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray53 = jacksonWrapperException52.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException54);
        jacksonWrapperException48.addSuppressed((java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray60 = jacksonWrapperException59.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException59);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray64 = jacksonWrapperException63.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException63);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException65);
        jacksonWrapperException59.addSuppressed((java.lang.Throwable) jacksonWrapperException65);
        jacksonWrapperException58.addSuppressed((java.lang.Throwable) jacksonWrapperException59);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException59);
        jacksonWrapperException41.addSuppressed((java.lang.Throwable) jacksonWrapperException59);
        jacksonWrapperException33.addSuppressed((java.lang.Throwable) jacksonWrapperException41);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException73 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException74 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException14);
        java.lang.String str75 = jacksonWrapperException14.toString();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str75, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
    }

    @Test
    public void test06761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06761");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement6 = gsonWrapper0.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
    }

    @Test
    public void test06762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06762");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException23);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException29);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray35 = jacksonWrapperException34.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray38 = jacksonWrapperException37.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException37.addSuppressed((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray42 = jacksonWrapperException41.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException45.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException47);
        jacksonWrapperException41.addSuppressed((java.lang.Throwable) jacksonWrapperException47);
        jacksonWrapperException37.addSuppressed((java.lang.Throwable) jacksonWrapperException47);
        jacksonWrapperException36.addSuppressed((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        java.lang.Throwable[] throwableArray53 = jacksonWrapperException36.getSuppressed();
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException36);
        java.lang.String str55 = jacksonWrapperException36.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str55, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
    }

    @Test
    public void test06763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06763");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper3);
        int int7 = jsonDiff5.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        int int14 = jsonDiff12.isIndexed("hi!");
        int int16 = jsonDiff12.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff12.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper18);
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff20.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        boolean boolean23 = instruction22.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper24);
        foodev.jsondiff.jsonwrap.Wrapper wrapper26 = jsonDiff25.factory;
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff(wrapper26);
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff27.create("");
        int int30 = instruction29.index;
        boolean boolean31 = instruction29.isIndexed();
        instruction29.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff35 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper34);
        foodev.jsondiff.jsonwrap.Wrapper wrapper36 = jsonDiff35.factory;
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff(wrapper36);
        foodev.jsondiff.JsonDiff.Instruction instruction39 = jsonDiff37.create("");
        boolean boolean40 = instruction39.isIndexed();
        instruction39.index = (short) -1;
        foodev.jsondiff.Oper oper43 = instruction39.oper;
        instruction29.oper = oper43;
        foodev.jsondiff.JsonDiff.Instruction instruction45 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper46 = instruction45.oper;
        instruction45.key = "~";
        java.lang.String str49 = instruction45.key;
        foodev.jsondiff.JsonDiff.Instruction instruction50 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper51 = instruction50.oper;
        instruction50.index = (-1);
        java.lang.String str54 = instruction50.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff56 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper55);
        foodev.jsondiff.jsonwrap.Wrapper wrapper57 = jsonDiff56.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction59 = jsonDiff56.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction60 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction60.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff64 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper63);
        int int66 = jsonDiff64.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction68 = jsonDiff64.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper69 = instruction68.oper;
        instruction60.oper = oper69;
        instruction59.oper = oper69;
        instruction50.oper = oper69;
        instruction45.oper = oper69;
        instruction29.oper = oper69;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper75 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff76 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper75);
        foodev.jsondiff.jsonwrap.Wrapper wrapper77 = jsonDiff76.factory;
        foodev.jsondiff.JsonDiff jsonDiff78 = new foodev.jsondiff.JsonDiff(wrapper77);
        foodev.jsondiff.Visitor<?> wildcardVisitor79 = jsonDiff78.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction81 = jsonDiff78.create("");
        int int83 = jsonDiff78.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper84 = jsonDiff78.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction86 = jsonDiff78.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper87 = instruction86.oper;
        instruction29.oper = oper87;
        instruction22.oper = oper87;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement90 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff5.applyPartial(jzonElement10, instruction22, jzonElement90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wrapper26);
        org.junit.Assert.assertNotNull(instruction29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wrapper36);
        org.junit.Assert.assertNotNull(instruction39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + oper43 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper43.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNull(oper46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "~" + "'", str49, "~");
        org.junit.Assert.assertNull(oper51);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(wrapper57);
        org.junit.Assert.assertNotNull(instruction59);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(instruction68);
        org.junit.Assert.assertTrue("'" + oper69 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper69.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper77);
        org.junit.Assert.assertNull(wildcardVisitor79);
        org.junit.Assert.assertNotNull(instruction81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(wrapper84);
        org.junit.Assert.assertNotNull(instruction86);
        org.junit.Assert.assertTrue("'" + oper87 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper87.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test06764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06764");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        java.lang.String str6 = jacksonWrapperException5.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str6, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
    }

    @Test
    public void test06765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06765");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        int int11 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int13 = jsonDiff1.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff1.create("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper19);
        foodev.jsondiff.jsonwrap.Wrapper wrapper21 = jsonDiff20.factory;
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff(wrapper21);
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff22.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff22.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction26.index = (short) 100;
        boolean boolean29 = instruction26.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction30 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper31 = instruction30.oper;
        instruction30.key = "~";
        int int34 = instruction30.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff36 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper35);
        int int38 = jsonDiff36.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction40 = jsonDiff36.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean41 = instruction40.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff43 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper42);
        int int45 = jsonDiff43.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction47 = jsonDiff43.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper48 = instruction47.oper;
        instruction40.oper = oper48;
        instruction30.oper = oper48;
        foodev.jsondiff.Oper oper51 = instruction30.oper;
        instruction26.oper = oper51;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff54 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper53);
        foodev.jsondiff.jsonwrap.Wrapper wrapper55 = jsonDiff54.factory;
        foodev.jsondiff.JsonDiff jsonDiff56 = new foodev.jsondiff.JsonDiff(wrapper55);
        foodev.jsondiff.Visitor<?> wildcardVisitor57 = jsonDiff56.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction59 = jsonDiff56.create("");
        instruction59.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper62 = instruction59.oper;
        instruction26.oper = oper62;
        foodev.jsondiff.Oper oper64 = instruction26.oper;
        foodev.jsondiff.Oper oper65 = instruction26.oper;
        instruction26.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction26.index = 35;
        int int70 = instruction26.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper71 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff72 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper71);
        foodev.jsondiff.jsonwrap.Wrapper wrapper73 = jsonDiff72.factory;
        foodev.jsondiff.JsonDiff jsonDiff74 = new foodev.jsondiff.JsonDiff(wrapper73);
        foodev.jsondiff.JsonDiff.Instruction instruction76 = jsonDiff74.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction78 = jsonDiff74.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction80 = jsonDiff74.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction82 = jsonDiff74.create("hi!");
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff18.apply((java.lang.Object) int70, (java.lang.Object) instruction82);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Integer cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(wrapper21);
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(oper31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(instruction40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(instruction47);
        org.junit.Assert.assertTrue("'" + oper48 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper48.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper51 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper51.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper55);
        org.junit.Assert.assertNull(wildcardVisitor57);
        org.junit.Assert.assertNotNull(instruction59);
        org.junit.Assert.assertTrue("'" + oper62 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper62.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper64 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper64.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper65 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper65.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 35 + "'", int70 == 35);
        org.junit.Assert.assertNotNull(wrapper73);
        org.junit.Assert.assertNotNull(instruction76);
        org.junit.Assert.assertNotNull(instruction78);
        org.junit.Assert.assertNotNull(instruction80);
        org.junit.Assert.assertNotNull(instruction82);
    }

    @Test
    public void test06766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06766");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException14);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        java.lang.String str23 = jacksonWrapperException22.toString();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str23, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test06767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06767");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff5.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff13.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff13.create("");
        int int18 = jsonDiff13.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction21.index = '#';
        boolean boolean24 = instruction21.isIndexed();
        foodev.jsondiff.Oper oper25 = instruction21.oper;
        java.lang.String str26 = instruction21.key;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement27 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff5.applyPartial(jzonElement9, instruction21, jzonElement27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + oper25 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper25.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str26, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test06768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06768");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = wrapper10.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test06769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06769");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        java.lang.Class<?> wildcardClass10 = wrapper9.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test06770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06770");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray1 = jacksonWrapperException0.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException6);
        jacksonWrapperException0.addSuppressed((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException33.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray38 = jacksonWrapperException37.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException39);
        jacksonWrapperException33.addSuppressed((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray47 = jacksonWrapperException46.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray51 = jacksonWrapperException50.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException52);
        jacksonWrapperException46.addSuppressed((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray58 = jacksonWrapperException57.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray62 = jacksonWrapperException61.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException61);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException63);
        jacksonWrapperException57.addSuppressed((java.lang.Throwable) jacksonWrapperException63);
        jacksonWrapperException56.addSuppressed((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException57);
        jacksonWrapperException39.addSuppressed((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray71 = jacksonWrapperException70.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException72 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException70);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException74 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray75 = jacksonWrapperException74.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException76 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException74);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException77 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException76);
        jacksonWrapperException70.addSuppressed((java.lang.Throwable) jacksonWrapperException76);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException79 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException76);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException80 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException76);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException82 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray83 = jacksonWrapperException82.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException84 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException82);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException85 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException84);
        jacksonWrapperException76.addSuppressed((java.lang.Throwable) jacksonWrapperException84);
        jacksonWrapperException57.addSuppressed((java.lang.Throwable) jacksonWrapperException84);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException88 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException57);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException88);
        org.junit.Assert.assertNotNull(throwableArray1);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(throwableArray83);
    }

    @Test
    public void test06771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06771");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int11 = jsonDiff3.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.Node node15 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        foodev.jsondiff.Leaf[] leafArray17 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList18 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList18, leafArray17);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap20 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf21 = jsonDiff14.findLeaves(node15, jzonElement16, (java.util.List<foodev.jsondiff.Leaf>) leafList18, intMap20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(leafArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test06772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06772");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        int int11 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int13 = jsonDiff1.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff1.create("hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff19.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement22 = wrapper20.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNotNull(wrapper20);
    }

    @Test
    public void test06773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06773");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("");
        foodev.jsondiff.Node node15 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        foodev.jsondiff.Leaf[] leafArray17 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList18 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList18, leafArray17);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap20 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf21 = jsonDiff3.findLeaves(node15, jzonElement16, (java.util.List<foodev.jsondiff.Leaf>) leafList18, intMap20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(leafArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test06774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06774");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        boolean boolean6 = instruction5.isIndexed();
        instruction5.index = 97;
        int int9 = instruction5.index;
        java.lang.String str10 = instruction5.key;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 97 + "'", int9 == 97);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test06775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06775");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject18 = jsonDiff3.diff(jzonElement16, jzonElement17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(wrapper15);
    }

    @Test
    public void test06776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06776");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException13);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException20.getSuppressed();
        jacksonWrapperException18.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException31.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException33);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        java.lang.Throwable[] throwableArray37 = jacksonWrapperException33.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException40);
        jacksonWrapperException33.addSuppressed((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException41);
        java.lang.Throwable[] throwableArray44 = jacksonWrapperException43.getSuppressed();
        java.lang.Throwable[] throwableArray45 = jacksonWrapperException43.getSuppressed();
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException43);
        java.lang.Throwable throwable47 = null;
        // The following exception was thrown during execution in test generation
        try {
            jacksonWrapperException20.addSuppressed(throwable47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray45);
    }

    @Test
    public void test06777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06777");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int7 = jsonDiff1.isIndexed("");
        int int9 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = jsonDiff1.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertNotNull(instruction14);
    }

    @Test
    public void test06778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06778");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        int int19 = jsonDiff17.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper22 = instruction21.oper;
        int int23 = instruction21.index;
        java.lang.String str24 = instruction21.key;
        int int25 = instruction21.index;
        instruction21.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        java.lang.String str28 = instruction21.key;
        int int29 = instruction21.index;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement30 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement15, instruction21, jzonElement30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertNull(wildcardVisitor13);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + oper22 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper22.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str24, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str28, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    }

    @Test
    public void test06779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06779");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        int int4 = jsonDiff2.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int6 = jsonDiff2.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff2.checkIndex(jzonElement7, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test06780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06780");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.Node node13 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.Leaf[] leafArray15 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList16 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList16, leafArray15);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap18 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf19 = jsonDiff12.findLeaves(node13, jzonElement14, (java.util.List<foodev.jsondiff.Leaf>) leafList16, intMap18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(leafArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test06781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06781");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        int int6 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff4.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff4.checkIndex(jzonElement10, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
    }

    @Test
    public void test06782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06782");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff10.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff10.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction14.index = (short) 100;
        boolean boolean17 = instruction14.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper18);
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff19.factory;
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff(wrapper20);
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff21.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction23.key = "hi!";
        foodev.jsondiff.Oper oper26 = instruction23.oper;
        instruction14.oper = oper26;
        boolean boolean28 = instruction14.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper29);
        foodev.jsondiff.jsonwrap.Wrapper wrapper31 = jsonDiff30.factory;
        foodev.jsondiff.JsonDiff jsonDiff32 = new foodev.jsondiff.JsonDiff(wrapper31);
        foodev.jsondiff.JsonDiff.Instruction instruction34 = jsonDiff32.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction36 = jsonDiff32.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction36.index = (short) 100;
        boolean boolean39 = instruction36.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff41 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper40);
        foodev.jsondiff.jsonwrap.Wrapper wrapper42 = jsonDiff41.factory;
        foodev.jsondiff.JsonDiff jsonDiff43 = new foodev.jsondiff.JsonDiff(wrapper42);
        foodev.jsondiff.JsonDiff.Instruction instruction45 = jsonDiff43.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction45.key = "hi!";
        foodev.jsondiff.Oper oper48 = instruction45.oper;
        instruction36.oper = oper48;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff51 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper50);
        foodev.jsondiff.jsonwrap.Wrapper wrapper52 = jsonDiff51.factory;
        foodev.jsondiff.JsonDiff jsonDiff53 = new foodev.jsondiff.JsonDiff(wrapper52);
        foodev.jsondiff.JsonDiff.Instruction instruction55 = jsonDiff53.create("");
        int int57 = jsonDiff53.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction59 = jsonDiff53.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction61 = jsonDiff53.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction61.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        java.lang.String str64 = instruction61.key;
        boolean boolean65 = instruction61.isIndexed();
        foodev.jsondiff.Oper oper66 = instruction61.oper;
        instruction36.oper = oper66;
        foodev.jsondiff.Oper oper68 = instruction36.oper;
        instruction14.oper = oper68;
        boolean boolean70 = instruction14.isIndexed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement71 = wrapper6.wrap((java.lang.Object) boolean70);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Boolean cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertTrue("'" + oper26 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper26.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wrapper31);
        org.junit.Assert.assertNotNull(instruction34);
        org.junit.Assert.assertNotNull(instruction36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wrapper42);
        org.junit.Assert.assertNotNull(instruction45);
        org.junit.Assert.assertTrue("'" + oper48 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper48.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper52);
        org.junit.Assert.assertNotNull(instruction55);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(instruction59);
        org.junit.Assert.assertNotNull(instruction61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str64, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + oper66 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper66.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper68 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper68.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test06783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06783");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject13 = jsonDiff3.diff(jzonElement11, jzonElement12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor10);
    }

    @Test
    public void test06784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06784");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement15, jzonElement16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(wrapper14);
    }

    @Test
    public void test06785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06785");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff9.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff9.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff9.getVisitor();
        int int17 = jsonDiff9.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff9.checkIndex(jzonElement18, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNull(wildcardVisitor15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test06786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06786");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        java.lang.String str26 = jacksonWrapperException24.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str26, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
    }

    @Test
    public void test06787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06787");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int6 = instruction5.index;
        boolean boolean7 = instruction5.isIndexed();
        instruction5.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("");
        boolean boolean16 = instruction15.isIndexed();
        instruction15.index = (short) -1;
        foodev.jsondiff.Oper oper19 = instruction15.oper;
        instruction5.oper = oper19;
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        instruction5.index = 10;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + oper19 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper19.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test06788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06788");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = jsonDiff1.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
    }

    @Test
    public void test06789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06789");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement11, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(instruction10);
    }

    @Test
    public void test06790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06790");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int10 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Node node13 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.Leaf[] leafArray15 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList16 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList16, leafArray15);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap18 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf19 = jsonDiff3.findLeaves(node13, jzonElement14, (java.util.List<foodev.jsondiff.Leaf>) leafList16, intMap18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(leafArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test06791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06791");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction7.index = (short) 100;
        boolean boolean10 = instruction7.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff14.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction16.key = "hi!";
        foodev.jsondiff.Oper oper19 = instruction16.oper;
        instruction7.oper = oper19;
        int int21 = instruction7.index;
        instruction7.index = (byte) 0;
        instruction7.index = (byte) -1;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertTrue("'" + oper19 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper19.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
    }

    @Test
    public void test06792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06792");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff7.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff7.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        int int14 = jsonDiff12.isIndexed("");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.Visitor<?> wildcardVisitor19 = jsonDiff18.getVisitor();
        int int21 = jsonDiff18.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff(wrapper22);
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = jsonDiff23.factory;
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff(wrapper24);
        foodev.jsondiff.Visitor<?> wildcardVisitor26 = jsonDiff25.getVisitor();
        int int28 = jsonDiff25.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper29 = jsonDiff25.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction31 = jsonDiff25.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction33 = jsonDiff25.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff35 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper34);
        foodev.jsondiff.jsonwrap.Wrapper wrapper36 = jsonDiff35.factory;
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff(wrapper36);
        foodev.jsondiff.JsonDiff.Instruction instruction39 = jsonDiff37.create("");
        int int40 = instruction39.index;
        boolean boolean41 = instruction39.isIndexed();
        instruction39.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff45 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper44);
        foodev.jsondiff.jsonwrap.Wrapper wrapper46 = jsonDiff45.factory;
        foodev.jsondiff.JsonDiff jsonDiff47 = new foodev.jsondiff.JsonDiff(wrapper46);
        foodev.jsondiff.JsonDiff.Instruction instruction49 = jsonDiff47.create("");
        boolean boolean50 = instruction49.isIndexed();
        instruction49.index = (short) -1;
        foodev.jsondiff.Oper oper53 = instruction49.oper;
        instruction39.oper = oper53;
        instruction39.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        int int57 = instruction39.index;
        boolean boolean58 = instruction39.isIndexed();
        foodev.jsondiff.Oper oper59 = instruction39.oper;
        boolean boolean60 = instruction39.isIndexed();
        int int61 = instruction39.index;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff12.apply((java.lang.Object) instruction33, (java.lang.Object) instruction39);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNull(wildcardVisitor19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertNotNull(wrapper24);
        org.junit.Assert.assertNull(wildcardVisitor26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(wrapper29);
        org.junit.Assert.assertNotNull(instruction31);
        org.junit.Assert.assertNotNull(instruction33);
        org.junit.Assert.assertNotNull(wrapper36);
        org.junit.Assert.assertNotNull(instruction39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wrapper46);
        org.junit.Assert.assertNotNull(instruction49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + oper53 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper53.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 97 + "'", int57 == 97);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + oper59 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper59.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 97 + "'", int61 == 97);
    }

    @Test
    public void test06793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06793");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper15);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = wrapper15.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
    }

    @Test
    public void test06794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06794");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.Node node19 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = null;
        foodev.jsondiff.Leaf[] leafArray21 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList22 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList22, leafArray21);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap24 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf25 = jsonDiff18.findLeaves(node19, jzonElement20, (java.util.List<foodev.jsondiff.Leaf>) leafList22, intMap24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(leafArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test06795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06795");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = jacksonWrapper0.wrap((java.lang.Object) jacksonWrapperException14);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray7);
    }

    @Test
    public void test06796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06796");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        int int12 = jsonDiff10.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff10.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject16 = jsonDiff10.diff(jzonElement14, jzonElement15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
    }

    @Test
    public void test06797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06797");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException22.getSuppressed();
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException32.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException34);
        jacksonWrapperException28.addSuppressed((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray41 = jacksonWrapperException40.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException40);
        jacksonWrapperException38.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff48 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper47);
        foodev.jsondiff.jsonwrap.Wrapper wrapper49 = jsonDiff48.factory;
        foodev.jsondiff.JsonDiff jsonDiff50 = new foodev.jsondiff.JsonDiff(wrapper49);
        foodev.jsondiff.Visitor<?> wildcardVisitor51 = jsonDiff50.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction53 = jsonDiff50.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper54 = jsonDiff50.factory;
        int int56 = jsonDiff50.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper57 = jsonDiff50.factory;
        foodev.jsondiff.JsonDiff jsonDiff58 = new foodev.jsondiff.JsonDiff(wrapper57);
        foodev.jsondiff.Visitor<?> wildcardVisitor59 = jsonDiff58.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj60 = jsonDiff3.diff((java.lang.Object) jacksonWrapperException46, (java.lang.Object) jsonDiff58);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNull(wildcardVisitor15);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(wrapper49);
        org.junit.Assert.assertNull(wildcardVisitor51);
        org.junit.Assert.assertNotNull(instruction53);
        org.junit.Assert.assertNotNull(wrapper54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(wrapper57);
        org.junit.Assert.assertNull(wildcardVisitor59);
    }

    @Test
    public void test06798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06798");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException18);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException18);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException31.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException33);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException33);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray41 = jacksonWrapperException40.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException40.addSuppressed((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray47 = jacksonWrapperException46.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray51 = jacksonWrapperException50.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException52);
        jacksonWrapperException46.addSuppressed((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException55);
        jacksonWrapperException40.addSuppressed((java.lang.Throwable) jacksonWrapperException55);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException58);
        jacksonWrapperException38.addSuppressed((java.lang.Throwable) jacksonWrapperException58);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException65);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException65);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException67);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException71 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray72 = jacksonWrapperException71.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException73 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException71);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException75 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray76 = jacksonWrapperException75.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException77 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException75);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException78 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException77);
        jacksonWrapperException71.addSuppressed((java.lang.Throwable) jacksonWrapperException77);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException80 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException71);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException81 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException80);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException82 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException80);
        jacksonWrapperException68.addSuppressed((java.lang.Throwable) jacksonWrapperException80);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException68);
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray72);
        org.junit.Assert.assertNotNull(throwableArray76);
    }

    @Test
    public void test06799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06799");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException16);
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException16);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException10);
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException10.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement25 = jacksonWrapper0.wrap((java.lang.Object) throwableArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: [Ljava.lang.Throwable; cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray24);
    }

    @Test
    public void test06800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06800");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper6);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = jsonDiff8.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
    }

    @Test
    public void test06801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06801");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper3);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff6.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff6.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff6.factory;
        int int12 = jsonDiff6.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff6.factory;
        int int15 = jsonDiff6.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff6.create("~");
        int int19 = jsonDiff6.isIndexed("");
        int int21 = jsonDiff6.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff6.factory;
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff(wrapper22);
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff(wrapper22);
        foodev.jsondiff.jsonwrap.Wrapper wrapper25 = jsonDiff24.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement26 = gsonWrapper0.wrap((java.lang.Object) wrapper25);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertNotNull(wrapper25);
    }

    @Test
    public void test06802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06802");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff5.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff5.apply(jzonElement7, jzonElement8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(wrapper6);
    }

    @Test
    public void test06803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06803");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        int int14 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        int int19 = jsonDiff17.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff17.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper25 = jsonDiff17.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor26 = jsonDiff17.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor27 = jsonDiff17.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement28 = wrapper15.wrap((java.lang.Object) jsonDiff17);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertNotNull(wrapper25);
        org.junit.Assert.assertNull(wildcardVisitor26);
        org.junit.Assert.assertNull(wildcardVisitor27);
    }

    @Test
    public void test06804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06804");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff8.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException24);
        jacksonWrapperException18.addSuppressed((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException18);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException16);
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray36 = jacksonWrapperException35.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray40 = jacksonWrapperException39.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException41);
        jacksonWrapperException35.addSuppressed((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException35);
        jacksonWrapperException33.addSuppressed((java.lang.Throwable) jacksonWrapperException35);
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException35.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException35);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException35);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement49 = wrapper13.wrap((java.lang.Object) jacksonWrapperException16);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray46);
    }

    @Test
    public void test06805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06805");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray18 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException13.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray37 = jacksonWrapperException36.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray41 = jacksonWrapperException40.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException42);
        jacksonWrapperException36.addSuppressed((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException42.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException49);
        jacksonWrapperException42.addSuppressed((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException50);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException56);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException56);
        java.lang.Class<?> wildcardClass59 = jacksonWrapperException58.getClass();
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test06806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06806");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException14);
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException25);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray24);
    }

    @Test
    public void test06807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06807");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        instruction5.key = "hi!";
        int int8 = instruction5.index;
        int int9 = instruction5.index;
        boolean boolean10 = instruction5.isIndexed();
        java.lang.String str11 = instruction5.key;
        java.lang.String str12 = instruction5.key;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test06808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06808");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = jsonDiff3.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
    }

    @Test
    public void test06809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06809");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException5);
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException24);
        jacksonWrapperException18.addSuppressed((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("");
        jacksonWrapperException29.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray23);
    }

    @Test
    public void test06810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06810");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int8 = instruction7.index;
        int int9 = instruction7.index;
        boolean boolean10 = instruction7.isIndexed();
        boolean boolean11 = instruction7.isIndexed();
        java.lang.Class<?> wildcardClass12 = instruction7.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test06811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06811");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor5 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int8 = instruction7.index;
        java.lang.String str9 = instruction7.key;
        instruction7.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertNull(wildcardVisitor5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str9, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
    }

    @Test
    public void test06812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06812");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        int int9 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        int int14 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int16 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff18.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction21.key = "";
        instruction21.index = 'a';
        instruction21.index = 1;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper28);
        foodev.jsondiff.jsonwrap.Wrapper wrapper30 = jsonDiff29.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff29.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction32.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        foodev.jsondiff.JsonDiff.Instruction instruction35 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction35.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff39 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper38);
        int int41 = jsonDiff39.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction43 = jsonDiff39.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper44 = instruction43.oper;
        instruction35.oper = oper44;
        instruction32.oper = oper44;
        instruction21.oper = oper44;
        foodev.jsondiff.Oper oper48 = instruction21.oper;
        int int49 = instruction21.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff51 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper50);
        foodev.jsondiff.jsonwrap.Wrapper wrapper52 = jsonDiff51.factory;
        foodev.jsondiff.JsonDiff jsonDiff53 = new foodev.jsondiff.JsonDiff(wrapper52);
        foodev.jsondiff.JsonDiff.Instruction instruction55 = jsonDiff53.create("");
        foodev.jsondiff.Oper oper56 = instruction55.oper;
        instruction21.oper = oper56;
        foodev.jsondiff.Oper oper58 = instruction21.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff60 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper59);
        foodev.jsondiff.jsonwrap.Wrapper wrapper61 = jsonDiff60.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction63 = jsonDiff60.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int64 = instruction63.index;
        instruction63.index = (-1);
        instruction63.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        java.lang.String str69 = instruction63.key;
        boolean boolean70 = instruction63.isIndexed();
        foodev.jsondiff.Oper oper71 = instruction63.oper;
        instruction21.oper = oper71;
        instruction20.oper = oper71;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertNotNull(wrapper30);
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(instruction43);
        org.junit.Assert.assertTrue("'" + oper44 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper44.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper48 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper48.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(wrapper52);
        org.junit.Assert.assertNotNull(instruction55);
        org.junit.Assert.assertTrue("'" + oper56 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper56.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper58 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper58.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper61);
        org.junit.Assert.assertNotNull(instruction63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~" + "'", str69, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + oper71 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper71.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test06813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06813");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff9.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff9.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff18.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement21 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject22 = jsonDiff18.diff(jzonElement20, jzonElement21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper19);
    }

    @Test
    public void test06814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06814");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff12.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff12.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff12.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = jsonDiff12.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
    }

    @Test
    public void test06815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06815");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = gsonWrapper0.wrap((java.lang.Object) jacksonWrapperException2);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray3);
    }

    @Test
    public void test06816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06816");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff3.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNull(wildcardVisitor15);
    }

    @Test
    public void test06817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06817");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction7.index = (short) 100;
        boolean boolean10 = instruction7.isIndexed();
        instruction7.index = (short) 10;
        boolean boolean13 = instruction7.isIndexed();
        java.lang.String str14 = instruction7.key;
        instruction7.key = "";
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str14, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test06818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06818");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("~");
        foodev.jsondiff.Oper oper7 = instruction6.oper;
        java.lang.Class<?> wildcardClass8 = instruction6.getClass();
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + oper7 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper7.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test06819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06819");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff2.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff2.getVisitor();
        int int9 = jsonDiff2.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = wrapper10.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test06820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06820");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        boolean boolean6 = instruction5.isIndexed();
        instruction5.index = (short) -1;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff10.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff12.create("");
        boolean boolean15 = instruction14.isIndexed();
        instruction14.index = (byte) 10;
        boolean boolean18 = instruction14.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction19 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction19.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper22);
        int int25 = jsonDiff23.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff23.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper28 = instruction27.oper;
        instruction19.oper = oper28;
        instruction14.oper = oper28;
        instruction5.oper = oper28;
        java.lang.String str32 = instruction5.key;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertTrue("'" + oper28 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper28.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
    }

    @Test
    public void test06821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06821");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = wrapper12.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test06822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06822");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException31.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException33);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        java.lang.Throwable[] throwableArray40 = jacksonWrapperException37.getSuppressed();
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException37);
        java.lang.String str42 = jacksonWrapperException37.toString();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~" + "'", str42, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
    }

    @Test
    public void test06823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06823");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper3);
        int int6 = jsonDiff4.isIndexed("hi!");
        int int8 = jsonDiff4.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = gsonWrapper0.wrap((java.lang.Object) jsonDiff4);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(instruction11);
    }

    @Test
    public void test06824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06824");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int6 = instruction5.index;
        boolean boolean7 = instruction5.isIndexed();
        instruction5.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("");
        boolean boolean16 = instruction15.isIndexed();
        instruction15.index = (short) -1;
        foodev.jsondiff.Oper oper19 = instruction15.oper;
        instruction5.oper = oper19;
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        int int23 = instruction5.index;
        instruction5.index = 100;
        java.lang.Class<?> wildcardClass26 = instruction5.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + oper19 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper19.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 97 + "'", int23 == 97);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test06825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06825");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff9.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        foodev.jsondiff.JsonDiff.Instruction instruction17 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper18 = instruction17.oper;
        instruction17.index = (-1);
        java.lang.String str21 = instruction17.key;
        instruction17.key = "~";
        boolean boolean24 = instruction17.isIndexed();
        boolean boolean25 = instruction17.isIndexed();
        int int26 = instruction17.index;
        instruction17.index = 1;
        instruction17.index = ' ';
        instruction17.index = 1;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement33 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff15.applyPartial(jzonElement16, instruction17, jzonElement33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNull(oper18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
    }

    @Test
    public void test06826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06826");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        int int16 = jsonDiff3.isIndexed("");
        int int18 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement20, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wrapper19);
    }

    @Test
    public void test06827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06827");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        int int13 = jsonDiff11.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.Visitor<?> wildcardVisitor19 = jsonDiff18.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff18.create("");
        instruction21.key = "hi!";
        int int24 = instruction21.index;
        foodev.jsondiff.Oper oper25 = instruction21.oper;
        java.lang.String str26 = instruction21.key;
        instruction21.index = 0;
        java.lang.String str29 = instruction21.key;
        foodev.jsondiff.Oper oper30 = instruction21.oper;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement31 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff11.applyPartial(jzonElement14, instruction21, jzonElement31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNull(wildcardVisitor19);
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + oper25 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper25.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertTrue("'" + oper30 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper30.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test06828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06828");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        int int9 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        int int15 = jsonDiff13.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean18 = instruction17.isIndexed();
        foodev.jsondiff.Oper oper19 = null;
        instruction17.oper = oper19;
        instruction17.index = ' ';
        foodev.jsondiff.Oper oper23 = instruction17.oper;
        int int24 = instruction17.index;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement25 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement11, instruction17, jzonElement25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(oper23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 32 + "'", int24 == 32);
    }

    @Test
    public void test06829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06829");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff13.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = wrapper7.wrap((java.lang.Object) instruction17);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(instruction17);
    }

    @Test
    public void test06830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06830");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff4.create("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff4.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = wrapper7.parse("~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
    }

    @Test
    public void test06831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06831");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        int int16 = jsonDiff3.isIndexed("");
        int int18 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff21.factory;
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff(wrapper22);
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff(wrapper22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff26 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper25);
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper25);
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper25);
        foodev.jsondiff.Visitor<?> wildcardVisitor29 = jsonDiff28.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper30 = jsonDiff28.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement31 = wrapper22.wrap((java.lang.Object) wrapper30);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertNull(wildcardVisitor29);
        org.junit.Assert.assertNotNull(wrapper30);
    }

    @Test
    public void test06832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06832");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException8.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException10);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException4);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException28.getSuppressed();
        jacksonWrapperException23.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException38.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray43 = jacksonWrapperException42.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException44);
        jacksonWrapperException38.addSuppressed((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException36.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException36);
        java.lang.Throwable[] throwableArray51 = jacksonWrapperException36.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        jacksonWrapperException23.addSuppressed((java.lang.Throwable) jacksonWrapperException36);
        jacksonWrapperException19.addSuppressed((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray51);
    }

    @Test
    public void test06833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06833");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException16);
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException16);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException21.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException21.addSuppressed((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement33 = jacksonWrapper0.wrap((java.lang.Object) jacksonWrapperException20);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray26);
    }

    @Test
    public void test06834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06834");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("");
        int int12 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff1.getVisitor();
        int int15 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper16 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper16);
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper16);
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper16);
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff19.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper21 = jsonDiff19.factory;
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff(wrapper21);
        int int24 = jsonDiff22.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff22.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper27);
        foodev.jsondiff.jsonwrap.Wrapper wrapper29 = jsonDiff28.factory;
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff(wrapper29);
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff30.create("");
        int int34 = jsonDiff30.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction36 = jsonDiff30.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction38 = jsonDiff30.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction38.index = (short) 1;
        int int41 = instruction38.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff43 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper42);
        foodev.jsondiff.jsonwrap.Wrapper wrapper44 = jsonDiff43.factory;
        foodev.jsondiff.JsonDiff jsonDiff45 = new foodev.jsondiff.JsonDiff(wrapper44);
        foodev.jsondiff.JsonDiff jsonDiff46 = new foodev.jsondiff.JsonDiff(wrapper44);
        int int48 = jsonDiff46.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction50 = jsonDiff46.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff52 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper51);
        foodev.jsondiff.jsonwrap.Wrapper wrapper53 = jsonDiff52.factory;
        foodev.jsondiff.JsonDiff jsonDiff54 = new foodev.jsondiff.JsonDiff(wrapper53);
        foodev.jsondiff.JsonDiff.Instruction instruction56 = jsonDiff54.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean57 = instruction56.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff59 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper58);
        int int61 = jsonDiff59.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction63 = jsonDiff59.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper64 = instruction63.oper;
        instruction56.oper = oper64;
        instruction50.oper = oper64;
        instruction38.oper = oper64;
        boolean boolean68 = instruction38.isIndexed();
        instruction38.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj71 = jsonDiff1.diff((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Object) instruction38);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNotNull(wrapper21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertNotNull(wrapper29);
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(instruction36);
        org.junit.Assert.assertNotNull(instruction38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(wrapper44);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(instruction50);
        org.junit.Assert.assertNotNull(wrapper53);
        org.junit.Assert.assertNotNull(instruction56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(instruction63);
        org.junit.Assert.assertTrue("'" + oper64 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper64.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test06835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06835");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int7 = jsonDiff1.isIndexed("");
        int int9 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = wrapper10.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test06836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06836");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int10 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff12.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff20.create("");
        int int24 = jsonDiff20.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff20.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int28 = jsonDiff20.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper29 = jsonDiff20.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction31 = jsonDiff20.create("");
        java.lang.String str32 = instruction31.key;
        instruction31.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        instruction31.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff38 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper37);
        int int40 = jsonDiff38.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction42 = jsonDiff38.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean43 = instruction42.isIndexed();
        int int44 = instruction42.index;
        instruction42.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff48 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper47);
        int int50 = jsonDiff48.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor51 = jsonDiff48.getVisitor();
        int int53 = jsonDiff48.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper54 = jsonDiff48.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction56 = jsonDiff48.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper57 = instruction56.oper;
        instruction42.oper = oper57;
        instruction31.oper = oper57;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement60 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff12.applyPartial(jzonElement16, instruction31, jzonElement60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNull(wildcardVisitor15);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(wrapper29);
        org.junit.Assert.assertNotNull(instruction31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(instruction42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(wrapper54);
        org.junit.Assert.assertNotNull(instruction56);
        org.junit.Assert.assertTrue("'" + oper57 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper57.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test06837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06837");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int13 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper14);
        int int17 = jsonDiff15.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor18 = jsonDiff15.getVisitor();
        int int20 = jsonDiff15.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int22 = jsonDiff15.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff15.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor25 = jsonDiff15.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper26 = jsonDiff15.factory;
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff(wrapper26);
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff(wrapper26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException34);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray42 = jacksonWrapperException41.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException45.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException47);
        jacksonWrapperException41.addSuppressed((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException41);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException50);
        java.lang.Throwable[] throwableArray52 = jacksonWrapperException50.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray54 = jacksonWrapperException53.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray58 = jacksonWrapperException57.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException59);
        jacksonWrapperException53.addSuppressed((java.lang.Throwable) jacksonWrapperException59);
        java.lang.Throwable[] throwableArray62 = jacksonWrapperException53.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray65 = jacksonWrapperException64.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException64);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray69 = jacksonWrapperException68.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException68);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException71 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException70);
        jacksonWrapperException64.addSuppressed((java.lang.Throwable) jacksonWrapperException70);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException73 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException70);
        java.lang.Throwable[] throwableArray74 = jacksonWrapperException70.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException77 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException78 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException77);
        jacksonWrapperException70.addSuppressed((java.lang.Throwable) jacksonWrapperException78);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException80 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException78);
        jacksonWrapperException53.addSuppressed((java.lang.Throwable) jacksonWrapperException80);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException82 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException53);
        jacksonWrapperException50.addSuppressed((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException84 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException50);
        jacksonWrapperException38.addSuppressed((java.lang.Throwable) jacksonWrapperException84);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj86 = jsonDiff3.diff((java.lang.Object) wrapper26, (java.lang.Object) jacksonWrapperException84);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertNull(wildcardVisitor25);
        org.junit.Assert.assertNotNull(wrapper26);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(throwableArray74);
    }

    @Test
    public void test06838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06838");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff4.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement7 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff4.checkIndex(jzonElement7, 97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNull(wildcardVisitor6);
    }

    @Test
    public void test06839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06839");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException6);
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException25);
        jacksonWrapperException19.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        java.lang.String str32 = jacksonWrapperException30.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str32, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test06840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06840");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = wrapper14.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper14);
    }

    @Test
    public void test06841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06841");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff9.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper11);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = jsonDiff13.diff("~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
    }

    @Test
    public void test06842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06842");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
    }

    @Test
    public void test06843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06843");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        boolean boolean6 = instruction5.isIndexed();
        instruction5.index = (short) -1;
        int int9 = instruction5.index;
        int int10 = instruction5.index;
        java.lang.String str11 = instruction5.key;
        instruction5.index = 0;
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test06844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06844");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = jsonDiff9.diff("hi!", "");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(instruction15);
    }

    @Test
    public void test06845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06845");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor5 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff3.factory;
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement9, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNull(wildcardVisitor5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test06846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06846");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        int int13 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Node node14 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        foodev.jsondiff.Leaf[] leafArray16 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList17 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList17, leafArray16);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap19 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf20 = jsonDiff3.findLeaves(node14, jzonElement15, (java.util.List<foodev.jsondiff.Leaf>) leafList17, intMap19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(leafArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test06847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06847");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int10 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff12.applyPartial(jzonElement13, instruction14, jzonElement15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
    }

    @Test
    public void test06848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06848");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        int int10 = jsonDiff1.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement14, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper13);
    }

    @Test
    public void test06849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06849");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff9.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff9.getVisitor();
        int int14 = jsonDiff9.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff9.getVisitor();
        int int17 = jsonDiff9.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int19 = jsonDiff9.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = null;
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff(wrapper24);
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff25.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff25.create("~");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff31 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper30);
        foodev.jsondiff.jsonwrap.Wrapper wrapper32 = jsonDiff31.factory;
        foodev.jsondiff.JsonDiff jsonDiff33 = new foodev.jsondiff.JsonDiff(wrapper32);
        foodev.jsondiff.Visitor<?> wildcardVisitor34 = jsonDiff33.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction36 = jsonDiff33.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper37 = jsonDiff33.factory;
        foodev.jsondiff.JsonDiff jsonDiff38 = new foodev.jsondiff.JsonDiff(wrapper37);
        foodev.jsondiff.JsonDiff jsonDiff39 = new foodev.jsondiff.JsonDiff(wrapper37);
        foodev.jsondiff.Visitor<?> wildcardVisitor40 = jsonDiff39.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor41 = jsonDiff39.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction43 = jsonDiff39.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction45 = jsonDiff39.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper46 = instruction45.oper;
        instruction29.oper = oper46;
        instruction23.oper = oper46;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff50 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper49);
        foodev.jsondiff.jsonwrap.Wrapper wrapper51 = jsonDiff50.factory;
        foodev.jsondiff.JsonDiff jsonDiff52 = new foodev.jsondiff.JsonDiff(wrapper51);
        foodev.jsondiff.JsonDiff.Instruction instruction54 = jsonDiff52.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int55 = instruction54.index;
        foodev.jsondiff.JsonDiff.Instruction instruction56 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper57 = instruction56.oper;
        boolean boolean58 = instruction56.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff60 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper59);
        foodev.jsondiff.jsonwrap.Wrapper wrapper61 = jsonDiff60.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction63 = jsonDiff60.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction64 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction64.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff68 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper67);
        int int70 = jsonDiff68.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction72 = jsonDiff68.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper73 = instruction72.oper;
        instruction64.oper = oper73;
        instruction63.oper = oper73;
        instruction56.oper = oper73;
        instruction54.oper = oper73;
        instruction23.oper = oper73;
        boolean boolean79 = instruction23.isIndexed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement80 = gsonWrapper0.wrap((java.lang.Object) boolean79);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Boolean cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertNotNull(instruction29);
        org.junit.Assert.assertNotNull(wrapper32);
        org.junit.Assert.assertNull(wildcardVisitor34);
        org.junit.Assert.assertNotNull(instruction36);
        org.junit.Assert.assertNotNull(wrapper37);
        org.junit.Assert.assertNull(wildcardVisitor40);
        org.junit.Assert.assertNull(wildcardVisitor41);
        org.junit.Assert.assertNotNull(instruction43);
        org.junit.Assert.assertNotNull(instruction45);
        org.junit.Assert.assertTrue("'" + oper46 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper46.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper51);
        org.junit.Assert.assertNotNull(instruction54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(oper57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wrapper61);
        org.junit.Assert.assertNotNull(instruction63);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(instruction72);
        org.junit.Assert.assertTrue("'" + oper73 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper73.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test06850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06850");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException32);
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply((java.lang.Object) jacksonWrapperException24, (java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNull(wildcardVisitor13);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray31);
    }

    @Test
    public void test06851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06851");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper6 = instruction5.oper;
        int int7 = instruction5.index;
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + oper6 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper6.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test06852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06852");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException16);
        jacksonWrapperException10.addSuppressed((java.lang.Throwable) jacksonWrapperException16);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException16);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException16);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement21 = gsonWrapper0.wrap((java.lang.Object) jacksonWrapperException5);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray15);
    }

    @Test
    public void test06853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06853");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException8.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = jacksonWrapper0.wrap((java.lang.Object) jacksonWrapperException8);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray13);
    }

    @Test
    public void test06854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06854");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        int int14 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException18.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException20.getSuppressed();
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException38.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException36.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray47 = jacksonWrapperException46.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray50 = jacksonWrapperException49.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException49.addSuppressed((java.lang.Throwable) jacksonWrapperException51);
        java.lang.Throwable[] throwableArray53 = jacksonWrapperException51.getSuppressed();
        jacksonWrapperException46.addSuppressed((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray57 = jacksonWrapperException56.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException56);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray61 = jacksonWrapperException60.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException60);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException62);
        jacksonWrapperException56.addSuppressed((java.lang.Throwable) jacksonWrapperException62);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException62);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException65);
        jacksonWrapperException51.addSuppressed((java.lang.Throwable) jacksonWrapperException66);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException66);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException68);
        java.lang.Throwable[] throwableArray70 = jacksonWrapperException69.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj71 = jsonDiff3.diff((java.lang.Object) jacksonWrapperException44, (java.lang.Object) throwableArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(throwableArray70);
    }

    @Test
    public void test06855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06855");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement10, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
    }

    @Test
    public void test06856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06856");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int6 = instruction5.index;
        boolean boolean7 = instruction5.isIndexed();
        instruction5.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("");
        boolean boolean16 = instruction15.isIndexed();
        instruction15.index = (short) -1;
        foodev.jsondiff.Oper oper19 = instruction15.oper;
        instruction5.oper = oper19;
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        instruction5.index = (byte) 1;
        foodev.jsondiff.Oper oper25 = instruction5.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper26);
        foodev.jsondiff.jsonwrap.Wrapper wrapper28 = jsonDiff27.factory;
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff(wrapper28);
        foodev.jsondiff.JsonDiff.Instruction instruction31 = jsonDiff29.create("");
        boolean boolean32 = instruction31.isIndexed();
        instruction31.key = "~";
        boolean boolean35 = instruction31.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper36);
        foodev.jsondiff.jsonwrap.Wrapper wrapper38 = jsonDiff37.factory;
        foodev.jsondiff.JsonDiff jsonDiff39 = new foodev.jsondiff.JsonDiff(wrapper38);
        foodev.jsondiff.JsonDiff.Instruction instruction41 = jsonDiff39.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction43 = jsonDiff39.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction43.index = (short) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff47 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper46);
        foodev.jsondiff.jsonwrap.Wrapper wrapper48 = jsonDiff47.factory;
        foodev.jsondiff.JsonDiff jsonDiff49 = new foodev.jsondiff.JsonDiff(wrapper48);
        foodev.jsondiff.JsonDiff.Instruction instruction51 = jsonDiff49.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction53 = jsonDiff49.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction53.index = (short) 100;
        boolean boolean56 = instruction53.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction57 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper58 = instruction57.oper;
        instruction57.key = "~";
        int int61 = instruction57.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff63 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper62);
        int int65 = jsonDiff63.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction67 = jsonDiff63.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean68 = instruction67.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff70 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper69);
        int int72 = jsonDiff70.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction74 = jsonDiff70.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper75 = instruction74.oper;
        instruction67.oper = oper75;
        instruction57.oper = oper75;
        foodev.jsondiff.Oper oper78 = instruction57.oper;
        instruction53.oper = oper78;
        instruction43.oper = oper78;
        foodev.jsondiff.Oper oper81 = instruction43.oper;
        instruction31.oper = oper81;
        instruction5.oper = oper81;
        instruction5.key = "";
        boolean boolean86 = instruction5.isIndexed();
        java.lang.String str87 = instruction5.key;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + oper19 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper19.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper25 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper25.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper28);
        org.junit.Assert.assertNotNull(instruction31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wrapper38);
        org.junit.Assert.assertNotNull(instruction41);
        org.junit.Assert.assertNotNull(instruction43);
        org.junit.Assert.assertNotNull(wrapper48);
        org.junit.Assert.assertNotNull(instruction51);
        org.junit.Assert.assertNotNull(instruction53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(oper58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(instruction67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(instruction74);
        org.junit.Assert.assertTrue("'" + oper75 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper75.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper78 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper78.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper81 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper81.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
    }

    @Test
    public void test06857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06857");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int14 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement15, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test06858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06858");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor5 = jsonDiff3.getVisitor();
        int int7 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        int int10 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = gsonWrapper0.wrap((java.lang.Object) instruction12);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNull(wildcardVisitor5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(instruction12);
    }

    @Test
    public void test06859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06859");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff7.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff7.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = jsonDiff7.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test06860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06860");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray26 = jacksonWrapperException25.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray30 = jacksonWrapperException29.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException31);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException25);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException38.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray43 = jacksonWrapperException42.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException44);
        jacksonWrapperException38.addSuppressed((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException44);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray51 = jacksonWrapperException50.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException52);
        jacksonWrapperException44.addSuppressed((java.lang.Throwable) jacksonWrapperException52);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException52);
        java.lang.Throwable throwable59 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", throwable59);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException63);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException63);
        jacksonWrapperException60.addSuppressed((java.lang.Throwable) jacksonWrapperException65);
        jacksonWrapperException52.addSuppressed((java.lang.Throwable) jacksonWrapperException65);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException65);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException71 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~");
        java.lang.Throwable[] throwableArray72 = jacksonWrapperException71.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException73 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException71);
        jacksonWrapperException65.addSuppressed((java.lang.Throwable) jacksonWrapperException71);
        java.lang.Throwable[] throwableArray75 = jacksonWrapperException71.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException76 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException71);
        java.lang.Throwable[] throwableArray77 = jacksonWrapperException76.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray72);
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(throwableArray77);
    }

    @Test
    public void test06861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06861");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff3.create("~");
        int int19 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper22 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper22);
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper22);
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper22);
        foodev.jsondiff.jsonwrap.Wrapper wrapper26 = jsonDiff25.factory;
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff(wrapper26);
        int int29 = jsonDiff27.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor30 = jsonDiff27.getVisitor();
        int int32 = jsonDiff27.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff34 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper33);
        int int36 = jsonDiff34.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction38 = jsonDiff34.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean39 = instruction38.isIndexed();
        foodev.jsondiff.Oper oper40 = null;
        instruction38.oper = oper40;
        foodev.jsondiff.Oper oper42 = instruction38.oper;
        instruction38.key = "~";
        java.lang.String str45 = instruction38.key;
        boolean boolean46 = instruction38.isIndexed();
        boolean boolean47 = instruction38.isIndexed();
        instruction38.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        java.lang.String str50 = instruction38.key;
        foodev.jsondiff.Oper oper51 = instruction38.oper;
        foodev.jsondiff.JsonDiff.Instruction instruction52 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper53 = instruction52.oper;
        instruction52.key = "~";
        java.lang.String str56 = instruction52.key;
        instruction52.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction52.index = (byte) 1;
        boolean boolean61 = instruction52.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff63 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper62);
        foodev.jsondiff.jsonwrap.Wrapper wrapper64 = jsonDiff63.factory;
        foodev.jsondiff.JsonDiff jsonDiff65 = new foodev.jsondiff.JsonDiff(wrapper64);
        foodev.jsondiff.JsonDiff.Instruction instruction67 = jsonDiff65.create("");
        int int69 = jsonDiff65.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction71 = jsonDiff65.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int73 = jsonDiff65.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper74 = jsonDiff65.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction76 = jsonDiff65.create("");
        foodev.jsondiff.Oper oper77 = instruction76.oper;
        instruction52.oper = oper77;
        foodev.jsondiff.Oper oper79 = instruction52.oper;
        instruction38.oper = oper79;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj81 = jsonDiff3.diff((java.lang.Object) jsonDiff27, (java.lang.Object) instruction38);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertNotNull(wrapper26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(instruction38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(oper42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "~" + "'", str45, "~");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str50, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        org.junit.Assert.assertNull(oper51);
        org.junit.Assert.assertNull(oper53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "~" + "'", str56, "~");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wrapper64);
        org.junit.Assert.assertNotNull(instruction67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(instruction71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(wrapper74);
        org.junit.Assert.assertNotNull(instruction76);
        org.junit.Assert.assertTrue("'" + oper77 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper77.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper79 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper79.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test06862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06862");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException11);
        jacksonWrapperException5.addSuppressed((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException5);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException25);
        jacksonWrapperException19.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException32.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray37 = jacksonWrapperException36.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException32.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray44 = jacksonWrapperException43.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray48 = jacksonWrapperException47.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException49);
        jacksonWrapperException43.addSuppressed((java.lang.Throwable) jacksonWrapperException49);
        jacksonWrapperException42.addSuppressed((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException43);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException43);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray57 = jacksonWrapperException56.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException56.addSuppressed((java.lang.Throwable) jacksonWrapperException58);
        java.lang.Throwable[] throwableArray60 = jacksonWrapperException58.getSuppressed();
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException58);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException25);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(throwableArray60);
    }

    @Test
    public void test06863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06863");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff1.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = jsonDiff1.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor10);
    }

    @Test
    public void test06864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06864");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper14);
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff15.factory;
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper16);
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff17.create("");
        int int21 = jsonDiff17.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff17.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper26);
        foodev.jsondiff.jsonwrap.Wrapper wrapper28 = jsonDiff27.factory;
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff(wrapper28);
        foodev.jsondiff.JsonDiff.Instruction instruction31 = jsonDiff29.create("");
        int int32 = instruction31.index;
        boolean boolean33 = instruction31.isIndexed();
        instruction31.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper36);
        foodev.jsondiff.jsonwrap.Wrapper wrapper38 = jsonDiff37.factory;
        foodev.jsondiff.JsonDiff jsonDiff39 = new foodev.jsondiff.JsonDiff(wrapper38);
        foodev.jsondiff.JsonDiff.Instruction instruction41 = jsonDiff39.create("");
        boolean boolean42 = instruction41.isIndexed();
        instruction41.index = (short) -1;
        foodev.jsondiff.Oper oper45 = instruction41.oper;
        instruction31.oper = oper45;
        instruction31.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        instruction31.index = (byte) 1;
        foodev.jsondiff.JsonDiff.Instruction instruction51 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction51.key = "";
        instruction51.index = 'a';
        instruction51.index = 1;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff59 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper58);
        foodev.jsondiff.jsonwrap.Wrapper wrapper60 = jsonDiff59.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction62 = jsonDiff59.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction62.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        foodev.jsondiff.JsonDiff.Instruction instruction65 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction65.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff69 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper68);
        int int71 = jsonDiff69.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction73 = jsonDiff69.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper74 = instruction73.oper;
        instruction65.oper = oper74;
        instruction62.oper = oper74;
        instruction51.oper = oper74;
        foodev.jsondiff.Oper oper78 = instruction51.oper;
        instruction31.oper = oper78;
        instruction25.oper = oper78;
        boolean boolean81 = instruction25.isIndexed();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement82 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement13, instruction25, jzonElement82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertNotNull(wrapper28);
        org.junit.Assert.assertNotNull(instruction31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wrapper38);
        org.junit.Assert.assertNotNull(instruction41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + oper45 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper45.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper60);
        org.junit.Assert.assertNotNull(instruction62);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(instruction73);
        org.junit.Assert.assertTrue("'" + oper74 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper74.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper78 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper78.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test06865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06865");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper8);
        int int11 = jsonDiff9.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean14 = instruction13.isIndexed();
        foodev.jsondiff.Oper oper15 = null;
        instruction13.oper = oper15;
        java.lang.Class<?> wildcardClass17 = instruction13.getClass();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = wrapper6.wrap((java.lang.Object) wildcardClass17);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Class cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test06866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06866");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff3.getVisitor();
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement12, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test06867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06867");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int13 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff17.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int21 = instruction20.index;
        instruction20.index = (-1);
        instruction20.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        boolean boolean26 = instruction20.isIndexed();
        instruction20.index = (short) 1;
        boolean boolean29 = instruction20.isIndexed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement30 = wrapper14.wrap((java.lang.Object) instruction20);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test06868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06868");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.Node node13 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.Leaf[] leafArray15 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList16 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList16, leafArray15);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap18 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf19 = jsonDiff3.findLeaves(node13, jzonElement14, (java.util.List<foodev.jsondiff.Leaf>) leafList16, intMap18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(leafArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test06869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06869");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff3.factory;
        int int19 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper21);
        int int24 = jsonDiff22.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction26 = jsonDiff22.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper27 = jsonDiff22.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff22.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor30 = jsonDiff22.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff22.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction34 = jsonDiff22.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction36 = jsonDiff22.create("hi!");
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement37 = wrapper20.wrap((java.lang.Object) jsonDiff22);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(instruction26);
        org.junit.Assert.assertNotNull(wrapper27);
        org.junit.Assert.assertNotNull(instruction29);
        org.junit.Assert.assertNull(wildcardVisitor30);
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertNotNull(instruction34);
        org.junit.Assert.assertNotNull(instruction36);
    }

    @Test
    public void test06870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06870");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException26);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray40 = jacksonWrapperException39.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray44 = jacksonWrapperException43.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException45);
        jacksonWrapperException39.addSuppressed((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray52 = jacksonWrapperException51.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException53);
        jacksonWrapperException45.addSuppressed((java.lang.Throwable) jacksonWrapperException53);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException57);
        java.lang.Class<?> wildcardClass59 = jacksonWrapperException58.getClass();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test06871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06871");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff12.checkIndex(jzonElement13, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test06872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06872");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        int int8 = instruction5.index;
        instruction5.index = 0;
        int int11 = instruction5.index;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test06873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06873");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int16 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Node node17 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = null;
        foodev.jsondiff.Leaf[] leafArray19 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList20 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList20, leafArray19);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap22 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf23 = jsonDiff3.findLeaves(node17, jzonElement18, (java.util.List<foodev.jsondiff.Leaf>) leafList20, intMap22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(leafArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test06874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06874");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.Leaf leaf12 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray13 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = jsonDiff3.accept(leaf12, jzonArray13, jzonObject14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper11);
    }

    @Test
    public void test06875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06875");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement12, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
    }

    @Test
    public void test06876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06876");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException21);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException25.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException26);
        jacksonWrapperException8.addSuppressed((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray40 = jacksonWrapperException39.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray44 = jacksonWrapperException43.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException43);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException45);
        jacksonWrapperException39.addSuppressed((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException45);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray52 = jacksonWrapperException51.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException53);
        jacksonWrapperException45.addSuppressed((java.lang.Throwable) jacksonWrapperException53);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray59 = jacksonWrapperException58.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException58);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray63 = jacksonWrapperException62.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException62);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException64);
        jacksonWrapperException58.addSuppressed((java.lang.Throwable) jacksonWrapperException64);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException58);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException68 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException67);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException67);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException67);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException73 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray74 = jacksonWrapperException73.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException75 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException73);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException77 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray78 = jacksonWrapperException77.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException79 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException77);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException80 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException79);
        jacksonWrapperException73.addSuppressed((java.lang.Throwable) jacksonWrapperException79);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException82 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException73);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException83 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException82);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException84 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException82);
        jacksonWrapperException67.addSuppressed((java.lang.Throwable) jacksonWrapperException82);
        java.lang.String str86 = jacksonWrapperException82.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertNotNull(throwableArray78);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~" + "'", str86, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
    }

    @Test
    public void test06877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06877");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper12 = instruction11.oper;
        boolean boolean13 = instruction11.isIndexed();
        boolean boolean14 = instruction11.isIndexed();
        foodev.jsondiff.Oper oper15 = instruction11.oper;
        java.lang.String str16 = instruction11.key;
        foodev.jsondiff.Oper oper17 = instruction11.oper;
        java.lang.String str18 = instruction11.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException33.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray38 = jacksonWrapperException37.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException39);
        jacksonWrapperException33.addSuppressed((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException42);
        jacksonWrapperException30.addSuppressed((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray47 = jacksonWrapperException46.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException46.addSuppressed((java.lang.Throwable) jacksonWrapperException48);
        jacksonWrapperException30.addSuppressed((java.lang.Throwable) jacksonWrapperException46);
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray55 = jacksonWrapperException54.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException54);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray59 = jacksonWrapperException58.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException58);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException60);
        jacksonWrapperException54.addSuppressed((java.lang.Throwable) jacksonWrapperException60);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException60);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException60);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException64);
        jacksonWrapperException46.addSuppressed((java.lang.Throwable) jacksonWrapperException65);
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.apply((java.lang.Object) instruction11, (java.lang.Object) jacksonWrapperException65);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(oper12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(oper15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(oper17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(throwableArray59);
    }

    @Test
    public void test06878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06878");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("hi!");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff3.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = jsonDiff3.diff("hi!", "");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNull(wildcardVisitor13);
    }

    @Test
    public void test06879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06879");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff3.create("~");
        int int18 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper20);
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff21.factory;
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff(wrapper22);
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff23.create("");
        int int27 = jsonDiff23.isIndexed("");
        int int29 = jsonDiff23.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction31 = jsonDiff23.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper32 = jsonDiff23.factory;
        int int34 = jsonDiff23.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction36 = jsonDiff23.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff38 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper37);
        foodev.jsondiff.jsonwrap.Wrapper wrapper39 = jsonDiff38.factory;
        foodev.jsondiff.JsonDiff jsonDiff40 = new foodev.jsondiff.JsonDiff(wrapper39);
        foodev.jsondiff.Visitor<?> wildcardVisitor41 = jsonDiff40.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction43 = jsonDiff40.create("");
        instruction43.index = ' ';
        foodev.jsondiff.Oper oper46 = instruction43.oper;
        instruction36.oper = oper46;
        java.lang.String str48 = instruction36.key;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement49 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement19, instruction36, jzonElement49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(instruction31);
        org.junit.Assert.assertNotNull(wrapper32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(instruction36);
        org.junit.Assert.assertNotNull(wrapper39);
        org.junit.Assert.assertNull(wildcardVisitor41);
        org.junit.Assert.assertNotNull(instruction43);
        org.junit.Assert.assertTrue("'" + oper46 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper46.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str48, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test06880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06880");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff.Instruction instruction2 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper3 = instruction2.oper;
        instruction2.index = (-1);
        java.lang.String str6 = instruction2.key;
        instruction2.index = 32;
        instruction2.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = gsonWrapper0.wrap((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(oper3);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test06881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06881");
        java.lang.Throwable throwable1 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", throwable1);
        java.lang.String str3 = jacksonWrapperException2.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str3, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test06882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06882");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        int int6 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Leaf leaf9 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray10 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = jsonDiff3.accept(leaf9, jzonArray10, jzonObject11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
    }

    @Test
    public void test06883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06883");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff3.getVisitor();
        int int10 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement11, jzonElement12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test06884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06884");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper1);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff4.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction8.index = (short) 100;
        boolean boolean11 = instruction8.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction12 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper13 = instruction12.oper;
        instruction12.key = "~";
        int int16 = instruction12.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        int int20 = jsonDiff18.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff18.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean23 = instruction22.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper24);
        int int27 = jsonDiff25.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff25.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper30 = instruction29.oper;
        instruction22.oper = oper30;
        instruction12.oper = oper30;
        foodev.jsondiff.Oper oper33 = instruction12.oper;
        instruction8.oper = oper33;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff36 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper35);
        foodev.jsondiff.jsonwrap.Wrapper wrapper37 = jsonDiff36.factory;
        foodev.jsondiff.JsonDiff jsonDiff38 = new foodev.jsondiff.JsonDiff(wrapper37);
        foodev.jsondiff.Visitor<?> wildcardVisitor39 = jsonDiff38.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction41 = jsonDiff38.create("");
        instruction41.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper44 = instruction41.oper;
        instruction8.oper = oper44;
        foodev.jsondiff.Oper oper46 = instruction8.oper;
        foodev.jsondiff.Oper oper47 = instruction8.oper;
        java.lang.String str48 = instruction8.key;
        foodev.jsondiff.Oper oper49 = instruction8.oper;
        foodev.jsondiff.Oper oper50 = instruction8.oper;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement51 = gsonWrapper0.wrap((java.lang.Object) oper50);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(oper13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(instruction29);
        org.junit.Assert.assertTrue("'" + oper30 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper30.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper33 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper33.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper37);
        org.junit.Assert.assertNull(wildcardVisitor39);
        org.junit.Assert.assertNotNull(instruction41);
        org.junit.Assert.assertTrue("'" + oper44 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper44.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper46 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper46.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper47 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper47.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str48, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + oper49 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper49.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper50 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper50.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test06885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06885");
        foodev.jsondiff.JsonDiff.Instruction instruction0 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper1 = instruction0.oper;
        boolean boolean2 = instruction0.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper3);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction8.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        int int14 = jsonDiff12.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper17 = instruction16.oper;
        instruction8.oper = oper17;
        instruction7.oper = oper17;
        instruction0.oper = oper17;
        java.lang.String str21 = instruction0.key;
        instruction0.key = "hi!";
        instruction0.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        org.junit.Assert.assertNull(oper1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertTrue("'" + oper17 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper17.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test06886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06886");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        int int14 = jsonDiff12.isIndexed("hi!");
        int int16 = jsonDiff12.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff12.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff12.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int23 = jsonDiff12.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff(wrapper24);
        foodev.jsondiff.JsonDiff.Instruction instruction26 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper27 = instruction26.oper;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff10.apply((java.lang.Object) wrapper24, (java.lang.Object) instruction26);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(wrapper24);
        org.junit.Assert.assertNull(oper27);
    }

    @Test
    public void test06887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06887");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        int int10 = jsonDiff1.isIndexed("");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        int int14 = jsonDiff12.isIndexed("hi!");
        int int16 = jsonDiff12.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff12.factory;
        int int19 = jsonDiff12.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff12.factory;
        int int22 = jsonDiff12.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int24 = jsonDiff12.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper25 = jsonDiff12.factory;
        int int27 = jsonDiff12.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper28);
        int int31 = jsonDiff29.isIndexed("hi!");
        int int33 = jsonDiff29.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper34 = jsonDiff29.factory;
        int int36 = jsonDiff29.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction38 = jsonDiff29.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj39 = jsonDiff1.diff((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(wrapper25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(wrapper34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(instruction38);
    }

    @Test
    public void test06888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06888");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        int int16 = jsonDiff3.isIndexed("");
        int int18 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor20 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper21);
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff22.factory;
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff(wrapper23);
        foodev.jsondiff.Visitor<?> wildcardVisitor25 = jsonDiff24.getVisitor();
        int int27 = jsonDiff24.isIndexed("");
        foodev.jsondiff.Visitor<?> wildcardVisitor28 = jsonDiff24.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction30 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int32 = jsonDiff24.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int34 = jsonDiff24.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction36 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper37 = jsonDiff24.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff39 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper38);
        foodev.jsondiff.jsonwrap.Wrapper wrapper40 = jsonDiff39.factory;
        foodev.jsondiff.JsonDiff jsonDiff41 = new foodev.jsondiff.JsonDiff(wrapper40);
        foodev.jsondiff.Visitor<?> wildcardVisitor42 = jsonDiff41.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction44 = jsonDiff41.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper45 = jsonDiff41.factory;
        foodev.jsondiff.JsonDiff jsonDiff46 = new foodev.jsondiff.JsonDiff(wrapper45);
        foodev.jsondiff.JsonDiff jsonDiff47 = new foodev.jsondiff.JsonDiff(wrapper45);
        foodev.jsondiff.Visitor<?> wildcardVisitor48 = jsonDiff47.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor49 = jsonDiff47.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction51 = jsonDiff47.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction53 = jsonDiff47.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper54 = instruction53.oper;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) jsonDiff24, (java.lang.Object) oper54);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNull(wildcardVisitor20);
        org.junit.Assert.assertNotNull(wrapper23);
        org.junit.Assert.assertNull(wildcardVisitor25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor28);
        org.junit.Assert.assertNotNull(instruction30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(instruction36);
        org.junit.Assert.assertNotNull(wrapper37);
        org.junit.Assert.assertNotNull(wrapper40);
        org.junit.Assert.assertNull(wildcardVisitor42);
        org.junit.Assert.assertNotNull(instruction44);
        org.junit.Assert.assertNotNull(wrapper45);
        org.junit.Assert.assertNull(wildcardVisitor48);
        org.junit.Assert.assertNull(wildcardVisitor49);
        org.junit.Assert.assertNotNull(instruction51);
        org.junit.Assert.assertNotNull(instruction53);
        org.junit.Assert.assertTrue("'" + oper54 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper54.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test06889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06889");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        int int5 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int7 = jsonDiff1.isIndexed("");
        int int9 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException27);
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException33.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray38 = jacksonWrapperException37.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException39);
        jacksonWrapperException33.addSuppressed((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray47 = jacksonWrapperException46.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray51 = jacksonWrapperException50.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException50);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException52);
        jacksonWrapperException46.addSuppressed((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException52);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray58 = jacksonWrapperException57.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray62 = jacksonWrapperException61.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException61);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException63);
        jacksonWrapperException57.addSuppressed((java.lang.Throwable) jacksonWrapperException63);
        jacksonWrapperException56.addSuppressed((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException57);
        jacksonWrapperException39.addSuppressed((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException57);
        jacksonWrapperException30.addSuppressed((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException71 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException57);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement72 = wrapper12.wrap((java.lang.Object) jacksonWrapperException71);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(throwableArray62);
    }

    @Test
    public void test06890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06890");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff9.create("");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject16 = jsonDiff9.diff(jzonElement14, jzonElement15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction13);
    }

    @Test
    public void test06891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06891");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff15.create("");
        boolean boolean18 = instruction17.isIndexed();
        int int19 = instruction17.index;
        instruction17.key = "";
        foodev.jsondiff.jsonwrap.JzonElement jzonElement22 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement11, instruction17, jzonElement22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test06892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06892");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException6);
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException25);
        jacksonWrapperException19.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException19);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException30.getSuppressed();
        java.lang.String str33 = jacksonWrapperException30.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str33, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test06893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06893");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        boolean boolean6 = instruction5.isIndexed();
        instruction5.index = (short) -1;
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction5.key = "hi!";
        int int13 = instruction5.index;
        java.lang.String str14 = instruction5.key;
        instruction5.index = (byte) 0;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test06894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06894");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = jsonDiff1.diff("~", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
    }

    @Test
    public void test06895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06895");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction7.index = (short) 100;
        boolean boolean10 = instruction7.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper12 = instruction11.oper;
        instruction11.key = "~";
        int int15 = instruction11.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        int int19 = jsonDiff17.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean22 = instruction21.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper23);
        int int26 = jsonDiff24.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper29 = instruction28.oper;
        instruction21.oper = oper29;
        instruction11.oper = oper29;
        foodev.jsondiff.Oper oper32 = instruction11.oper;
        instruction7.oper = oper32;
        instruction7.index = (-1);
        java.lang.String str36 = instruction7.key;
        instruction7.index = (short) 100;
        instruction7.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff42 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper41);
        foodev.jsondiff.jsonwrap.Wrapper wrapper43 = jsonDiff42.factory;
        foodev.jsondiff.JsonDiff jsonDiff44 = new foodev.jsondiff.JsonDiff(wrapper43);
        foodev.jsondiff.JsonDiff.Instruction instruction46 = jsonDiff44.create("");
        int int48 = jsonDiff44.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction50 = jsonDiff44.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction52 = jsonDiff44.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction52.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        java.lang.String str55 = instruction52.key;
        boolean boolean56 = instruction52.isIndexed();
        foodev.jsondiff.Oper oper57 = instruction52.oper;
        instruction7.oper = oper57;
        boolean boolean59 = instruction7.isIndexed();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(oper12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertTrue("'" + oper29 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper29.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper32 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper32.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str36, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertNotNull(wrapper43);
        org.junit.Assert.assertNotNull(instruction46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(instruction50);
        org.junit.Assert.assertNotNull(instruction52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str55, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + oper57 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper57.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test06896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06896");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray11 = jacksonWrapperException10.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException10);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException12);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException6);
        jacksonWrapperException4.addSuppressed((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException4);
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException4);
        java.lang.String str21 = jacksonWrapperException20.toString();
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str21, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
    }

    @Test
    public void test06897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06897");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff.Instruction instruction1 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper2 = instruction1.oper;
        instruction1.index = (-1);
        java.lang.String str5 = instruction1.key;
        boolean boolean6 = instruction1.isIndexed();
        instruction1.key = "";
        instruction1.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        java.lang.String str11 = instruction1.key;
        java.lang.String str12 = instruction1.key;
        java.lang.String str13 = instruction1.key;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = gsonWrapper0.wrap((java.lang.Object) str13);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(oper2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str11, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str12, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str13, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
    }

    @Test
    public void test06898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06898");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff14.create("");
        int int18 = jsonDiff14.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff14.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff14.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction22.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        java.lang.String str25 = instruction22.key;
        boolean boolean26 = instruction22.isIndexed();
        foodev.jsondiff.Oper oper27 = instruction22.oper;
        foodev.jsondiff.Oper oper28 = instruction22.oper;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement29 = wrapper8.wrap((java.lang.Object) oper28);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str25, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + oper27 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper27.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper28 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper28.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test06899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06899");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff9.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff9.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Node node16 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        foodev.jsondiff.Leaf[] leafArray18 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList19 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList19, leafArray18);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap21 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf22 = jsonDiff9.findLeaves(node16, jzonElement17, (java.util.List<foodev.jsondiff.Leaf>) leafList19, intMap21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(leafArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test06900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06900");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException13.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException13);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException9.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException7.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException9.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException24.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray33 = jacksonWrapperException32.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray37 = jacksonWrapperException36.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException36);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException32.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException30.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException30);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException30);
        java.lang.Throwable[] throwableArray46 = jacksonWrapperException24.getSuppressed();
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException24);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray46);
    }

    @Test
    public void test06901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06901");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        boolean boolean6 = instruction5.isIndexed();
        instruction5.index = (short) -1;
        int int9 = instruction5.index;
        int int10 = instruction5.index;
        foodev.jsondiff.JsonDiff.Instruction instruction11 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper12 = instruction11.oper;
        instruction11.key = "~";
        instruction11.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff20.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff20.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction24.index = (short) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper27);
        foodev.jsondiff.jsonwrap.Wrapper wrapper29 = jsonDiff28.factory;
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff(wrapper29);
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff30.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction34 = jsonDiff30.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction34.index = (short) 100;
        boolean boolean37 = instruction34.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction38 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper39 = instruction38.oper;
        instruction38.key = "~";
        int int42 = instruction38.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff44 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper43);
        int int46 = jsonDiff44.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction48 = jsonDiff44.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean49 = instruction48.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff51 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper50);
        int int53 = jsonDiff51.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction55 = jsonDiff51.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper56 = instruction55.oper;
        instruction48.oper = oper56;
        instruction38.oper = oper56;
        foodev.jsondiff.Oper oper59 = instruction38.oper;
        instruction34.oper = oper59;
        instruction24.oper = oper59;
        instruction11.oper = oper59;
        instruction5.oper = oper59;
        instruction5.index = (byte) 10;
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        foodev.jsondiff.Oper oper68 = instruction5.oper;
        instruction5.key = "~";
        foodev.jsondiff.JsonDiff.Instruction instruction71 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper72 = instruction71.oper;
        boolean boolean73 = instruction71.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper74 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff75 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper74);
        foodev.jsondiff.jsonwrap.Wrapper wrapper76 = jsonDiff75.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction78 = jsonDiff75.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction79 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction79.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper82 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff83 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper82);
        int int85 = jsonDiff83.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction87 = jsonDiff83.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper88 = instruction87.oper;
        instruction79.oper = oper88;
        instruction78.oper = oper88;
        instruction71.oper = oper88;
        foodev.jsondiff.Oper oper92 = instruction71.oper;
        int int93 = instruction71.index;
        instruction71.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        foodev.jsondiff.Oper oper96 = instruction71.oper;
        instruction5.oper = oper96;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(oper12);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertNotNull(wrapper29);
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertNotNull(instruction34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(oper39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(instruction48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(instruction55);
        org.junit.Assert.assertTrue("'" + oper56 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper56.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper59 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper59.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper68 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper68.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNull(oper72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wrapper76);
        org.junit.Assert.assertNotNull(instruction78);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(instruction87);
        org.junit.Assert.assertTrue("'" + oper88 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper88.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper92 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper92.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertTrue("'" + oper96 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper96.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test06902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06902");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement8 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff10.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff13.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff13.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff13.create("~");
        foodev.jsondiff.Oper oper22 = instruction21.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper23);
        foodev.jsondiff.jsonwrap.Wrapper wrapper25 = jsonDiff24.factory;
        foodev.jsondiff.JsonDiff jsonDiff26 = new foodev.jsondiff.JsonDiff(wrapper25);
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff26.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor29 = jsonDiff26.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction31 = jsonDiff26.create("hi!");
        instruction31.index = '4';
        int int34 = instruction31.index;
        java.lang.String str35 = instruction31.key;
        foodev.jsondiff.Oper oper36 = instruction31.oper;
        boolean boolean37 = instruction31.isIndexed();
        foodev.jsondiff.Oper oper38 = instruction31.oper;
        foodev.jsondiff.Oper oper39 = instruction31.oper;
        instruction21.oper = oper39;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement41 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.applyPartial(jzonElement8, instruction21, jzonElement41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + oper22 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper22.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper25);
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertNull(wildcardVisitor29);
        org.junit.Assert.assertNotNull(instruction31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertTrue("'" + oper36 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper36.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + oper38 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper38.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper39 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper39.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test06903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06903");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        int int9 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff14.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = wrapper15.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper15);
    }

    @Test
    public void test06904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06904");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction11.index = '#';
        boolean boolean14 = instruction11.isIndexed();
        instruction11.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test06905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06905");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor16 = jsonDiff1.getVisitor();
        foodev.jsondiff.Node node17 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = null;
        foodev.jsondiff.Leaf[] leafArray19 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList20 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList20, leafArray19);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap22 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf23 = jsonDiff1.findLeaves(node17, jzonElement18, (java.util.List<foodev.jsondiff.Leaf>) leafList20, intMap22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNull(wildcardVisitor16);
        org.junit.Assert.assertNotNull(leafArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test06906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06906");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException9);
        jacksonWrapperException3.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        java.lang.Throwable[] throwableArray14 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException21);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException21);
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray27 = jacksonWrapperException26.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException26);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException32 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException32);
        jacksonWrapperException26.addSuppressed((java.lang.Throwable) jacksonWrapperException32);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException32);
        java.lang.Throwable[] throwableArray36 = jacksonWrapperException32.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException39);
        jacksonWrapperException32.addSuppressed((java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException40);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray48 = jacksonWrapperException47.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException47);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray52 = jacksonWrapperException51.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException54 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException53);
        jacksonWrapperException47.addSuppressed((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException53.addSuppressed((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray62 = jacksonWrapperException61.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!", (java.lang.Throwable) jacksonWrapperException61);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException64 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray65 = jacksonWrapperException64.getSuppressed();
        jacksonWrapperException63.addSuppressed((java.lang.Throwable) jacksonWrapperException64);
        jacksonWrapperException59.addSuppressed((java.lang.Throwable) jacksonWrapperException64);
        jacksonWrapperException15.addSuppressed((java.lang.Throwable) jacksonWrapperException59);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException69);
        java.lang.String str71 = jacksonWrapperException69.toString();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~" + "'", str71, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
    }

    @Test
    public void test06907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06907");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff3.factory;
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement9 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement9, 35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test06908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06908");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff9.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff9.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff9.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff9.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff9.checkIndex(jzonElement15, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
    }

    @Test
    public void test06909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06909");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.Visitor<?> wildcardVisitor18 = jsonDiff17.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff17.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper20 = jsonDiff17.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor21 = jsonDiff17.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = jsonDiff17.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNull(wildcardVisitor18);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(wrapper20);
        org.junit.Assert.assertNull(wildcardVisitor21);
    }

    @Test
    public void test06910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06910");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test06911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06911");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor3 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        boolean boolean10 = instruction9.isIndexed();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor3);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test06912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06912");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff1.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = jsonDiff1.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNull(wildcardVisitor15);
    }

    @Test
    public void test06913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06913");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int7 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = wrapper9.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test06914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06914");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int8 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper13);
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff14.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff16.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff16.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction20.index = (short) 100;
        boolean boolean23 = instruction20.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction24 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper25 = instruction24.oper;
        instruction24.key = "~";
        int int28 = instruction24.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper29);
        int int32 = jsonDiff30.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction34 = jsonDiff30.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean35 = instruction34.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper36);
        int int39 = jsonDiff37.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction41 = jsonDiff37.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper42 = instruction41.oper;
        instruction34.oper = oper42;
        instruction24.oper = oper42;
        foodev.jsondiff.Oper oper45 = instruction24.oper;
        instruction20.oper = oper45;
        instruction20.index = (-1);
        boolean boolean49 = instruction20.isIndexed();
        java.lang.String str50 = instruction20.key;
        foodev.jsondiff.Oper oper51 = instruction20.oper;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement52 = wrapper9.wrap((java.lang.Object) oper51);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.Oper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(oper25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(instruction34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(instruction41);
        org.junit.Assert.assertTrue("'" + oper42 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper42.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper45 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper45.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str50, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + oper51 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper51.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test06915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06915");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject12 = jsonDiff1.diff(jzonElement10, jzonElement11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test06916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06916");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff1.factory;
        int int14 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.Leaf leaf17 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray18 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = jsonDiff16.accept(leaf17, jzonArray18, jzonObject19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wrapper15);
    }

    @Test
    public void test06917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06917");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper4);
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff7.create("");
        foodev.jsondiff.Oper oper10 = instruction9.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        int int14 = jsonDiff12.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean17 = instruction16.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper18);
        int int21 = jsonDiff19.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff19.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper24 = instruction23.oper;
        instruction16.oper = oper24;
        instruction9.oper = oper24;
        instruction9.key = "";
        instruction9.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement31 = jacksonWrapper0.wrap((java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + oper10 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper10.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertTrue("'" + oper24 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper24.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test06918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06918");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper3);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        foodev.jsondiff.JsonDiff jsonDiff6 = new foodev.jsondiff.JsonDiff(wrapper5);
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff6.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff6.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = jacksonWrapper0.wrap((java.lang.Object) wrapper13);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper13);
    }

    @Test
    public void test06919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06919");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff5.create("");
        int int9 = jsonDiff5.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int13 = jsonDiff5.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff5.create("");
        foodev.jsondiff.Oper oper17 = instruction16.oper;
        instruction16.index = (short) 0;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement20 = jacksonWrapper0.wrap((java.lang.Object) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Short cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertTrue("'" + oper17 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper17.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test06920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06920");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement14, jzonElement15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertNull(wildcardVisitor13);
    }

    @Test
    public void test06921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06921");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction8.index = 100;
        instruction8.index = 0;
        foodev.jsondiff.Oper oper13 = instruction8.oper;
        int int14 = instruction8.index;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + oper13 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper13.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test06922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06922");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        int int11 = jsonDiff1.isIndexed("~");
        int int13 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Leaf leaf14 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray15 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = jsonDiff1.accept(leaf14, jzonArray15, jzonObject16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test06923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06923");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        java.lang.Class<?> wildcardClass17 = wrapper15.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test06924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06924");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff5.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff10.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff10.getVisitor();
        int int14 = jsonDiff10.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff10.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff10.create("");
        int int18 = instruction17.index;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = wrapper8.wrap((java.lang.Object) int18);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Integer cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test06925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06925");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("~");
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException17);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException17.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException24);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff31 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper30);
        foodev.jsondiff.jsonwrap.Wrapper wrapper32 = jsonDiff31.factory;
        foodev.jsondiff.JsonDiff jsonDiff33 = new foodev.jsondiff.JsonDiff(wrapper32);
        foodev.jsondiff.JsonDiff.Instruction instruction35 = jsonDiff33.create("");
        int int37 = jsonDiff33.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction39 = jsonDiff33.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction41 = jsonDiff33.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction43 = jsonDiff33.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction43.index = 100;
        foodev.jsondiff.Oper oper46 = instruction43.oper;
        int int47 = instruction43.index;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) jacksonWrapperException29, (java.lang.Object) int47);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(wrapper32);
        org.junit.Assert.assertNotNull(instruction35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(instruction39);
        org.junit.Assert.assertNotNull(instruction41);
        org.junit.Assert.assertNotNull(instruction43);
        org.junit.Assert.assertTrue("'" + oper46 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper46.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
    }

    @Test
    public void test06926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06926");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor13 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement14, jzonElement15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNull(wildcardVisitor13);
    }

    @Test
    public void test06927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06927");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        int int9 = jsonDiff7.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction16 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction16.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper19);
        int int22 = jsonDiff20.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff20.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper25 = instruction24.oper;
        instruction16.oper = oper25;
        instruction15.oper = oper25;
        foodev.jsondiff.jsonwrap.Wrapper wrapper28 = null;
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff(wrapper28);
        foodev.jsondiff.JsonDiff.Instruction instruction31 = jsonDiff29.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction33 = jsonDiff29.create("~");
        instruction33.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper36 = instruction33.oper;
        instruction15.oper = oper36;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement38 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff7.applyPartial(jzonElement10, instruction15, jzonElement38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertTrue("'" + oper25 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper25.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(instruction31);
        org.junit.Assert.assertNotNull(instruction33);
        org.junit.Assert.assertTrue("'" + oper36 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper36.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test06928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06928");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff9.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff9.getVisitor();
        int int13 = jsonDiff9.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff9.create("~");
        foodev.jsondiff.Leaf leaf16 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray17 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = jsonDiff9.accept(leaf16, jzonArray17, jzonObject18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
    }

    @Test
    public void test06929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06929");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff3.factory;
        int int19 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.Node node20 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement21 = null;
        foodev.jsondiff.Leaf[] leafArray22 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList23 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList23, leafArray22);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap25 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf26 = jsonDiff3.findLeaves(node20, jzonElement21, (java.util.List<foodev.jsondiff.Leaf>) leafList23, intMap25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(leafArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test06930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06930");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        boolean boolean6 = instruction5.isIndexed();
        instruction5.index = (short) -1;
        int int9 = instruction5.index;
        int int10 = instruction5.index;
        foodev.jsondiff.JsonDiff.Instruction instruction11 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper12 = instruction11.oper;
        instruction11.key = "~";
        instruction11.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff18.factory;
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper19);
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff20.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff20.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction24.index = (short) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff28 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper27);
        foodev.jsondiff.jsonwrap.Wrapper wrapper29 = jsonDiff28.factory;
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff(wrapper29);
        foodev.jsondiff.JsonDiff.Instruction instruction32 = jsonDiff30.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction34 = jsonDiff30.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction34.index = (short) 100;
        boolean boolean37 = instruction34.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction38 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper39 = instruction38.oper;
        instruction38.key = "~";
        int int42 = instruction38.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper43 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff44 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper43);
        int int46 = jsonDiff44.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction48 = jsonDiff44.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean49 = instruction48.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff51 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper50);
        int int53 = jsonDiff51.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction55 = jsonDiff51.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper56 = instruction55.oper;
        instruction48.oper = oper56;
        instruction38.oper = oper56;
        foodev.jsondiff.Oper oper59 = instruction38.oper;
        instruction34.oper = oper59;
        instruction24.oper = oper59;
        instruction11.oper = oper59;
        instruction5.oper = oper59;
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        java.lang.String str66 = instruction5.key;
        boolean boolean67 = instruction5.isIndexed();
        java.lang.String str68 = instruction5.key;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(oper12);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertNotNull(wrapper29);
        org.junit.Assert.assertNotNull(instruction32);
        org.junit.Assert.assertNotNull(instruction34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(oper39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(instruction48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(instruction55);
        org.junit.Assert.assertTrue("'" + oper56 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper56.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper59 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper59.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str66, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str68, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test06931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06931");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff3.factory;
        int int7 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = jsonDiff3.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wrapper8);
    }

    @Test
    public void test06932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06932");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = wrapper7.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
    }

    @Test
    public void test06933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06933");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        int int8 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        int int11 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        java.lang.String str14 = instruction13.key;
        instruction13.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: " + "'", str14, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
    }

    @Test
    public void test06934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06934");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = jsonDiff17.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", "");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
    }

    @Test
    public void test06935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06935");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff1.factory;
        foodev.jsondiff.Node node14 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        foodev.jsondiff.Leaf[] leafArray16 = new foodev.jsondiff.Leaf[] {};
        java.util.ArrayList<foodev.jsondiff.Leaf> leafList17 = new java.util.ArrayList<foodev.jsondiff.Leaf>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<foodev.jsondiff.Leaf>) leafList17, leafArray16);
        java.util.HashMap<java.lang.Integer, foodev.jsondiff.ArrNode> intMap19 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.Leaf leaf20 = jsonDiff1.findLeaves(node14, jzonElement15, (java.util.List<foodev.jsondiff.Leaf>) leafList17, intMap19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(leafArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test06936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06936");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction7.index = (short) 100;
        boolean boolean10 = instruction7.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper12 = instruction11.oper;
        instruction11.key = "~";
        int int15 = instruction11.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        int int19 = jsonDiff17.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean22 = instruction21.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper23);
        int int26 = jsonDiff24.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff24.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper29 = instruction28.oper;
        instruction21.oper = oper29;
        instruction11.oper = oper29;
        foodev.jsondiff.Oper oper32 = instruction11.oper;
        instruction7.oper = oper32;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff35 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper34);
        foodev.jsondiff.jsonwrap.Wrapper wrapper36 = jsonDiff35.factory;
        foodev.jsondiff.JsonDiff jsonDiff37 = new foodev.jsondiff.JsonDiff(wrapper36);
        foodev.jsondiff.Visitor<?> wildcardVisitor38 = jsonDiff37.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction40 = jsonDiff37.create("");
        instruction40.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper43 = instruction40.oper;
        instruction7.oper = oper43;
        foodev.jsondiff.Oper oper45 = instruction7.oper;
        foodev.jsondiff.Oper oper46 = instruction7.oper;
        java.lang.String str47 = instruction7.key;
        java.lang.String str48 = instruction7.key;
        foodev.jsondiff.Oper oper49 = instruction7.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper50 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff51 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper50);
        foodev.jsondiff.jsonwrap.Wrapper wrapper52 = jsonDiff51.factory;
        foodev.jsondiff.JsonDiff jsonDiff53 = new foodev.jsondiff.JsonDiff(wrapper52);
        foodev.jsondiff.Visitor<?> wildcardVisitor54 = jsonDiff53.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction56 = jsonDiff53.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper57 = jsonDiff53.factory;
        foodev.jsondiff.JsonDiff jsonDiff58 = new foodev.jsondiff.JsonDiff(wrapper57);
        foodev.jsondiff.JsonDiff jsonDiff59 = new foodev.jsondiff.JsonDiff(wrapper57);
        foodev.jsondiff.Visitor<?> wildcardVisitor60 = jsonDiff59.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper61 = jsonDiff59.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor62 = jsonDiff59.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction64 = jsonDiff59.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff66 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper65);
        foodev.jsondiff.jsonwrap.Wrapper wrapper67 = jsonDiff66.factory;
        foodev.jsondiff.JsonDiff jsonDiff68 = new foodev.jsondiff.JsonDiff(wrapper67);
        foodev.jsondiff.JsonDiff.Instruction instruction70 = jsonDiff68.create("");
        foodev.jsondiff.Oper oper71 = instruction70.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper72 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff73 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper72);
        int int75 = jsonDiff73.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction77 = jsonDiff73.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean78 = instruction77.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper79 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff80 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper79);
        int int82 = jsonDiff80.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction84 = jsonDiff80.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper85 = instruction84.oper;
        instruction77.oper = oper85;
        instruction70.oper = oper85;
        foodev.jsondiff.Oper oper88 = instruction70.oper;
        instruction64.oper = oper88;
        foodev.jsondiff.Oper oper90 = instruction64.oper;
        foodev.jsondiff.Oper oper91 = instruction64.oper;
        instruction7.oper = oper91;
        instruction7.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!";
        boolean boolean95 = instruction7.isIndexed();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(oper12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertTrue("'" + oper29 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper29.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper32 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper32.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper36);
        org.junit.Assert.assertNull(wildcardVisitor38);
        org.junit.Assert.assertNotNull(instruction40);
        org.junit.Assert.assertTrue("'" + oper43 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper43.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper45 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper45.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper46 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper46.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str47, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str48, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + oper49 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper49.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper52);
        org.junit.Assert.assertNull(wildcardVisitor54);
        org.junit.Assert.assertNotNull(instruction56);
        org.junit.Assert.assertNotNull(wrapper57);
        org.junit.Assert.assertNull(wildcardVisitor60);
        org.junit.Assert.assertNotNull(wrapper61);
        org.junit.Assert.assertNull(wildcardVisitor62);
        org.junit.Assert.assertNotNull(instruction64);
        org.junit.Assert.assertNotNull(wrapper67);
        org.junit.Assert.assertNotNull(instruction70);
        org.junit.Assert.assertTrue("'" + oper71 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper71.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(instruction77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(instruction84);
        org.junit.Assert.assertTrue("'" + oper85 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper85.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper88 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper88.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper90 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper90.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper91 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper91.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test06937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06937");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int10 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff12.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff17.factory;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        foodev.jsondiff.Visitor<?> wildcardVisitor20 = jsonDiff19.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff19.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff19.factory;
        int int25 = jsonDiff19.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper26 = jsonDiff19.factory;
        int int28 = jsonDiff19.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction30 = jsonDiff19.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper31 = jsonDiff19.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper32 = jsonDiff19.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper33 = jsonDiff19.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper34 = jsonDiff19.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff36 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper35);
        foodev.jsondiff.jsonwrap.Wrapper wrapper37 = jsonDiff36.factory;
        foodev.jsondiff.JsonDiff jsonDiff38 = new foodev.jsondiff.JsonDiff(wrapper37);
        foodev.jsondiff.JsonDiff jsonDiff39 = new foodev.jsondiff.JsonDiff(wrapper37);
        int int41 = jsonDiff39.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction43 = jsonDiff39.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff45 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper44);
        foodev.jsondiff.jsonwrap.Wrapper wrapper46 = jsonDiff45.factory;
        foodev.jsondiff.JsonDiff jsonDiff47 = new foodev.jsondiff.JsonDiff(wrapper46);
        foodev.jsondiff.JsonDiff.Instruction instruction49 = jsonDiff47.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean50 = instruction49.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff52 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper51);
        int int54 = jsonDiff52.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction56 = jsonDiff52.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper57 = instruction56.oper;
        instruction49.oper = oper57;
        instruction43.oper = oper57;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff12.apply((java.lang.Object) wrapper34, (java.lang.Object) oper57);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNull(wildcardVisitor15);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNull(wildcardVisitor20);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertNotNull(wrapper23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(wrapper26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(instruction30);
        org.junit.Assert.assertNotNull(wrapper31);
        org.junit.Assert.assertNotNull(wrapper32);
        org.junit.Assert.assertNotNull(wrapper33);
        org.junit.Assert.assertNotNull(wrapper34);
        org.junit.Assert.assertNotNull(wrapper37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(instruction43);
        org.junit.Assert.assertNotNull(wrapper46);
        org.junit.Assert.assertNotNull(instruction49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(instruction56);
        org.junit.Assert.assertTrue("'" + oper57 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper57.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test06938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06938");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray23 = jacksonWrapperException22.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException24);
        jacksonWrapperException18.addSuppressed((java.lang.Throwable) jacksonWrapperException24);
        jacksonWrapperException16.addSuppressed((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", (java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException31.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray36 = jacksonWrapperException35.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException37);
        jacksonWrapperException31.addSuppressed((java.lang.Throwable) jacksonWrapperException37);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray43 = jacksonWrapperException42.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray47 = jacksonWrapperException46.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException46);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException49 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException48);
        jacksonWrapperException42.addSuppressed((java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException52 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException48);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray54 = jacksonWrapperException53.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException53);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray58 = jacksonWrapperException57.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException59 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException59);
        jacksonWrapperException53.addSuppressed((java.lang.Throwable) jacksonWrapperException59);
        jacksonWrapperException52.addSuppressed((java.lang.Throwable) jacksonWrapperException53);
        jacksonWrapperException40.addSuppressed((java.lang.Throwable) jacksonWrapperException53);
        java.lang.Throwable[] throwableArray64 = jacksonWrapperException40.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException40);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException65);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException67 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException65);
        jacksonWrapperException29.addSuppressed((java.lang.Throwable) jacksonWrapperException65);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException65);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement70 = wrapper11.wrap((java.lang.Object) jacksonWrapperException65);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(throwableArray64);
    }

    @Test
    public void test06939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06939");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int10 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff3.getVisitor();
        int int13 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = jsonDiff3.diff("", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(wrapper14);
    }

    @Test
    public void test06940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06940");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff(wrapper8);
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff9.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        int int18 = jsonDiff16.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor19 = jsonDiff16.getVisitor();
        int int21 = jsonDiff16.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction24 = jsonDiff16.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper25 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff16.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff16.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int31 = jsonDiff16.isIndexed("");
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement32 = wrapper11.wrap((java.lang.Object) jsonDiff16);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertNotNull(instruction24);
        org.junit.Assert.assertNotNull(wrapper25);
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertNotNull(instruction29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
    }

    @Test
    public void test06941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06941");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = wrapper9.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test06942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06942");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff11.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject15 = jsonDiff11.diff(jzonElement13, jzonElement14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor12);
    }

    @Test
    public void test06943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06943");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = jsonDiff4.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type com.google.gson.JsonSyntaxException; message: com.google.gson.stream.MalformedJsonException: Expected literal value near ksonWrapperException: foodev.jsondiff.js");
        } catch (com.google.gson.JsonSyntaxException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
    }

    @Test
    public void test06944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06944");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        instruction6.key = "";
        foodev.jsondiff.Oper oper9 = instruction6.oper;
        boolean boolean10 = instruction6.isIndexed();
        int int11 = instruction6.index;
        instruction6.index = (short) 0;
        java.lang.Class<?> wildcardClass14 = instruction6.getClass();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + oper9 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper9.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test06945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06945");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff5.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff10.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff10.create("");
        instruction13.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        foodev.jsondiff.Oper oper16 = instruction13.oper;
        instruction13.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        instruction13.index = 10;
        boolean boolean21 = instruction13.isIndexed();
        int int22 = instruction13.index;
        boolean boolean23 = instruction13.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper24);
        foodev.jsondiff.jsonwrap.Wrapper wrapper26 = jsonDiff25.factory;
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff(wrapper26);
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff27.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper30 = jsonDiff27.factory;
        foodev.jsondiff.JsonDiff jsonDiff31 = new foodev.jsondiff.JsonDiff(wrapper30);
        foodev.jsondiff.JsonDiff jsonDiff32 = new foodev.jsondiff.JsonDiff(wrapper30);
        foodev.jsondiff.jsonwrap.Wrapper wrapper33 = jsonDiff32.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper34 = jsonDiff32.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor35 = jsonDiff32.getVisitor();
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff5.apply((java.lang.Object) boolean23, (java.lang.Object) wildcardVisitor35);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Boolean cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + oper16 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper16.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wrapper26);
        org.junit.Assert.assertNotNull(instruction29);
        org.junit.Assert.assertNotNull(wrapper30);
        org.junit.Assert.assertNotNull(wrapper33);
        org.junit.Assert.assertNotNull(wrapper34);
        org.junit.Assert.assertNull(wildcardVisitor35);
    }

    @Test
    public void test06946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06946");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        boolean boolean6 = instruction5.isIndexed();
        instruction5.index = (short) -1;
        int int9 = instruction5.index;
        int int10 = instruction5.index;
        java.lang.String str11 = instruction5.key;
        instruction5.index = 0;
        java.lang.String str14 = instruction5.key;
        foodev.jsondiff.Oper oper15 = instruction5.oper;
        boolean boolean16 = instruction5.isIndexed();
        boolean boolean17 = instruction5.isIndexed();
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + oper15 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper15.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test06947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06947");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper6);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = wrapper6.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
    }

    @Test
    public void test06948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06948");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff12.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int18 = jsonDiff12.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff12.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = jsonDiff12.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wrapper19);
    }

    @Test
    public void test06949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06949");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject13 = jsonDiff1.diff(jzonElement11, jzonElement12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
    }

    @Test
    public void test06950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06950");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = wrapper14.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(wrapper14);
    }

    @Test
    public void test06951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06951");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff12.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff12.checkIndex(jzonElement15, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNull(wildcardVisitor14);
    }

    @Test
    public void test06952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06952");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff1.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = wrapper9.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test06953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06953");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int13 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement17 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement17, jzonElement18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(wrapper16);
    }

    @Test
    public void test06954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06954");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff11.create("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper14);
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper14);
        foodev.jsondiff.jsonwrap.Wrapper wrapper17 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff21 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper20);
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff21.factory;
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff(wrapper22);
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff23.create("");
        int int27 = jsonDiff23.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff23.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction31 = jsonDiff23.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction33 = jsonDiff23.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor34 = jsonDiff23.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction36 = jsonDiff23.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction38 = jsonDiff23.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction40 = jsonDiff23.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff11.apply((java.lang.Object) wrapper17, (java.lang.Object) jsonDiff23);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(wrapper17);
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(instruction29);
        org.junit.Assert.assertNotNull(instruction31);
        org.junit.Assert.assertNotNull(instruction33);
        org.junit.Assert.assertNull(wildcardVisitor34);
        org.junit.Assert.assertNotNull(instruction36);
        org.junit.Assert.assertNotNull(instruction38);
        org.junit.Assert.assertNotNull(instruction40);
    }

    @Test
    public void test06955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06955");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = jsonDiff10.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~", "hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test06956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06956");
        foodev.jsondiff.JsonDiff.Instruction instruction0 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction0.key = "";
        instruction0.index = 'a';
        instruction0.index = 1;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff8.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction11.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        foodev.jsondiff.JsonDiff.Instruction instruction14 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction14.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff18 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper17);
        int int20 = jsonDiff18.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff18.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper23 = instruction22.oper;
        instruction14.oper = oper23;
        instruction11.oper = oper23;
        instruction0.oper = oper23;
        foodev.jsondiff.Oper oper27 = instruction0.oper;
        int int28 = instruction0.index;
        instruction0.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        boolean boolean31 = instruction0.isIndexed();
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertTrue("'" + oper23 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper23.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper27 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper27.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test06957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06957");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement13 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement13, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor12);
    }

    @Test
    public void test06958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06958");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff1.factory;
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff12.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.Leaf leaf17 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray18 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = jsonDiff16.accept(leaf17, jzonArray18, jzonObject19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(wrapper15);
    }

    @Test
    public void test06959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06959");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction16 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Leaf leaf17 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray18 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = jsonDiff3.accept(leaf17, jzonArray18, jzonObject19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction16);
    }

    @Test
    public void test06960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06960");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int6 = instruction5.index;
        boolean boolean7 = instruction5.isIndexed();
        instruction5.index = 'a';
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff13.create("");
        boolean boolean16 = instruction15.isIndexed();
        instruction15.index = (short) -1;
        foodev.jsondiff.Oper oper19 = instruction15.oper;
        instruction5.oper = oper19;
        foodev.jsondiff.JsonDiff.Instruction instruction21 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper22 = instruction21.oper;
        instruction21.key = "~";
        java.lang.String str25 = instruction21.key;
        foodev.jsondiff.JsonDiff.Instruction instruction26 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper27 = instruction26.oper;
        instruction26.index = (-1);
        java.lang.String str30 = instruction26.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff32 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper31);
        foodev.jsondiff.jsonwrap.Wrapper wrapper33 = jsonDiff32.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction35 = jsonDiff32.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction36 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction36.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff40 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper39);
        int int42 = jsonDiff40.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction44 = jsonDiff40.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper45 = instruction44.oper;
        instruction36.oper = oper45;
        instruction35.oper = oper45;
        instruction26.oper = oper45;
        instruction21.oper = oper45;
        instruction5.oper = oper45;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff52 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper51);
        foodev.jsondiff.jsonwrap.Wrapper wrapper53 = jsonDiff52.factory;
        foodev.jsondiff.JsonDiff jsonDiff54 = new foodev.jsondiff.JsonDiff(wrapper53);
        foodev.jsondiff.Visitor<?> wildcardVisitor55 = jsonDiff54.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction57 = jsonDiff54.create("");
        int int59 = jsonDiff54.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper60 = jsonDiff54.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction62 = jsonDiff54.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper63 = instruction62.oper;
        instruction5.oper = oper63;
        instruction5.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        int int67 = instruction5.index;
        int int68 = instruction5.index;
        instruction5.key = "~";
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + oper19 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper19.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNull(oper22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "~" + "'", str25, "~");
        org.junit.Assert.assertNull(oper27);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(wrapper33);
        org.junit.Assert.assertNotNull(instruction35);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(instruction44);
        org.junit.Assert.assertTrue("'" + oper45 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper45.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper53);
        org.junit.Assert.assertNull(wildcardVisitor55);
        org.junit.Assert.assertNotNull(instruction57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(wrapper60);
        org.junit.Assert.assertNotNull(instruction62);
        org.junit.Assert.assertTrue("'" + oper63 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper63.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 97 + "'", int67 == 97);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 97 + "'", int68 == 97);
    }

    @Test
    public void test06961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06961");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff11.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper13);
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff14.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff16.create("");
        int int20 = jsonDiff16.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff16.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int24 = jsonDiff16.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper25 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff16.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper28 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff(wrapper28);
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff(wrapper28);
        foodev.jsondiff.Visitor<?> wildcardVisitor31 = jsonDiff30.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper32 = jsonDiff30.factory;
        foodev.jsondiff.JsonDiff jsonDiff33 = new foodev.jsondiff.JsonDiff(wrapper32);
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement34 = wrapper12.wrap((java.lang.Object) jsonDiff33);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(wrapper25);
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertNotNull(wrapper28);
        org.junit.Assert.assertNull(wildcardVisitor31);
        org.junit.Assert.assertNotNull(wrapper32);
    }

    @Test
    public void test06962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06962");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff3.create("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor18 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff3.factory;
        int int21 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement22 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement23 = null;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonObject jzonObject24 = jsonDiff3.diff(jzonElement22, jzonElement23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNull(wildcardVisitor18);
        org.junit.Assert.assertNotNull(wrapper19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test06963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06963");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.Visitor<?> wildcardVisitor2 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.Visitor<?> wildcardVisitor5 = jsonDiff4.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff4.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff8.getVisitor();
        int int12 = jsonDiff8.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff8.create("");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper16);
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff17.factory;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        foodev.jsondiff.Visitor<?> wildcardVisitor20 = jsonDiff19.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction22 = jsonDiff19.create("");
        instruction22.key = "hi!";
        int int25 = instruction22.index;
        foodev.jsondiff.Oper oper26 = instruction22.oper;
        java.lang.String str27 = instruction22.key;
        instruction22.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        boolean boolean30 = instruction22.isIndexed();
        java.lang.String str31 = instruction22.key;
        int int32 = instruction22.index;
        java.lang.String str33 = instruction22.key;
        int int34 = instruction22.index;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff4.apply((java.lang.Object) instruction15, (java.lang.Object) int34);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(wildcardVisitor2);
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNull(wildcardVisitor5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNull(wildcardVisitor20);
        org.junit.Assert.assertNotNull(instruction22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + oper26 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper26.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str31, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str33, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    }

    @Test
    public void test06964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06964");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        int int17 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray21 = jacksonWrapperException20.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException22 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException24.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException30);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException30);
        jacksonWrapperException22.addSuppressed((java.lang.Throwable) jacksonWrapperException24);
        java.lang.Throwable[] throwableArray34 = jacksonWrapperException24.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.JsonDiff.Instruction instruction37 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper38 = instruction37.oper;
        instruction37.key = "~";
        java.lang.String str41 = instruction37.key;
        instruction37.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        boolean boolean44 = instruction37.isIndexed();
        instruction37.index = 'a';
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) jacksonWrapperException35, (java.lang.Object) instruction37);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNull(oper38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "~" + "'", str41, "~");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test06965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06965");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor5 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff1.getVisitor();
        java.lang.Object obj9 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray12 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray16 = jacksonWrapperException15.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException17 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException15);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException17);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException17);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray25 = jacksonWrapperException24.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException24);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray29 = jacksonWrapperException28.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException30);
        jacksonWrapperException24.addSuppressed((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray36 = jacksonWrapperException35.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray40 = jacksonWrapperException39.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException41 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException39);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException41);
        jacksonWrapperException35.addSuppressed((java.lang.Throwable) jacksonWrapperException41);
        jacksonWrapperException34.addSuppressed((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException35);
        jacksonWrapperException17.addSuppressed((java.lang.Throwable) jacksonWrapperException35);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException47 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException35);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj48 = jsonDiff1.diff(obj9, (java.lang.Object) jacksonWrapperException35);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertNull(wildcardVisitor5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray40);
    }

    @Test
    public void test06966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06966");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction4 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction4.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        java.lang.String str7 = instruction4.key;
        int int8 = instruction4.index;
        java.lang.String str9 = instruction4.key;
        instruction4.index = (byte) 10;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff15.create("");
        boolean boolean18 = instruction17.isIndexed();
        instruction17.index = (short) -1;
        int int21 = instruction17.index;
        int int22 = instruction17.index;
        foodev.jsondiff.JsonDiff.Instruction instruction23 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper24 = instruction23.oper;
        instruction23.key = "~";
        instruction23.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff30 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper29);
        foodev.jsondiff.jsonwrap.Wrapper wrapper31 = jsonDiff30.factory;
        foodev.jsondiff.JsonDiff jsonDiff32 = new foodev.jsondiff.JsonDiff(wrapper31);
        foodev.jsondiff.JsonDiff.Instruction instruction34 = jsonDiff32.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction36 = jsonDiff32.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction36.index = (short) 100;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper39 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff40 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper39);
        foodev.jsondiff.jsonwrap.Wrapper wrapper41 = jsonDiff40.factory;
        foodev.jsondiff.JsonDiff jsonDiff42 = new foodev.jsondiff.JsonDiff(wrapper41);
        foodev.jsondiff.JsonDiff.Instruction instruction44 = jsonDiff42.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction46 = jsonDiff42.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction46.index = (short) 100;
        boolean boolean49 = instruction46.isIndexed();
        foodev.jsondiff.JsonDiff.Instruction instruction50 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper51 = instruction50.oper;
        instruction50.key = "~";
        int int54 = instruction50.index;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff56 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper55);
        int int58 = jsonDiff56.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction60 = jsonDiff56.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean61 = instruction60.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper62 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff63 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper62);
        int int65 = jsonDiff63.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction67 = jsonDiff63.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper68 = instruction67.oper;
        instruction60.oper = oper68;
        instruction50.oper = oper68;
        foodev.jsondiff.Oper oper71 = instruction50.oper;
        instruction46.oper = oper71;
        instruction36.oper = oper71;
        instruction23.oper = oper71;
        instruction17.oper = oper71;
        instruction17.index = (byte) 10;
        instruction17.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        foodev.jsondiff.Oper oper80 = instruction17.oper;
        instruction4.oper = oper80;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~" + "'", str7, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~" + "'", str9, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(oper24);
        org.junit.Assert.assertNotNull(wrapper31);
        org.junit.Assert.assertNotNull(instruction34);
        org.junit.Assert.assertNotNull(instruction36);
        org.junit.Assert.assertNotNull(wrapper41);
        org.junit.Assert.assertNotNull(instruction44);
        org.junit.Assert.assertNotNull(instruction46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(oper51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(instruction60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(instruction67);
        org.junit.Assert.assertTrue("'" + oper68 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper68.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper71 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper71.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper80 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper80.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test06967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06967");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff3.factory;
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = jsonDiff3.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(wrapper5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test06968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06968");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement12, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test06969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06969");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff3.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int15 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int17 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement18 = null;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement19 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply(jzonElement18, jzonElement19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test06970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06970");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        int int6 = jsonDiff3.isIndexed("");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper7);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff jsonDiff10 = new foodev.jsondiff.JsonDiff(wrapper9);
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff10.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff10.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff10.factory;
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper14);
        foodev.jsondiff.Visitor<?> wildcardVisitor17 = jsonDiff16.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff16.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor19 = jsonDiff16.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction21 = jsonDiff16.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff jsonDiff23 = new foodev.jsondiff.JsonDiff(wrapper22);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper24);
        foodev.jsondiff.jsonwrap.Wrapper wrapper26 = jsonDiff25.factory;
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff(wrapper26);
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff27.create("");
        int int31 = jsonDiff27.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction33 = jsonDiff27.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction35 = jsonDiff27.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction37 = jsonDiff27.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.Visitor<?> wildcardVisitor38 = jsonDiff27.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper39 = jsonDiff27.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction41 = jsonDiff27.create("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor42 = jsonDiff27.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper43 = jsonDiff27.factory;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.apply((java.lang.Object) wrapper22, (java.lang.Object) wrapper43);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertNull(wildcardVisitor17);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNull(wildcardVisitor19);
        org.junit.Assert.assertNotNull(instruction21);
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertNotNull(wrapper26);
        org.junit.Assert.assertNotNull(instruction29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(instruction33);
        org.junit.Assert.assertNotNull(instruction35);
        org.junit.Assert.assertNotNull(instruction37);
        org.junit.Assert.assertNull(wildcardVisitor38);
        org.junit.Assert.assertNotNull(wrapper39);
        org.junit.Assert.assertNotNull(instruction41);
        org.junit.Assert.assertNull(wildcardVisitor42);
        org.junit.Assert.assertNotNull(wrapper43);
    }

    @Test
    public void test06971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06971");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff13 = new foodev.jsondiff.JsonDiff(wrapper12);
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff13.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = wrapper14.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(wrapper12);
        org.junit.Assert.assertNotNull(wrapper14);
    }

    @Test
    public void test06972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06972");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        int int9 = jsonDiff3.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff3.create("hi!");
        foodev.jsondiff.Leaf leaf12 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray13 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = jsonDiff3.accept(leaf12, jzonArray13, jzonObject14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
    }

    @Test
    public void test06973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06973");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray1 = jacksonWrapperException0.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray5 = jacksonWrapperException4.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException6);
        jacksonWrapperException0.addSuppressed((java.lang.Throwable) jacksonWrapperException6);
        java.lang.Throwable[] throwableArray9 = jacksonWrapperException0.getSuppressed();
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException0.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException0);
        org.junit.Assert.assertNotNull(throwableArray1);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray10);
    }

    @Test
    public void test06974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06974");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff1.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = wrapper14.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(wrapper14);
    }

    @Test
    public void test06975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06975");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor6 = jsonDiff3.getVisitor();
        int int8 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        int int11 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int13 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction15 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        boolean boolean16 = instruction15.isIndexed();
        instruction15.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        foodev.jsondiff.Oper oper19 = instruction15.oper;
        foodev.jsondiff.Oper oper20 = instruction15.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff22 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper21);
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff22.factory;
        foodev.jsondiff.JsonDiff jsonDiff24 = new foodev.jsondiff.JsonDiff(wrapper23);
        foodev.jsondiff.Visitor<?> wildcardVisitor25 = jsonDiff24.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction27 = jsonDiff24.create("");
        instruction27.key = "hi!";
        int int30 = instruction27.index;
        foodev.jsondiff.Oper oper31 = instruction27.oper;
        java.lang.String str32 = instruction27.key;
        instruction27.index = 0;
        java.lang.String str35 = instruction27.key;
        foodev.jsondiff.Oper oper36 = instruction27.oper;
        foodev.jsondiff.Oper oper37 = instruction27.oper;
        instruction15.oper = oper37;
        foodev.jsondiff.Oper oper39 = instruction15.oper;
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNull(wildcardVisitor6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(instruction15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + oper19 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper19.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper20 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper20.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper23);
        org.junit.Assert.assertNull(wildcardVisitor25);
        org.junit.Assert.assertNotNull(instruction27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + oper31 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper31.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertTrue("'" + oper36 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper36.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper37 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper37.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper39 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper39.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test06976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06976");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.Leaf leaf17 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray18 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = jsonDiff16.accept(leaf17, jzonArray18, jzonObject19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
    }

    @Test
    public void test06977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06977");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        int int12 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff3.create("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper19 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement21 = wrapper19.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertNotNull(wrapper19);
    }

    @Test
    public void test06978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06978");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray4 = jacksonWrapperException3.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException3);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException6);
        java.lang.Throwable[] throwableArray8 = jacksonWrapperException7.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        java.lang.Throwable[] throwableArray10 = jacksonWrapperException7.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = gsonWrapper0.wrap((java.lang.Object) jacksonWrapperException7);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to com.google.gson.JsonElement");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray10);
    }

    @Test
    public void test06979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06979");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper2);
        int int6 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff4.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = wrapper9.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test06980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06980");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        int int13 = jsonDiff11.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper14 = jsonDiff11.factory;
        int int16 = jsonDiff11.isIndexed("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray20 = jacksonWrapperException19.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray24 = jacksonWrapperException23.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException25 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException23);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException25);
        jacksonWrapperException19.addSuppressed((java.lang.Throwable) jacksonWrapperException25);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException28 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException19);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException28);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException30 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray31 = jacksonWrapperException30.getSuppressed();
        jacksonWrapperException29.addSuppressed((java.lang.Throwable) jacksonWrapperException30);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ", (java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException29);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff36 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper35);
        foodev.jsondiff.Visitor<?> wildcardVisitor37 = jsonDiff36.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor38 = jsonDiff36.getVisitor();
        int int40 = jsonDiff36.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper41 = jsonDiff36.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj42 = jsonDiff11.diff((java.lang.Object) jacksonWrapperException34, (java.lang.Object) jsonDiff36);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(wrapper14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNull(wildcardVisitor37);
        org.junit.Assert.assertNull(wildcardVisitor38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(wrapper41);
    }

    @Test
    public void test06981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06981");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean6 = instruction5.isIndexed();
        foodev.jsondiff.Oper oper7 = null;
        instruction5.oper = oper7;
        instruction5.index = ' ';
        foodev.jsondiff.Oper oper11 = instruction5.oper;
        foodev.jsondiff.Oper oper12 = instruction5.oper;
        boolean boolean13 = instruction5.isIndexed();
        instruction5.index = ' ';
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(oper11);
        org.junit.Assert.assertNull(oper12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test06982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06982");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        int int7 = jsonDiff3.isIndexed("");
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff12 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper11);
        foodev.jsondiff.jsonwrap.Wrapper wrapper13 = jsonDiff12.factory;
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff(wrapper13);
        foodev.jsondiff.Visitor<?> wildcardVisitor15 = jsonDiff14.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction17 = jsonDiff14.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper18 = jsonDiff14.factory;
        foodev.jsondiff.JsonDiff jsonDiff19 = new foodev.jsondiff.JsonDiff(wrapper18);
        foodev.jsondiff.JsonDiff jsonDiff20 = new foodev.jsondiff.JsonDiff(wrapper18);
        foodev.jsondiff.Visitor<?> wildcardVisitor21 = jsonDiff20.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper22 = jsonDiff20.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor23 = jsonDiff20.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction25 = jsonDiff20.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper26 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper26);
        foodev.jsondiff.jsonwrap.Wrapper wrapper28 = jsonDiff27.factory;
        foodev.jsondiff.JsonDiff jsonDiff29 = new foodev.jsondiff.JsonDiff(wrapper28);
        foodev.jsondiff.JsonDiff.Instruction instruction31 = jsonDiff29.create("");
        foodev.jsondiff.Oper oper32 = instruction31.oper;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff34 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper33);
        int int36 = jsonDiff34.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction38 = jsonDiff34.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        boolean boolean39 = instruction38.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff41 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper40);
        int int43 = jsonDiff41.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction45 = jsonDiff41.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper46 = instruction45.oper;
        instruction38.oper = oper46;
        instruction31.oper = oper46;
        foodev.jsondiff.Oper oper49 = instruction31.oper;
        instruction25.oper = oper49;
        java.lang.String str51 = instruction25.key;
        foodev.jsondiff.Oper oper52 = instruction25.oper;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement53 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.applyPartial(jzonElement10, instruction25, jzonElement53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(wrapper13);
        org.junit.Assert.assertNull(wildcardVisitor15);
        org.junit.Assert.assertNotNull(instruction17);
        org.junit.Assert.assertNotNull(wrapper18);
        org.junit.Assert.assertNull(wildcardVisitor21);
        org.junit.Assert.assertNotNull(wrapper22);
        org.junit.Assert.assertNull(wildcardVisitor23);
        org.junit.Assert.assertNotNull(instruction25);
        org.junit.Assert.assertNotNull(wrapper28);
        org.junit.Assert.assertNotNull(instruction31);
        org.junit.Assert.assertTrue("'" + oper32 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper32.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(instruction38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(instruction45);
        org.junit.Assert.assertTrue("'" + oper46 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper46.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper49 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper49.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str51, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        org.junit.Assert.assertTrue("'" + oper52 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper52.equals(foodev.jsondiff.Oper.SET));
    }

    @Test
    public void test06983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06983");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper3);
        int int7 = jsonDiff5.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction9 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff5.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper11 = jsonDiff5.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff5.create("");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff15 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper14);
        foodev.jsondiff.jsonwrap.Wrapper wrapper16 = jsonDiff15.factory;
        foodev.jsondiff.JsonDiff jsonDiff17 = new foodev.jsondiff.JsonDiff(wrapper16);
        foodev.jsondiff.JsonDiff.Instruction instruction19 = jsonDiff17.create("");
        int int21 = jsonDiff17.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction23 = jsonDiff17.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int25 = jsonDiff17.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper26 = jsonDiff17.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff17.create("");
        java.lang.String str29 = instruction28.key;
        instruction28.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~";
        foodev.jsondiff.JsonDiff.Instruction instruction32 = new foodev.jsondiff.JsonDiff.Instruction();
        foodev.jsondiff.Oper oper33 = instruction32.oper;
        instruction32.index = (-1);
        java.lang.String str36 = instruction32.key;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff38 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper37);
        foodev.jsondiff.jsonwrap.Wrapper wrapper39 = jsonDiff38.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction41 = jsonDiff38.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction42 = new foodev.jsondiff.JsonDiff.Instruction();
        instruction42.key = "";
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff46 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper45);
        int int48 = jsonDiff46.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction50 = jsonDiff46.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.Oper oper51 = instruction50.oper;
        instruction42.oper = oper51;
        instruction41.oper = oper51;
        instruction32.oper = oper51;
        instruction28.oper = oper51;
        instruction28.index = 0;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff59 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper58);
        int int61 = jsonDiff59.isIndexed("hi!");
        int int63 = jsonDiff59.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper64 = jsonDiff59.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper65 = jsonDiff59.factory;
        foodev.jsondiff.JsonDiff jsonDiff66 = new foodev.jsondiff.JsonDiff(wrapper65);
        foodev.jsondiff.JsonDiff jsonDiff67 = new foodev.jsondiff.JsonDiff(wrapper65);
        foodev.jsondiff.JsonDiff.Instruction instruction69 = jsonDiff67.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        int int71 = jsonDiff67.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction73 = jsonDiff67.create("~");
        instruction73.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj76 = jsonDiff5.diff((java.lang.Object) instruction28, (java.lang.Object) "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(instruction9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNotNull(wrapper16);
        org.junit.Assert.assertNotNull(instruction19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(instruction23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(wrapper26);
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(oper33);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(wrapper39);
        org.junit.Assert.assertNotNull(instruction41);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(instruction50);
        org.junit.Assert.assertTrue("'" + oper51 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper51.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(wrapper64);
        org.junit.Assert.assertNotNull(wrapper65);
        org.junit.Assert.assertNotNull(instruction69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(instruction73);
    }

    @Test
    public void test06984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06984");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        int int6 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff4.factory;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff9 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper8);
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff9.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff11.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor14 = jsonDiff11.getVisitor();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper15 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper15);
        int int18 = jsonDiff16.isIndexed("hi!");
        int int20 = jsonDiff16.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper21 = jsonDiff16.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor22 = jsonDiff16.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper23 = jsonDiff16.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper24 = jsonDiff16.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor25 = jsonDiff16.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper26 = jsonDiff16.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction28 = jsonDiff16.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction30 = jsonDiff16.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff4.apply((java.lang.Object) wildcardVisitor14, (java.lang.Object) instruction30);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertNull(wildcardVisitor14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(wrapper21);
        org.junit.Assert.assertNull(wildcardVisitor22);
        org.junit.Assert.assertNotNull(wrapper23);
        org.junit.Assert.assertNotNull(wrapper24);
        org.junit.Assert.assertNull(wildcardVisitor25);
        org.junit.Assert.assertNotNull(wrapper26);
        org.junit.Assert.assertNotNull(instruction28);
        org.junit.Assert.assertNotNull(instruction30);
    }

    @Test
    public void test06985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06985");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper2);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff5 = new foodev.jsondiff.JsonDiff(wrapper4);
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff5.create("");
        int int9 = jsonDiff5.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.JsonDiff.Instruction instruction13 = jsonDiff5.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        int int14 = instruction13.index;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = jacksonWrapper0.wrap((java.lang.Object) instruction13);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.JsonDiff$Instruction cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNotNull(instruction13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test06986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06986");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff1.getVisitor();
        int int6 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = jsonDiff1.apply("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(instruction8);
    }

    @Test
    public void test06987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06987");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        int int5 = jsonDiff1.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.Visitor<?> wildcardVisitor7 = jsonDiff1.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff1.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff1.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement11 = wrapper9.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNull(wildcardVisitor7);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test06988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06988");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff1.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor9 = jsonDiff1.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction11 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor12 = jsonDiff1.getVisitor();
        int int14 = jsonDiff1.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.JzonElement jzonElement15 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff1.checkIndex(jzonElement15, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNull(wildcardVisitor9);
        org.junit.Assert.assertNotNull(instruction11);
        org.junit.Assert.assertNull(wildcardVisitor12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test06989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06989");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.JsonDiff jsonDiff8 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff8.factory;
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff8.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction12 = jsonDiff8.create("hi!");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray15 = jacksonWrapperException14.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException14);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray19 = jacksonWrapperException18.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException20 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException18);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException21 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException20);
        jacksonWrapperException14.addSuppressed((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException20);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException27 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray28 = jacksonWrapperException27.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException29 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException27);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException31 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray32 = jacksonWrapperException31.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException33 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException31);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException34 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException33);
        jacksonWrapperException27.addSuppressed((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException36 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException37 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException33);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException38 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray39 = jacksonWrapperException38.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException40 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException42 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray43 = jacksonWrapperException42.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException44 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException42);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException45 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException44);
        jacksonWrapperException38.addSuppressed((java.lang.Throwable) jacksonWrapperException44);
        jacksonWrapperException37.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException48 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException38);
        jacksonWrapperException20.addSuppressed((java.lang.Throwable) jacksonWrapperException38);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException51 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray52 = jacksonWrapperException51.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException53 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException51);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException55 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray56 = jacksonWrapperException55.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException57 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException55);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException58 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException57);
        jacksonWrapperException51.addSuppressed((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException60 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException61 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException57);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException63 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray64 = jacksonWrapperException63.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException65 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException63);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException66 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException65);
        jacksonWrapperException57.addSuppressed((java.lang.Throwable) jacksonWrapperException65);
        jacksonWrapperException38.addSuppressed((java.lang.Throwable) jacksonWrapperException65);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException69 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException65);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException70 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException65);
        java.lang.Throwable[] throwableArray71 = jacksonWrapperException65.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper72 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff73 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper72);
        int int75 = jsonDiff73.isIndexed("~");
        foodev.jsondiff.Visitor<?> wildcardVisitor76 = jsonDiff73.getVisitor();
        int int78 = jsonDiff73.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper79 = jsonDiff73.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction81 = jsonDiff73.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction81.index = 1;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj84 = jsonDiff8.diff((java.lang.Object) throwableArray71, (java.lang.Object) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: [Ljava.lang.Throwable; cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper9);
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(instruction12);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(wrapper79);
        org.junit.Assert.assertNotNull(instruction81);
    }

    @Test
    public void test06990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06990");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper1);
        foodev.jsondiff.jsonwrap.Wrapper wrapper3 = jsonDiff2.factory;
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff(wrapper3);
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff4.create("");
        int int8 = jsonDiff4.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int12 = jsonDiff4.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.JsonDiff.Instruction instruction14 = jsonDiff4.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff4.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement16 = jacksonWrapper0.wrap((java.lang.Object) wrapper15);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: foodev.jsondiff.jsonwrap.jackson.JacksonWrapper cannot be cast to org.codehaus.jackson.JsonNode");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper3);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(instruction10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(instruction14);
        org.junit.Assert.assertNotNull(wrapper15);
    }

    @Test
    public void test06991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06991");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException4);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException6.addSuppressed((java.lang.Throwable) jacksonWrapperException9);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!", (java.lang.Throwable) jacksonWrapperException6);
        java.lang.String str12 = jacksonWrapperException11.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!" + "'", str12, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
    }

    @Test
    public void test06992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06992");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        int int3 = jsonDiff1.isIndexed("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff1.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff7 = new foodev.jsondiff.JsonDiff(wrapper6);
        foodev.jsondiff.jsonwrap.Wrapper wrapper8 = jsonDiff7.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff7.create("");
        instruction10.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ";
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(wrapper8);
        org.junit.Assert.assertNotNull(instruction10);
    }

    @Test
    public void test06993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06993");
        foodev.jsondiff.jsonwrap.gson.GsonWrapper gsonWrapper0 = new foodev.jsondiff.jsonwrap.gson.GsonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) gsonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper4 = jsonDiff3.factory;
        int int6 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Leaf leaf7 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray8 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject9 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = jsonDiff3.accept(leaf7, jzonArray8, jzonObject9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test06994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06994");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper6 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff.Instruction instruction8 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        foodev.jsondiff.jsonwrap.Wrapper wrapper9 = jsonDiff3.factory;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement10 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff3.checkIndex(jzonElement10, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(wrapper6);
        org.junit.Assert.assertNotNull(instruction8);
        org.junit.Assert.assertNotNull(wrapper9);
    }

    @Test
    public void test06995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06995");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff2 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.JsonDiff jsonDiff4 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper5 = jsonDiff4.factory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = jsonDiff4.diff("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper5);
    }

    @Test
    public void test06996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06996");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException1 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray2 = jacksonWrapperException1.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException3 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException1);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException5 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray6 = jacksonWrapperException5.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException7 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException5);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException7);
        jacksonWrapperException1.addSuppressed((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException10 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException", (java.lang.Throwable) jacksonWrapperException7);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray13 = jacksonWrapperException12.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException14 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException12);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException16 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray17 = jacksonWrapperException16.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException18 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException16);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException19 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException18);
        jacksonWrapperException12.addSuppressed((java.lang.Throwable) jacksonWrapperException18);
        jacksonWrapperException11.addSuppressed((java.lang.Throwable) jacksonWrapperException12);
        java.lang.Throwable[] throwableArray22 = jacksonWrapperException11.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException23 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        java.lang.String str24 = jacksonWrapperException11.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str24, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test06997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06997");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.Visitor<?> wildcardVisitor4 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction6 = jsonDiff3.create("");
        foodev.jsondiff.jsonwrap.Wrapper wrapper7 = jsonDiff3.factory;
        int int9 = jsonDiff3.isIndexed("~");
        foodev.jsondiff.jsonwrap.Wrapper wrapper10 = jsonDiff3.factory;
        foodev.jsondiff.JsonDiff jsonDiff11 = new foodev.jsondiff.JsonDiff(wrapper10);
        foodev.jsondiff.jsonwrap.JzonElement jzonElement12 = null;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff14 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper13);
        foodev.jsondiff.jsonwrap.Wrapper wrapper15 = jsonDiff14.factory;
        foodev.jsondiff.JsonDiff jsonDiff16 = new foodev.jsondiff.JsonDiff(wrapper15);
        foodev.jsondiff.JsonDiff.Instruction instruction18 = jsonDiff16.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction20 = jsonDiff16.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction20.index = (short) 100;
        boolean boolean23 = instruction20.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper24 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff25 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper24);
        foodev.jsondiff.jsonwrap.Wrapper wrapper26 = jsonDiff25.factory;
        foodev.jsondiff.JsonDiff jsonDiff27 = new foodev.jsondiff.JsonDiff(wrapper26);
        foodev.jsondiff.JsonDiff.Instruction instruction29 = jsonDiff27.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction29.key = "hi!";
        foodev.jsondiff.Oper oper32 = instruction29.oper;
        instruction20.oper = oper32;
        boolean boolean34 = instruction20.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper35 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff36 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper35);
        foodev.jsondiff.jsonwrap.Wrapper wrapper37 = jsonDiff36.factory;
        foodev.jsondiff.JsonDiff jsonDiff38 = new foodev.jsondiff.JsonDiff(wrapper37);
        foodev.jsondiff.JsonDiff.Instruction instruction40 = jsonDiff38.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction42 = jsonDiff38.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction42.index = (short) 100;
        boolean boolean45 = instruction42.isIndexed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper46 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff47 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper46);
        foodev.jsondiff.jsonwrap.Wrapper wrapper48 = jsonDiff47.factory;
        foodev.jsondiff.JsonDiff jsonDiff49 = new foodev.jsondiff.JsonDiff(wrapper48);
        foodev.jsondiff.JsonDiff.Instruction instruction51 = jsonDiff49.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        instruction51.key = "hi!";
        foodev.jsondiff.Oper oper54 = instruction51.oper;
        instruction42.oper = oper54;
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper56 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff57 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper56);
        foodev.jsondiff.jsonwrap.Wrapper wrapper58 = jsonDiff57.factory;
        foodev.jsondiff.JsonDiff jsonDiff59 = new foodev.jsondiff.JsonDiff(wrapper58);
        foodev.jsondiff.JsonDiff.Instruction instruction61 = jsonDiff59.create("");
        int int63 = jsonDiff59.isIndexed("");
        foodev.jsondiff.JsonDiff.Instruction instruction65 = jsonDiff59.create("hi!");
        foodev.jsondiff.JsonDiff.Instruction instruction67 = jsonDiff59.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: hi!");
        instruction67.key = "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException";
        java.lang.String str70 = instruction67.key;
        boolean boolean71 = instruction67.isIndexed();
        foodev.jsondiff.Oper oper72 = instruction67.oper;
        instruction42.oper = oper72;
        foodev.jsondiff.Oper oper74 = instruction42.oper;
        instruction20.oper = oper74;
        java.lang.String str76 = instruction20.key;
        foodev.jsondiff.jsonwrap.JzonElement jzonElement77 = null;
        // The following exception was thrown during execution in test generation
        try {
            jsonDiff11.applyPartial(jzonElement12, instruction20, jzonElement77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNull(wildcardVisitor4);
        org.junit.Assert.assertNotNull(instruction6);
        org.junit.Assert.assertNotNull(wrapper7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(wrapper10);
        org.junit.Assert.assertNotNull(wrapper15);
        org.junit.Assert.assertNotNull(instruction18);
        org.junit.Assert.assertNotNull(instruction20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wrapper26);
        org.junit.Assert.assertNotNull(instruction29);
        org.junit.Assert.assertTrue("'" + oper32 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper32.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wrapper37);
        org.junit.Assert.assertNotNull(instruction40);
        org.junit.Assert.assertNotNull(instruction42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wrapper48);
        org.junit.Assert.assertNotNull(instruction51);
        org.junit.Assert.assertTrue("'" + oper54 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper54.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertNotNull(wrapper58);
        org.junit.Assert.assertNotNull(instruction61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(instruction65);
        org.junit.Assert.assertNotNull(instruction67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str70, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + oper72 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper72.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertTrue("'" + oper74 + "' != '" + foodev.jsondiff.Oper.SET + "'", oper74.equals(foodev.jsondiff.Oper.SET));
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException" + "'", str76, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
    }

    @Test
    public void test06998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06998");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException");
        int int9 = jsonDiff3.isIndexed("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.Visitor<?> wildcardVisitor10 = jsonDiff3.getVisitor();
        foodev.jsondiff.Visitor<?> wildcardVisitor11 = jsonDiff3.getVisitor();
        foodev.jsondiff.jsonwrap.Wrapper wrapper12 = jsonDiff3.factory;
        // The following exception was thrown during execution in test generation
        try {
            foodev.jsondiff.jsonwrap.JzonElement jzonElement14 = wrapper12.parse("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
            org.junit.Assert.fail("Expected exception of type foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException; message: Failed to parse JSON");
        } catch (foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(wildcardVisitor10);
        org.junit.Assert.assertNull(wildcardVisitor11);
        org.junit.Assert.assertNotNull(wrapper12);
    }

    @Test
    public void test06999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06999");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException2 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray3 = jacksonWrapperException2.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException4 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException6 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException();
        java.lang.Throwable[] throwableArray7 = jacksonWrapperException6.getSuppressed();
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException8 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException6);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException9 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException8);
        jacksonWrapperException2.addSuppressed((java.lang.Throwable) jacksonWrapperException8);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException11 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("~", (java.lang.Throwable) jacksonWrapperException2);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException12 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException((java.lang.Throwable) jacksonWrapperException11);
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException jacksonWrapperException13 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException("", (java.lang.Throwable) jacksonWrapperException11);
        java.lang.String str14 = jacksonWrapperException11.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~" + "'", str14, "foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
    }

    @Test
    public void test07000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test07000");
        foodev.jsondiff.jsonwrap.jackson.JacksonWrapper jacksonWrapper0 = new foodev.jsondiff.jsonwrap.jackson.JacksonWrapper();
        foodev.jsondiff.JsonDiff jsonDiff1 = new foodev.jsondiff.JsonDiff((foodev.jsondiff.jsonwrap.Wrapper) jacksonWrapper0);
        foodev.jsondiff.jsonwrap.Wrapper wrapper2 = jsonDiff1.factory;
        foodev.jsondiff.JsonDiff jsonDiff3 = new foodev.jsondiff.JsonDiff(wrapper2);
        foodev.jsondiff.JsonDiff.Instruction instruction5 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ~");
        foodev.jsondiff.JsonDiff.Instruction instruction7 = jsonDiff3.create("");
        foodev.jsondiff.Visitor<?> wildcardVisitor8 = jsonDiff3.getVisitor();
        foodev.jsondiff.JsonDiff.Instruction instruction10 = jsonDiff3.create("foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: foodev.jsondiff.jsonwrap.jackson.JacksonWrapperException: ");
        foodev.jsondiff.Leaf leaf11 = null;
        foodev.jsondiff.jsonwrap.JzonArray jzonArray12 = null;
        foodev.jsondiff.jsonwrap.JzonObject jzonObject13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = jsonDiff3.accept(leaf11, jzonArray12, jzonObject13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wrapper2);
        org.junit.Assert.assertNotNull(instruction5);
        org.junit.Assert.assertNotNull(instruction7);
        org.junit.Assert.assertNull(wildcardVisitor8);
        org.junit.Assert.assertNotNull(instruction10);
    }
}

