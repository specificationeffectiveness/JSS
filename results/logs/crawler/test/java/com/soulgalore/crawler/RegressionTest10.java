package com.soulgalore.crawler;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest10 {

    public static boolean debug = false;

    @Test
    public void test05001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05001");
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet0 = null;
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray1 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet2 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet2, assetResponseArray1);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray4 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet5, assetResponseArray4);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult7 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet2, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet5);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult7.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray9 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, assetResponseArray9);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray12 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13, assetResponseArray12);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult15 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult16 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet8, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult17 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet0, assetResponseSet8);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = assetsVerificationResult17.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet19 = assetsVerificationResult17.getWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(assetResponseArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(assetResponseArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(assetResponseSet18);
        org.junit.Assert.assertNull(assetResponseSet19);
    }

    @Test
    public void test05002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05002");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher3 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI7 = crawlerURL6.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration12 = builder11.build();
        java.lang.String str13 = crawlerConfiguration12.getStartUrl();
        int int14 = crawlerConfiguration12.getMaxLevels();
        int int15 = crawlerConfiguration12.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = crawlerConfiguration12.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse22 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL6, (int) (short) 10, strMap16, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable24 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Malformed url", assetFetcher3, strMap16, "errorurls.txt");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable26 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:Unknown error", assetFetcher1, strMap16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.assets.AssetResponse assetResponse27 = assetResponseCallable26.call();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(uRI7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(crawlerConfiguration12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(strMap16);
    }

    @Test
    public void test05003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05003");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI5 = crawlerURL4.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean9 = crawlerURL8.isWrongSyntax();
        java.lang.String str10 = crawlerURL8.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL8, (int) 'a', strMap12, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str19 = hTMLPageResponse18.getUrl();
        boolean boolean20 = crawlerURL4.equals((java.lang.Object) str19);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher23 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil24 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = headerUtil24.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable28 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher23, strMap26, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse34 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL4, (int) (short) 100, strMap26, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse40 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) -1, strMap26, "com.soulgalore.crawler.http.socket.timeout", "errorurls.txt", (long) 100, "result.csv", (long) (short) 0);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL42 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:com.soulgalore.crawler.nrofhttpthreads");
        boolean boolean43 = hTMLPageResponse40.equals((java.lang.Object) "AssetResponseCallable url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "urls.txt" + "'", str10, "urls.txt");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "com.soulgalore.crawler.auth" + "'", str19, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(headerUtil24);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test05004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05004");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int19 = hTMLPageResponse18.getResponseCode();
        long long20 = hTMLPageResponse18.getFetchTime();
        long long21 = hTMLPageResponse18.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI25 = crawlerURL24.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean30 = crawlerURL29.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder32.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration37 = builder32.build();
        java.lang.String str38 = crawlerConfiguration37.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = crawlerConfiguration37.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, (-1), strMap39, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse51 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL24, 100, strMap39, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        boolean boolean52 = hTMLPageResponse18.equals((java.lang.Object) 100);
        org.jsoup.nodes.Document document53 = hTMLPageResponse18.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL56 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "com.soulgalore.crawler.auth");
        java.lang.String str57 = crawlerURL56.toString();
        boolean boolean58 = hTMLPageResponse18.equals((java.lang.Object) str57);
        java.lang.String str59 = hTMLPageResponse18.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 580L + "'", long20 == 580L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 580L + "'", long21 == 580L);
        org.junit.Assert.assertNull(uRI25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(crawlerConfiguration37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(document53);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "CrawlerURL url:urls.txt" + "'", str57, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth" + "'", str59, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
    }

    @Test
    public void test05005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05005");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "Wrong content type", (int) (short) 1, 0L);
        java.lang.String str5 = assetResponse4.getUrl();
        java.lang.String str6 = assetResponse4.getUrl();
        int int7 = assetResponse4.getResponseCode();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }

    @Test
    public void test05006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05006");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "com.soulgalore.crawler.auth");
        java.lang.String str3 = crawlerURL2.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration8 = builder7.build();
        java.lang.String str9 = crawlerConfiguration8.getOnlyOnPath();
        boolean boolean10 = crawlerConfiguration8.isVerifyUrls();
        int int11 = crawlerConfiguration8.getMaxLevels();
        int int12 = crawlerConfiguration8.getMaxLevels();
        boolean boolean13 = crawlerConfiguration8.isVerifyUrls();
        boolean boolean14 = crawlerConfiguration8.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = crawlerConfiguration8.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse21 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap15, "Unknown error", "com.soulgalore.crawler.http.socket.timeout", (long) 10, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", 0L);
        java.lang.String str22 = crawlerURL2.getUrl();
        java.lang.String str23 = crawlerURL2.getReferer();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "CrawlerURL url:urls.txt" + "'", str3, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(crawlerConfiguration8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "urls.txt" + "'", str22, "urls.txt");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.auth" + "'", str23, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test05007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05007");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", "0", (int) 'a', (long) 580);
        long long5 = assetResponse4.getFetchTime();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 580L + "'", long5 == 580L);
    }

    @Test
    public void test05008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05008");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getOnlyOnPath();
        int int5 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str6 = crawlerConfiguration3.getRequestHeaders();
        java.lang.String str7 = crawlerConfiguration3.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str9 = crawlerConfiguration3.getOnlyOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test05009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05009");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str7 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str8 = crawlerConfiguration5.getStartUrl();
        java.lang.String str9 = crawlerConfiguration5.getStartUrl();
        java.lang.String str10 = crawlerConfiguration5.getOnlyOnPath();
        int int11 = crawlerConfiguration5.getMaxLevels();
        boolean boolean12 = crawlerConfiguration5.isVerifyUrls();
        java.lang.String str13 = crawlerConfiguration5.getRequestHeaders();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test05010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05010");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider((int) '4', (int) (byte) 10, (int) 'a', "CrawlerURL url:10", "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:AssetResponseCallable url:Unknown error type:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:CrawlerURL url:10");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05011");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI7 = crawlerURL6.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL11 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean12 = crawlerURL11.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration19 = builder14.build();
        java.lang.String str20 = crawlerConfiguration19.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = crawlerConfiguration19.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse27 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL11, (-1), strMap21, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse33 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL6, 100, strMap21, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.lang.String str34 = crawlerURL6.getHost();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL38 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", "com.soulgalore.crawler.http.socket.timeout");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL42 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI43 = crawlerURL42.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL47 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean48 = crawlerURL47.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder50 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder52 = builder50.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder54 = builder50.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration55 = builder50.build();
        java.lang.String str56 = crawlerConfiguration55.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap57 = crawlerConfiguration55.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse63 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL47, (-1), strMap57, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse69 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL42, 100, strMap57, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.util.Map<java.lang.String, java.lang.String> strMap70 = hTMLPageResponse69.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse76 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL38, 583, strMap70, "Unknown error", "HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", (-1L), "AssetResponseCallable url:errorassets.csv", (long) (-1));
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse82 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL6, 1, strMap70, "errorassets.csv", "CrawlerURL url:errorassets.csv", (long) (byte) -1, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", (long) (byte) 100);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse88 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 583, strMap70, "AssetResponseCallable url:result.csv", "AssetResponseCallable url:errorassets.csv", (long) 10, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url", (long) 'a');
        java.util.Map<java.lang.String, java.lang.String> strMap89 = hTMLPageResponse88.getResponseHeaders();
        org.junit.Assert.assertNull(uRI7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(crawlerConfiguration19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(uRI43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(crawlerConfiguration55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(strMap89);
    }

    @Test
    public void test05012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05012");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("errorassets.csv");
        java.lang.String str2 = crawlerURL1.getHost();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean7 = crawlerURL6.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL10 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean11 = crawlerURL10.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI15 = crawlerURL14.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray16 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL6, crawlerURL10, crawlerURL14 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet17 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet17, crawlerURLArray16);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray19 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet20 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet20, hTMLPageResponseArray19);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL25 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray26 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL25 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet27 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet27, crawlerURLArray26);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet29 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray30 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet31 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet31, hTMLPageResponseArray30);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult33 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet27, hTMLPageResponseSet29, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet31);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult34 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet17, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet20, hTMLPageResponseSet29);
        boolean boolean35 = crawlerURL1.equals((java.lang.Object) "com.soulgalore.crawler.auth");
        java.net.URI uRI36 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder38.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = builder38.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration43 = builder38.build();
        int int44 = crawlerConfiguration43.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil45 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean46 = crawlerConfiguration43.equals((java.lang.Object) headerUtil45);
        java.util.Map<java.lang.String, java.lang.String> strMap48 = headerUtil45.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap50 = headerUtil45.createHeadersFromString("CrawlerURL url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap52 = headerUtil45.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap54 = headerUtil45.createHeadersFromString("CrawlerURL url:errorassets.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse60 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 10, strMap54, "CrawlerURL url:AssetResponseCallable url:100", "CrawlerURL url:Response timed out", 0L, "AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout", (long) (short) 1);
        java.lang.String str61 = crawlerURL1.getReferer();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(uRI15);
        org.junit.Assert.assertNotNull(crawlerURLArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(uRI36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(crawlerConfiguration43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(headerUtil45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
    }

    @Test
    public void test05013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05013");
        com.soulgalore.crawler.util.StatusCode statusCode0 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT;
        int int1 = statusCode0.getCode();
        int int2 = statusCode0.getCode();
        int int3 = statusCode0.getCode();
        int int4 = statusCode0.getCode();
        int int5 = statusCode0.getCode();
        int int6 = statusCode0.getCode();
        int int7 = statusCode0.getCode();
        org.junit.Assert.assertTrue("'" + statusCode0 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT + "'", statusCode0.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 580 + "'", int1 == 580);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 580 + "'", int2 == 580);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 580 + "'", int3 == 580);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 580 + "'", int4 == 580);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 580 + "'", int5 == 580);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 580 + "'", int6 == 580);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 580 + "'", int7 == 580);
    }

    @Test
    public void test05014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05014");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("52");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        boolean boolean4 = crawlerConfiguration3.isVerifyUrls();
        int int5 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str6 = crawlerConfiguration3.getOnlyOnPath();
        java.lang.String str7 = crawlerConfiguration3.getOnlyOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test05015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05015");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setStartUrl("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration9 = builder8.build();
        java.lang.String str10 = crawlerConfiguration9.getOnlyOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(crawlerConfiguration9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test05016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05016");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder4.build();
        java.lang.String str6 = crawlerConfiguration5.getOnlyOnPath();
        boolean boolean7 = crawlerConfiguration5.isVerifyUrls();
        int int8 = crawlerConfiguration5.getMaxLevels();
        int int9 = crawlerConfiguration5.getMaxLevels();
        boolean boolean10 = crawlerConfiguration5.isVerifyUrls();
        boolean boolean11 = crawlerConfiguration5.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration5.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = crawlerConfiguration5.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable15 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:AssetResponseCallable url:errorassets.csv", assetFetcher1, strMap13, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.assets.AssetResponse assetResponse16 = assetResponseCallable15.call();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
    }

    @Test
    public void test05017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05017");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        java.lang.String str3 = crawlerURL1.getUrl();
        java.lang.String str4 = crawlerURL1.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder5.setNotOnPath("AssetResponseCallable url:errorassets.csv");
        boolean boolean12 = crawlerURL1.equals((java.lang.Object) builder11);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder11.setOnlyOnPath("HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder11.setMaxLevels(582);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder11.setOnlyOnPath("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str3, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str4, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test05018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05018");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setStartUrl("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder0.setNotOnPath("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder0.setStartUrl("Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder0.build();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean15 = crawlerURL14.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration22 = builder17.build();
        java.lang.String str23 = crawlerConfiguration22.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = crawlerConfiguration22.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse30 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL14, (-1), strMap24, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        java.lang.String str32 = hTMLPageResponse30.getHeaderValue("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = hTMLPageResponse30.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL34 = hTMLPageResponse30.getPageUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = builder35.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = builder35.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder41 = builder35.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder43 = builder41.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder45 = builder41.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration46 = builder45.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration47 = builder45.build();
        boolean boolean48 = hTMLPageResponse30.equals((java.lang.Object) builder45);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder50 = builder45.setOnlyOnPath("result.csv");
        boolean boolean51 = crawlerConfiguration11.equals((java.lang.Object) "result.csv");
        java.lang.String str52 = crawlerConfiguration11.getRequestHeaders();
        java.lang.String str53 = crawlerConfiguration11.getStartUrl();
        int int54 = crawlerConfiguration11.getMaxLevels();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(crawlerConfiguration22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(crawlerURL33);
        org.junit.Assert.assertNotNull(crawlerURL34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(crawlerConfiguration46);
        org.junit.Assert.assertNotNull(crawlerConfiguration47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Malformed url" + "'", str53, "Malformed url");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
    }

    @Test
    public void test05019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05019");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder4.setOnlyOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setMaxLevels((int) (byte) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setStartUrl("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration17 = builder16.build();
        java.lang.String str18 = crawlerConfiguration17.getRequestHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "Response timed out");
        com.soulgalore.crawler.util.HeaderUtil headerUtil23 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = headerUtil23.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse31 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL21, (int) '4', strMap25, "com.soulgalore.crawler.http.socket.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 580, "com.soulgalore.crawler.auth", (long) (short) 1);
        java.lang.String str32 = hTMLPageResponse31.toString();
        java.lang.String str34 = hTMLPageResponse31.getHeaderValue("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL35 = hTMLPageResponse31.getPageUrl();
        boolean boolean36 = crawlerConfiguration17.equals((java.lang.Object) crawlerURL35);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(crawlerConfiguration17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(headerUtil23);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth" + "'", str32, "HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(crawlerURL35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test05020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05020");
        com.soulgalore.crawler.util.HeaderUtil headerUtil0 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = headerUtil0.createHeadersFromString("AssetResponseCallable url:Unknown error");
        java.util.Map<java.lang.String, java.lang.String> strMap4 = headerUtil0.createHeadersFromString("AssetResponseCallable url:Redirected to new domain");
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil0.createHeadersFromString("CrawlerURL url:100");
        org.junit.Assert.assertNotNull(headerUtil0);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap6);
    }

    @Test
    public void test05021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05021");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str7 = crawlerConfiguration5.getRequestHeaders();
        boolean boolean9 = crawlerConfiguration5.equals((java.lang.Object) 0.0d);
        boolean boolean10 = crawlerConfiguration5.isVerifyUrls();
        java.lang.String str11 = crawlerConfiguration5.getStartUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder16.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder16.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder16.setOnlyOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder24.setStartUrl("Wrong content type");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder24.setNotOnPath("35");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder28.setMaxLevels((int) '#');
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration31 = builder30.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder30.setMaxLevels(0);
        boolean boolean34 = crawlerConfiguration5.equals((java.lang.Object) builder33);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder33.setRequestHeaders("AssetResponseCallable url:32");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder36.setOnlyOnPath("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(crawlerConfiguration31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
    }

    @Test
    public void test05022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05022");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider(583, 580, (int) (byte) 10, "AssetResponseCallable url:1", "HTMLPageResponseurl:hi!responseCode:52encoding:urls.txt type:CrawlerURL url:com.soulgalore.crawler.auth");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:AssetResponseCallable url:1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05023");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray8 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet9, assetResponseArray8);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray11 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, assetResponseArray11);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult14 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet9, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult15 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet7, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet16 = assetsVerificationResult15.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet17 = assetsVerificationResult15.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = assetsVerificationResult15.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet19 = assetsVerificationResult15.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = assetsVerificationResult15.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray21 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, assetResponseArray21);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray24 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet25, assetResponseArray24);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult27 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet25);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet28 = assetsVerificationResult27.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray29 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet30 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30, assetResponseArray29);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray32 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet33 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33, assetResponseArray32);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult35 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult36 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet28, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet37 = assetsVerificationResult36.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet38 = assetsVerificationResult36.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet39 = assetsVerificationResult36.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult40 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet20, assetResponseSet39);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet41 = assetsVerificationResult40.getNonWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(assetResponseArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(assetResponseSet16);
        org.junit.Assert.assertNotNull(assetResponseSet17);
        org.junit.Assert.assertNotNull(assetResponseSet18);
        org.junit.Assert.assertNotNull(assetResponseSet19);
        org.junit.Assert.assertNotNull(assetResponseSet20);
        org.junit.Assert.assertNotNull(assetResponseArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(assetResponseArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(assetResponseSet28);
        org.junit.Assert.assertNotNull(assetResponseArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(assetResponseArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(assetResponseSet37);
        org.junit.Assert.assertNotNull(assetResponseSet38);
        org.junit.Assert.assertNotNull(assetResponseSet39);
        org.junit.Assert.assertNotNull(assetResponseSet41);
    }

    @Test
    public void test05024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05024");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration5.getRequestHeadersMap();
        java.lang.String str8 = crawlerConfiguration5.getOnlyOnPath();
        java.lang.String str9 = crawlerConfiguration5.getRequestHeaders();
        int int10 = crawlerConfiguration5.getMaxLevels();
        java.lang.String str11 = crawlerConfiguration5.getOnlyOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test05025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05025");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean14 = assetResponse4.equals((java.lang.Object) 100L);
        java.lang.String str15 = assetResponse4.getReferer();
        java.lang.String str16 = assetResponse4.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder17.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder23.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder29.setVerifyUrls(false);
        boolean boolean32 = assetResponse4.equals((java.lang.Object) false);
        java.lang.String str33 = assetResponse4.getReferer();
        java.lang.String str34 = assetResponse4.getReferer();
        java.lang.String str35 = assetResponse4.getReferer();
        int int36 = assetResponse4.getResponseCode();
        java.lang.String str37 = assetResponse4.getReferer();
        java.lang.String str38 = assetResponse4.getUrl();
        long long39 = assetResponse4.getFetchTime();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "100" + "'", str15, "100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "100" + "'", str16, "100");
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "100" + "'", str33, "100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "100" + "'", str34, "100");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "100" + "'", str35, "100");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "100" + "'", str37, "100");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
    }

    @Test
    public void test05026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05026");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int13 = hTMLPageResponse12.getResponseCode();
        int int14 = hTMLPageResponse12.getResponseCode();
        java.lang.String str15 = hTMLPageResponse12.getUrl();
        long long16 = hTMLPageResponse12.getFetchTime();
        org.jsoup.nodes.Document document17 = hTMLPageResponse12.getBody();
        long long18 = hTMLPageResponse12.getFetchTime();
        org.jsoup.nodes.Document document19 = hTMLPageResponse12.getBody();
        long long20 = hTMLPageResponse12.getFetchTime();
        java.lang.String str21 = hTMLPageResponse12.getResponseType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 97 + "'", int14 == 97);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.auth" + "'", str15, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertNull(document17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 100L + "'", long18 == 100L);
        org.junit.Assert.assertNull(document19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 100L + "'", long20 == 100L);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test05027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05027");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet12 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet14 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet16 = crawlerResult11.getNonWorkingUrls();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = crawlerResult11.getVerifiedURLResponses();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet12);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet16);
    }

    @Test
    public void test05028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05028");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.lang.String str5 = crawlerURL2.getHost();
        java.lang.String str6 = crawlerURL2.getUrl();
        java.lang.String str7 = crawlerURL2.getHost();
        java.lang.String str8 = crawlerURL2.getHost();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int14 = assetResponse13.getResponseCode();
        int int15 = assetResponse13.getResponseCode();
        long long16 = assetResponse13.getFetchTime();
        long long17 = assetResponse13.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse22 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean23 = assetResponse13.equals((java.lang.Object) 100L);
        java.lang.String str24 = assetResponse13.getReferer();
        long long25 = assetResponse13.getFetchTime();
        java.lang.String str26 = assetResponse13.getReferer();
        long long27 = assetResponse13.getFetchTime();
        java.lang.String str28 = assetResponse13.getUrl();
        boolean boolean29 = crawlerURL2.equals((java.lang.Object) str28);
        java.net.URI uRI30 = crawlerURL2.getUri();
        java.lang.String str31 = crawlerURL2.getUrl();
        boolean boolean32 = crawlerURL2.isWrongSyntax();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "com.soulgalore.crawler.auth" + "'", str6, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "100" + "'", str24, "100");
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "100" + "'", str26, "100");
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(uRI30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "com.soulgalore.crawler.auth" + "'", str31, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test05029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05029");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet12 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet18 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet19 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet20 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet21 = crawlerResult11.getUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet12);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet17);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet18);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet19);
        org.junit.Assert.assertNotNull(crawlerURLSet20);
        org.junit.Assert.assertNotNull(crawlerURLSet21);
    }

    @Test
    public void test05030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05030");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) "CrawlerURL url:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean19 = crawlerURL18.isWrongSyntax();
        java.lang.String str20 = crawlerURL18.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse28 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL18, (int) 'a', strMap22, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str29 = crawlerURL18.getUrl();
        boolean boolean30 = hTMLPageResponse12.equals((java.lang.Object) str29);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL31 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = builder33.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = builder33.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = builder37.setStartUrl("-1");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration40 = builder39.build();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = crawlerConfiguration40.getRequestHeadersMap();
        java.lang.String str42 = crawlerConfiguration40.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder43 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder45 = builder43.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder47 = builder43.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration48 = builder43.build();
        java.lang.String str49 = crawlerConfiguration48.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder50 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder52 = builder50.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration53 = builder52.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder55 = builder52.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder57 = builder55.setMaxLevels((int) '4');
        boolean boolean58 = crawlerConfiguration48.equals((java.lang.Object) builder57);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = crawlerConfiguration48.getRequestHeadersMap();
        boolean boolean60 = crawlerConfiguration40.equals((java.lang.Object) strMap59);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse66 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL31, (int) (short) 1, strMap59, "CrawlerURL url:10", "CrawlerURL url:10", (long) (byte) 10, "", (long) 52);
        java.net.URI uRI67 = crawlerURL31.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL71 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean72 = crawlerURL71.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder74 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder76 = builder74.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder78 = builder74.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration79 = builder74.build();
        java.lang.String str80 = crawlerConfiguration79.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap81 = crawlerConfiguration79.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse87 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL71, (-1), strMap81, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int88 = hTMLPageResponse87.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap89 = hTMLPageResponse87.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse95 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL31, 97, strMap89, "HTMLPageResponseurl:result.csvresponseCode:-1encoding:AssetResponseCallable url:Wrong content type type:CrawlerURL url:errorassets.csv", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads type:-1", (long) 32, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:97encoding:52 type:CrawlerURL url:com.soulgalore.crawler.auth", (long) '#');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "urls.txt" + "'", str20, "urls.txt");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "com.soulgalore.crawler.auth" + "'", str29, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(crawlerURL31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(crawlerConfiguration40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(crawlerConfiguration48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(crawlerConfiguration53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(uRI67);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(crawlerConfiguration79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(strMap89);
    }

    @Test
    public void test05031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05031");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setStartUrl("-1");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder6.build();
        int int8 = crawlerConfiguration7.getMaxLevels();
        java.lang.String str9 = crawlerConfiguration7.getOnlyOnPath();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL13 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray14 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL13 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet15, crawlerURLArray14);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray18 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet19 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet19, hTMLPageResponseArray18);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult21 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet15, hTMLPageResponseSet17, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet19);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet22 = crawlerResult21.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet23 = crawlerResult21.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet24 = crawlerResult21.getUrls();
        java.lang.String str25 = crawlerResult21.getTheStartPoint();
        java.lang.String str26 = crawlerResult21.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet27 = crawlerResult21.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet28 = crawlerResult21.getUrls();
        java.lang.String str29 = crawlerResult21.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet30 = crawlerResult21.getUrls();
        boolean boolean31 = crawlerConfiguration7.equals((java.lang.Object) crawlerResult21);
        java.lang.String str32 = crawlerResult21.getTheStartPoint();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet33 = crawlerResult21.getVerifiedURLResponses();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(crawlerURLArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet22);
        org.junit.Assert.assertNotNull(crawlerURLSet23);
        org.junit.Assert.assertNotNull(crawlerURLSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet27);
        org.junit.Assert.assertNotNull(crawlerURLSet28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
    }

    @Test
    public void test05032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05032");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:CrawlerURL url:hi!", "errorassets.csv");
    }

    @Test
    public void test05033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05033");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        java.lang.String str15 = hTMLPageResponse12.getResponseType();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = new com.soulgalore.crawler.core.CrawlerURL("1");
        boolean boolean18 = hTMLPageResponse12.equals((java.lang.Object) "1");
        java.lang.String str19 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder20.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder20.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder24.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder24.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder28.setMaxLevels(1);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration31 = builder28.build();
        boolean boolean32 = hTMLPageResponse12.equals((java.lang.Object) crawlerConfiguration31);
        int int33 = crawlerConfiguration31.getMaxLevels();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "com.soulgalore.crawler.auth" + "'", str19, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(crawlerConfiguration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
    }

    @Test
    public void test05034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05034");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        int int5 = crawlerConfiguration3.getMaxLevels();
        int int6 = crawlerConfiguration3.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str8 = crawlerConfiguration3.getStartUrl();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int14 = assetResponse13.getResponseCode();
        int int15 = assetResponse13.getResponseCode();
        long long16 = assetResponse13.getFetchTime();
        long long17 = assetResponse13.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse22 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean23 = assetResponse13.equals((java.lang.Object) 100L);
        java.lang.String str24 = assetResponse13.getReferer();
        java.lang.String str25 = assetResponse13.getReferer();
        long long26 = assetResponse13.getFetchTime();
        boolean boolean27 = crawlerConfiguration3.equals((java.lang.Object) assetResponse13);
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse32 = new com.soulgalore.crawler.core.assets.AssetResponse("", "1", (int) (short) 10, (long) '#');
        int int33 = assetResponse32.getResponseCode();
        boolean boolean34 = crawlerConfiguration3.equals((java.lang.Object) assetResponse32);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL36 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI37 = crawlerURL36.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL40 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean41 = crawlerURL40.isWrongSyntax();
        java.lang.String str42 = crawlerURL40.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse50 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL40, (int) 'a', strMap44, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str51 = hTMLPageResponse50.getUrl();
        boolean boolean52 = crawlerURL36.equals((java.lang.Object) str51);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher55 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil56 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap58 = headerUtil56.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable60 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher55, strMap58, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse66 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL36, (int) (short) 100, strMap58, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher69 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder70 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder72 = builder70.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder74 = builder70.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration75 = builder70.build();
        int int76 = crawlerConfiguration75.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil77 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean78 = crawlerConfiguration75.equals((java.lang.Object) headerUtil77);
        java.util.Map<java.lang.String, java.lang.String> strMap80 = headerUtil77.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap82 = headerUtil77.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable84 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", assetFetcher69, strMap82, "Unknown error");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse90 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL36, (int) (short) -1, strMap82, "CrawlerURL url:10", "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", (long) (byte) -1, "AssetResponseCallable url:errorassets.csv", (long) (byte) 1);
        boolean boolean91 = crawlerConfiguration3.equals((java.lang.Object) hTMLPageResponse90);
        java.lang.String str92 = crawlerConfiguration3.getOnlyOnPath();
        boolean boolean93 = crawlerConfiguration3.isVerifyUrls();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "100" + "'", str24, "100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "100" + "'", str25, "100");
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(uRI37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "urls.txt" + "'", str42, "urls.txt");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "com.soulgalore.crawler.auth" + "'", str51, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(headerUtil56);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(crawlerConfiguration75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(headerUtil77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test05035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05035");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("1", "urls.txt");
        java.lang.String str3 = crawlerURL2.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration8 = builder7.build();
        java.lang.String str9 = crawlerConfiguration8.getStartUrl();
        java.lang.String str10 = crawlerConfiguration8.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = crawlerConfiguration8.getRequestHeadersMap();
        java.lang.String str12 = crawlerConfiguration8.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder13.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder13.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder19.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration24 = builder23.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration25 = builder23.build();
        boolean boolean26 = crawlerConfiguration8.equals((java.lang.Object) crawlerConfiguration25);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder27.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration32 = builder27.build();
        int int33 = crawlerConfiguration32.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil34 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean35 = crawlerConfiguration32.equals((java.lang.Object) headerUtil34);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = headerUtil34.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap39 = headerUtil34.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.util.Map<java.lang.String, java.lang.String> strMap41 = headerUtil34.createHeadersFromString("AssetResponseCallable url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap43 = headerUtil34.createHeadersFromString("CrawlerURL url:urls.txt");
        java.util.Map<java.lang.String, java.lang.String> strMap45 = headerUtil34.createHeadersFromString("AssetResponseCallable url:100");
        boolean boolean46 = crawlerConfiguration25.equals((java.lang.Object) headerUtil34);
        java.util.Map<java.lang.String, java.lang.String> strMap48 = headerUtil34.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout");
        java.util.Map<java.lang.String, java.lang.String> strMap50 = headerUtil34.createHeadersFromString("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse56 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 0, strMap50, "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", "errorurls.txt", (long) (byte) 1, "", (long) ' ');
        java.lang.String str57 = crawlerURL2.getHost();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "CrawlerURL url:1" + "'", str3, "CrawlerURL url:1");
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(crawlerConfiguration8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(crawlerConfiguration24);
        org.junit.Assert.assertNotNull(crawlerConfiguration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(crawlerConfiguration32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(headerUtil34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(str57);
    }

    @Test
    public void test05036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05036");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet4 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet6 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet8 = authUtil0.createAuthsFromString("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet10 = authUtil0.createAuthsFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:100 type:com.soulgalore.crawler.http.socket.timeout");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"com.soulgalore.crawler.authresponseCode\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
        org.junit.Assert.assertNotNull(authSet2);
        org.junit.Assert.assertNotNull(authSet4);
        org.junit.Assert.assertNotNull(authSet6);
        org.junit.Assert.assertNotNull(authSet8);
    }

    @Test
    public void test05037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05037");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder0.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder0.setRequestHeaders("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder9.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setNotOnPath("HTMLPageResponseurl:hi!responseCode:-1encoding:errorurls.txt type:result.csv");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
    }

    @Test
    public void test05038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05038");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet11 = assetsVerificationResult6.getNonWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseSet9);
        org.junit.Assert.assertNotNull(assetResponseSet10);
        org.junit.Assert.assertNotNull(assetResponseSet11);
    }

    @Test
    public void test05039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05039");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.util.Map<java.lang.String, java.lang.String> strMap30 = hTMLPageResponse29.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean34 = crawlerURL33.isWrongSyntax();
        java.lang.String str35 = crawlerURL33.getReferer();
        java.lang.String str36 = crawlerURL33.getHost();
        java.lang.String str37 = crawlerURL33.getUrl();
        boolean boolean38 = hTMLPageResponse29.equals((java.lang.Object) crawlerURL33);
        java.lang.String str39 = hTMLPageResponse29.getUrl();
        java.lang.String str40 = hTMLPageResponse29.getUrl();
        java.lang.String str42 = hTMLPageResponse29.getHeaderValue("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.lang.String str43 = hTMLPageResponse29.getResponseType();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "urls.txt" + "'", str35, "urls.txt");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "com.soulgalore.crawler.auth" + "'", str37, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "com.soulgalore.crawler.auth" + "'", str39, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "com.soulgalore.crawler.auth" + "'", str40, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "-1" + "'", str43, "-1");
    }

    @Test
    public void test05040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05040");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("Response timed out", "CrawlerURL url:hi!", (int) 'a', (long) 10);
        java.lang.String str5 = assetResponse4.getUrl();
        java.lang.String str6 = assetResponse4.getReferer();
        long long7 = assetResponse4.getFetchTime();
        java.lang.String str8 = assetResponse4.getReferer();
        long long9 = assetResponse4.getFetchTime();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Response timed out" + "'", str5, "Response timed out");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "CrawlerURL url:hi!" + "'", str6, "CrawlerURL url:hi!");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "CrawlerURL url:hi!" + "'", str8, "CrawlerURL url:hi!");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10L + "'", long9 == 10L);
    }

    @Test
    public void test05041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05041");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        java.lang.String str6 = crawlerConfiguration3.getNotOnPath();
        java.lang.Class<?> wildcardClass7 = crawlerConfiguration3.getClass();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test05042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05042");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        boolean boolean3 = crawlerURL1.isWrongSyntax();
        java.lang.String str4 = crawlerURL1.getHost();
        java.net.URI uRI5 = crawlerURL1.getUri();
        java.net.URI uRI6 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL10 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI11 = crawlerURL10.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration16 = builder15.build();
        java.lang.String str17 = crawlerConfiguration16.getStartUrl();
        int int18 = crawlerConfiguration16.getMaxLevels();
        int int19 = crawlerConfiguration16.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = crawlerConfiguration16.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse26 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL10, (int) (short) 10, strMap20, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        int int27 = hTMLPageResponse26.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = hTMLPageResponse26.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse34 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 0, strMap28, "CrawlerURL url:result.csv", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) 583, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (byte) 1);
        java.lang.String str35 = hTMLPageResponse34.getUrl();
        int int36 = hTMLPageResponse34.getResponseCode();
        java.lang.String str38 = hTMLPageResponse34.getHeaderValue("AssetResponseCallable url:-1");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL41 = new com.soulgalore.crawler.core.CrawlerURL("Redirected to new domain", "CrawlerURL url:10");
        java.net.URI uRI42 = crawlerURL41.getUri();
        java.lang.String str43 = crawlerURL41.getHost();
        boolean boolean44 = hTMLPageResponse34.equals((java.lang.Object) str43);
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertNull(uRI6);
        org.junit.Assert.assertNull(uRI11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(crawlerConfiguration16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str35, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(uRI42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test05043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05043");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setStartUrl("AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setRequestHeaders("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads type:Wrong content type");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test05044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05044");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setMaxLevels((int) '4');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setMaxLevels(583);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setOnlyOnPath("Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setNotOnPath("Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder8.build();
        java.lang.String str12 = crawlerConfiguration11.getNotOnPath();
        java.lang.String str13 = crawlerConfiguration11.getRequestHeaders();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Unknown error" + "'", str12, "Unknown error");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test05045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05045");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder2.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder2.build();
        int int8 = crawlerConfiguration7.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil9 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean10 = crawlerConfiguration7.equals((java.lang.Object) headerUtil9);
        java.util.Map<java.lang.String, java.lang.String> strMap11 = crawlerConfiguration7.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable13 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("35", assetFetcher1, strMap11, "Unknown error");
        java.lang.String str14 = assetResponseCallable13.toString();
        java.lang.String str15 = assetResponseCallable13.toString();
        java.lang.String str16 = assetResponseCallable13.toString();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(headerUtil9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "AssetResponseCallable url:35" + "'", str14, "AssetResponseCallable url:35");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AssetResponseCallable url:35" + "'", str15, "AssetResponseCallable url:35");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AssetResponseCallable url:35" + "'", str16, "AssetResponseCallable url:35");
    }

    @Test
    public void test05046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05046");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse37 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (short) 100, strMap31, "-1", "1", (long) (byte) 10, "com.soulgalore.crawler.nrofhttpthreads", (long) (short) 1);
        int int38 = hTMLPageResponse37.getResponseCode();
        java.lang.String str39 = hTMLPageResponse37.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL40 = hTMLPageResponse37.getPageUrl();
        java.lang.String str41 = crawlerURL40.toString();
        java.net.URI uRI42 = crawlerURL40.getUri();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1" + "'", str39, "1");
        org.junit.Assert.assertNotNull(crawlerURL40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str41, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(uRI42);
    }

    @Test
    public void test05047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05047");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder4.setOnlyOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setOnlyOnPath("Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setStartUrl("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder16.setMaxLevels(97);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test05048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05048");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str7 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str8 = crawlerConfiguration5.getStartUrl();
        boolean boolean9 = crawlerConfiguration5.isVerifyUrls();
        int int10 = crawlerConfiguration5.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("errorassets.csv");
        boolean boolean13 = crawlerConfiguration5.equals((java.lang.Object) crawlerURL12);
        java.lang.String str14 = crawlerConfiguration5.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean18 = crawlerURL17.isWrongSyntax();
        java.lang.String str19 = crawlerURL17.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse27 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL17, (int) 'a', strMap21, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str28 = hTMLPageResponse27.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean30 = hTMLPageResponse27.equals((java.lang.Object) builder29);
        long long31 = hTMLPageResponse27.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL34 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean35 = crawlerURL34.isWrongSyntax();
        java.lang.String str36 = crawlerURL34.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse44 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL34, (int) 'a', strMap38, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str45 = hTMLPageResponse44.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder46 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean47 = hTMLPageResponse44.equals((java.lang.Object) builder46);
        long long48 = hTMLPageResponse44.getFetchTime();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder49 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder51 = builder49.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder53 = builder49.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder55 = builder49.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration56 = builder49.build();
        java.util.Map<java.lang.String, java.lang.String> strMap57 = crawlerConfiguration56.getRequestHeadersMap();
        boolean boolean58 = hTMLPageResponse44.equals((java.lang.Object) crawlerConfiguration56);
        boolean boolean59 = hTMLPageResponse27.equals((java.lang.Object) boolean58);
        java.lang.String str60 = hTMLPageResponse27.toString();
        boolean boolean61 = crawlerConfiguration5.equals((java.lang.Object) hTMLPageResponse27);
        java.util.Map<java.lang.String, java.lang.String> strMap62 = hTMLPageResponse27.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL63 = hTMLPageResponse27.getPageUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "urls.txt" + "'", str19, "urls.txt");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "com.soulgalore.crawler.auth" + "'", str28, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 100L + "'", long31 == 100L);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "urls.txt" + "'", str36, "urls.txt");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "com.soulgalore.crawler.auth" + "'", str45, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 100L + "'", long48 == 100L);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(crawlerConfiguration56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str60, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(crawlerURL63);
    }

    @Test
    public void test05049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05049");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("result.csv", "Malformed url");
        java.lang.String str3 = crawlerURL2.getReferer();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray4 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet5, assetResponseArray4);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray7 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet8, assetResponseArray7);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult10 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet5, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet8);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet11 = assetsVerificationResult10.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = assetsVerificationResult10.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = assetsVerificationResult10.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet14 = assetsVerificationResult10.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray15 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet16 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet16, assetResponseArray15);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray18 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet19 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet19, assetResponseArray18);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult21 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet16, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet19);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = assetsVerificationResult21.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult23 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet14, assetResponseSet22);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet24 = assetsVerificationResult23.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = assetsVerificationResult23.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet26 = assetsVerificationResult23.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray27 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet28 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet28, assetResponseArray27);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray30 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet31 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet31, assetResponseArray30);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult33 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet28, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet31);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet34 = assetsVerificationResult33.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet35 = assetsVerificationResult33.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray36 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet37 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37, assetResponseArray36);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray39 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40, assetResponseArray39);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult42 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult43 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet35, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray44 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet45 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet45, assetResponseArray44);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray47 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet48 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet48, assetResponseArray47);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult50 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet45, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet48);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet51 = assetsVerificationResult50.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet52 = assetsVerificationResult50.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray53 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet54 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet54, assetResponseArray53);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray56 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet57 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet57, assetResponseArray56);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult59 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet54, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet57);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult60 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet52, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet54);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult61 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet35, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet54);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult62 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet26, assetResponseSet35);
        boolean boolean63 = crawlerURL2.equals((java.lang.Object) assetResponseSet35);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Malformed url" + "'", str3, "Malformed url");
        org.junit.Assert.assertNotNull(assetResponseArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(assetResponseArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(assetResponseSet11);
        org.junit.Assert.assertNotNull(assetResponseSet12);
        org.junit.Assert.assertNotNull(assetResponseSet13);
        org.junit.Assert.assertNotNull(assetResponseSet14);
        org.junit.Assert.assertNotNull(assetResponseArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(assetResponseArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(assetResponseSet22);
        org.junit.Assert.assertNotNull(assetResponseSet24);
        org.junit.Assert.assertNotNull(assetResponseSet25);
        org.junit.Assert.assertNotNull(assetResponseSet26);
        org.junit.Assert.assertNotNull(assetResponseArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(assetResponseArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(assetResponseSet34);
        org.junit.Assert.assertNotNull(assetResponseSet35);
        org.junit.Assert.assertNotNull(assetResponseArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(assetResponseArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(assetResponseArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(assetResponseArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(assetResponseSet51);
        org.junit.Assert.assertNotNull(assetResponseSet52);
        org.junit.Assert.assertNotNull(assetResponseArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(assetResponseArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test05050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05050");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider(1, (int) '#', 52, "52", "result.csv");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:52");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05051");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder2.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder2.build();
        java.lang.String str8 = crawlerConfiguration7.getRequestHeaders();
        java.lang.String str9 = crawlerConfiguration7.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = crawlerConfiguration7.getRequestHeadersMap();
        java.lang.String str11 = crawlerConfiguration7.getOnlyOnPath();
        java.lang.String str12 = crawlerConfiguration7.getOnlyOnPath();
        boolean boolean13 = crawlerConfiguration7.isVerifyUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "Response timed out");
        com.soulgalore.crawler.util.HeaderUtil headerUtil18 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = headerUtil18.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse26 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL16, (int) '4', strMap20, "com.soulgalore.crawler.http.socket.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 580, "com.soulgalore.crawler.auth", (long) (short) 1);
        boolean boolean27 = crawlerConfiguration7.equals((java.lang.Object) strMap20);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable29 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", assetFetcher1, strMap20, "AssetResponseCallable url:");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.assets.AssetResponse assetResponse30 = assetResponseCallable29.call();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(headerUtil18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test05052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05052");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder6.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration8 = builder6.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setNotOnPath("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setNotOnPath("CrawlerURL url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNotNull(crawlerConfiguration8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test05053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05053");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.lang.String str2 = crawlerURL1.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder3 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder3.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder3.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration8 = builder3.build();
        int int9 = crawlerConfiguration8.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil10 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean11 = crawlerConfiguration8.equals((java.lang.Object) headerUtil10);
        java.util.Map<java.lang.String, java.lang.String> strMap13 = headerUtil10.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap15 = headerUtil10.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        boolean boolean16 = crawlerURL1.equals((java.lang.Object) headerUtil10);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = headerUtil10.createHeadersFromString("AssetResponseCallable url:errorassets.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap20 = headerUtil10.createHeadersFromString("CrawlerURL url:com.soulgalore.crawler.auth");
        java.util.Map<java.lang.String, java.lang.String> strMap22 = headerUtil10.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads type:-1");
        java.util.Map<java.lang.String, java.lang.String> strMap24 = headerUtil10.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:97encoding:52 type:CrawlerURL url:com.soulgalore.crawler.auth");
        java.util.Map<java.lang.String, java.lang.String> strMap26 = headerUtil10.createHeadersFromString("AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.auth");
        java.util.Map<java.lang.String, java.lang.String> strMap28 = headerUtil10.createHeadersFromString("AssetResponseCallable url:CrawlerURL url:-1");
        java.util.Map<java.lang.String, java.lang.String> strMap30 = headerUtil10.createHeadersFromString("CrawlerURL url:AssetResponseCallable url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(crawlerConfiguration8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(headerUtil10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap30);
    }

    @Test
    public void test05054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05054");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("AssetResponseCallable url:com.soulgalore.crawler.auth");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:AssetResponseCallable url:com.soulgalore.crawler.auth");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
    }

    @Test
    public void test05055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05055");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet4 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet6 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet8 = authUtil0.createAuthsFromString("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet10 = authUtil0.createAuthsFromString("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"AssetResponseCallable url\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
        org.junit.Assert.assertNotNull(authSet2);
        org.junit.Assert.assertNotNull(authSet4);
        org.junit.Assert.assertNotNull(authSet6);
        org.junit.Assert.assertNotNull(authSet8);
    }

    @Test
    public void test05056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05056");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray21 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL20 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet22, crawlerURLArray21);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet24 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray25 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet26, hTMLPageResponseArray25);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult28 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet22, hTMLPageResponseSet24, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet26);
        java.lang.String str29 = crawlerResult28.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet30 = crawlerResult28.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet31 = crawlerResult28.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL35 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean36 = crawlerURL35.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean40 = crawlerURL39.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL43 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI44 = crawlerURL43.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray45 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL35, crawlerURL39, crawlerURL43 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet46 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet46, crawlerURLArray45);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray48 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet49 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet49, hTMLPageResponseArray48);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL54 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray55 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL54 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet56 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet56, crawlerURLArray55);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet58 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray59 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet60 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet60, hTMLPageResponseArray59);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult62 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet56, hTMLPageResponseSet58, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet60);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult63 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet46, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet49, hTMLPageResponseSet58);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet64 = crawlerResult63.getVerifiedURLResponses();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult65 = new com.soulgalore.crawler.core.CrawlerResult("errorurls.txt", crawlerURLSet16, hTMLPageResponseSet31, hTMLPageResponseSet64);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet66 = crawlerResult65.getUrls();
        java.lang.String str67 = crawlerResult65.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet68 = crawlerResult65.getNonWorkingUrls();
        java.lang.String str69 = crawlerResult65.getTheStartPoint();
        java.lang.String str70 = crawlerResult65.getTheStartPoint();
        java.lang.String str71 = crawlerResult65.getTheStartPoint();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertNotNull(crawlerURLArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet30);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(uRI44);
        org.junit.Assert.assertNotNull(crawlerURLArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet64);
        org.junit.Assert.assertNotNull(crawlerURLSet66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "errorurls.txt" + "'", str67, "errorurls.txt");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "errorurls.txt" + "'", str69, "errorurls.txt");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "errorurls.txt" + "'", str70, "errorurls.txt");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "errorurls.txt" + "'", str71, "errorurls.txt");
    }

    @Test
    public void test05057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05057");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean6 = crawlerURL5.isWrongSyntax();
        java.lang.String str7 = crawlerURL5.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse15 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (int) 'a', strMap9, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str16 = hTMLPageResponse15.getUrl();
        boolean boolean17 = crawlerURL1.equals((java.lang.Object) str16);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher20 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil21 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = headerUtil21.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable25 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher20, strMap23, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse31 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) 100, strMap23, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        org.jsoup.nodes.Document document32 = hTMLPageResponse31.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = hTMLPageResponse31.getPageUrl();
        org.jsoup.nodes.Document document34 = hTMLPageResponse31.getBody();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = builder35.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration38 = builder37.build();
        java.lang.String str39 = crawlerConfiguration38.getStartUrl();
        int int40 = crawlerConfiguration38.getMaxLevels();
        int int41 = crawlerConfiguration38.getMaxLevels();
        java.lang.String str42 = crawlerConfiguration38.getNotOnPath();
        int int43 = crawlerConfiguration38.getMaxLevels();
        java.lang.String str44 = crawlerConfiguration38.getOnlyOnPath();
        boolean boolean45 = hTMLPageResponse31.equals((java.lang.Object) crawlerConfiguration38);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = crawlerConfiguration38.getRequestHeadersMap();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "urls.txt" + "'", str7, "urls.txt");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(headerUtil21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(document32);
        org.junit.Assert.assertNotNull(crawlerURL33);
        org.junit.Assert.assertNull(document34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(crawlerConfiguration38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strMap46);
    }

    @Test
    public void test05058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05058");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder0.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder0.setRequestHeaders("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setNotOnPath("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder11.setNotOnPath("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration16 = builder15.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder15.setNotOnPath("AssetResponseCallable url:0");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder15.setMaxLevels(32);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(crawlerConfiguration16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test05059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05059");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str6 = crawlerConfiguration3.getRequestHeaders();
        java.lang.String str7 = crawlerConfiguration3.getRequestHeaders();
        boolean boolean8 = crawlerConfiguration3.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str10 = crawlerConfiguration3.getStartUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test05060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05060");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder10.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder10.setNotOnPath("com.soulgalore.crawler.http.socket.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setOnlyOnPath("0");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration16 = builder15.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder15.setMaxLevels(580);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(crawlerConfiguration16);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test05061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05061");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        java.net.URI uRI4 = crawlerURL2.getUri();
        java.net.URI uRI5 = crawlerURL2.getUri();
        java.net.URI uRI6 = crawlerURL2.getUri();
        boolean boolean7 = crawlerURL2.isWrongSyntax();
        java.lang.String str8 = crawlerURL2.getUrl();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher11 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = new com.soulgalore.crawler.core.CrawlerURL("Malformed url", "com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.util.HeaderUtil headerUtil16 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = headerUtil16.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse24 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL14, 583, strMap18, "Redirected to new domain", "result.csv", 0L, "result.csv", (long) (short) 100);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = hTMLPageResponse24.getResponseHeaders();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable27 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", assetFetcher11, strMap25, "-1");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse33 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 52, strMap25, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth", "AssetResponseCallable url:", 0L, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url", 581L);
        java.lang.String str34 = crawlerURL2.getHost();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertNull(uRI4);
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertNull(uRI6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "com.soulgalore.crawler.auth" + "'", str8, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(headerUtil16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test05062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05062");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL0 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil2 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = headerUtil2.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil2.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = headerUtil2.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil2.createHeadersFromString("AssetResponseCallable url:Wrong content type");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil2.createHeadersFromString("CrawlerURL url:hi!");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL0, (int) (short) 0, strMap12, "10", "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Unknown error", 32L, "", 582L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerUtil2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test05063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05063");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet12 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet14 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet16 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet18 = crawlerResult11.getNonWorkingUrls();
        java.lang.String str19 = crawlerResult11.getTheStartPoint();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet20 = crawlerResult11.getVerifiedURLResponses();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet12);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet16);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet17);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
    }

    @Test
    public void test05064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05064");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout", "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url");
        java.net.URI uRI3 = crawlerURL2.getUri();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.lang.String str5 = crawlerURL2.toString();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url" + "'", str4, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CrawlerURL url:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout" + "'", str5, "CrawlerURL url:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
    }

    @Test
    public void test05065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05065");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("0", "97");
        java.lang.String str3 = crawlerURL2.getReferer();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "97" + "'", str3, "97");
    }

    @Test
    public void test05066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05066");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str7 = crawlerConfiguration5.getRequestHeaders();
        boolean boolean9 = crawlerConfiguration5.equals((java.lang.Object) 0.0d);
        boolean boolean10 = crawlerConfiguration5.isVerifyUrls();
        java.lang.String str11 = crawlerConfiguration5.getStartUrl();
        java.lang.String str12 = crawlerConfiguration5.getStartUrl();
        int int13 = crawlerConfiguration5.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder20.setOnlyOnPath("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder20.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration25 = builder20.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder20.setOnlyOnPath("CrawlerURL url:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setNotOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder27.setOnlyOnPath("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder31.setMaxLevels(0);
        boolean boolean34 = crawlerConfiguration5.equals((java.lang.Object) builder33);
        java.lang.String str35 = crawlerConfiguration5.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(crawlerConfiguration25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
    }

    @Test
    public void test05067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05067");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder3 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder3.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration6 = builder5.build();
        java.lang.String str7 = crawlerConfiguration6.getStartUrl();
        int int8 = crawlerConfiguration6.getMaxLevels();
        int int9 = crawlerConfiguration6.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean13 = crawlerURL12.isWrongSyntax();
        java.lang.String str14 = crawlerURL12.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse22 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL12, (int) 'a', strMap16, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str23 = hTMLPageResponse22.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = hTMLPageResponse22.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = hTMLPageResponse22.getResponseHeaders();
        java.lang.String str26 = hTMLPageResponse22.getUrl();
        org.jsoup.nodes.Document document27 = hTMLPageResponse22.getBody();
        boolean boolean28 = crawlerConfiguration6.equals((java.lang.Object) hTMLPageResponse22);
        boolean boolean29 = crawlerURL1.equals((java.lang.Object) hTMLPageResponse22);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder31.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration34 = builder33.build();
        java.lang.String str35 = crawlerConfiguration34.getStartUrl();
        int int36 = crawlerConfiguration34.getMaxLevels();
        int int37 = crawlerConfiguration34.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = crawlerConfiguration34.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse44 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 582, strMap38, "urls.txt", "hi!", (long) (short) 0, "AssetResponseCallable url:result.csv", 10L);
        java.lang.String str45 = crawlerURL1.getReferer();
        java.lang.String str46 = crawlerURL1.getUrl();
        java.lang.String str47 = crawlerURL1.getReferer();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(crawlerConfiguration6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "urls.txt" + "'", str14, "urls.txt");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str23, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "com.soulgalore.crawler.auth" + "'", str26, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(crawlerConfiguration34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str46, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
    }

    @Test
    public void test05068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05068");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = hTMLPageResponse12.getResponseHeaders();
        long long17 = hTMLPageResponse12.getFetchTime();
        int int18 = hTMLPageResponse12.getResponseCode();
        long long19 = hTMLPageResponse12.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray20 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet21 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21, assetResponseArray20);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray23 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet24 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet24, assetResponseArray23);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult26 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet24);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray27 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet28 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet28, assetResponseArray27);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray30 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet31 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet31, assetResponseArray30);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult33 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet28, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet31);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet34 = assetsVerificationResult33.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult35 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet24, assetResponseSet34);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet36 = assetsVerificationResult35.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray37 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet38 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet38, assetResponseArray37);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray40 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet41, assetResponseArray40);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult43 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet38, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet41);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet44 = assetsVerificationResult43.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet45 = assetsVerificationResult43.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray46 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet47 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet47, assetResponseArray46);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray49 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet50 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet50, assetResponseArray49);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult52 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet47, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet50);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet53 = assetsVerificationResult52.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet54 = assetsVerificationResult52.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray55 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet56 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet56, assetResponseArray55);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray58 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet59 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet59, assetResponseArray58);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult61 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet56, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet59);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult62 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet54, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet56);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray63 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet64 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet64, assetResponseArray63);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray66 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet67 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet67, assetResponseArray66);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult69 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet64, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet67);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet70 = assetsVerificationResult69.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult71 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet54, assetResponseSet70);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult72 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet45, assetResponseSet54);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult73 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet36, assetResponseSet45);
        boolean boolean74 = hTMLPageResponse12.equals((java.lang.Object) assetsVerificationResult73);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet75 = assetsVerificationResult73.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet76 = assetsVerificationResult73.getNonWorkingAssets();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 100L + "'", long17 == 100L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 97 + "'", int18 == 97);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 100L + "'", long19 == 100L);
        org.junit.Assert.assertNotNull(assetResponseArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(assetResponseArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(assetResponseArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(assetResponseArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(assetResponseSet34);
        org.junit.Assert.assertNotNull(assetResponseSet36);
        org.junit.Assert.assertNotNull(assetResponseArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(assetResponseArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(assetResponseSet44);
        org.junit.Assert.assertNotNull(assetResponseSet45);
        org.junit.Assert.assertNotNull(assetResponseArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(assetResponseArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(assetResponseSet53);
        org.junit.Assert.assertNotNull(assetResponseSet54);
        org.junit.Assert.assertNotNull(assetResponseArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(assetResponseArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(assetResponseArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(assetResponseArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(assetResponseSet70);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(assetResponseSet75);
        org.junit.Assert.assertNotNull(assetResponseSet76);
    }

    @Test
    public void test05069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05069");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        boolean boolean22 = hTMLPageResponse12.equals((java.lang.Object) builder21);
        int int23 = hTMLPageResponse12.getResponseCode();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = hTMLPageResponse12.getHeaderValue("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 97 + "'", int23 == 97);
    }

    @Test
    public void test05070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05070");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setMaxLevels((int) '4');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setStartUrl("com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setRequestHeaders("AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setNotOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:32encoding:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setMaxLevels(581);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test05071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05071");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider((int) (byte) 10, (int) (byte) 0, 52, "CrawlerURL url:AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", "AssetResponseCallable url:com.soulgalore.crawler.nrofhttpthreads");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"AssetResponseCallable url\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05072");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet4 = authUtil0.createAuthsFromString("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet6 = authUtil0.createAuthsFromString("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"com.soulgalore.crawler.nrofhttpthreadsresponseCode\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
        org.junit.Assert.assertNotNull(authSet2);
        org.junit.Assert.assertNotNull(authSet4);
    }

    @Test
    public void test05073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05073");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.lang.String str2 = crawlerURL1.getReferer();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
    }

    @Test
    public void test05074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05074");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.lang.String str30 = hTMLPageResponse29.getUrl();
        org.jsoup.nodes.Document document31 = hTMLPageResponse29.getBody();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = hTMLPageResponse29.getResponseHeaders();
        java.lang.String str33 = hTMLPageResponse29.getEncoding();
        java.lang.String str34 = hTMLPageResponse29.getResponseType();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "com.soulgalore.crawler.auth" + "'", str30, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Malformed url" + "'", str33, "Malformed url");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "-1" + "'", str34, "-1");
    }

    @Test
    public void test05075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05075");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        long long14 = hTMLPageResponse12.getFetchTime();
        long long15 = hTMLPageResponse12.getFetchTime();
        long long16 = hTMLPageResponse12.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        int int18 = hTMLPageResponse12.getResponseCode();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 100L + "'", long14 == 100L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 100L + "'", long15 == 100L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 97 + "'", int18 == 97);
    }

    @Test
    public void test05076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05076");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean14 = assetResponse4.equals((java.lang.Object) 100L);
        java.lang.String str15 = assetResponse4.getReferer();
        java.lang.String str16 = assetResponse4.getReferer();
        java.lang.String str17 = assetResponse4.getUrl();
        java.lang.String str18 = assetResponse4.getReferer();
        java.lang.String str19 = assetResponse4.getReferer();
        long long20 = assetResponse4.getFetchTime();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "100" + "'", str15, "100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "100" + "'", str16, "100");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "100" + "'", str18, "100");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "100" + "'", str19, "100");
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
    }

    @Test
    public void test05077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05077");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int13 = hTMLPageResponse12.getResponseCode();
        java.lang.String str14 = hTMLPageResponse12.getResponseType();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        long long16 = hTMLPageResponse12.getFetchTime();
        java.lang.String str17 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        java.lang.String str19 = hTMLPageResponse12.getUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "com.soulgalore.crawler.auth" + "'", str17, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "com.soulgalore.crawler.auth" + "'", str19, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test05078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05078");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider((int) (byte) 10, 0, 52, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url", "97");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"com.soulgalore.crawler.nrofhttpthreadsresponseCode\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05079");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        java.lang.String str3 = crawlerURL1.getUrl();
        java.lang.String str4 = crawlerURL1.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder6.build();
        java.lang.String str12 = crawlerConfiguration11.getRequestHeaders();
        java.lang.String str13 = crawlerConfiguration11.getRequestHeaders();
        boolean boolean15 = crawlerConfiguration11.equals((java.lang.Object) 0.0d);
        boolean boolean16 = crawlerConfiguration11.isVerifyUrls();
        java.lang.String str17 = crawlerConfiguration11.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = crawlerConfiguration11.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse24 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 0, strMap18, "10", "Unknown error", (long) (short) -1, "AssetResponseCallable url:Malformed url", (long) 97);
        java.net.URI uRI25 = crawlerURL1.getUri();
        java.lang.String str26 = crawlerURL1.getReferer();
        java.net.URI uRI27 = crawlerURL1.getUri();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str3, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str4, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(uRI25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(uRI27);
    }

    @Test
    public void test05080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05080");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "com.soulgalore.crawler.auth");
        java.lang.String str3 = crawlerURL2.getUrl();
        java.net.URI uRI4 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI7 = crawlerURL6.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL10 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI11 = crawlerURL10.getUri();
        boolean boolean12 = crawlerURL10.isWrongSyntax();
        java.lang.String str13 = crawlerURL10.getHost();
        java.net.URI uRI14 = crawlerURL10.getUri();
        java.net.URI uRI15 = crawlerURL10.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI20 = crawlerURL19.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder22.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration25 = builder24.build();
        java.lang.String str26 = crawlerConfiguration25.getStartUrl();
        int int27 = crawlerConfiguration25.getMaxLevels();
        int int28 = crawlerConfiguration25.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = crawlerConfiguration25.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse35 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL19, (int) (short) 10, strMap29, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        int int36 = hTMLPageResponse35.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = hTMLPageResponse35.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse43 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL10, 0, strMap37, "CrawlerURL url:result.csv", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) 583, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (byte) 1);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse49 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL6, (int) 'a', strMap37, "AssetResponseCallable url:com.soulgalore.crawler.auth", "AssetResponseCallable url:errorassets.csv", (long) 100, "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", 35L);
        boolean boolean50 = crawlerURL2.equals((java.lang.Object) crawlerURL6);
        java.lang.String str51 = crawlerURL6.toString();
        java.lang.String str52 = crawlerURL6.getHost();
        java.lang.String str53 = crawlerURL6.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "urls.txt" + "'", str3, "urls.txt");
        org.junit.Assert.assertNull(uRI4);
        org.junit.Assert.assertNull(uRI7);
        org.junit.Assert.assertNull(uRI11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(uRI14);
        org.junit.Assert.assertNull(uRI15);
        org.junit.Assert.assertNull(uRI20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(crawlerConfiguration25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10 + "'", int36 == 10);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str51, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str53, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
    }

    @Test
    public void test05081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05081");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet4 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet6 = authUtil0.createAuthsFromString("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet8 = authUtil0.createAuthsFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:581encoding:AssetResponseCallable url:result.csv type:CrawlerURL url:CrawlerURL url:errorassets.csv");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"com.soulgalore.crawler.authresponseCode\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
        org.junit.Assert.assertNotNull(authSet2);
        org.junit.Assert.assertNotNull(authSet4);
        org.junit.Assert.assertNotNull(authSet6);
    }

    @Test
    public void test05082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05082");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.lang.String str5 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = crawlerConfiguration3.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration3.getRequestHeadersMap();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL11 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray12 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL11 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet13, crawlerURLArray12);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray16 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet17, hTMLPageResponseArray16);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult19 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet13, hTMLPageResponseSet15, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet17);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet20 = crawlerResult19.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet21 = crawlerResult19.getUrls();
        boolean boolean22 = crawlerConfiguration3.equals((java.lang.Object) crawlerURLSet21);
        java.lang.String str23 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str24 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str25 = crawlerConfiguration3.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray30 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL29 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet31 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet31, crawlerURLArray30);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet33 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray34 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet35 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet35, hTMLPageResponseArray34);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult37 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet31, hTMLPageResponseSet33, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet35);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet38 = crawlerResult37.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet39 = crawlerResult37.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet40 = crawlerResult37.getNonWorkingUrls();
        java.lang.String str41 = crawlerResult37.getTheStartPoint();
        java.lang.String str42 = crawlerResult37.getTheStartPoint();
        java.lang.String str43 = crawlerResult37.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet44 = crawlerResult37.getNonWorkingUrls();
        boolean boolean45 = crawlerConfiguration3.equals((java.lang.Object) crawlerResult37);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder46 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder48 = builder46.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder50 = builder46.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration51 = builder46.build();
        int int52 = crawlerConfiguration51.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil53 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean54 = crawlerConfiguration51.equals((java.lang.Object) headerUtil53);
        java.util.Map<java.lang.String, java.lang.String> strMap56 = headerUtil53.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap58 = headerUtil53.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.util.Map<java.lang.String, java.lang.String> strMap60 = headerUtil53.createHeadersFromString("AssetResponseCallable url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap62 = headerUtil53.createHeadersFromString("AssetResponseCallable url:Unknown error");
        java.util.Map<java.lang.String, java.lang.String> strMap64 = headerUtil53.createHeadersFromString("AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
        java.util.Map<java.lang.String, java.lang.String> strMap66 = headerUtil53.createHeadersFromString("CrawlerURL url:Wrong content type");
        boolean boolean67 = crawlerConfiguration3.equals((java.lang.Object) headerUtil53);
        java.lang.String str68 = crawlerConfiguration3.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(crawlerURLArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet20);
        org.junit.Assert.assertNotNull(crawlerURLSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(crawlerURLArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet38);
        org.junit.Assert.assertNotNull(crawlerURLSet39);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(crawlerConfiguration51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(headerUtil53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
    }

    @Test
    public void test05083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05083");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder13.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder13.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setVerifyUrls(false);
        boolean boolean26 = hTMLPageResponse12.equals((java.lang.Object) builder25);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder25.setOnlyOnPath("HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder28.setNotOnPath("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder28.setRequestHeaders("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder28.setNotOnPath("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder34.setRequestHeaders("AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder34.setRequestHeaders("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
    }

    @Test
    public void test05084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05084");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI4 = crawlerURL3.getUri();
        java.lang.String str5 = crawlerURL3.getUrl();
        java.lang.String str6 = crawlerURL3.getHost();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher9 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher11 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher13 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil14 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = headerUtil14.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable18 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher13, strMap16, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable20 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("com.soulgalore.crawler.auth", assetFetcher11, strMap16, "urls.txt");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable22 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("CrawlerURL url:10", assetFetcher9, strMap16, "errorurls.txt");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse28 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL3, (int) ' ', strMap16, "errorassets.csv", "Malformed url", (long) 100, "com.soulgalore.crawler.nrofhttpthreads", (long) 583);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable30 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("CrawlerURL url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads", assetFetcher1, strMap16, "52");
        java.lang.String str31 = assetResponseCallable30.toString();
        org.junit.Assert.assertNull(uRI4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str5, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(headerUtil14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "AssetResponseCallable url:CrawlerURL url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads" + "'", str31, "AssetResponseCallable url:CrawlerURL url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
    }

    @Test
    public void test05085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05085");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("errorassets.csv");
        java.lang.String str2 = crawlerURL1.getHost();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean7 = crawlerURL6.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL10 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean11 = crawlerURL10.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI15 = crawlerURL14.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray16 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL6, crawlerURL10, crawlerURL14 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet17 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet17, crawlerURLArray16);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray19 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet20 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet20, hTMLPageResponseArray19);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL25 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray26 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL25 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet27 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet27, crawlerURLArray26);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet29 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray30 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet31 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet31, hTMLPageResponseArray30);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult33 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet27, hTMLPageResponseSet29, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet31);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult34 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet17, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet20, hTMLPageResponseSet29);
        boolean boolean35 = crawlerURL1.equals((java.lang.Object) "com.soulgalore.crawler.auth");
        java.net.URI uRI36 = crawlerURL1.getUri();
        java.net.URI uRI37 = crawlerURL1.getUri();
        java.lang.String str38 = crawlerURL1.toString();
        boolean boolean39 = crawlerURL1.isWrongSyntax();
        java.lang.String str40 = crawlerURL1.getHost();
        java.lang.String str41 = crawlerURL1.getUrl();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(uRI15);
        org.junit.Assert.assertNotNull(crawlerURLArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(uRI36);
        org.junit.Assert.assertNull(uRI37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "CrawlerURL url:errorassets.csv" + "'", str38, "CrawlerURL url:errorassets.csv");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "errorassets.csv" + "'", str41, "errorassets.csv");
    }

    @Test
    public void test05086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05086");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = crawlerURL2.getUrl();
        boolean boolean14 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher17 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean21 = crawlerURL20.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder23.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration28 = builder23.build();
        java.lang.String str29 = crawlerConfiguration28.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = crawlerConfiguration28.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse36 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, (-1), strMap30, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL40 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI41 = crawlerURL40.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL45 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean46 = crawlerURL45.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder48 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder50 = builder48.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder52 = builder48.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration53 = builder48.build();
        java.lang.String str54 = crawlerConfiguration53.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = crawlerConfiguration53.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse61 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL45, (-1), strMap55, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse67 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL40, 100, strMap55, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse73 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, (int) (byte) 10, strMap55, "100", "errorassets.csv", (long) (byte) 100, "", (long) (short) 100);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable75 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("", assetFetcher17, strMap55, "CrawlerURL url:1");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse81 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (short) -1, strMap55, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", (long) 580, "AssetResponseCallable url:com.soulgalore.crawler.nrofhttpthreads", (long) ' ');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder82 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder84 = builder82.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder86 = builder82.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder88 = builder86.setStartUrl("-1");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration89 = builder88.build();
        boolean boolean90 = hTMLPageResponse81.equals((java.lang.Object) builder88);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder92 = builder88.setVerifyUrls(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(crawlerConfiguration28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(uRI41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(crawlerConfiguration53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(crawlerConfiguration89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(builder92);
    }

    @Test
    public void test05087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05087");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int13 = hTMLPageResponse12.getResponseCode();
        java.lang.String str14 = hTMLPageResponse12.getResponseType();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL15 = hTMLPageResponse12.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = hTMLPageResponse12.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(crawlerURL15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(crawlerURL17);
    }

    @Test
    public void test05088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05088");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        java.lang.String str18 = crawlerURL17.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI22 = crawlerURL21.getUri();
        java.lang.String str23 = crawlerURL21.getUrl();
        java.lang.String str24 = crawlerURL21.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder26.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder26.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration31 = builder26.build();
        java.lang.String str32 = crawlerConfiguration31.getRequestHeaders();
        java.lang.String str33 = crawlerConfiguration31.getRequestHeaders();
        boolean boolean35 = crawlerConfiguration31.equals((java.lang.Object) 0.0d);
        boolean boolean36 = crawlerConfiguration31.isVerifyUrls();
        java.lang.String str37 = crawlerConfiguration31.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = crawlerConfiguration31.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse44 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL21, 0, strMap38, "10", "Unknown error", (long) (short) -1, "AssetResponseCallable url:Malformed url", (long) 97);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse50 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL17, 97, strMap38, "97", "com.soulgalore.crawler.proxy", (long) 10, "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (byte) 100);
        org.jsoup.nodes.Document document51 = hTMLPageResponse50.getBody();
        java.lang.String str52 = hTMLPageResponse50.getResponseType();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = hTMLPageResponse50.getResponseHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap54 = hTMLPageResponse50.getResponseHeaders();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.auth" + "'", str18, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(uRI22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str23, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str24, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(crawlerConfiguration31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(document51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1" + "'", str52, "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
    }

    @Test
    public void test05089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05089");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.util.Map<java.lang.String, java.lang.String> strMap30 = hTMLPageResponse29.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean34 = crawlerURL33.isWrongSyntax();
        java.lang.String str35 = crawlerURL33.getReferer();
        java.lang.String str36 = crawlerURL33.getHost();
        java.lang.String str37 = crawlerURL33.getUrl();
        boolean boolean38 = hTMLPageResponse29.equals((java.lang.Object) crawlerURL33);
        java.lang.String str39 = hTMLPageResponse29.getUrl();
        java.lang.String str40 = hTMLPageResponse29.getUrl();
        java.lang.String str41 = hTMLPageResponse29.getResponseType();
        java.lang.String str42 = hTMLPageResponse29.getUrl();
        org.jsoup.nodes.Document document43 = hTMLPageResponse29.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL44 = hTMLPageResponse29.getPageUrl();
        int int45 = hTMLPageResponse29.getResponseCode();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse50 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int51 = assetResponse50.getResponseCode();
        int int52 = assetResponse50.getResponseCode();
        long long53 = assetResponse50.getFetchTime();
        long long54 = assetResponse50.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse59 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean60 = assetResponse50.equals((java.lang.Object) 100L);
        java.lang.String str61 = assetResponse50.getReferer();
        java.lang.String str62 = assetResponse50.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder63 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder65 = builder63.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder67 = builder63.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder69 = builder63.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder71 = builder69.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder73 = builder69.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder75 = builder73.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder77 = builder75.setVerifyUrls(false);
        boolean boolean78 = assetResponse50.equals((java.lang.Object) false);
        java.lang.String str79 = assetResponse50.getReferer();
        java.lang.String str80 = assetResponse50.getReferer();
        java.lang.String str81 = assetResponse50.getReferer();
        long long82 = assetResponse50.getFetchTime();
        boolean boolean83 = hTMLPageResponse29.equals((java.lang.Object) assetResponse50);
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "urls.txt" + "'", str35, "urls.txt");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "com.soulgalore.crawler.auth" + "'", str37, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "com.soulgalore.crawler.auth" + "'", str39, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "com.soulgalore.crawler.auth" + "'", str40, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "-1" + "'", str41, "-1");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "com.soulgalore.crawler.auth" + "'", str42, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document43);
        org.junit.Assert.assertNotNull(crawlerURL44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "100" + "'", str61, "100");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "100" + "'", str62, "100");
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "100" + "'", str79, "100");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "100" + "'", str80, "100");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "100" + "'", str81, "100");
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 0L + "'", long82 == 0L);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test05090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05090");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = assetsVerificationResult6.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray11 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, assetResponseArray11);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray14 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet15 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15, assetResponseArray14);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult17 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = assetsVerificationResult17.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult19 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet10, assetResponseSet18);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = assetsVerificationResult19.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet21 = assetsVerificationResult19.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = assetsVerificationResult19.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet23 = assetsVerificationResult19.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet24 = assetsVerificationResult19.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = assetsVerificationResult19.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet26 = assetsVerificationResult19.getNonWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseSet9);
        org.junit.Assert.assertNotNull(assetResponseSet10);
        org.junit.Assert.assertNotNull(assetResponseArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(assetResponseArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(assetResponseSet18);
        org.junit.Assert.assertNotNull(assetResponseSet20);
        org.junit.Assert.assertNotNull(assetResponseSet21);
        org.junit.Assert.assertNotNull(assetResponseSet22);
        org.junit.Assert.assertNotNull(assetResponseSet23);
        org.junit.Assert.assertNotNull(assetResponseSet24);
        org.junit.Assert.assertNotNull(assetResponseSet25);
        org.junit.Assert.assertNotNull(assetResponseSet26);
    }

    @Test
    public void test05091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05091");
        com.soulgalore.crawler.util.StatusCode statusCode0 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT;
        int int1 = statusCode0.getCode();
        java.lang.String str2 = statusCode0.getFriendlyName();
        int int3 = statusCode0.getCode();
        java.lang.String str4 = statusCode0.getFriendlyName();
        java.lang.String str5 = statusCode0.getFriendlyName();
        int int6 = statusCode0.getCode();
        org.junit.Assert.assertTrue("'" + statusCode0 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT + "'", statusCode0.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 580 + "'", int1 == 580);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Response timed out" + "'", str2, "Response timed out");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 580 + "'", int3 == 580);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Response timed out" + "'", str4, "Response timed out");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Response timed out" + "'", str5, "Response timed out");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 580 + "'", int6 == 580);
    }

    @Test
    public void test05092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05092");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setMaxLevels((int) '4');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setMaxLevels(583);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setMaxLevels((int) (short) 10);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setNotOnPath("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setMaxLevels(308);
        java.lang.Class<?> wildcardClass15 = builder14.getClass();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test05093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05093");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "Response timed out");
        com.soulgalore.crawler.util.HeaderUtil headerUtil4 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil4.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) '4', strMap6, "com.soulgalore.crawler.http.socket.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 580, "com.soulgalore.crawler.auth", (long) (short) 1);
        org.jsoup.nodes.Document document13 = hTMLPageResponse12.getBody();
        java.lang.String str15 = hTMLPageResponse12.getHeaderValue("urls.txt");
        java.lang.String str16 = hTMLPageResponse12.getEncoding();
        java.lang.String str17 = hTMLPageResponse12.getResponseType();
        org.jsoup.nodes.Document document18 = hTMLPageResponse12.getBody();
        org.junit.Assert.assertNotNull(headerUtil4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(document13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "com.soulgalore.crawler.auth" + "'", str17, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document18);
    }

    @Test
    public void test05094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05094");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:", "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:32encoding:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
    }

    @Test
    public void test05095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05095");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str7 = crawlerConfiguration5.getRequestHeaders();
        boolean boolean9 = crawlerConfiguration5.equals((java.lang.Object) 0.0d);
        boolean boolean10 = crawlerConfiguration5.isVerifyUrls();
        java.lang.String str11 = crawlerConfiguration5.getStartUrl();
        java.lang.String str12 = crawlerConfiguration5.getStartUrl();
        int int13 = crawlerConfiguration5.getMaxLevels();
        java.lang.String str14 = crawlerConfiguration5.getOnlyOnPath();
        java.lang.String str15 = crawlerConfiguration5.getRequestHeaders();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test05096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05096");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setOnlyOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder12.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder20.setRequestHeaders("CrawlerURL url:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration23 = builder20.build();
        int int24 = crawlerConfiguration23.getMaxLevels();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(crawlerConfiguration23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test05097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05097");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = hTMLPageResponse12.getResponseHeaders();
        int int20 = hTMLPageResponse12.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str22 = hTMLPageResponse12.getEncoding();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 97 + "'", int20 == 97);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str22, "com.soulgalore.crawler.http.socket.timeout");
    }

    @Test
    public void test05098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05098");
        com.soulgalore.crawler.util.StatusCode statusCode0 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT;
        int int1 = statusCode0.getCode();
        java.lang.String str2 = statusCode0.getFriendlyName();
        java.lang.String str3 = statusCode0.getFriendlyName();
        int int4 = statusCode0.getCode();
        java.lang.String str5 = statusCode0.getFriendlyName();
        java.lang.String str6 = statusCode0.getFriendlyName();
        java.lang.String str7 = statusCode0.getFriendlyName();
        java.lang.String str8 = statusCode0.getFriendlyName();
        org.junit.Assert.assertTrue("'" + statusCode0 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT + "'", statusCode0.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 580 + "'", int1 == 580);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Response timed out" + "'", str2, "Response timed out");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Response timed out" + "'", str3, "Response timed out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 580 + "'", int4 == 580);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Response timed out" + "'", str5, "Response timed out");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Response timed out" + "'", str6, "Response timed out");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Response timed out" + "'", str7, "Response timed out");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Response timed out" + "'", str8, "Response timed out");
    }

    @Test
    public void test05099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05099");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet12 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet16 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = crawlerResult11.getNonWorkingUrls();
        java.lang.String str18 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet19 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet20 = crawlerResult11.getUrls();
        java.lang.String str21 = crawlerResult11.getTheStartPoint();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet22 = crawlerResult11.getVerifiedURLResponses();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet12);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet16);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet19);
        org.junit.Assert.assertNotNull(crawlerURLSet20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
    }

    @Test
    public void test05100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05100");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setRequestHeaders("CrawlerURL url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setRequestHeaders("CrawlerURL url:urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setNotOnPath("HTMLPageResponseurl:CrawlerURL url:com.soulgalore.crawler.authresponseCode:0encoding:CrawlerURL url:result.csv type:-1");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test05101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05101");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet16 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet17 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray23 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL22 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet24 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, crawlerURLArray23);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray27 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet28 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28, hTMLPageResponseArray27);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult30 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, hTMLPageResponseSet26, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet31 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet32 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet33 = crawlerResult30.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL37 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray38 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL37 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet39 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet39, crawlerURLArray38);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet41 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray42 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet43 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet43, hTMLPageResponseArray42);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult45 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet39, hTMLPageResponseSet41, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet43);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet46 = crawlerResult45.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet47 = crawlerResult45.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet48 = crawlerResult45.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet49 = crawlerResult45.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL53 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray54 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL53 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet55 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet55, crawlerURLArray54);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet57 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray58 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet59 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet59, hTMLPageResponseArray58);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult61 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet55, hTMLPageResponseSet57, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet59);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet62 = crawlerResult61.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet63 = crawlerResult61.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet64 = crawlerResult61.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet65 = crawlerResult61.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet66 = crawlerResult61.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet67 = crawlerResult61.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult68 = new com.soulgalore.crawler.core.CrawlerResult("Malformed url", crawlerURLSet33, hTMLPageResponseSet49, hTMLPageResponseSet67);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL72 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray73 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL72 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet74 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet74, crawlerURLArray73);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet76 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray77 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet78 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet78, hTMLPageResponseArray77);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult80 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet74, hTMLPageResponseSet76, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet78);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet81 = crawlerResult80.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult82 = new com.soulgalore.crawler.core.CrawlerResult("35", crawlerURLSet17, hTMLPageResponseSet49, hTMLPageResponseSet81);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet83 = crawlerResult82.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet84 = crawlerResult82.getVerifiedURLResponses();
        java.lang.String str85 = crawlerResult82.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet86 = crawlerResult82.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet87 = crawlerResult82.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet88 = crawlerResult82.getUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet16);
        org.junit.Assert.assertNotNull(crawlerURLSet17);
        org.junit.Assert.assertNotNull(crawlerURLArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet31);
        org.junit.Assert.assertNotNull(crawlerURLSet32);
        org.junit.Assert.assertNotNull(crawlerURLSet33);
        org.junit.Assert.assertNotNull(crawlerURLArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet46);
        org.junit.Assert.assertNotNull(crawlerURLSet47);
        org.junit.Assert.assertNotNull(crawlerURLSet48);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet49);
        org.junit.Assert.assertNotNull(crawlerURLArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet62);
        org.junit.Assert.assertNotNull(crawlerURLSet63);
        org.junit.Assert.assertNotNull(crawlerURLSet64);
        org.junit.Assert.assertNotNull(crawlerURLSet65);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet66);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet67);
        org.junit.Assert.assertNotNull(crawlerURLArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet81);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet83);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "35" + "'", str85, "35");
        org.junit.Assert.assertNotNull(crawlerURLSet86);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet87);
        org.junit.Assert.assertNotNull(crawlerURLSet88);
    }

    @Test
    public void test05102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05102");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(false);
        java.lang.Class<?> wildcardClass13 = builder12.getClass();
        boolean boolean14 = crawlerConfiguration5.equals((java.lang.Object) wildcardClass13);
        java.lang.String str15 = crawlerConfiguration5.getNotOnPath();
        int int16 = crawlerConfiguration5.getMaxLevels();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test05103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05103");
        com.soulgalore.crawler.util.HeaderUtil headerUtil0 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = headerUtil0.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap4 = headerUtil0.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil0.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = headerUtil0.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil0.createHeadersFromString("CrawlerURL url:10");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil0.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:0 type:");
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil0.createHeadersFromString("CrawlerURL url:Response timed out");
        java.util.Map<java.lang.String, java.lang.String> strMap16 = headerUtil0.createHeadersFromString("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
        org.junit.Assert.assertNotNull(headerUtil0);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
    }

    @Test
    public void test05104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05104");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:CrawlerURL url:-1", "Malformed url", (int) '4', (long) (short) 1);
        java.lang.String str5 = assetResponse4.getReferer();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Malformed url" + "'", str5, "Malformed url");
    }

    @Test
    public void test05105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05105");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder4.setOnlyOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("Wrong content type");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setNotOnPath("35");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setStartUrl("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:0 type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setOnlyOnPath("HTMLPageResponseurl:hi!responseCode:10encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration21 = builder18.build();
        java.lang.String str22 = crawlerConfiguration21.getStartUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(crawlerConfiguration21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:0 type:" + "'", str22, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:0 type:");
    }

    @Test
    public void test05106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05106");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        org.jsoup.nodes.Document document13 = hTMLPageResponse12.getBody();
        org.jsoup.nodes.Document document14 = hTMLPageResponse12.getBody();
        com.soulgalore.crawler.util.StatusCode statusCode15 = com.soulgalore.crawler.util.StatusCode.SC_MALFORMED_URI;
        boolean boolean16 = hTMLPageResponse12.equals((java.lang.Object) statusCode15);
        int int17 = statusCode15.getCode();
        java.lang.String str18 = statusCode15.getFriendlyName();
        java.lang.String str19 = statusCode15.getFriendlyName();
        java.lang.String str20 = statusCode15.getFriendlyName();
        java.lang.String str21 = statusCode15.getFriendlyName();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNull(document13);
        org.junit.Assert.assertNull(document14);
        org.junit.Assert.assertTrue("'" + statusCode15 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_MALFORMED_URI + "'", statusCode15.equals(com.soulgalore.crawler.util.StatusCode.SC_MALFORMED_URI));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 582 + "'", int17 == 582);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Malformed url" + "'", str18, "Malformed url");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Malformed url" + "'", str19, "Malformed url");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Malformed url" + "'", str20, "Malformed url");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Malformed url" + "'", str21, "Malformed url");
    }

    @Test
    public void test05107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05107");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.lang.String str2 = crawlerURL1.getHost();
        java.lang.String str3 = crawlerURL1.getReferer();
        java.lang.String str4 = crawlerURL1.getHost();
        java.lang.String str5 = crawlerURL1.getHost();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test05108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05108");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("CrawlerURL url:com.soulgalore.crawler.auth", "hi!", 0, (long) '#');
        java.lang.String str5 = assetResponse4.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("result.csv");
        java.lang.String str8 = crawlerURL7.getUrl();
        boolean boolean9 = assetResponse4.equals((java.lang.Object) crawlerURL7);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration14 = builder13.build();
        java.lang.String str15 = crawlerConfiguration14.getStartUrl();
        boolean boolean16 = crawlerConfiguration14.isVerifyUrls();
        java.lang.String str17 = crawlerConfiguration14.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = crawlerConfiguration14.getRequestHeadersMap();
        int int19 = crawlerConfiguration14.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = crawlerConfiguration14.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse26 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap20, "AssetResponseCallable url:HTMLPageResponseurl:hi!responseCode:52encoding:urls.txt type:CrawlerURL url:com.soulgalore.crawler.auth", "CrawlerURL url:35", 52L, "AssetResponseCallable url:-1", (long) 581);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str5, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "result.csv" + "'", str8, "result.csv");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(crawlerConfiguration14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test05109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05109");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) builder14);
        long long16 = hTMLPageResponse12.getFetchTime();
        java.lang.String str17 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder19.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder19.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder25.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setVerifyUrls(false);
        boolean boolean30 = crawlerURL18.equals((java.lang.Object) builder29);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration31 = builder29.build();
        java.lang.String str32 = crawlerConfiguration31.getStartUrl();
        java.lang.String str33 = crawlerConfiguration31.getOnlyOnPath();
        java.lang.String str34 = crawlerConfiguration31.getOnlyOnPath();
        int int35 = crawlerConfiguration31.getMaxLevels();
        java.lang.String str36 = crawlerConfiguration31.getRequestHeaders();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str17, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(crawlerConfiguration31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
    }

    @Test
    public void test05110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05110");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setOnlyOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder6.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder6.setStartUrl("CrawlerURL url:errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setMaxLevels((int) (short) 1);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder9.setVerifyUrls(false);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
    }

    @Test
    public void test05111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05111");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int19 = hTMLPageResponse18.getResponseCode();
        int int20 = hTMLPageResponse18.getResponseCode();
        java.lang.String str22 = hTMLPageResponse18.getHeaderValue("CrawlerURL url:Wrong content type");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test05112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05112");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:1", "32", (int) (byte) 1, (-1L));
        java.lang.String str5 = assetResponse4.getReferer();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "32" + "'", str5, "32");
    }

    @Test
    public void test05113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05113");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet12 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet16 = crawlerResult11.getNonWorkingUrls();
        java.lang.String str17 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet18 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet19 = crawlerResult11.getUrls();
        java.lang.String str20 = crawlerResult11.getTheStartPoint();
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet12);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet18);
        org.junit.Assert.assertNotNull(crawlerURLSet19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
    }

    @Test
    public void test05114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05114");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider((int) (short) 0, (int) (byte) 0, (int) '4', "CrawlerURL url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", "AssetResponseCallable url:result.csv");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"AssetResponseCallable url\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05115");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean5 = crawlerURL4.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean9 = crawlerURL8.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI13 = crawlerURL12.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray14 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4, crawlerURL8, crawlerURL12 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet15, crawlerURLArray14);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray17 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet18 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet18, hTMLPageResponseArray17);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL23 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray24 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL23 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet25 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet25, crawlerURLArray24);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet27 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray28 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet29 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet29, hTMLPageResponseArray28);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult31 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet25, hTMLPageResponseSet27, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet29);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult32 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet15, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet18, hTMLPageResponseSet27);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet33 = crawlerResult32.getUrls();
        java.lang.String str34 = crawlerResult32.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet35 = crawlerResult32.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet36 = crawlerResult32.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet37 = crawlerResult32.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet38 = crawlerResult32.getUrls();
        java.lang.String str39 = crawlerResult32.getTheStartPoint();
        java.lang.String str40 = crawlerResult32.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet41 = crawlerResult32.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL45 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray46 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL45 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet47 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet47, crawlerURLArray46);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet49 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray50 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet51 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet51, hTMLPageResponseArray50);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult53 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet47, hTMLPageResponseSet49, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet51);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet54 = crawlerResult53.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet55 = crawlerResult53.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet56 = crawlerResult53.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet57 = crawlerResult53.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet58 = crawlerResult53.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL62 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray63 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL62 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet64 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet64, crawlerURLArray63);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet66 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray67 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet68 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet68, hTMLPageResponseArray67);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult70 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet64, hTMLPageResponseSet66, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet68);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet71 = crawlerResult70.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet72 = crawlerResult70.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet73 = crawlerResult70.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet74 = crawlerResult70.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet75 = crawlerResult70.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet76 = crawlerResult70.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet77 = crawlerResult70.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet78 = crawlerResult70.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet79 = crawlerResult70.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet80 = crawlerResult70.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet81 = crawlerResult70.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult82 = new com.soulgalore.crawler.core.CrawlerResult("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", crawlerURLSet41, hTMLPageResponseSet58, hTMLPageResponseSet81);
        java.lang.String str83 = crawlerResult82.getTheStartPoint();
        java.lang.String str84 = crawlerResult82.getTheStartPoint();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(uRI13);
        org.junit.Assert.assertNotNull(crawlerURLArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "com.soulgalore.crawler.auth" + "'", str34, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet35);
        org.junit.Assert.assertNotNull(crawlerURLSet36);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet37);
        org.junit.Assert.assertNotNull(crawlerURLSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "com.soulgalore.crawler.auth" + "'", str39, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "com.soulgalore.crawler.auth" + "'", str40, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURLSet41);
        org.junit.Assert.assertNotNull(crawlerURLArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet54);
        org.junit.Assert.assertNotNull(crawlerURLSet55);
        org.junit.Assert.assertNotNull(crawlerURLSet56);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet57);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet58);
        org.junit.Assert.assertNotNull(crawlerURLArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet71);
        org.junit.Assert.assertNotNull(crawlerURLSet72);
        org.junit.Assert.assertNotNull(crawlerURLSet73);
        org.junit.Assert.assertNotNull(crawlerURLSet74);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet75);
        org.junit.Assert.assertNotNull(crawlerURLSet76);
        org.junit.Assert.assertNotNull(crawlerURLSet77);
        org.junit.Assert.assertNotNull(crawlerURLSet78);
        org.junit.Assert.assertNotNull(crawlerURLSet79);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet80);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet81);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1" + "'", str83, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1" + "'", str84, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
    }

    @Test
    public void test05116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05116");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        java.lang.String str9 = assetResponse4.getUrl();
        long long10 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setVerifyUrls(false);
        boolean boolean16 = assetResponse4.equals((java.lang.Object) builder13);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration22 = builder17.build();
        java.lang.String str23 = crawlerConfiguration22.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = crawlerConfiguration22.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = crawlerConfiguration22.getRequestHeadersMap();
        boolean boolean26 = assetResponse4.equals((java.lang.Object) strMap25);
        int int27 = assetResponse4.getResponseCode();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(crawlerConfiguration22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
    }

    @Test
    public void test05117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05117");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = hTMLPageResponse12.getResponseHeaders();
        long long20 = hTMLPageResponse12.getFetchTime();
        java.lang.String str21 = hTMLPageResponse12.toString();
        java.lang.String str22 = hTMLPageResponse12.getResponseType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 100L + "'", long20 == 100L);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str21, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
    }

    @Test
    public void test05118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05118");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        java.lang.String str15 = hTMLPageResponse12.toString();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        java.lang.String str17 = hTMLPageResponse12.toString();
        long long18 = hTMLPageResponse12.getFetchTime();
        java.lang.String str19 = hTMLPageResponse12.toString();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = hTMLPageResponse12.getResponseHeaders();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str15, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str17, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 100L + "'", long18 == 100L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str19, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNull(strMap20);
    }

    @Test
    public void test05119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05119");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.http.socket.timeout", "AssetResponseCallable url:");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher5 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration9 = builder8.build();
        java.lang.String str10 = crawlerConfiguration9.getOnlyOnPath();
        boolean boolean11 = crawlerConfiguration9.isVerifyUrls();
        int int12 = crawlerConfiguration9.getMaxLevels();
        int int13 = crawlerConfiguration9.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = crawlerConfiguration9.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = crawlerConfiguration9.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable17 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", assetFetcher5, strMap15, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (byte) 1, strMap15, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url", "AssetResponseCallable url:AssetResponseCallable url:Redirected to new domain", (long) 97, "10", 0L);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(crawlerConfiguration9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test05120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05120");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        int int19 = hTMLPageResponse12.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = hTMLPageResponse12.getPageUrl();
        java.lang.String str21 = crawlerURL20.getReferer();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL25 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "Response timed out");
        com.soulgalore.crawler.util.HeaderUtil headerUtil27 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = headerUtil27.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse35 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL25, (int) '4', strMap29, "com.soulgalore.crawler.http.socket.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 580, "com.soulgalore.crawler.auth", (long) (short) 1);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse41 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, (int) (byte) 1, strMap29, "AssetResponseCallable url:Malformed url", "urls.txt", (long) (byte) 10, "com.soulgalore.crawler.http.connection.timeout", (long) 97);
        java.lang.String str42 = crawlerURL20.getUrl();
        java.lang.String str43 = crawlerURL20.toString();
        java.lang.String str44 = crawlerURL20.getReferer();
        java.lang.String str45 = crawlerURL20.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 97 + "'", int19 == 97);
        org.junit.Assert.assertNotNull(crawlerURL20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "urls.txt" + "'", str21, "urls.txt");
        org.junit.Assert.assertNotNull(headerUtil27);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "com.soulgalore.crawler.auth" + "'", str42, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str43, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "urls.txt" + "'", str44, "urls.txt");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str45, "CrawlerURL url:com.soulgalore.crawler.auth");
    }

    @Test
    public void test05121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05121");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setNotOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setMaxLevels((int) (byte) -1);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("CrawlerURL url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setRequestHeaders("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:32encoding:hi! type:97");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test05122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05122");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider(308, (int) (short) 10, (int) (byte) 100, "CrawlerURL url:Wrong content type", "CrawlerURL url:result.csv");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:CrawlerURL url:Wrong content type");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05123");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getOnlyOnPath();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        int int6 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str8 = crawlerConfiguration3.getStartUrl();
        com.soulgalore.crawler.guice.ExecutorServiceProvider executorServiceProvider10 = new com.soulgalore.crawler.guice.ExecutorServiceProvider((int) (byte) 100);
        boolean boolean11 = crawlerConfiguration3.equals((java.lang.Object) executorServiceProvider10);
        java.lang.String str12 = crawlerConfiguration3.getStartUrl();
        com.soulgalore.crawler.guice.ExecutorServiceProvider executorServiceProvider14 = new com.soulgalore.crawler.guice.ExecutorServiceProvider(582);
        java.util.concurrent.ExecutorService executorService15 = executorServiceProvider14.get();
        java.util.concurrent.ExecutorService executorService16 = executorServiceProvider14.get();
        boolean boolean17 = crawlerConfiguration3.equals((java.lang.Object) executorServiceProvider14);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder18.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder18.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder24.setMaxLevels((int) '#');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder26.setVerifyUrls(false);
        boolean boolean29 = crawlerConfiguration3.equals((java.lang.Object) builder28);
        boolean boolean30 = crawlerConfiguration3.isVerifyUrls();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(executorService15);
        org.junit.Assert.assertNotNull(executorService16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test05124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05124");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        int int5 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str6 = crawlerConfiguration3.getOnlyOnPath();
        boolean boolean7 = crawlerConfiguration3.isVerifyUrls();
        int int8 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str9 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str10 = crawlerConfiguration3.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test05125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05125");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str7 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str8 = crawlerConfiguration5.getStartUrl();
        boolean boolean9 = crawlerConfiguration5.isVerifyUrls();
        int int10 = crawlerConfiguration5.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("errorassets.csv");
        boolean boolean13 = crawlerConfiguration5.equals((java.lang.Object) crawlerURL12);
        java.lang.String str14 = crawlerConfiguration5.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean18 = crawlerURL17.isWrongSyntax();
        java.lang.String str19 = crawlerURL17.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse27 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL17, (int) 'a', strMap21, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str28 = hTMLPageResponse27.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean30 = hTMLPageResponse27.equals((java.lang.Object) builder29);
        long long31 = hTMLPageResponse27.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL34 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean35 = crawlerURL34.isWrongSyntax();
        java.lang.String str36 = crawlerURL34.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse44 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL34, (int) 'a', strMap38, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str45 = hTMLPageResponse44.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder46 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean47 = hTMLPageResponse44.equals((java.lang.Object) builder46);
        long long48 = hTMLPageResponse44.getFetchTime();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder49 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder51 = builder49.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder53 = builder49.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder55 = builder49.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration56 = builder49.build();
        java.util.Map<java.lang.String, java.lang.String> strMap57 = crawlerConfiguration56.getRequestHeadersMap();
        boolean boolean58 = hTMLPageResponse44.equals((java.lang.Object) crawlerConfiguration56);
        boolean boolean59 = hTMLPageResponse27.equals((java.lang.Object) boolean58);
        java.lang.String str60 = hTMLPageResponse27.toString();
        boolean boolean61 = crawlerConfiguration5.equals((java.lang.Object) hTMLPageResponse27);
        java.lang.String str62 = hTMLPageResponse27.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL63 = hTMLPageResponse27.getPageUrl();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str65 = hTMLPageResponse27.getHeaderValue("HTMLPageResponseurl:hi!responseCode:52encoding:urls.txt type:CrawlerURL url:com.soulgalore.crawler.auth");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "urls.txt" + "'", str19, "urls.txt");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "com.soulgalore.crawler.auth" + "'", str28, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 100L + "'", long31 == 100L);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "urls.txt" + "'", str36, "urls.txt");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "com.soulgalore.crawler.auth" + "'", str45, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 100L + "'", long48 == 100L);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(crawlerConfiguration56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str60, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str62, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL63);
    }

    @Test
    public void test05126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05126");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setStartUrl("32");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder16.setNotOnPath("Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder16.setOnlyOnPath("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder16.setOnlyOnPath("AssetResponseCallable url:Unknown error");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
    }

    @Test
    public void test05127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05127");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder0.build();
        java.lang.Object obj8 = null;
        boolean boolean9 = crawlerConfiguration7.equals(obj8);
        java.lang.String str10 = crawlerConfiguration7.getStartUrl();
        java.lang.String str11 = crawlerConfiguration7.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean15 = crawlerURL14.isWrongSyntax();
        java.lang.String str16 = crawlerURL14.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse24 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL14, (int) 'a', strMap18, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str25 = hTMLPageResponse24.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean27 = hTMLPageResponse24.equals((java.lang.Object) builder26);
        long long28 = hTMLPageResponse24.getFetchTime();
        java.lang.String str29 = hTMLPageResponse24.getUrl();
        boolean boolean30 = crawlerConfiguration7.equals((java.lang.Object) str29);
        java.lang.String str31 = crawlerConfiguration7.getRequestHeaders();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "urls.txt" + "'", str11, "urls.txt");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "urls.txt" + "'", str16, "urls.txt");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "com.soulgalore.crawler.auth" + "'", str25, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 100L + "'", long28 == 100L);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "com.soulgalore.crawler.auth" + "'", str29, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
    }

    @Test
    public void test05128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05128");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult6.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray9 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, assetResponseArray9);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray12 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13, assetResponseArray12);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult15 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult16 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet8, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet17 = null;
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult18 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, assetResponseSet17);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet19 = assetsVerificationResult18.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray20 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet21 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21, assetResponseArray20);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray23 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet24 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet24, assetResponseArray23);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult26 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet24);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray27 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet28 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet28, assetResponseArray27);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray30 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet31 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet31, assetResponseArray30);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult33 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet28, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet31);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet34 = assetsVerificationResult33.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult35 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet24, assetResponseSet34);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet36 = assetsVerificationResult35.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray37 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet38 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet38, assetResponseArray37);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray40 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet41, assetResponseArray40);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult43 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet38, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet41);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet44 = assetsVerificationResult43.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet45 = assetsVerificationResult43.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray46 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet47 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet47, assetResponseArray46);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray49 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet50 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet50, assetResponseArray49);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult52 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet47, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet50);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet53 = assetsVerificationResult52.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet54 = assetsVerificationResult52.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray55 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet56 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet56, assetResponseArray55);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray58 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet59 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet59, assetResponseArray58);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult61 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet56, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet59);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult62 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet54, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet56);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray63 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet64 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet64, assetResponseArray63);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray66 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet67 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet67, assetResponseArray66);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult69 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet64, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet67);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet70 = assetsVerificationResult69.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult71 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet54, assetResponseSet70);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult72 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet45, assetResponseSet54);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult73 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet36, assetResponseSet45);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet74 = assetsVerificationResult73.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult75 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet19, assetResponseSet74);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet76 = assetsVerificationResult75.getNonWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(assetResponseArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(assetResponseSet19);
        org.junit.Assert.assertNotNull(assetResponseArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(assetResponseArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(assetResponseArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(assetResponseArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(assetResponseSet34);
        org.junit.Assert.assertNotNull(assetResponseSet36);
        org.junit.Assert.assertNotNull(assetResponseArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(assetResponseArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(assetResponseSet44);
        org.junit.Assert.assertNotNull(assetResponseSet45);
        org.junit.Assert.assertNotNull(assetResponseArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(assetResponseArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(assetResponseSet53);
        org.junit.Assert.assertNotNull(assetResponseSet54);
        org.junit.Assert.assertNotNull(assetResponseArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(assetResponseArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(assetResponseArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(assetResponseArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(assetResponseSet70);
        org.junit.Assert.assertNotNull(assetResponseSet74);
        org.junit.Assert.assertNotNull(assetResponseSet76);
    }

    @Test
    public void test05129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05129");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("Wrong content type");
        java.net.URI uRI2 = crawlerURL1.getUri();
        boolean boolean3 = crawlerURL1.isWrongSyntax();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test05130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05130");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher32 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = builder33.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = builder33.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = builder33.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration40 = builder33.build();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = crawlerConfiguration40.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable43 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("CrawlerURL url:hi!", assetFetcher32, strMap41, "com.soulgalore.crawler.proxy");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse49 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 580, strMap41, "CrawlerURL url:urls.txt", "97", (long) (byte) -1, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 0);
        boolean boolean50 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL53 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI54 = crawlerURL53.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder56 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder58 = builder56.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration59 = builder58.build();
        java.lang.String str60 = crawlerConfiguration59.getStartUrl();
        int int61 = crawlerConfiguration59.getMaxLevels();
        int int62 = crawlerConfiguration59.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap63 = crawlerConfiguration59.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse69 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL53, (int) (short) 10, strMap63, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        int int70 = hTMLPageResponse69.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap71 = hTMLPageResponse69.getResponseHeaders();
        java.lang.String str73 = hTMLPageResponse69.getHeaderValue("");
        int int74 = hTMLPageResponse69.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = hTMLPageResponse69.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder76 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder78 = builder76.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration79 = builder78.build();
        java.lang.String str80 = crawlerConfiguration79.getOnlyOnPath();
        boolean boolean81 = crawlerConfiguration79.isVerifyUrls();
        int int82 = crawlerConfiguration79.getMaxLevels();
        java.lang.String str83 = crawlerConfiguration79.getNotOnPath();
        java.lang.String str84 = crawlerConfiguration79.getRequestHeaders();
        java.lang.String str85 = crawlerConfiguration79.getOnlyOnPath();
        boolean boolean86 = crawlerConfiguration79.isVerifyUrls();
        int int87 = crawlerConfiguration79.getMaxLevels();
        java.lang.String str88 = crawlerConfiguration79.getOnlyOnPath();
        boolean boolean89 = hTMLPageResponse69.equals((java.lang.Object) crawlerConfiguration79);
        boolean boolean90 = crawlerURL2.equals((java.lang.Object) hTMLPageResponse69);
        java.lang.String str91 = hTMLPageResponse69.toString();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(crawlerConfiguration40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(uRI54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(crawlerConfiguration59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 10 + "'", int70 == 10);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 10 + "'", int74 == 10);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(crawlerConfiguration79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout" + "'", str91, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout");
    }

    @Test
    public void test05131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05131");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet16 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet17 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray23 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL22 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet24 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, crawlerURLArray23);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray27 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet28 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28, hTMLPageResponseArray27);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult30 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, hTMLPageResponseSet26, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet31 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet32 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet33 = crawlerResult30.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL37 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray38 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL37 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet39 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet39, crawlerURLArray38);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet41 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray42 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet43 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet43, hTMLPageResponseArray42);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult45 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet39, hTMLPageResponseSet41, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet43);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet46 = crawlerResult45.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet47 = crawlerResult45.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet48 = crawlerResult45.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet49 = crawlerResult45.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL53 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray54 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL53 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet55 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet55, crawlerURLArray54);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet57 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray58 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet59 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet59, hTMLPageResponseArray58);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult61 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet55, hTMLPageResponseSet57, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet59);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet62 = crawlerResult61.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet63 = crawlerResult61.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet64 = crawlerResult61.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet65 = crawlerResult61.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet66 = crawlerResult61.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet67 = crawlerResult61.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult68 = new com.soulgalore.crawler.core.CrawlerResult("Malformed url", crawlerURLSet33, hTMLPageResponseSet49, hTMLPageResponseSet67);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL72 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray73 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL72 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet74 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet74, crawlerURLArray73);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet76 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray77 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet78 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet78, hTMLPageResponseArray77);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult80 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet74, hTMLPageResponseSet76, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet78);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet81 = crawlerResult80.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult82 = new com.soulgalore.crawler.core.CrawlerResult("35", crawlerURLSet17, hTMLPageResponseSet49, hTMLPageResponseSet81);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet83 = crawlerResult82.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet84 = crawlerResult82.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet85 = crawlerResult82.getNonWorkingUrls();
        java.lang.Class<?> wildcardClass86 = crawlerResult82.getClass();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet16);
        org.junit.Assert.assertNotNull(crawlerURLSet17);
        org.junit.Assert.assertNotNull(crawlerURLArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet31);
        org.junit.Assert.assertNotNull(crawlerURLSet32);
        org.junit.Assert.assertNotNull(crawlerURLSet33);
        org.junit.Assert.assertNotNull(crawlerURLArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet46);
        org.junit.Assert.assertNotNull(crawlerURLSet47);
        org.junit.Assert.assertNotNull(crawlerURLSet48);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet49);
        org.junit.Assert.assertNotNull(crawlerURLArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet62);
        org.junit.Assert.assertNotNull(crawlerURLSet63);
        org.junit.Assert.assertNotNull(crawlerURLSet64);
        org.junit.Assert.assertNotNull(crawlerURLSet65);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet66);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet67);
        org.junit.Assert.assertNotNull(crawlerURLArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet81);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet83);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet84);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test05132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05132");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:Wrong content type");
        java.lang.Class<?> wildcardClass2 = crawlerURL1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test05133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05133");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider((int) (byte) 1, 1, (int) (byte) 1, "AssetResponseCallable url:urls.txt", "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:AssetResponseCallable url:urls.txt");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05134");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider((int) (short) 0, 1, (-1), "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", "CrawlerURL url:CrawlerURL url:errorassets.csv");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"AssetResponseCallable url\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05135");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str7 = crawlerConfiguration5.getRequestHeaders();
        boolean boolean9 = crawlerConfiguration5.equals((java.lang.Object) 0.0d);
        java.lang.String str10 = crawlerConfiguration5.getOnlyOnPath();
        int int11 = crawlerConfiguration5.getMaxLevels();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray12 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13, assetResponseArray12);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray15 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet16 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet16, assetResponseArray15);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult18 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet16);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet19 = assetsVerificationResult18.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = assetsVerificationResult18.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray21 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, assetResponseArray21);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray24 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet25, assetResponseArray24);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult27 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet25);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult28 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet20, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray29 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet30 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30, assetResponseArray29);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray32 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet33 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33, assetResponseArray32);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult35 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet36 = assetsVerificationResult35.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult37 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet20, assetResponseSet36);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet38 = assetsVerificationResult37.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet39 = assetsVerificationResult37.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = assetsVerificationResult37.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet41 = assetsVerificationResult37.getNonWorkingAssets();
        boolean boolean42 = crawlerConfiguration5.equals((java.lang.Object) assetResponseSet41);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = crawlerConfiguration5.getRequestHeadersMap();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(assetResponseArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(assetResponseArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(assetResponseSet19);
        org.junit.Assert.assertNotNull(assetResponseSet20);
        org.junit.Assert.assertNotNull(assetResponseArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(assetResponseArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(assetResponseArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(assetResponseArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(assetResponseSet36);
        org.junit.Assert.assertNotNull(assetResponseSet38);
        org.junit.Assert.assertNotNull(assetResponseSet39);
        org.junit.Assert.assertNotNull(assetResponseSet40);
        org.junit.Assert.assertNotNull(assetResponseSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMap43);
    }

    @Test
    public void test05136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05136");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean14 = assetResponse4.equals((java.lang.Object) 100L);
        java.lang.String str15 = assetResponse4.getReferer();
        long long16 = assetResponse4.getFetchTime();
        java.lang.String str17 = assetResponse4.getReferer();
        java.lang.String str18 = assetResponse4.getReferer();
        java.lang.String str19 = assetResponse4.getReferer();
        com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider25 = new com.soulgalore.crawler.guice.HttpClientProvider(100, 580, (int) (short) 100, "", "CrawlerURL url:errorassets.csv");
        org.apache.http.client.HttpClient httpClient26 = httpClientProvider25.get();
        org.apache.http.client.HttpClient httpClient27 = httpClientProvider25.get();
        boolean boolean28 = assetResponse4.equals((java.lang.Object) httpClient27);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "100" + "'", str15, "100");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "100" + "'", str17, "100");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "100" + "'", str18, "100");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "100" + "'", str19, "100");
        org.junit.Assert.assertNotNull(httpClient26);
        org.junit.Assert.assertNotNull(httpClient27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test05137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05137");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setMaxLevels(10);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setNotOnPath("result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setOnlyOnPath("HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setRequestHeaders("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setMaxLevels((int) (byte) 100);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test05138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05138");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider((int) ' ', (int) 'a', 10, "AssetResponseCallable url:CrawlerURL url:100", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:AssetResponseCallable url:CrawlerURL url:100");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05139");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = crawlerURL2.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean17 = crawlerURL16.isWrongSyntax();
        java.lang.String str18 = crawlerURL16.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse26 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL16, (int) 'a', strMap20, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str27 = hTMLPageResponse26.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = hTMLPageResponse26.getResponseHeaders();
        java.lang.String str29 = hTMLPageResponse26.getEncoding();
        java.lang.String str30 = hTMLPageResponse26.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder31.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = builder31.setMaxLevels((int) (short) 0);
        boolean boolean36 = hTMLPageResponse26.equals((java.lang.Object) builder35);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder35.setVerifyUrls(false);
        boolean boolean39 = crawlerURL2.equals((java.lang.Object) builder35);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration40 = builder35.build();
        boolean boolean41 = crawlerConfiguration40.isVerifyUrls();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder44 = builder42.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration45 = builder44.build();
        java.lang.String str46 = crawlerConfiguration45.getStartUrl();
        java.lang.String str47 = crawlerConfiguration45.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = crawlerConfiguration45.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = crawlerConfiguration45.getRequestHeadersMap();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL53 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray54 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL53 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet55 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet55, crawlerURLArray54);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet57 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray58 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet59 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet59, hTMLPageResponseArray58);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult61 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet55, hTMLPageResponseSet57, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet59);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet62 = crawlerResult61.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet63 = crawlerResult61.getUrls();
        boolean boolean64 = crawlerConfiguration45.equals((java.lang.Object) crawlerURLSet63);
        java.lang.String str65 = crawlerConfiguration45.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder66 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder68 = builder66.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder70 = builder66.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder72 = builder70.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder74 = builder72.setOnlyOnPath("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder76 = builder72.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration77 = builder72.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder79 = builder72.setOnlyOnPath("CrawlerURL url:com.soulgalore.crawler.auth");
        boolean boolean80 = crawlerConfiguration45.equals((java.lang.Object) "CrawlerURL url:com.soulgalore.crawler.auth");
        boolean boolean81 = crawlerConfiguration45.isVerifyUrls();
        boolean boolean82 = crawlerConfiguration40.equals((java.lang.Object) crawlerConfiguration45);
        boolean boolean83 = crawlerConfiguration45.isVerifyUrls();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "urls.txt" + "'", str18, "urls.txt");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str27, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str29, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str30, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(crawlerConfiguration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(crawlerConfiguration45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(crawlerURLArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet62);
        org.junit.Assert.assertNotNull(crawlerURLSet63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(crawlerConfiguration77);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test05140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05140");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) builder14);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder14.setMaxLevels((int) (byte) -1);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder14.setNotOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setMaxLevels((int) '4');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder19.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setRequestHeaders("AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder25.setOnlyOnPath("CrawlerURL url:35");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setRequestHeaders("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
    }

    @Test
    public void test05141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05141");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.lang.String str5 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder8.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration19 = builder18.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration20 = builder18.build();
        boolean boolean21 = crawlerConfiguration3.equals((java.lang.Object) crawlerConfiguration20);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI25 = crawlerURL24.getUri();
        java.lang.String str26 = crawlerURL24.getReferer();
        java.lang.String str27 = crawlerURL24.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder29.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration32 = builder31.build();
        java.lang.String str33 = crawlerConfiguration32.getStartUrl();
        int int34 = crawlerConfiguration32.getMaxLevels();
        int int35 = crawlerConfiguration32.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = crawlerConfiguration32.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse42 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL24, (int) (byte) -1, strMap36, "100", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) (short) -1, "com.soulgalore.crawler.nrofhttpthreads", 0L);
        boolean boolean43 = crawlerConfiguration20.equals((java.lang.Object) "100");
        java.lang.String str44 = crawlerConfiguration20.getOnlyOnPath();
        java.lang.String str45 = crawlerConfiguration20.getOnlyOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(crawlerConfiguration19);
        org.junit.Assert.assertNotNull(crawlerConfiguration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(uRI25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "urls.txt" + "'", str26, "urls.txt");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "urls.txt" + "'", str27, "urls.txt");
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(crawlerConfiguration32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
    }

    @Test
    public void test05142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05142");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        int int5 = crawlerConfiguration3.getMaxLevels();
        int int6 = crawlerConfiguration3.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str8 = crawlerConfiguration3.getStartUrl();
        java.lang.String str9 = crawlerConfiguration3.getStartUrl();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray10 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet11 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet11, assetResponseArray10);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray13 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet14 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet14, assetResponseArray13);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult16 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet11, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet14);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray17 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, assetResponseArray17);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray20 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet21 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21, assetResponseArray20);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult23 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet24 = assetsVerificationResult23.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult25 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet14, assetResponseSet24);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet26 = assetsVerificationResult25.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet27 = assetsVerificationResult25.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet28 = assetsVerificationResult25.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = assetsVerificationResult25.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray30 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet31 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet31, assetResponseArray30);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray33 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet34 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet34, assetResponseArray33);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult36 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet31, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet34);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet37 = assetsVerificationResult36.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet38 = assetsVerificationResult36.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet39 = assetsVerificationResult36.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult40 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet29, assetResponseSet39);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet41 = assetsVerificationResult40.getNonWorkingAssets();
        boolean boolean42 = crawlerConfiguration3.equals((java.lang.Object) assetResponseSet41);
        boolean boolean43 = crawlerConfiguration3.isVerifyUrls();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(assetResponseArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(assetResponseArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(assetResponseArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(assetResponseArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(assetResponseSet24);
        org.junit.Assert.assertNotNull(assetResponseSet26);
        org.junit.Assert.assertNotNull(assetResponseSet27);
        org.junit.Assert.assertNotNull(assetResponseSet28);
        org.junit.Assert.assertNotNull(assetResponseSet29);
        org.junit.Assert.assertNotNull(assetResponseArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(assetResponseArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(assetResponseSet37);
        org.junit.Assert.assertNotNull(assetResponseSet38);
        org.junit.Assert.assertNotNull(assetResponseSet39);
        org.junit.Assert.assertNotNull(assetResponseSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test05143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05143");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setOnlyOnPath("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setNotOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder6.setStartUrl("10");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setOnlyOnPath("errorassets.csv");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test05144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05144");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder4.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder4.setVerifyUrls(true);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNotNull(builder9);
    }

    @Test
    public void test05145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05145");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean14 = assetResponse4.equals((java.lang.Object) 100L);
        java.lang.String str15 = assetResponse4.getReferer();
        java.lang.String str16 = assetResponse4.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder17.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder23.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder29.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder29.setVerifyUrls(false);
        boolean boolean34 = assetResponse4.equals((java.lang.Object) builder29);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration35 = builder29.build();
        java.lang.String str36 = crawlerConfiguration35.getOnlyOnPath();
        java.lang.String str37 = crawlerConfiguration35.getNotOnPath();
        com.soulgalore.crawler.util.HeaderUtil headerUtil38 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = headerUtil38.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap42 = headerUtil38.createHeadersFromString("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.util.Map<java.lang.String, java.lang.String> strMap44 = headerUtil38.createHeadersFromString("CrawlerURL url:10");
        boolean boolean45 = crawlerConfiguration35.equals((java.lang.Object) strMap44);
        java.lang.String str46 = crawlerConfiguration35.getOnlyOnPath();
        java.lang.String str47 = crawlerConfiguration35.getStartUrl();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "100" + "'", str15, "100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "100" + "'", str16, "100");
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(crawlerConfiguration35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "urls.txt" + "'", str37, "urls.txt");
        org.junit.Assert.assertNotNull(headerUtil38);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
    }

    @Test
    public void test05146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05146");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder0.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder0.setStartUrl("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder0.setRequestHeaders("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder0.setRequestHeaders("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder0.setNotOnPath("CrawlerURL url:errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder0.setOnlyOnPath("CrawlerURL url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
    }

    @Test
    public void test05147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05147");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("HTMLPageResponseurl:hi!responseCode:10encoding:result.csv type:hi!", "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:32encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:AssetResponseCallable url:-1", 97, (long) (byte) 0);
    }

    @Test
    public void test05148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05148");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("result.csv", "Malformed url");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse8 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int9 = assetResponse8.getResponseCode();
        int int10 = assetResponse8.getResponseCode();
        long long11 = assetResponse8.getFetchTime();
        long long12 = assetResponse8.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse17 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean18 = assetResponse8.equals((java.lang.Object) 100L);
        java.lang.String str19 = assetResponse8.getReferer();
        java.lang.String str20 = assetResponse8.getReferer();
        boolean boolean22 = assetResponse8.equals((java.lang.Object) "com.soulgalore.crawler.proxy");
        java.lang.String str23 = assetResponse8.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL26 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean27 = crawlerURL26.isWrongSyntax();
        java.lang.String str28 = crawlerURL26.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse36 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL26, (int) 'a', strMap30, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str37 = hTMLPageResponse36.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = hTMLPageResponse36.getResponseHeaders();
        java.lang.String str39 = hTMLPageResponse36.getEncoding();
        java.lang.String str40 = hTMLPageResponse36.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL41 = hTMLPageResponse36.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL42 = hTMLPageResponse36.getPageUrl();
        int int43 = hTMLPageResponse36.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL44 = hTMLPageResponse36.getPageUrl();
        boolean boolean45 = crawlerURL44.isWrongSyntax();
        boolean boolean46 = assetResponse8.equals((java.lang.Object) boolean45);
        boolean boolean47 = crawlerURL2.equals((java.lang.Object) assetResponse8);
        java.lang.String str48 = crawlerURL2.getReferer();
        java.lang.String str49 = crawlerURL2.getReferer();
        boolean boolean50 = crawlerURL2.isWrongSyntax();
        java.lang.String str51 = crawlerURL2.getHost();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "100" + "'", str19, "100");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "100" + "'", str20, "100");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "urls.txt" + "'", str28, "urls.txt");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str37, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str39, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str40, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL41);
        org.junit.Assert.assertNotNull(crawlerURL42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 97 + "'", int43 == 97);
        org.junit.Assert.assertNotNull(crawlerURL44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Malformed url" + "'", str48, "Malformed url");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Malformed url" + "'", str49, "Malformed url");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(str51);
    }

    @Test
    public void test05149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05149");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        java.lang.String str15 = hTMLPageResponse12.toString();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        java.lang.String str17 = hTMLPageResponse12.getResponseType();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse22 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int23 = assetResponse22.getResponseCode();
        int int24 = assetResponse22.getResponseCode();
        long long25 = assetResponse22.getFetchTime();
        long long26 = assetResponse22.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse31 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean32 = assetResponse22.equals((java.lang.Object) 100L);
        java.lang.String str33 = assetResponse22.getReferer();
        java.lang.String str34 = assetResponse22.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = builder35.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = builder35.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder41 = builder35.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder43 = builder41.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder45 = builder41.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder47 = builder45.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder49 = builder47.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder51 = builder47.setVerifyUrls(false);
        boolean boolean52 = assetResponse22.equals((java.lang.Object) builder47);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder54 = builder47.setRequestHeaders("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder56 = builder47.setVerifyUrls(true);
        boolean boolean57 = hTMLPageResponse12.equals((java.lang.Object) builder47);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder59 = builder47.setMaxLevels(581);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str15, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "100" + "'", str33, "100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "100" + "'", str34, "100");
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(builder59);
    }

    @Test
    public void test05150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05150");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.lang.String str14 = hTMLPageResponse12.getResponseType();
        java.lang.String str15 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean21 = crawlerURL20.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder23.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration28 = builder23.build();
        java.lang.String str29 = crawlerConfiguration28.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = crawlerConfiguration28.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse36 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, (-1), strMap30, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL40 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI41 = crawlerURL40.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL45 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean46 = crawlerURL45.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder48 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder50 = builder48.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder52 = builder48.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration53 = builder48.build();
        java.lang.String str54 = crawlerConfiguration53.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = crawlerConfiguration53.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse61 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL45, (-1), strMap55, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse67 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL40, 100, strMap55, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse73 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, (int) (byte) 10, strMap55, "100", "errorassets.csv", (long) (byte) 100, "", (long) (short) 100);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse79 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL16, 100, strMap55, "com.soulgalore.crawler.nrofhttpthreads", "errorassets.csv", (long) 97, "result.csv", (long) (byte) -1);
        boolean boolean80 = crawlerURL16.isWrongSyntax();
        java.lang.String str81 = crawlerURL16.getUrl();
        java.net.URI uRI82 = crawlerURL16.getUri();
        java.lang.String str83 = crawlerURL16.getReferer();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.auth" + "'", str15, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(crawlerConfiguration28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(uRI41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(crawlerConfiguration53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "com.soulgalore.crawler.auth" + "'", str81, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(uRI82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "urls.txt" + "'", str83, "urls.txt");
    }

    @Test
    public void test05151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05151");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        boolean boolean22 = hTMLPageResponse12.equals((java.lang.Object) builder21);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder21.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder21.setMaxLevels((int) (short) 10);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder21.setStartUrl("AssetResponseCallable url:CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder21.setRequestHeaders("CrawlerURL url:Wrong content type");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
    }

    @Test
    public void test05152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05152");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse6 = new com.soulgalore.crawler.core.assets.AssetResponse("Response timed out", "0", 580, (long) (byte) -1);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI13 = crawlerURL12.getUri();
        java.lang.String str14 = crawlerURL12.getReferer();
        java.lang.String str15 = crawlerURL12.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration20 = builder19.build();
        java.lang.String str21 = crawlerConfiguration20.getStartUrl();
        int int22 = crawlerConfiguration20.getMaxLevels();
        int int23 = crawlerConfiguration20.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = crawlerConfiguration20.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse30 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL12, (int) (byte) -1, strMap24, "100", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) (short) -1, "com.soulgalore.crawler.nrofhttpthreads", 0L);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse36 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL8, 580, strMap24, "10", "HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", 580L, "0", (long) 0);
        boolean boolean37 = assetResponse6.equals((java.lang.Object) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder38.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = builder38.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration43 = builder38.build();
        java.lang.String str44 = crawlerConfiguration43.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = crawlerConfiguration43.getRequestHeadersMap();
        boolean boolean46 = crawlerConfiguration43.isVerifyUrls();
        boolean boolean47 = assetResponse6.equals((java.lang.Object) crawlerConfiguration43);
        java.lang.String str48 = crawlerConfiguration43.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = crawlerConfiguration43.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = crawlerConfiguration43.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable52 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:32encoding:hi! type:97", assetFetcher1, strMap50, "AssetResponseCallable url:AssetResponseCallable url:errorassets.csv");
        org.junit.Assert.assertNull(uRI13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "urls.txt" + "'", str14, "urls.txt");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "urls.txt" + "'", str15, "urls.txt");
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(crawlerConfiguration20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(crawlerConfiguration43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap50);
    }

    @Test
    public void test05153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05153");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider((int) '#', 0, 1, "AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:10", "AssetResponseCallable url:AssetResponseCallable url:Wrong content type");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"AssetResponseCallable url\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05154");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean4 = crawlerURL3.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL11 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI12 = crawlerURL11.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray13 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3, crawlerURL7, crawlerURL11 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet14, crawlerURLArray13);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray16 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet17, hTMLPageResponseArray16);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray23 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL22 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet24 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, crawlerURLArray23);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray27 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet28 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28, hTMLPageResponseArray27);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult30 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, hTMLPageResponseSet26, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult31 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet14, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet17, hTMLPageResponseSet26);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet32 = crawlerResult31.getUrls();
        java.lang.String str33 = crawlerResult31.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet34 = crawlerResult31.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet35 = crawlerResult31.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet36 = crawlerResult31.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet37 = crawlerResult31.getUrls();
        java.lang.String str38 = crawlerResult31.getTheStartPoint();
        java.lang.String str39 = crawlerResult31.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet40 = crawlerResult31.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet41 = crawlerResult31.getUrls();
        java.lang.String str42 = crawlerResult31.getTheStartPoint();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(uRI12);
        org.junit.Assert.assertNotNull(crawlerURLArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "com.soulgalore.crawler.auth" + "'", str33, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet34);
        org.junit.Assert.assertNotNull(crawlerURLSet35);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet36);
        org.junit.Assert.assertNotNull(crawlerURLSet37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "com.soulgalore.crawler.auth" + "'", str38, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "com.soulgalore.crawler.auth" + "'", str39, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet40);
        org.junit.Assert.assertNotNull(crawlerURLSet41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "com.soulgalore.crawler.auth" + "'", str42, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test05155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05155");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI5 = crawlerURL4.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL9 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean10 = crawlerURL9.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration17 = builder12.build();
        java.lang.String str18 = crawlerConfiguration17.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = crawlerConfiguration17.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse25 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL9, (-1), strMap19, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse31 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL4, 100, strMap19, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.lang.String str32 = hTMLPageResponse31.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = hTMLPageResponse31.getPageUrl();
        java.lang.String str34 = crawlerURL33.getUrl();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher37 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL40 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "Response timed out");
        com.soulgalore.crawler.util.HeaderUtil headerUtil42 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = headerUtil42.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse50 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL40, (int) '4', strMap44, "com.soulgalore.crawler.http.socket.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 580, "com.soulgalore.crawler.auth", (long) (short) 1);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable52 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:Malformed url", assetFetcher37, strMap44, "0");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse58 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL33, (int) (byte) 0, strMap44, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:0 type:", 100L, "", 32L);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable60 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("CrawlerURL url:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", assetFetcher1, strMap44, "CrawlerURL url:AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:10");
        java.lang.Class<?> wildcardClass61 = strMap44.getClass();
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(crawlerConfiguration17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "com.soulgalore.crawler.auth" + "'", str32, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "com.soulgalore.crawler.auth" + "'", str34, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(headerUtil42);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test05156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05156");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setStartUrl("CrawlerURL url:urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setNotOnPath("AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setNotOnPath("CrawlerURL url:CrawlerURL url:CrawlerURL url:errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setStartUrl("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setMaxLevels((int) '#');
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test05157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05157");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("52");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setRequestHeaders("AssetResponseCallable url:Wrong content type");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder0.setNotOnPath("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder0.setStartUrl("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test05158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05158");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        java.lang.String str6 = assetResponse4.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder7.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder7.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration14 = builder7.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder7.setRequestHeaders("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setNotOnPath("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setNotOnPath("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        boolean boolean21 = assetResponse4.equals((java.lang.Object) "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(crawlerConfiguration14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test05159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05159");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:Wrong content type", "CrawlerURL url:result.csv");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray6 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet7, assetResponseArray6);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult9 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet7);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = assetsVerificationResult9.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet11 = assetsVerificationResult9.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = assetsVerificationResult9.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray13 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet14 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet14, assetResponseArray13);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray16 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet17 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet17, assetResponseArray16);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult19 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet14, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet17);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = assetsVerificationResult19.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet21 = assetsVerificationResult19.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = assetsVerificationResult19.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult23 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet12, assetResponseSet22);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet24 = assetsVerificationResult23.getNonWorkingAssets();
        boolean boolean25 = crawlerURL2.equals((java.lang.Object) assetResponseSet24);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray26 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet27 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet27, assetResponseArray26);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray29 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet30 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30, assetResponseArray29);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult32 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet27, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet33 = assetsVerificationResult32.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet34 = assetsVerificationResult32.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet35 = assetsVerificationResult32.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray36 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet37 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37, assetResponseArray36);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray39 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40, assetResponseArray39);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult42 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray43 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet44 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet44, assetResponseArray43);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray46 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet47 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet47, assetResponseArray46);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult49 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet44, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet47);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet50 = assetsVerificationResult49.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult51 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40, assetResponseSet50);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet52 = assetsVerificationResult51.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet53 = assetsVerificationResult51.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet54 = assetsVerificationResult51.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet55 = assetsVerificationResult51.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray56 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet57 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet57, assetResponseArray56);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray59 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet60 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet60, assetResponseArray59);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult62 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet57, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet60);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet63 = assetsVerificationResult62.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet64 = assetsVerificationResult62.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet65 = assetsVerificationResult62.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult66 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet55, assetResponseSet65);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult67 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet35, assetResponseSet55);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet68 = assetsVerificationResult67.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult69 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet24, assetResponseSet68);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet70 = assetsVerificationResult69.getWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(assetResponseSet10);
        org.junit.Assert.assertNotNull(assetResponseSet11);
        org.junit.Assert.assertNotNull(assetResponseSet12);
        org.junit.Assert.assertNotNull(assetResponseArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(assetResponseArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(assetResponseSet20);
        org.junit.Assert.assertNotNull(assetResponseSet21);
        org.junit.Assert.assertNotNull(assetResponseSet22);
        org.junit.Assert.assertNotNull(assetResponseSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(assetResponseArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(assetResponseArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(assetResponseSet33);
        org.junit.Assert.assertNotNull(assetResponseSet34);
        org.junit.Assert.assertNotNull(assetResponseSet35);
        org.junit.Assert.assertNotNull(assetResponseArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(assetResponseArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(assetResponseArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(assetResponseArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(assetResponseSet50);
        org.junit.Assert.assertNotNull(assetResponseSet52);
        org.junit.Assert.assertNotNull(assetResponseSet53);
        org.junit.Assert.assertNotNull(assetResponseSet54);
        org.junit.Assert.assertNotNull(assetResponseSet55);
        org.junit.Assert.assertNotNull(assetResponseArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(assetResponseArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(assetResponseSet63);
        org.junit.Assert.assertNotNull(assetResponseSet64);
        org.junit.Assert.assertNotNull(assetResponseSet65);
        org.junit.Assert.assertNotNull(assetResponseSet68);
        org.junit.Assert.assertNotNull(assetResponseSet70);
    }

    @Test
    public void test05160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05160");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet18 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray23 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL22 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet24 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, crawlerURLArray23);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray27 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet28 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28, hTMLPageResponseArray27);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult30 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, hTMLPageResponseSet26, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28);
        java.lang.String str31 = crawlerResult30.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet32 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet33 = crawlerResult30.getNonWorkingUrls();
        java.lang.String str34 = crawlerResult30.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet35 = crawlerResult30.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray40 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL39 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, crawlerURLArray40);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet43 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray44 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet45 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45, hTMLPageResponseArray44);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult47 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, hTMLPageResponseSet43, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45);
        java.lang.String str48 = crawlerResult47.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet49 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet50 = crawlerResult47.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult51 = new com.soulgalore.crawler.core.CrawlerResult("CrawlerURL url:urls.txt", crawlerURLSet18, hTMLPageResponseSet35, hTMLPageResponseSet50);
        java.lang.String str52 = crawlerResult51.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet53 = crawlerResult51.getUrls();
        java.lang.String str54 = crawlerResult51.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet55 = crawlerResult51.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet56 = crawlerResult51.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet57 = crawlerResult51.getNonWorkingUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet17);
        org.junit.Assert.assertNotNull(crawlerURLSet18);
        org.junit.Assert.assertNotNull(crawlerURLArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet32);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet35);
        org.junit.Assert.assertNotNull(crawlerURLArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet49);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "CrawlerURL url:urls.txt" + "'", str52, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertNotNull(crawlerURLSet53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "CrawlerURL url:urls.txt" + "'", str54, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet55);
        org.junit.Assert.assertNotNull(crawlerURLSet56);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet57);
    }

    @Test
    public void test05161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05161");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.proxy");
        java.lang.String str2 = crawlerURL1.getReferer();
        java.lang.String str3 = crawlerURL1.getUrl();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "com.soulgalore.crawler.proxy" + "'", str3, "com.soulgalore.crawler.proxy");
    }

    @Test
    public void test05162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05162");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.lang.String str5 = crawlerURL2.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder9.build();
        java.lang.String str11 = crawlerConfiguration10.getStartUrl();
        int int12 = crawlerConfiguration10.getMaxLevels();
        int int13 = crawlerConfiguration10.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse20 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (byte) -1, strMap14, "100", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) (short) -1, "com.soulgalore.crawler.nrofhttpthreads", 0L);
        java.lang.String str21 = crawlerURL2.getUrl();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher24 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher26 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher28 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil29 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = headerUtil29.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable33 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher28, strMap31, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable35 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("com.soulgalore.crawler.auth", assetFetcher26, strMap31, "urls.txt");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable37 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("CrawlerURL url:10", assetFetcher24, strMap31, "errorurls.txt");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse43 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (byte) 1, strMap31, "HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (long) 10, "Malformed url", (long) 10);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = hTMLPageResponse43.getResponseHeaders();
        java.lang.String str45 = hTMLPageResponse43.toString();
        java.lang.String str46 = hTMLPageResponse43.getEncoding();
        org.jsoup.nodes.Document document47 = hTMLPageResponse43.getBody();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = hTMLPageResponse43.getResponseHeaders();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "urls.txt" + "'", str5, "urls.txt");
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "com.soulgalore.crawler.auth" + "'", str21, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(headerUtil29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url" + "'", str45, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str46, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(document47);
        org.junit.Assert.assertNotNull(strMap48);
    }

    @Test
    public void test05163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05163");
        com.soulgalore.crawler.util.StatusCode statusCode0 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT;
        int int1 = statusCode0.getCode();
        int int2 = statusCode0.getCode();
        java.lang.String str3 = statusCode0.getFriendlyName();
        java.lang.String str4 = statusCode0.getFriendlyName();
        int int5 = statusCode0.getCode();
        java.lang.String str6 = statusCode0.getFriendlyName();
        java.lang.String str7 = statusCode0.getFriendlyName();
        java.lang.String str8 = statusCode0.getFriendlyName();
        java.lang.String str9 = statusCode0.getFriendlyName();
        java.lang.String str10 = statusCode0.getFriendlyName();
        org.junit.Assert.assertTrue("'" + statusCode0 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT + "'", statusCode0.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 580 + "'", int1 == 580);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 580 + "'", int2 == 580);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Response timed out" + "'", str3, "Response timed out");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Response timed out" + "'", str4, "Response timed out");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 580 + "'", int5 == 580);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Response timed out" + "'", str6, "Response timed out");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Response timed out" + "'", str7, "Response timed out");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Response timed out" + "'", str8, "Response timed out");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Response timed out" + "'", str9, "Response timed out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Response timed out" + "'", str10, "Response timed out");
    }

    @Test
    public void test05164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05164");
        com.soulgalore.crawler.util.StatusCode statusCode0 = com.soulgalore.crawler.util.StatusCode.SC_WRONG_CONTENT_TYPE;
        java.lang.String str1 = statusCode0.getFriendlyName();
        int int2 = statusCode0.getCode();
        java.lang.String str3 = statusCode0.getFriendlyName();
        java.lang.String str4 = statusCode0.getFriendlyName();
        org.junit.Assert.assertTrue("'" + statusCode0 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_WRONG_CONTENT_TYPE + "'", statusCode0.equals(com.soulgalore.crawler.util.StatusCode.SC_WRONG_CONTENT_TYPE));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Wrong content type" + "'", str1, "Wrong content type");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 583 + "'", int2 == 583);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Wrong content type" + "'", str3, "Wrong content type");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Wrong content type" + "'", str4, "Wrong content type");
    }

    @Test
    public void test05165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05165");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "errorurls.txt", 97, (-1L));
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("errorassets.csv");
        java.lang.String str7 = crawlerURL6.getHost();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL11 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean12 = crawlerURL11.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL15 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean16 = crawlerURL15.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI20 = crawlerURL19.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray21 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL11, crawlerURL15, crawlerURL19 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet22, crawlerURLArray21);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray24 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet25 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet25, hTMLPageResponseArray24);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL30 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray31 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL30 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet32 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet32, crawlerURLArray31);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet34 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray35 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet36 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet36, hTMLPageResponseArray35);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult38 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet32, hTMLPageResponseSet34, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet36);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult39 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet22, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet25, hTMLPageResponseSet34);
        boolean boolean40 = crawlerURL6.equals((java.lang.Object) "com.soulgalore.crawler.auth");
        boolean boolean41 = assetResponse4.equals((java.lang.Object) boolean40);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL44 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean45 = crawlerURL44.isWrongSyntax();
        java.lang.String str46 = crawlerURL44.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse54 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL44, (int) 'a', strMap48, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str55 = hTMLPageResponse54.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder56 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean57 = hTMLPageResponse54.equals((java.lang.Object) builder56);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder59 = builder56.setMaxLevels((int) (byte) -1);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder61 = builder56.setNotOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration62 = builder56.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder64 = builder56.setNotOnPath("CrawlerURL url:com.soulgalore.crawler.auth");
        boolean boolean65 = assetResponse4.equals((java.lang.Object) builder64);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(uRI20);
        org.junit.Assert.assertNotNull(crawlerURLArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "urls.txt" + "'", str46, "urls.txt");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "com.soulgalore.crawler.auth" + "'", str55, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(crawlerConfiguration62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test05166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05166");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads", "");
    }

    @Test
    public void test05167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05167");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) "CrawlerURL url:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean19 = crawlerURL18.isWrongSyntax();
        java.lang.String str20 = crawlerURL18.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse28 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL18, (int) 'a', strMap22, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str29 = crawlerURL18.getUrl();
        boolean boolean30 = hTMLPageResponse12.equals((java.lang.Object) str29);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL31 = hTMLPageResponse12.getPageUrl();
        java.lang.String str32 = crawlerURL31.toString();
        java.lang.String str33 = crawlerURL31.toString();
        boolean boolean34 = crawlerURL31.isWrongSyntax();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "urls.txt" + "'", str20, "urls.txt");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "com.soulgalore.crawler.auth" + "'", str29, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(crawlerURL31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str32, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str33, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test05168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05168");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setMaxLevels((int) '4');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setMaxLevels(583);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setOnlyOnPath("Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("AssetResponseCallable url:Redirected to new domain");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setOnlyOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setOnlyOnPath("com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test05169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05169");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        int int19 = hTMLPageResponse12.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = hTMLPageResponse12.getPageUrl();
        java.lang.String str21 = crawlerURL20.getReferer();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL25 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "Response timed out");
        com.soulgalore.crawler.util.HeaderUtil headerUtil27 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = headerUtil27.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse35 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL25, (int) '4', strMap29, "com.soulgalore.crawler.http.socket.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 580, "com.soulgalore.crawler.auth", (long) (short) 1);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse41 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, (int) (byte) 1, strMap29, "AssetResponseCallable url:Malformed url", "urls.txt", (long) (byte) 10, "com.soulgalore.crawler.http.connection.timeout", (long) 97);
        java.lang.String str42 = crawlerURL20.getUrl();
        java.net.URI uRI43 = crawlerURL20.getUri();
        java.lang.String str44 = crawlerURL20.getHost();
        java.lang.String str45 = crawlerURL20.getReferer();
        java.net.URI uRI46 = crawlerURL20.getUri();
        java.lang.String str47 = crawlerURL20.getReferer();
        java.lang.String str48 = crawlerURL20.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 97 + "'", int19 == 97);
        org.junit.Assert.assertNotNull(crawlerURL20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "urls.txt" + "'", str21, "urls.txt");
        org.junit.Assert.assertNotNull(headerUtil27);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "com.soulgalore.crawler.auth" + "'", str42, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(uRI43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "urls.txt" + "'", str45, "urls.txt");
        org.junit.Assert.assertNull(uRI46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "urls.txt" + "'", str47, "urls.txt");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str48, "CrawlerURL url:com.soulgalore.crawler.auth");
    }

    @Test
    public void test05170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05170");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:responseCode:308encoding:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt type:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
    }

    @Test
    public void test05171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05171");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder0.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder0.setRequestHeaders("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setNotOnPath("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder9.setMaxLevels(582);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder9.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder15.setMaxLevels(100);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder15.setOnlyOnPath("AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
    }

    @Test
    public void test05172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05172");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("errorurls.txt", "CrawlerURL url:AssetResponseCallable url:100", 0, (long) 581);
        long long5 = assetResponse4.getFetchTime();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 581L + "'", long5 == 581L);
    }

    @Test
    public void test05173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05173");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setStartUrl("-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setNotOnPath("10");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setOnlyOnPath("-1");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test05174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05174");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder3 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder3.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration6 = builder5.build();
        java.lang.String str7 = crawlerConfiguration6.getStartUrl();
        int int8 = crawlerConfiguration6.getMaxLevels();
        int int9 = crawlerConfiguration6.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean13 = crawlerURL12.isWrongSyntax();
        java.lang.String str14 = crawlerURL12.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse22 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL12, (int) 'a', strMap16, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str23 = hTMLPageResponse22.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = hTMLPageResponse22.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = hTMLPageResponse22.getResponseHeaders();
        java.lang.String str26 = hTMLPageResponse22.getUrl();
        org.jsoup.nodes.Document document27 = hTMLPageResponse22.getBody();
        boolean boolean28 = crawlerConfiguration6.equals((java.lang.Object) hTMLPageResponse22);
        boolean boolean29 = crawlerURL1.equals((java.lang.Object) hTMLPageResponse22);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL30 = hTMLPageResponse22.getPageUrl();
        int int31 = hTMLPageResponse22.getResponseCode();
        java.lang.String str32 = hTMLPageResponse22.toString();
        org.jsoup.nodes.Document document33 = hTMLPageResponse22.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL34 = hTMLPageResponse22.getPageUrl();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(crawlerConfiguration6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "urls.txt" + "'", str14, "urls.txt");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str23, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "com.soulgalore.crawler.auth" + "'", str26, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(crawlerURL30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 97 + "'", int31 == 97);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str32, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNull(document33);
        org.junit.Assert.assertNotNull(crawlerURL34);
    }

    @Test
    public void test05175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05175");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("", "com.soulgalore.crawler.http.socket.timeout");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.util.HeaderUtil headerUtil5 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = headerUtil5.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap9 = headerUtil5.createHeadersFromString("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.util.Map<java.lang.String, java.lang.String> strMap11 = headerUtil5.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse17 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) '#', strMap11, "AssetResponseCallable url:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads type:-1", (long) '#', "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", 580L);
        java.lang.String str18 = crawlerURL2.toString();
        java.lang.String str19 = crawlerURL2.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(headerUtil5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "CrawlerURL url:" + "'", str18, "CrawlerURL url:");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "CrawlerURL url:" + "'", str19, "CrawlerURL url:");
    }

    @Test
    public void test05176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05176");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setStartUrl("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder18.setStartUrl("-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder22.setMaxLevels((int) ' ');
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
    }

    @Test
    public void test05177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05177");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:hi!", "AssetResponseCallable url:Unknown error");
        java.lang.String str3 = crawlerURL2.getHost();
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test05178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05178");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getOnlyOnPath();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        int int6 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str8 = crawlerConfiguration3.getRequestHeaders();
        java.lang.String str9 = crawlerConfiguration3.getStartUrl();
        java.lang.String str10 = crawlerConfiguration3.getRequestHeaders();
        java.lang.String str11 = crawlerConfiguration3.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str13 = crawlerConfiguration3.getOnlyOnPath();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean17 = crawlerURL16.isWrongSyntax();
        java.lang.String str18 = crawlerURL16.getReferer();
        java.lang.String str19 = crawlerURL16.getHost();
        java.lang.String str20 = crawlerURL16.getUrl();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray21 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, assetResponseArray21);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray24 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet25, assetResponseArray24);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult27 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet25);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet28 = assetsVerificationResult27.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = assetsVerificationResult27.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray30 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet31 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet31, assetResponseArray30);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray33 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet34 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet34, assetResponseArray33);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult36 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet31, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet34);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult37 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet29, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet31);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray38 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet39 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet39, assetResponseArray38);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray41 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet42 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet42, assetResponseArray41);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult44 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet39, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet42);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet45 = assetsVerificationResult44.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult46 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet29, assetResponseSet45);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet47 = assetsVerificationResult46.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet48 = assetsVerificationResult46.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet49 = assetsVerificationResult46.getWorkingAssets();
        boolean boolean50 = crawlerURL16.equals((java.lang.Object) assetsVerificationResult46);
        java.net.URI uRI51 = crawlerURL16.getUri();
        com.soulgalore.crawler.guice.ExecutorServiceProvider executorServiceProvider53 = new com.soulgalore.crawler.guice.ExecutorServiceProvider(582);
        java.util.concurrent.ExecutorService executorService54 = executorServiceProvider53.get();
        boolean boolean55 = crawlerURL16.equals((java.lang.Object) executorServiceProvider53);
        boolean boolean56 = crawlerConfiguration3.equals((java.lang.Object) crawlerURL16);
        java.lang.String str57 = crawlerURL16.toString();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "urls.txt" + "'", str18, "urls.txt");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "com.soulgalore.crawler.auth" + "'", str20, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(assetResponseArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(assetResponseArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(assetResponseSet28);
        org.junit.Assert.assertNotNull(assetResponseSet29);
        org.junit.Assert.assertNotNull(assetResponseArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(assetResponseArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(assetResponseArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(assetResponseArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(assetResponseSet45);
        org.junit.Assert.assertNotNull(assetResponseSet47);
        org.junit.Assert.assertNotNull(assetResponseSet48);
        org.junit.Assert.assertNotNull(assetResponseSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(uRI51);
        org.junit.Assert.assertNotNull(executorService54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str57, "CrawlerURL url:com.soulgalore.crawler.auth");
    }

    @Test
    public void test05179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05179");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        java.lang.String str15 = hTMLPageResponse12.getResponseType();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = new com.soulgalore.crawler.core.CrawlerURL("1");
        boolean boolean18 = hTMLPageResponse12.equals((java.lang.Object) "1");
        java.lang.String str19 = hTMLPageResponse12.getUrl();
        java.lang.String str20 = hTMLPageResponse12.getUrl();
        java.lang.String str21 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = hTMLPageResponse12.getPageUrl();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = hTMLPageResponse12.getHeaderValue("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "com.soulgalore.crawler.auth" + "'", str19, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "com.soulgalore.crawler.auth" + "'", str20, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str21, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL22);
    }

    @Test
    public void test05180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05180");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult6.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray9 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, assetResponseArray9);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray12 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13, assetResponseArray12);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult15 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet16 = assetsVerificationResult15.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet17 = assetsVerificationResult15.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray18 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet19 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet19, assetResponseArray18);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray21 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, assetResponseArray21);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult24 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet19, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult25 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet17, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet19);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray26 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet27 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet27, assetResponseArray26);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray29 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet30 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30, assetResponseArray29);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult32 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet27, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet33 = assetsVerificationResult32.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult34 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet17, assetResponseSet33);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult35 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet8, assetResponseSet17);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet36 = assetsVerificationResult35.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet37 = assetsVerificationResult35.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet38 = assetsVerificationResult35.getWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(assetResponseArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(assetResponseSet16);
        org.junit.Assert.assertNotNull(assetResponseSet17);
        org.junit.Assert.assertNotNull(assetResponseArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(assetResponseArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(assetResponseArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(assetResponseArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(assetResponseSet33);
        org.junit.Assert.assertNotNull(assetResponseSet36);
        org.junit.Assert.assertNotNull(assetResponseSet37);
        org.junit.Assert.assertNotNull(assetResponseSet38);
    }

    @Test
    public void test05181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05181");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        int int5 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str6 = crawlerConfiguration3.getOnlyOnPath();
        boolean boolean7 = crawlerConfiguration3.isVerifyUrls();
        int int8 = crawlerConfiguration3.getMaxLevels();
        int int9 = crawlerConfiguration3.getMaxLevels();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test05182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05182");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration5.getRequestHeadersMap();
        boolean boolean8 = crawlerConfiguration5.isVerifyUrls();
        java.lang.String str9 = crawlerConfiguration5.getStartUrl();
        boolean boolean10 = crawlerConfiguration5.isVerifyUrls();
        java.lang.String str11 = crawlerConfiguration5.getOnlyOnPath();
        boolean boolean12 = crawlerConfiguration5.isVerifyUrls();
        int int13 = crawlerConfiguration5.getMaxLevels();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test05183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05183");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.lang.String str5 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder8.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration19 = builder18.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration20 = builder18.build();
        boolean boolean21 = crawlerConfiguration3.equals((java.lang.Object) crawlerConfiguration20);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder22.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder22.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration27 = builder22.build();
        int int28 = crawlerConfiguration27.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil29 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean30 = crawlerConfiguration27.equals((java.lang.Object) headerUtil29);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = headerUtil29.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap34 = headerUtil29.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.util.Map<java.lang.String, java.lang.String> strMap36 = headerUtil29.createHeadersFromString("AssetResponseCallable url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap38 = headerUtil29.createHeadersFromString("CrawlerURL url:urls.txt");
        java.util.Map<java.lang.String, java.lang.String> strMap40 = headerUtil29.createHeadersFromString("AssetResponseCallable url:100");
        boolean boolean41 = crawlerConfiguration20.equals((java.lang.Object) headerUtil29);
        int int42 = crawlerConfiguration20.getMaxLevels();
        java.lang.String str43 = crawlerConfiguration20.getStartUrl();
        int int44 = crawlerConfiguration20.getMaxLevels();
        java.lang.String str45 = crawlerConfiguration20.getStartUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(crawlerConfiguration19);
        org.junit.Assert.assertNotNull(crawlerConfiguration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(crawlerConfiguration27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(headerUtil29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str43, "com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str45, "com.soulgalore.crawler.http.connection.timeout");
    }

    @Test
    public void test05184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05184");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher3 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI6 = crawlerURL5.getUri();
        java.lang.String str7 = crawlerURL5.getHost();
        boolean boolean8 = crawlerURL5.isWrongSyntax();
        java.lang.String str9 = crawlerURL5.getReferer();
        java.net.URI uRI10 = crawlerURL5.getUri();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher13 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean17 = crawlerURL16.isWrongSyntax();
        java.lang.String str18 = crawlerURL16.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse26 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL16, (int) 'a', strMap20, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int27 = hTMLPageResponse26.getResponseCode();
        int int28 = hTMLPageResponse26.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = hTMLPageResponse26.getPageUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder31.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration34 = builder33.build();
        java.lang.String str35 = crawlerConfiguration34.getOnlyOnPath();
        boolean boolean36 = crawlerConfiguration34.isVerifyUrls();
        int int37 = crawlerConfiguration34.getMaxLevels();
        int int38 = crawlerConfiguration34.getMaxLevels();
        boolean boolean39 = crawlerConfiguration34.isVerifyUrls();
        boolean boolean40 = crawlerConfiguration34.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = crawlerConfiguration34.getRequestHeadersMap();
        java.lang.String str42 = crawlerConfiguration34.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = crawlerConfiguration34.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse49 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, 0, strMap43, "result.csv", "CrawlerURL url:CrawlerURL url:errorassets.csv", (long) 580, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url", 0L);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable51 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", assetFetcher13, strMap43, "com.soulgalore.crawler.http.socket.timeout");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse57 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (int) (byte) 10, strMap43, "AssetResponseCallable url:97", "AssetResponseCallable url:CrawlerURL url:10", (long) 308, "1", (long) 308);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable59 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("CrawlerURL url:AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", assetFetcher3, strMap43, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable61 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", assetFetcher1, strMap43, "HTMLPageResponseurl:hi!responseCode:10encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.assets.AssetResponse assetResponse62 = assetResponseCallable61.call();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(uRI6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(uRI10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "urls.txt" + "'", str18, "urls.txt");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 97 + "'", int27 == 97);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 97 + "'", int28 == 97);
        org.junit.Assert.assertNotNull(crawlerURL29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(crawlerConfiguration34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(strMap43);
    }

    @Test
    public void test05185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05185");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", "AssetResponseCallable url:", 583, (long) 52);
        java.lang.String str5 = assetResponse4.getReferer();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AssetResponseCallable url:" + "'", str5, "AssetResponseCallable url:");
    }

    @Test
    public void test05186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05186");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.net.URI uRI2 = crawlerURL1.getUri();
        org.junit.Assert.assertNull(uRI2);
    }

    @Test
    public void test05187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05187");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:CrawlerURL url:urls.txt", "com.soulgalore.crawler.http.connection.timeout");
    }

    @Test
    public void test05188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05188");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider((int) (byte) 0, 308, 583, "AssetResponseCallable url:Unknown error", "CrawlerURL url:-1");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:AssetResponseCallable url:Unknown error");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05189");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = null;
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray11 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, assetResponseArray11);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray14 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet15 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15, assetResponseArray14);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult17 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = assetsVerificationResult17.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray19 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet20, assetResponseArray19);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray22 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet23 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23, assetResponseArray22);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult25 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet20, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult26 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet18, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult27 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet10, assetResponseSet18);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult28 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet9, assetResponseSet18);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = assetsVerificationResult28.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet30 = assetsVerificationResult28.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet31 = assetsVerificationResult28.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet32 = assetsVerificationResult28.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray33 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet34 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet34, assetResponseArray33);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray36 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet37 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37, assetResponseArray36);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult39 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet34, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = assetsVerificationResult39.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet41 = assetsVerificationResult39.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet42 = assetsVerificationResult39.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult43 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet32, assetResponseSet42);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet44 = assetsVerificationResult43.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet45 = assetsVerificationResult43.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet46 = assetsVerificationResult43.getWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseSet9);
        org.junit.Assert.assertNotNull(assetResponseArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(assetResponseArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(assetResponseSet18);
        org.junit.Assert.assertNotNull(assetResponseArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(assetResponseArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(assetResponseSet29);
        org.junit.Assert.assertNotNull(assetResponseSet30);
        org.junit.Assert.assertNotNull(assetResponseSet31);
        org.junit.Assert.assertNotNull(assetResponseSet32);
        org.junit.Assert.assertNotNull(assetResponseArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(assetResponseArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(assetResponseSet40);
        org.junit.Assert.assertNotNull(assetResponseSet41);
        org.junit.Assert.assertNotNull(assetResponseSet42);
        org.junit.Assert.assertNotNull(assetResponseSet44);
        org.junit.Assert.assertNotNull(assetResponseSet45);
        org.junit.Assert.assertNotNull(assetResponseSet46);
    }

    @Test
    public void test05190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05190");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        boolean boolean3 = crawlerURL1.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean7 = crawlerURL6.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder9.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration14 = builder9.build();
        java.lang.String str15 = crawlerConfiguration14.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = crawlerConfiguration14.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse22 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL6, (-1), strMap16, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int23 = hTMLPageResponse22.getResponseCode();
        long long24 = hTMLPageResponse22.getFetchTime();
        long long25 = hTMLPageResponse22.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL28 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI29 = crawlerURL28.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean34 = crawlerURL33.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder36.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder36.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration41 = builder36.build();
        java.lang.String str42 = crawlerConfiguration41.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = crawlerConfiguration41.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse49 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL33, (-1), strMap43, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse55 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL28, 100, strMap43, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        boolean boolean56 = hTMLPageResponse22.equals((java.lang.Object) 100);
        org.jsoup.nodes.Document document57 = hTMLPageResponse22.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL60 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "com.soulgalore.crawler.auth");
        java.lang.String str61 = crawlerURL60.toString();
        boolean boolean62 = hTMLPageResponse22.equals((java.lang.Object) str61);
        boolean boolean63 = crawlerURL1.equals((java.lang.Object) hTMLPageResponse22);
        long long64 = hTMLPageResponse22.getFetchTime();
        org.jsoup.nodes.Document document65 = hTMLPageResponse22.getBody();
        java.lang.String str66 = hTMLPageResponse22.getUrl();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(crawlerConfiguration14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 580L + "'", long24 == 580L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 580L + "'", long25 == 580L);
        org.junit.Assert.assertNull(uRI29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(crawlerConfiguration41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(document57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "CrawlerURL url:urls.txt" + "'", str61, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 580L + "'", long64 == 580L);
        org.junit.Assert.assertNull(document65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "com.soulgalore.crawler.auth" + "'", str66, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test05191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05191");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = hTMLPageResponse12.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(crawlerURL17);
    }

    @Test
    public void test05192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05192");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder4.setOnlyOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setMaxLevels((int) (byte) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder12.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder12.setOnlyOnPath("com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder12.setMaxLevels(100);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setOnlyOnPath("");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
    }

    @Test
    public void test05193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05193");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setOnlyOnPath("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setStartUrl("com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration13 = builder12.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder12.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration16 = builder15.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder15.setMaxLevels((int) (short) 10);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setNotOnPath("AssetResponseCallable url:AssetResponseCallable url:Unknown error");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(crawlerConfiguration13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(crawlerConfiguration16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test05194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05194");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.lang.String str30 = crawlerURL2.getUrl();
        java.lang.String str31 = crawlerURL2.getReferer();
        boolean boolean32 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = builder33.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = builder33.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = builder33.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration40 = builder39.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = builder39.setOnlyOnPath("Wrong content type");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder44 = builder39.setNotOnPath("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder46 = builder44.setRequestHeaders("AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder48 = builder46.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder50 = builder46.setMaxLevels((int) '#');
        boolean boolean51 = crawlerURL2.equals((java.lang.Object) '#');
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "com.soulgalore.crawler.auth" + "'", str30, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "urls.txt" + "'", str31, "urls.txt");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(crawlerConfiguration40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test05195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05195");
        com.soulgalore.crawler.util.HeaderUtil headerUtil0 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = headerUtil0.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap4 = headerUtil0.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil0.createHeadersFromString("AssetResponseCallable url:100");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = headerUtil0.createHeadersFromString("CrawlerURL url:AssetResponseCallable url:Redirected to new domain");
        org.junit.Assert.assertNotNull(headerUtil0);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
    }

    @Test
    public void test05196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05196");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.lang.String str13 = crawlerResult12.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet14 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray21 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL20 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet22, crawlerURLArray21);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet24 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray25 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet26, hTMLPageResponseArray25);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult28 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet22, hTMLPageResponseSet24, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet26);
        java.lang.String str29 = crawlerResult28.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet30 = crawlerResult28.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet31 = crawlerResult28.getNonWorkingUrls();
        java.lang.String str32 = crawlerResult28.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet33 = crawlerResult28.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL37 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray38 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL37 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet39 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet39, crawlerURLArray38);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet41 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray42 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet43 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet43, hTMLPageResponseArray42);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult45 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet39, hTMLPageResponseSet41, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet43);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet46 = crawlerResult45.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet47 = crawlerResult45.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet48 = crawlerResult45.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet49 = crawlerResult45.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet50 = crawlerResult45.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet51 = crawlerResult45.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL55 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray56 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL55 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet57 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet57, crawlerURLArray56);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet59 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray60 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet61 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet61, hTMLPageResponseArray60);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult63 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet57, hTMLPageResponseSet59, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet61);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet64 = crawlerResult63.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet65 = crawlerResult63.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult66 = new com.soulgalore.crawler.core.CrawlerResult("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", crawlerURLSet33, hTMLPageResponseSet51, hTMLPageResponseSet65);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL70 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray71 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL70 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet72 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet72, crawlerURLArray71);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet74 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray75 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet76 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet76, hTMLPageResponseArray75);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult78 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet72, hTMLPageResponseSet74, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet76);
        java.lang.String str79 = crawlerResult78.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet80 = crawlerResult78.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet81 = crawlerResult78.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult82 = new com.soulgalore.crawler.core.CrawlerResult("HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", crawlerURLSet15, hTMLPageResponseSet51, hTMLPageResponseSet81);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet83 = crawlerResult82.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet84 = crawlerResult82.getVerifiedURLResponses();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(crawlerURLArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet30);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet33);
        org.junit.Assert.assertNotNull(crawlerURLArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet46);
        org.junit.Assert.assertNotNull(crawlerURLSet47);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet48);
        org.junit.Assert.assertNotNull(crawlerURLSet49);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet50);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet51);
        org.junit.Assert.assertNotNull(crawlerURLArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet64);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet65);
        org.junit.Assert.assertNotNull(crawlerURLArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet80);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet81);
        org.junit.Assert.assertNotNull(crawlerURLSet83);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet84);
    }

    @Test
    public void test05197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05197");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setStartUrl("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder0.setNotOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder0.setNotOnPath("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder0.setOnlyOnPath("AssetResponseCallable url:AssetResponseCallable url:97");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test05198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05198");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        java.lang.String str20 = hTMLPageResponse18.getHeaderValue("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = hTMLPageResponse18.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = hTMLPageResponse18.getPageUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder23.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder23.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder29.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder29.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration34 = builder33.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration35 = builder33.build();
        boolean boolean36 = hTMLPageResponse18.equals((java.lang.Object) builder33);
        org.jsoup.nodes.Document document37 = hTMLPageResponse18.getBody();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = hTMLPageResponse18.getResponseHeaders();
        long long39 = hTMLPageResponse18.getFetchTime();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(crawlerURL21);
        org.junit.Assert.assertNotNull(crawlerURL22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(crawlerConfiguration34);
        org.junit.Assert.assertNotNull(crawlerConfiguration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(document37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 580L + "'", long39 == 580L);
    }

    @Test
    public void test05199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05199");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("Wrong content type");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI8 = crawlerURL7.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration13 = builder12.build();
        java.lang.String str14 = crawlerConfiguration13.getStartUrl();
        int int15 = crawlerConfiguration13.getMaxLevels();
        int int16 = crawlerConfiguration13.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration13.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (int) (short) 10, strMap17, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        int int24 = hTMLPageResponse23.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = hTMLPageResponse23.getResponseHeaders();
        java.lang.String str27 = hTMLPageResponse23.getHeaderValue("");
        java.util.Map<java.lang.String, java.lang.String> strMap28 = hTMLPageResponse23.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse34 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL3, (int) '4', strMap28, "CrawlerURL url:errorassets.csv", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads", (long) (byte) 0, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url", 580L);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable36 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("CrawlerURL url:hi!", assetFetcher1, strMap28, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:urls.txt type:com.soulgalore.crawler.http.connection.timeout");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.assets.AssetResponse assetResponse37 = assetResponseCallable36.call();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(uRI8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(crawlerConfiguration13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap28);
    }

    @Test
    public void test05200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05200");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet4 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet6 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet8 = authUtil0.createAuthsFromString("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet10 = authUtil0.createAuthsFromString("CrawlerURL url:errorassets.csv");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:CrawlerURL url:errorassets.csv");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
        org.junit.Assert.assertNotNull(authSet2);
        org.junit.Assert.assertNotNull(authSet4);
        org.junit.Assert.assertNotNull(authSet6);
        org.junit.Assert.assertNotNull(authSet8);
    }

    @Test
    public void test05201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05201");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout", "AssetResponseCallable url:Malformed url");
        java.lang.String str3 = crawlerURL2.getUrl();
        boolean boolean4 = crawlerURL2.isWrongSyntax();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout" + "'", str3, "AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test05202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05202");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setMaxLevels(10);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder8.setOnlyOnPath("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setStartUrl("AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setRequestHeaders("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder20.setVerifyUrls(true);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test05203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05203");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:CrawlerURL url:AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:10");
    }

    @Test
    public void test05204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05204");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder0.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder0.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder0.setNotOnPath("result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setOnlyOnPath("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder15.setRequestHeaders("AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
    }

    @Test
    public void test05205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05205");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("result.csv", "Malformed url");
        java.net.URI uRI3 = crawlerURL2.getUri();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.lang.String str5 = crawlerURL2.toString();
        java.lang.String str6 = crawlerURL2.getHost();
        java.lang.String str7 = crawlerURL2.getReferer();
        boolean boolean8 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration13 = builder12.build();
        java.lang.String str14 = crawlerConfiguration13.getOnlyOnPath();
        boolean boolean15 = crawlerConfiguration13.isVerifyUrls();
        int int16 = crawlerConfiguration13.getMaxLevels();
        java.lang.String str17 = crawlerConfiguration13.getNotOnPath();
        java.lang.String str18 = crawlerConfiguration13.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = crawlerConfiguration13.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse25 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 32, strMap19, "CrawlerURL url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", "AssetResponseCallable url:Unknown error", (long) (byte) 10, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:", (long) (byte) 10);
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Malformed url" + "'", str4, "Malformed url");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CrawlerURL url:result.csv" + "'", str5, "CrawlerURL url:result.csv");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Malformed url" + "'", str7, "Malformed url");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(crawlerConfiguration13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test05206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05206");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:32encoding:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads", (int) (short) 0, 0L);
        java.lang.String str5 = assetResponse4.getReferer();
        long long6 = assetResponse4.getFetchTime();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads" + "'", str5, "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    }

    @Test
    public void test05207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05207");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:com.soulgalore.crawler.auth", "CrawlerURL url:errorassets.csv", (-1), (long) '4');
        long long5 = assetResponse4.getFetchTime();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 52L + "'", long5 == 52L);
    }

    @Test
    public void test05208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05208");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int13 = hTMLPageResponse12.getResponseCode();
        int int14 = hTMLPageResponse12.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL15 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration20 = builder19.build();
        java.lang.String str21 = crawlerConfiguration20.getOnlyOnPath();
        boolean boolean22 = crawlerConfiguration20.isVerifyUrls();
        int int23 = crawlerConfiguration20.getMaxLevels();
        int int24 = crawlerConfiguration20.getMaxLevels();
        boolean boolean25 = crawlerConfiguration20.isVerifyUrls();
        boolean boolean26 = crawlerConfiguration20.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = crawlerConfiguration20.getRequestHeadersMap();
        java.lang.String str28 = crawlerConfiguration20.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = crawlerConfiguration20.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse35 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL15, 0, strMap29, "result.csv", "CrawlerURL url:CrawlerURL url:errorassets.csv", (long) 580, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url", 0L);
        boolean boolean36 = crawlerURL15.isWrongSyntax();
        java.lang.String str37 = crawlerURL15.getHost();
        java.net.URI uRI38 = crawlerURL15.getUri();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 97 + "'", int14 == 97);
        org.junit.Assert.assertNotNull(crawlerURL15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(crawlerConfiguration20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(uRI38);
    }

    @Test
    public void test05209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05209");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        java.lang.String str3 = crawlerURL1.getUrl();
        java.lang.String str4 = crawlerURL1.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder5.setNotOnPath("AssetResponseCallable url:errorassets.csv");
        boolean boolean12 = crawlerURL1.equals((java.lang.Object) builder11);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder11.setMaxLevels(1);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:0 type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setStartUrl("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setRequestHeaders("AssetResponseCallable url:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder18.setStartUrl("Unknown error");
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str3, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str4, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test05210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05210");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean6 = crawlerURL5.isWrongSyntax();
        java.lang.String str7 = crawlerURL5.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse15 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (int) 'a', strMap9, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str16 = hTMLPageResponse15.getUrl();
        boolean boolean17 = crawlerURL1.equals((java.lang.Object) str16);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher20 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil21 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = headerUtil21.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable25 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher20, strMap23, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse31 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) 100, strMap23, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        org.jsoup.nodes.Document document32 = hTMLPageResponse31.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL35 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean36 = crawlerURL35.isWrongSyntax();
        java.lang.String str37 = crawlerURL35.getReferer();
        java.lang.String str38 = crawlerURL35.getHost();
        java.lang.String str39 = crawlerURL35.getHost();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse47 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL35, (int) ' ', strMap41, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:-1encoding:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads type:AssetResponseCallable url:errorassets.csv", "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url", (long) 0, "com.soulgalore.crawler.http.connection.timeout", 0L);
        org.jsoup.nodes.Document document48 = hTMLPageResponse47.getBody();
        boolean boolean49 = hTMLPageResponse31.equals((java.lang.Object) hTMLPageResponse47);
        java.lang.String str50 = hTMLPageResponse47.toString();
        long long51 = hTMLPageResponse47.getFetchTime();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "urls.txt" + "'", str7, "urls.txt");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(headerUtil21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(document32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "urls.txt" + "'", str37, "urls.txt");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(document48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:32encoding:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url type:com.soulgalore.crawler.http.connection.timeout" + "'", str50, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:32encoding:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url type:com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
    }

    @Test
    public void test05211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05211");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        long long6 = assetResponse4.getFetchTime();
        java.lang.String str7 = assetResponse4.getUrl();
        int int8 = assetResponse4.getResponseCode();
        java.lang.String str9 = assetResponse4.getUrl();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test05212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05212");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.lang.String str5 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = crawlerConfiguration3.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration3.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = crawlerConfiguration3.getRequestHeadersMap();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL11 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean12 = crawlerURL11.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration19 = builder14.build();
        java.lang.String str20 = crawlerConfiguration19.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = crawlerConfiguration19.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse27 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL11, (-1), strMap21, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int28 = hTMLPageResponse27.getResponseCode();
        int int29 = hTMLPageResponse27.getResponseCode();
        boolean boolean30 = crawlerConfiguration3.equals((java.lang.Object) hTMLPageResponse27);
        long long31 = hTMLPageResponse27.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL32 = hTMLPageResponse27.getPageUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = builder33.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration36 = builder35.build();
        java.lang.String str37 = crawlerConfiguration36.getStartUrl();
        int int38 = crawlerConfiguration36.getMaxLevels();
        java.lang.String str39 = crawlerConfiguration36.getNotOnPath();
        boolean boolean41 = crawlerConfiguration36.equals((java.lang.Object) "Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap42 = crawlerConfiguration36.getRequestHeadersMap();
        boolean boolean43 = crawlerConfiguration36.isVerifyUrls();
        int int44 = crawlerConfiguration36.getMaxLevels();
        java.lang.String str45 = crawlerConfiguration36.getOnlyOnPath();
        boolean boolean46 = crawlerURL32.equals((java.lang.Object) crawlerConfiguration36);
        java.lang.String str47 = crawlerConfiguration36.getOnlyOnPath();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL50 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean51 = crawlerURL50.isWrongSyntax();
        java.lang.String str52 = crawlerURL50.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap54 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse60 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL50, (int) 'a', strMap54, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str61 = hTMLPageResponse60.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL62 = hTMLPageResponse60.getPageUrl();
        long long63 = hTMLPageResponse60.getFetchTime();
        java.lang.String str64 = hTMLPageResponse60.getUrl();
        java.lang.Object obj65 = null;
        boolean boolean66 = hTMLPageResponse60.equals(obj65);
        java.util.Map<java.lang.String, java.lang.String> strMap67 = hTMLPageResponse60.getResponseHeaders();
        boolean boolean68 = crawlerConfiguration36.equals((java.lang.Object) hTMLPageResponse60);
        java.lang.Class<?> wildcardClass69 = crawlerConfiguration36.getClass();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(crawlerConfiguration19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 580L + "'", long31 == 580L);
        org.junit.Assert.assertNotNull(crawlerURL32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(crawlerConfiguration36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "urls.txt" + "'", str52, "urls.txt");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str61, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 100L + "'", long63 == 100L);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "com.soulgalore.crawler.auth" + "'", str64, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test05213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05213");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        boolean boolean9 = assetResponse4.equals((java.lang.Object) 0.0d);
        java.lang.String str10 = assetResponse4.getReferer();
        java.lang.String str11 = assetResponse4.getUrl();
        java.lang.String str12 = assetResponse4.getUrl();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "100" + "'", str10, "100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test05214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05214");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("CrawlerURL url:CrawlerURL url:errorassets.csv", "", (-1), (long) (short) 10);
        long long5 = assetResponse4.getFetchTime();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10L + "'", long5 == 10L);
    }

    @Test
    public void test05215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05215");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet12 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult11.getUrls();
        java.lang.String str15 = crawlerResult11.getTheStartPoint();
        java.lang.String str16 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet17 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet18 = crawlerResult11.getUrls();
        java.lang.String str19 = crawlerResult11.getTheStartPoint();
        java.lang.String str20 = crawlerResult11.getTheStartPoint();
        java.lang.String str21 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet22 = crawlerResult11.getNonWorkingUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet12);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet17);
        org.junit.Assert.assertNotNull(crawlerURLSet18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet22);
    }

    @Test
    public void test05216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05216");
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet1 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray7 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL6 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet8 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet8, crawlerURLArray7);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray11 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet12 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet12, hTMLPageResponseArray11);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult14 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet8, hTMLPageResponseSet10, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet12);
        java.lang.String str15 = crawlerResult14.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult14.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = crawlerResult14.getNonWorkingUrls();
        java.lang.String str18 = crawlerResult14.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet19 = crawlerResult14.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet20 = crawlerResult14.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray25 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL24 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet26 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet26, crawlerURLArray25);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet28 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray29 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet30 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet30, hTMLPageResponseArray29);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult32 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet26, hTMLPageResponseSet28, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet30);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet33 = crawlerResult32.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet34 = crawlerResult32.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet35 = crawlerResult32.getUrls();
        java.lang.String str36 = crawlerResult32.getTheStartPoint();
        java.lang.String str37 = crawlerResult32.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet38 = crawlerResult32.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL42 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray43 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL42 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet44 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet44, crawlerURLArray43);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet46 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray47 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet48 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet48, hTMLPageResponseArray47);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult50 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet44, hTMLPageResponseSet46, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet48);
        java.lang.String str51 = crawlerResult50.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet52 = crawlerResult50.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet53 = crawlerResult50.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet54 = crawlerResult50.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet55 = crawlerResult50.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult56 = new com.soulgalore.crawler.core.CrawlerResult("Response timed out", crawlerURLSet20, hTMLPageResponseSet38, hTMLPageResponseSet55);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL60 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray61 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL60 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet62 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet62, crawlerURLArray61);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet64 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray65 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet66 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet66, hTMLPageResponseArray65);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult68 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet62, hTMLPageResponseSet64, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet66);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet69 = crawlerResult68.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet70 = crawlerResult68.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet71 = crawlerResult68.getUrls();
        java.lang.String str72 = crawlerResult68.getTheStartPoint();
        java.lang.String str73 = crawlerResult68.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet74 = crawlerResult68.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet75 = crawlerResult68.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult76 = new com.soulgalore.crawler.core.CrawlerResult("35", crawlerURLSet1, hTMLPageResponseSet38, hTMLPageResponseSet75);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet77 = crawlerResult76.getUrls();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(crawlerURLArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet19);
        org.junit.Assert.assertNotNull(crawlerURLSet20);
        org.junit.Assert.assertNotNull(crawlerURLArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet33);
        org.junit.Assert.assertNotNull(crawlerURLSet34);
        org.junit.Assert.assertNotNull(crawlerURLSet35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet38);
        org.junit.Assert.assertNotNull(crawlerURLArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet52);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet53);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet54);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet55);
        org.junit.Assert.assertNotNull(crawlerURLArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet69);
        org.junit.Assert.assertNotNull(crawlerURLSet70);
        org.junit.Assert.assertNotNull(crawlerURLSet71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet74);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet75);
    }

    @Test
    public void test05217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05217");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder2.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder2.build();
        int int8 = crawlerConfiguration7.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil9 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean10 = crawlerConfiguration7.equals((java.lang.Object) headerUtil9);
        java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil9.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil9.createHeadersFromString("CrawlerURL url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap16 = headerUtil9.createHeadersFromString("AssetResponseCallable url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable18 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("CrawlerURL url:errorassets.csv", assetFetcher1, strMap16, "AssetResponseCallable url:AssetResponseCallable url:Unknown error");
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(headerUtil9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
    }

    @Test
    public void test05218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05218");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) builder14);
        long long16 = hTMLPageResponse12.getFetchTime();
        java.lang.String str17 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder18.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder22.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder24.setOnlyOnPath("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder24.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder28.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder30.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setOnlyOnPath("CrawlerURL url:com.soulgalore.crawler.proxy");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder32.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration37 = builder36.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration38 = builder36.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder36.setOnlyOnPath("52");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = builder40.setOnlyOnPath("com.soulgalore.crawler.nrofhttpthreads");
        boolean boolean43 = hTMLPageResponse12.equals((java.lang.Object) builder40);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder45 = builder40.setMaxLevels((int) (short) 1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "com.soulgalore.crawler.auth" + "'", str17, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(crawlerConfiguration37);
        org.junit.Assert.assertNotNull(crawlerConfiguration38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(builder45);
    }

    @Test
    public void test05219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05219");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "Wrong content type", (int) (short) 1, 0L);
        java.lang.String str5 = assetResponse4.getUrl();
        int int6 = assetResponse4.getResponseCode();
        int int7 = assetResponse4.getResponseCode();
        java.lang.String str8 = assetResponse4.getReferer();
        int int9 = assetResponse4.getResponseCode();
        com.soulgalore.crawler.util.StatusCode statusCode10 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT;
        int int11 = statusCode10.getCode();
        int int12 = statusCode10.getCode();
        java.lang.String str13 = statusCode10.getFriendlyName();
        java.lang.String str14 = statusCode10.getFriendlyName();
        java.lang.String str15 = statusCode10.getFriendlyName();
        int int16 = statusCode10.getCode();
        java.lang.String str17 = statusCode10.getFriendlyName();
        int int18 = statusCode10.getCode();
        int int19 = statusCode10.getCode();
        int int20 = statusCode10.getCode();
        java.lang.String str21 = statusCode10.getFriendlyName();
        boolean boolean22 = assetResponse4.equals((java.lang.Object) str21);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Wrong content type" + "'", str8, "Wrong content type");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + statusCode10 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT + "'", statusCode10.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 580 + "'", int11 == 580);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 580 + "'", int12 == 580);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Response timed out" + "'", str13, "Response timed out");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Response timed out" + "'", str14, "Response timed out");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Response timed out" + "'", str15, "Response timed out");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 580 + "'", int16 == 580);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Response timed out" + "'", str17, "Response timed out");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 580 + "'", int18 == 580);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 580 + "'", int19 == 580);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 580 + "'", int20 == 580);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Response timed out" + "'", str21, "Response timed out");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test05220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05220");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv", "CrawlerURL url:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", 97, 0L);
        java.lang.String str5 = assetResponse4.getReferer();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CrawlerURL url:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth" + "'", str5, "CrawlerURL url:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
    }

    @Test
    public void test05221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05221");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider((int) '4', (int) ' ', 581, "HTMLPageResponseurl:hi!responseCode:10encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", "AssetResponseCallable url:CrawlerURL url:AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:10");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"hi!responseCode\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05222");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider(52, 35, (-1), "HTMLPageResponseurl:AssetResponseCallable url:Malformed urlresponseCode:581encoding:Unknown error type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads", "AssetResponseCallable url:AssetResponseCallable url:32");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"AssetResponseCallable url\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05223");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder4.setOnlyOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder4.setStartUrl("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder4.setOnlyOnPath("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test05224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05224");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        int int19 = hTMLPageResponse12.getResponseCode();
        java.lang.String str20 = hTMLPageResponse12.getEncoding();
        java.lang.String str21 = hTMLPageResponse12.getResponseType();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL23 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder24.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration27 = builder26.build();
        java.lang.String str28 = crawlerConfiguration27.getOnlyOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        boolean boolean30 = crawlerConfiguration27.equals((java.lang.Object) builder29);
        java.lang.String str31 = crawlerConfiguration27.getStartUrl();
        java.lang.String str32 = crawlerConfiguration27.getOnlyOnPath();
        java.lang.String str33 = crawlerConfiguration27.getStartUrl();
        boolean boolean34 = hTMLPageResponse12.equals((java.lang.Object) crawlerConfiguration27);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = hTMLPageResponse12.getResponseHeaders();
        long long36 = hTMLPageResponse12.getFetchTime();
        java.lang.String str37 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder38.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = builder38.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration43 = builder38.build();
        java.lang.String str44 = crawlerConfiguration43.getRequestHeaders();
        java.lang.String str45 = crawlerConfiguration43.getRequestHeaders();
        java.lang.String str46 = crawlerConfiguration43.getStartUrl();
        boolean boolean47 = crawlerConfiguration43.isVerifyUrls();
        int int48 = crawlerConfiguration43.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL50 = new com.soulgalore.crawler.core.CrawlerURL("errorassets.csv");
        boolean boolean51 = crawlerConfiguration43.equals((java.lang.Object) crawlerURL50);
        int int52 = crawlerConfiguration43.getMaxLevels();
        int int53 = crawlerConfiguration43.getMaxLevels();
        java.lang.String str54 = crawlerConfiguration43.getNotOnPath();
        boolean boolean55 = hTMLPageResponse12.equals((java.lang.Object) str54);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 97 + "'", int19 == 97);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str20, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(crawlerURL22);
        org.junit.Assert.assertNotNull(crawlerURL23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(crawlerConfiguration27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 100L + "'", long36 == 100L);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str37, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(crawlerConfiguration43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test05225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05225");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        int int6 = crawlerConfiguration5.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil7 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean8 = crawlerConfiguration5.equals((java.lang.Object) headerUtil7);
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil7.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil7.createHeadersFromString("CrawlerURL url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil7.createHeadersFromString("AssetResponseCallable url:Redirected to new domain");
        java.util.Map<java.lang.String, java.lang.String> strMap16 = headerUtil7.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap18 = headerUtil7.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt");
        java.util.Map<java.lang.String, java.lang.String> strMap20 = headerUtil7.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads type:Wrong content type");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(headerUtil7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test05226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05226");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse6 = new com.soulgalore.crawler.core.assets.AssetResponse("Unknown error", "CrawlerURL url:urls.txt", 583, (long) 10);
        com.soulgalore.crawler.util.StatusCode statusCode7 = com.soulgalore.crawler.util.StatusCode.SC_MALFORMED_URI;
        java.lang.String str8 = statusCode7.getFriendlyName();
        boolean boolean9 = assetResponse6.equals((java.lang.Object) statusCode7);
        boolean boolean10 = crawlerURL1.equals((java.lang.Object) statusCode7);
        java.net.URI uRI11 = crawlerURL1.getUri();
        org.junit.Assert.assertTrue("'" + statusCode7 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_MALFORMED_URI + "'", statusCode7.equals(com.soulgalore.crawler.util.StatusCode.SC_MALFORMED_URI));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Malformed url" + "'", str8, "Malformed url");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(uRI11);
    }

    @Test
    public void test05227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05227");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) builder14);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder14.setRequestHeaders("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setRequestHeaders("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setRequestHeaders("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:32encoding:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url type:com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
    }

    @Test
    public void test05228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05228");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("Response timed out", "CrawlerURL url:hi!", (int) 'a', (long) 10);
        int int5 = assetResponse4.getResponseCode();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 97 + "'", int5 == 97);
    }

    @Test
    public void test05229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05229");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse19 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.proxy", "", (int) (short) -1, (long) 583);
        boolean boolean20 = crawlerURL14.equals((java.lang.Object) assetResponse19);
        java.lang.String str21 = assetResponse19.getReferer();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test05230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05230");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder0.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder0.setRequestHeaders("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder9.setNotOnPath("Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setOnlyOnPath("-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder13.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setOnlyOnPath("AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
    }

    @Test
    public void test05231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05231");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setRequestHeaders("HTMLPageResponseurl:hi!responseCode:-1encoding:errorurls.txt type:result.csv");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test05232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05232");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher3 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("Malformed url", "com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.util.HeaderUtil headerUtil8 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil8.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse16 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL6, 583, strMap10, "Redirected to new domain", "result.csv", 0L, "result.csv", (long) (short) 100);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = hTMLPageResponse16.getResponseHeaders();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable19 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:", assetFetcher3, strMap17, "32");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable21 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:32encoding:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url type:com.soulgalore.crawler.http.connection.timeout", assetFetcher1, strMap17, "");
        java.lang.String str22 = assetResponseCallable21.toString();
        org.junit.Assert.assertNotNull(headerUtil8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:32encoding:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url type:com.soulgalore.crawler.http.connection.timeout" + "'", str22, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:32encoding:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url type:com.soulgalore.crawler.http.connection.timeout");
    }

    @Test
    public void test05233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05233");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("Unknown error", "CrawlerURL url:urls.txt", 583, (long) 10);
        com.soulgalore.crawler.util.StatusCode statusCode5 = com.soulgalore.crawler.util.StatusCode.SC_MALFORMED_URI;
        java.lang.String str6 = statusCode5.getFriendlyName();
        boolean boolean7 = assetResponse4.equals((java.lang.Object) statusCode5);
        long long8 = assetResponse4.getFetchTime();
        int int9 = assetResponse4.getResponseCode();
        java.lang.String str10 = assetResponse4.getUrl();
        java.lang.String str11 = assetResponse4.getUrl();
        int int12 = assetResponse4.getResponseCode();
        org.junit.Assert.assertTrue("'" + statusCode5 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_MALFORMED_URI + "'", statusCode5.equals(com.soulgalore.crawler.util.StatusCode.SC_MALFORMED_URI));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Malformed url" + "'", str6, "Malformed url");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10L + "'", long8 == 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 583 + "'", int9 == 583);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Unknown error" + "'", str10, "Unknown error");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Unknown error" + "'", str11, "Unknown error");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 583 + "'", int12 == 583);
    }

    @Test
    public void test05234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05234");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean9 = crawlerURL8.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder11.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration16 = builder11.build();
        java.lang.String str17 = crawlerConfiguration16.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = crawlerConfiguration16.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse24 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL8, (-1), strMap18, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int25 = hTMLPageResponse24.getResponseCode();
        long long26 = hTMLPageResponse24.getFetchTime();
        long long27 = hTMLPageResponse24.getFetchTime();
        boolean boolean28 = crawlerConfiguration3.equals((java.lang.Object) hTMLPageResponse24);
        int int29 = crawlerConfiguration3.getMaxLevels();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(crawlerConfiguration16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 580L + "'", long26 == 580L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 580L + "'", long27 == 580L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
    }

    @Test
    public void test05235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05235");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder4.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration6 = builder4.build();
        java.lang.String str7 = crawlerConfiguration6.getOnlyOnPath();
        java.lang.String str8 = crawlerConfiguration6.getRequestHeaders();
        java.lang.String str9 = crawlerConfiguration6.getStartUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertNotNull(crawlerConfiguration6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test05236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05236");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        org.jsoup.nodes.Document document13 = hTMLPageResponse12.getBody();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setMaxLevels((int) (short) 0);
        boolean boolean19 = hTMLPageResponse12.equals((java.lang.Object) builder14);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = hTMLPageResponse12.getPageUrl();
        long long21 = hTMLPageResponse12.getFetchTime();
        java.lang.String str22 = hTMLPageResponse12.getUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNull(document13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(crawlerURL20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 100L + "'", long21 == 100L);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "com.soulgalore.crawler.auth" + "'", str22, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test05237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05237");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        java.lang.String str3 = crawlerURL1.getUrl();
        java.lang.String str4 = crawlerURL1.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder6.build();
        java.lang.String str12 = crawlerConfiguration11.getRequestHeaders();
        java.lang.String str13 = crawlerConfiguration11.getRequestHeaders();
        boolean boolean15 = crawlerConfiguration11.equals((java.lang.Object) 0.0d);
        boolean boolean16 = crawlerConfiguration11.isVerifyUrls();
        java.lang.String str17 = crawlerConfiguration11.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = crawlerConfiguration11.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse24 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 0, strMap18, "10", "Unknown error", (long) (short) -1, "AssetResponseCallable url:Malformed url", (long) 97);
        java.lang.String str26 = hTMLPageResponse24.getHeaderValue("errorassets.csv");
        java.lang.String str27 = hTMLPageResponse24.getUrl();
        java.lang.String str28 = hTMLPageResponse24.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL31 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean32 = crawlerURL31.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder34.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder34.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration39 = builder34.build();
        java.lang.String str40 = crawlerConfiguration39.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = crawlerConfiguration39.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse47 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL31, (-1), strMap41, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        java.lang.String str49 = hTMLPageResponse47.getHeaderValue("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL50 = hTMLPageResponse47.getPageUrl();
        int int51 = hTMLPageResponse47.getResponseCode();
        boolean boolean52 = hTMLPageResponse24.equals((java.lang.Object) hTMLPageResponse47);
        int int53 = hTMLPageResponse24.getResponseCode();
        java.lang.String str54 = hTMLPageResponse24.getEncoding();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str3, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str4, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str27, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url" + "'", str28, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(crawlerConfiguration39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(crawlerURL50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Unknown error" + "'", str54, "Unknown error");
    }

    @Test
    public void test05238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05238");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "errorurls.txt", 97, (-1L));
        java.lang.String str5 = assetResponse4.getReferer();
        java.lang.String str6 = assetResponse4.getReferer();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse11 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int12 = assetResponse11.getResponseCode();
        long long13 = assetResponse11.getFetchTime();
        java.lang.String str14 = assetResponse11.getUrl();
        java.lang.String str15 = assetResponse11.getReferer();
        long long16 = assetResponse11.getFetchTime();
        long long17 = assetResponse11.getFetchTime();
        long long18 = assetResponse11.getFetchTime();
        boolean boolean19 = assetResponse4.equals((java.lang.Object) assetResponse11);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray25 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL24 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet26 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet26, crawlerURLArray25);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet28 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray29 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet30 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet30, hTMLPageResponseArray29);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult32 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet26, hTMLPageResponseSet28, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet30);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet33 = crawlerResult32.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet34 = crawlerResult32.getNonWorkingUrls();
        java.lang.String str35 = crawlerResult32.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet36 = crawlerResult32.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL40 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean41 = crawlerURL40.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL44 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean45 = crawlerURL44.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL48 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI49 = crawlerURL48.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray50 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL40, crawlerURL44, crawlerURL48 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet51 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet51, crawlerURLArray50);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray53 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet54 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet54, hTMLPageResponseArray53);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL59 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray60 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL59 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet61 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet61, crawlerURLArray60);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet63 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray64 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet65 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet65, hTMLPageResponseArray64);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult67 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet61, hTMLPageResponseSet63, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet65);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult68 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet51, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet54, hTMLPageResponseSet63);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet69 = crawlerResult68.getVerifiedURLResponses();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL73 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray74 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL73 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet75 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet75, crawlerURLArray74);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet77 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray78 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet79 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet79, hTMLPageResponseArray78);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult81 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet75, hTMLPageResponseSet77, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet79);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet82 = crawlerResult81.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult83 = new com.soulgalore.crawler.core.CrawlerResult("hi!", crawlerURLSet36, hTMLPageResponseSet69, hTMLPageResponseSet82);
        java.lang.String str84 = crawlerResult83.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet85 = crawlerResult83.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet86 = crawlerResult83.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet87 = crawlerResult83.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet88 = crawlerResult83.getVerifiedURLResponses();
        java.lang.String str89 = crawlerResult83.getTheStartPoint();
        boolean boolean90 = assetResponse11.equals((java.lang.Object) str89);
        long long91 = assetResponse11.getFetchTime();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "errorurls.txt" + "'", str5, "errorurls.txt");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "errorurls.txt" + "'", str6, "errorurls.txt");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "100" + "'", str15, "100");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet33);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(uRI49);
        org.junit.Assert.assertNotNull(crawlerURLArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet69);
        org.junit.Assert.assertNotNull(crawlerURLArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet82);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!" + "'", str84, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet85);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet86);
        org.junit.Assert.assertNotNull(crawlerURLSet87);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "hi!" + "'", str89, "hi!");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 0L + "'", long91 == 0L);
    }

    @Test
    public void test05239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05239");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder4.setOnlyOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration13 = builder12.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder14.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration21 = builder20.build();
        boolean boolean22 = crawlerConfiguration13.equals((java.lang.Object) crawlerConfiguration21);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL25 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean26 = crawlerURL25.isWrongSyntax();
        java.lang.String str27 = crawlerURL25.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse35 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL25, (int) 'a', strMap29, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str36 = hTMLPageResponse35.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL37 = hTMLPageResponse35.getPageUrl();
        java.lang.String str38 = hTMLPageResponse35.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder41 = builder39.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder43 = builder39.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder45 = builder43.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder47 = builder45.setOnlyOnPath("com.soulgalore.crawler.auth");
        boolean boolean48 = hTMLPageResponse35.equals((java.lang.Object) builder45);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder50 = builder45.setOnlyOnPath("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        boolean boolean51 = crawlerConfiguration21.equals((java.lang.Object) builder45);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder53 = builder45.setStartUrl("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration54 = builder53.build();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(crawlerConfiguration13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(crawlerConfiguration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "urls.txt" + "'", str27, "urls.txt");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str36, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str38, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(crawlerConfiguration54);
    }

    @Test
    public void test05240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05240");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration4 = builder2.build();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNotNull(crawlerConfiguration4);
    }

    @Test
    public void test05241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05241");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
    }

    @Test
    public void test05242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05242");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet4 = authUtil0.createAuthsFromString("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet6 = authUtil0.createAuthsFromString("AssetResponseCallable url:0");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:AssetResponseCallable url:0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
        org.junit.Assert.assertNotNull(authSet2);
        org.junit.Assert.assertNotNull(authSet4);
    }

    @Test
    public void test05243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05243");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads", "hi!");
        java.lang.String str3 = crawlerURL2.getHost();
        java.net.URI uRI4 = crawlerURL2.getUri();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(uRI4);
    }

    @Test
    public void test05244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05244");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setRequestHeaders("AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder0.setMaxLevels((int) (byte) 1);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder0.setStartUrl("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test05245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05245");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:AssetResponseCallable url:Wrong content type", "CrawlerURL url:10");
    }

    @Test
    public void test05246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05246");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("52");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder2.setOnlyOnPath("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder2.setRequestHeaders("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder2.setOnlyOnPath("AssetResponseCallable url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setMaxLevels((int) '#');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setOnlyOnPath("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setNotOnPath("com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test05247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05247");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        org.jsoup.nodes.Document document13 = hTMLPageResponse12.getBody();
        org.jsoup.nodes.Document document14 = hTMLPageResponse12.getBody();
        com.soulgalore.crawler.util.StatusCode statusCode15 = com.soulgalore.crawler.util.StatusCode.SC_MALFORMED_URI;
        boolean boolean16 = hTMLPageResponse12.equals((java.lang.Object) statusCode15);
        int int17 = hTMLPageResponse12.getResponseCode();
        java.lang.String str18 = hTMLPageResponse12.getEncoding();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNull(document13);
        org.junit.Assert.assertNull(document14);
        org.junit.Assert.assertTrue("'" + statusCode15 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_MALFORMED_URI + "'", statusCode15.equals(com.soulgalore.crawler.util.StatusCode.SC_MALFORMED_URI));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 97 + "'", int17 == 97);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str18, "com.soulgalore.crawler.http.socket.timeout");
    }

    @Test
    public void test05248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05248");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.http.socket.timeout", "com.soulgalore.crawler.nrofhttpthreads", (-1), 583L);
        java.lang.String str5 = assetResponse4.getReferer();
        java.lang.String str6 = assetResponse4.getReferer();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL9 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI10 = crawlerURL9.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean15 = crawlerURL14.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration22 = builder17.build();
        java.lang.String str23 = crawlerConfiguration22.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = crawlerConfiguration22.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse30 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL14, (-1), strMap24, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse36 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL9, 100, strMap24, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.util.Map<java.lang.String, java.lang.String> strMap37 = hTMLPageResponse36.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL40 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean41 = crawlerURL40.isWrongSyntax();
        java.lang.String str42 = crawlerURL40.getReferer();
        java.lang.String str43 = crawlerURL40.getHost();
        java.lang.String str44 = crawlerURL40.getUrl();
        boolean boolean45 = hTMLPageResponse36.equals((java.lang.Object) crawlerURL40);
        java.lang.String str46 = hTMLPageResponse36.getUrl();
        java.lang.String str47 = hTMLPageResponse36.getUrl();
        org.jsoup.nodes.Document document48 = hTMLPageResponse36.getBody();
        java.lang.String str49 = hTMLPageResponse36.getEncoding();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray50 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet51 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet51, assetResponseArray50);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray53 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet54 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet54, assetResponseArray53);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult56 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet51, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet54);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet57 = assetsVerificationResult56.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray58 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet59 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet59, assetResponseArray58);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray61 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet62 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet62, assetResponseArray61);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult64 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet59, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet62);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult65 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet57, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet62);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet66 = assetsVerificationResult65.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet67 = assetsVerificationResult65.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet68 = assetsVerificationResult65.getWorkingAssets();
        boolean boolean69 = hTMLPageResponse36.equals((java.lang.Object) assetResponseSet68);
        boolean boolean70 = assetResponse4.equals((java.lang.Object) boolean69);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str5, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str6, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNull(uRI10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(crawlerConfiguration22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "urls.txt" + "'", str42, "urls.txt");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "com.soulgalore.crawler.auth" + "'", str44, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "com.soulgalore.crawler.auth" + "'", str46, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "com.soulgalore.crawler.auth" + "'", str47, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Malformed url" + "'", str49, "Malformed url");
        org.junit.Assert.assertNotNull(assetResponseArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(assetResponseArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(assetResponseSet57);
        org.junit.Assert.assertNotNull(assetResponseArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(assetResponseArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(assetResponseSet66);
        org.junit.Assert.assertNotNull(assetResponseSet67);
        org.junit.Assert.assertNotNull(assetResponseSet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test05249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05249");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.lang.String str5 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str8 = crawlerConfiguration3.getStartUrl();
        java.lang.String str9 = crawlerConfiguration3.getRequestHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI13 = crawlerURL12.getUri();
        java.net.URI uRI14 = crawlerURL12.getUri();
        java.net.URI uRI15 = crawlerURL12.getUri();
        java.net.URI uRI16 = crawlerURL12.getUri();
        boolean boolean17 = crawlerURL12.isWrongSyntax();
        java.lang.String str18 = crawlerURL12.toString();
        boolean boolean19 = crawlerConfiguration3.equals((java.lang.Object) crawlerURL12);
        java.net.URI uRI20 = crawlerURL12.getUri();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(uRI13);
        org.junit.Assert.assertNull(uRI14);
        org.junit.Assert.assertNull(uRI15);
        org.junit.Assert.assertNull(uRI16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str18, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(uRI20);
    }

    @Test
    public void test05250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05250");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        java.lang.String str3 = crawlerURL1.getUrl();
        java.lang.String str4 = crawlerURL1.getHost();
        boolean boolean5 = crawlerURL1.isWrongSyntax();
        java.lang.String str6 = crawlerURL1.getHost();
        java.net.URI uRI7 = crawlerURL1.getUri();
        java.net.URI uRI8 = crawlerURL1.getUri();
        java.lang.String str9 = crawlerURL1.getUrl();
        java.lang.String str10 = crawlerURL1.getHost();
        java.lang.String str11 = crawlerURL1.getReferer();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher13 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder14.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration21 = builder14.build();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = crawlerConfiguration21.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable24 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("com.soulgalore.crawler.auth", assetFetcher13, strMap22, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.lang.String str25 = assetResponseCallable24.toString();
        boolean boolean26 = crawlerURL1.equals((java.lang.Object) str25);
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str3, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(uRI7);
        org.junit.Assert.assertNull(uRI8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str9, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(crawlerConfiguration21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AssetResponseCallable url:com.soulgalore.crawler.auth" + "'", str25, "AssetResponseCallable url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test05251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05251");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:com.soulgalore.crawler.auth", "com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher5 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI9 = crawlerURL8.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration14 = builder13.build();
        java.lang.String str15 = crawlerConfiguration14.getStartUrl();
        int int16 = crawlerConfiguration14.getMaxLevels();
        int int17 = crawlerConfiguration14.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = crawlerConfiguration14.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse24 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL8, (int) (short) 10, strMap18, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable26 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("100", assetFetcher5, strMap18, "errorassets.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse32 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (byte) 0, strMap18, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout", "CrawlerURL url:result.csv", (long) (short) 10, "-1", (long) 97);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = hTMLPageResponse32.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = hTMLPageResponse32.getResponseHeaders();
        org.junit.Assert.assertNull(uRI9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(crawlerConfiguration14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(crawlerURL33);
        org.junit.Assert.assertNotNull(strMap34);
    }

    @Test
    public void test05252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05252");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet12 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet14 = crawlerResult11.getNonWorkingUrls();
        java.lang.String str15 = crawlerResult11.getTheStartPoint();
        java.lang.String str16 = crawlerResult11.getTheStartPoint();
        java.lang.String str17 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet18 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet19 = crawlerResult11.getNonWorkingUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet12);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet18);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet19);
    }

    @Test
    public void test05253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05253");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.toString();
        java.lang.String str14 = hTMLPageResponse12.getResponseType();
        java.lang.String str15 = hTMLPageResponse12.getResponseType();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = hTMLPageResponse12.getResponseHeaders();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str13, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(strMap16);
    }

    @Test
    public void test05254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05254");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("0", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads type:Wrong content type");
        java.lang.String str3 = crawlerURL2.getReferer();
        java.net.URI uRI4 = crawlerURL2.getUri();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads type:Wrong content type" + "'", str3, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads type:Wrong content type");
        org.junit.Assert.assertNull(uRI4);
    }

    @Test
    public void test05255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05255");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("Unknown error", "AssetResponseCallable url:com.soulgalore.crawler.nrofhttpthreads", 52, (long) (short) -1);
        java.lang.Class<?> wildcardClass5 = assetResponse4.getClass();
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test05256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05256");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        java.lang.String str15 = hTMLPageResponse12.toString();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        java.lang.String str17 = hTMLPageResponse12.getResponseType();
        org.jsoup.nodes.Document document18 = hTMLPageResponse12.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = hTMLPageResponse12.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = hTMLPageResponse12.getResponseHeaders();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str15, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(document18);
        org.junit.Assert.assertNotNull(crawlerURL19);
        org.junit.Assert.assertNull(strMap20);
    }

    @Test
    public void test05257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05257");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) builder14);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        int int17 = hTMLPageResponse12.getResponseCode();
        long long18 = hTMLPageResponse12.getFetchTime();
        java.lang.String str19 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder20.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder20.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder20.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder26.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder26.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration31 = builder30.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration32 = builder30.build();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = crawlerConfiguration32.getRequestHeadersMap();
        java.lang.String str34 = crawlerConfiguration32.getStartUrl();
        boolean boolean35 = hTMLPageResponse12.equals((java.lang.Object) str34);
        org.jsoup.nodes.Document document36 = hTMLPageResponse12.getBody();
        long long37 = hTMLPageResponse12.getFetchTime();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 97 + "'", int17 == 97);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 100L + "'", long18 == 100L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str19, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(crawlerConfiguration31);
        org.junit.Assert.assertNotNull(crawlerConfiguration32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str34, "com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(document36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 100L + "'", long37 == 100L);
    }

    @Test
    public void test05258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05258");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
        java.lang.String str2 = crawlerURL1.getUrl();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url" + "'", str2, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
    }

    @Test
    public void test05259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05259");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:100", "result.csv", 0, (long) (short) 1);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray5 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet6, assetResponseArray5);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray8 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet9, assetResponseArray8);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult11 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet6, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = assetsVerificationResult11.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = assetsVerificationResult11.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray14 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet15 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15, assetResponseArray14);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray17 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, assetResponseArray17);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult20 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult21 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet13, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray22 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet23 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23, assetResponseArray22);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray25 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet26 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet26, assetResponseArray25);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult28 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet26);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = assetsVerificationResult28.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult30 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet13, assetResponseSet29);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet31 = assetsVerificationResult30.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet32 = assetsVerificationResult30.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet33 = assetsVerificationResult30.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet34 = assetsVerificationResult30.getWorkingAssets();
        boolean boolean35 = assetResponse4.equals((java.lang.Object) assetResponseSet34);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray36 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet37 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37, assetResponseArray36);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray39 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40, assetResponseArray39);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult42 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray43 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet44 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet44, assetResponseArray43);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray46 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet47 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet47, assetResponseArray46);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult49 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet44, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet47);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet50 = assetsVerificationResult49.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult51 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40, assetResponseSet50);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet52 = assetsVerificationResult51.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray53 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet54 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet54, assetResponseArray53);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray56 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet57 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet57, assetResponseArray56);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult59 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet54, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet57);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray60 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet61 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet61, assetResponseArray60);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray63 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet64 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet64, assetResponseArray63);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult66 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet61, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet64);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet67 = assetsVerificationResult66.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult68 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet57, assetResponseSet67);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet69 = assetsVerificationResult68.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet70 = assetsVerificationResult68.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult71 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet52, assetResponseSet70);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult72 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet34, assetResponseSet70);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet73 = assetsVerificationResult72.getNonWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(assetResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(assetResponseSet12);
        org.junit.Assert.assertNotNull(assetResponseSet13);
        org.junit.Assert.assertNotNull(assetResponseArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(assetResponseArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(assetResponseArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(assetResponseArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(assetResponseSet29);
        org.junit.Assert.assertNotNull(assetResponseSet31);
        org.junit.Assert.assertNotNull(assetResponseSet32);
        org.junit.Assert.assertNotNull(assetResponseSet33);
        org.junit.Assert.assertNotNull(assetResponseSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(assetResponseArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(assetResponseArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(assetResponseArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(assetResponseArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(assetResponseSet50);
        org.junit.Assert.assertNotNull(assetResponseSet52);
        org.junit.Assert.assertNotNull(assetResponseArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(assetResponseArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(assetResponseArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(assetResponseArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(assetResponseSet67);
        org.junit.Assert.assertNotNull(assetResponseSet69);
        org.junit.Assert.assertNotNull(assetResponseSet70);
        org.junit.Assert.assertNotNull(assetResponseSet73);
    }

    @Test
    public void test05260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05260");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        java.lang.String str3 = crawlerURL1.getUrl();
        java.lang.String str4 = crawlerURL1.getHost();
        boolean boolean5 = crawlerURL1.isWrongSyntax();
        java.lang.String str6 = crawlerURL1.getHost();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse14 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 582, strMap8, "AssetResponseCallable url:1", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:", 580L, "AssetResponseCallable url:Redirected to new domain", 35L);
        org.jsoup.nodes.Document document15 = hTMLPageResponse14.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse14.getPageUrl();
        org.jsoup.nodes.Document document17 = hTMLPageResponse14.getBody();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str3, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(document15);
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertNull(document17);
    }

    @Test
    public void test05261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05261");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean14 = assetResponse4.equals((java.lang.Object) 100L);
        java.lang.String str15 = assetResponse4.getReferer();
        java.lang.String str16 = assetResponse4.getReferer();
        java.lang.String str17 = assetResponse4.getUrl();
        java.lang.String str18 = assetResponse4.getUrl();
        long long19 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray25 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL24 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet26 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet26, crawlerURLArray25);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet28 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray29 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet30 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet30, hTMLPageResponseArray29);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult32 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet26, hTMLPageResponseSet28, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet30);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet33 = crawlerResult32.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet34 = crawlerResult32.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet35 = crawlerResult32.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet36 = crawlerResult32.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet37 = crawlerResult32.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet38 = crawlerResult32.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL42 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray43 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL42 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet44 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet44, crawlerURLArray43);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet46 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray47 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet48 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet48, hTMLPageResponseArray47);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult50 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet44, hTMLPageResponseSet46, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet48);
        java.lang.String str51 = crawlerResult50.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet52 = crawlerResult50.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet53 = crawlerResult50.getNonWorkingUrls();
        java.lang.String str54 = crawlerResult50.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet55 = crawlerResult50.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL59 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray60 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL59 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet61 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet61, crawlerURLArray60);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet63 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray64 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet65 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet65, hTMLPageResponseArray64);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult67 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet61, hTMLPageResponseSet63, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet65);
        java.lang.String str68 = crawlerResult67.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet69 = crawlerResult67.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet70 = crawlerResult67.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult71 = new com.soulgalore.crawler.core.CrawlerResult("CrawlerURL url:urls.txt", crawlerURLSet38, hTMLPageResponseSet55, hTMLPageResponseSet70);
        java.lang.String str72 = crawlerResult71.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet73 = crawlerResult71.getUrls();
        java.lang.String str74 = crawlerResult71.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet75 = crawlerResult71.getNonWorkingUrls();
        boolean boolean76 = assetResponse4.equals((java.lang.Object) crawlerResult71);
        java.lang.String str77 = assetResponse4.getReferer();
        int int78 = assetResponse4.getResponseCode();
        int int79 = assetResponse4.getResponseCode();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "100" + "'", str15, "100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "100" + "'", str16, "100");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(crawlerURLArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet33);
        org.junit.Assert.assertNotNull(crawlerURLSet34);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet35);
        org.junit.Assert.assertNotNull(crawlerURLSet36);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet37);
        org.junit.Assert.assertNotNull(crawlerURLSet38);
        org.junit.Assert.assertNotNull(crawlerURLArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet52);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet55);
        org.junit.Assert.assertNotNull(crawlerURLArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet69);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet70);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "CrawlerURL url:urls.txt" + "'", str72, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertNotNull(crawlerURLSet73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "CrawlerURL url:urls.txt" + "'", str74, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "100" + "'", str77, "100");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
    }

    @Test
    public void test05262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05262");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setRequestHeaders("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setNotOnPath("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test05263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05263");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher6 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL9 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean10 = crawlerURL9.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration17 = builder12.build();
        java.lang.String str18 = crawlerConfiguration17.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = crawlerConfiguration17.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse25 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL9, (-1), strMap19, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI30 = crawlerURL29.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL34 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean35 = crawlerURL34.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = builder37.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder41 = builder37.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration42 = builder37.build();
        java.lang.String str43 = crawlerConfiguration42.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = crawlerConfiguration42.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse50 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL34, (-1), strMap44, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse56 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, 100, strMap44, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse62 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL9, (int) (byte) 10, strMap44, "100", "errorassets.csv", (long) (byte) 100, "", (long) (short) 100);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable64 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("result.csv", assetFetcher6, strMap44, "com.soulgalore.crawler.nrofhttpthreads");
        java.lang.String str65 = assetResponseCallable64.toString();
        java.lang.String str66 = assetResponseCallable64.toString();
        boolean boolean67 = crawlerConfiguration3.equals((java.lang.Object) str66);
        java.lang.String str68 = crawlerConfiguration3.getNotOnPath();
        int int69 = crawlerConfiguration3.getMaxLevels();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(crawlerConfiguration17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(uRI30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(crawlerConfiguration42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "AssetResponseCallable url:result.csv" + "'", str65, "AssetResponseCallable url:result.csv");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "AssetResponseCallable url:result.csv" + "'", str66, "AssetResponseCallable url:result.csv");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
    }

    @Test
    public void test05264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05264");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = hTMLPageResponse12.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        org.jsoup.nodes.Document document17 = hTMLPageResponse12.getBody();
        java.lang.String str18 = hTMLPageResponse12.getResponseType();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean23 = crawlerURL22.isWrongSyntax();
        java.lang.String str24 = crawlerURL22.getHost();
        java.lang.String str25 = crawlerURL22.getReferer();
        java.lang.String str26 = crawlerURL22.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder28.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder28.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration33 = builder28.build();
        int int34 = crawlerConfiguration33.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil35 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean36 = crawlerConfiguration33.equals((java.lang.Object) headerUtil35);
        java.util.Map<java.lang.String, java.lang.String> strMap38 = headerUtil35.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap40 = headerUtil35.createHeadersFromString("CrawlerURL url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap42 = headerUtil35.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap44 = headerUtil35.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse50 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL22, 582, strMap44, "HTMLPageResponseurl:AssetResponseCallable url:Malformed urlresponseCode:581encoding:Unknown error type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads", "CrawlerURL url:-1", (long) 10, "com.soulgalore.crawler.proxy", (long) (-1));
        boolean boolean51 = crawlerURL19.equals((java.lang.Object) 10);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertNull(document17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(crawlerURL19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "urls.txt" + "'", str25, "urls.txt");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "com.soulgalore.crawler.auth" + "'", str26, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(crawlerConfiguration33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(headerUtil35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test05265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05265");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("52", "CrawlerURL url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
    }

    @Test
    public void test05266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05266");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.toString();
        java.lang.String str14 = hTMLPageResponse12.getResponseType();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        java.lang.String str17 = hTMLPageResponse12.getResponseType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str13, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test05267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05267");
        com.soulgalore.crawler.guice.ExecutorServiceProvider executorServiceProvider1 = new com.soulgalore.crawler.guice.ExecutorServiceProvider(32);
        java.util.concurrent.ExecutorService executorService2 = executorServiceProvider1.get();
        java.util.concurrent.ExecutorService executorService3 = executorServiceProvider1.get();
        java.util.concurrent.ExecutorService executorService4 = executorServiceProvider1.get();
        org.junit.Assert.assertNotNull(executorService2);
        org.junit.Assert.assertNotNull(executorService3);
        org.junit.Assert.assertNotNull(executorService4);
    }

    @Test
    public void test05268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05268");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder3 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder3.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration6 = builder5.build();
        java.lang.String str7 = crawlerConfiguration6.getStartUrl();
        int int8 = crawlerConfiguration6.getMaxLevels();
        int int9 = crawlerConfiguration6.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean13 = crawlerURL12.isWrongSyntax();
        java.lang.String str14 = crawlerURL12.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse22 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL12, (int) 'a', strMap16, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str23 = hTMLPageResponse22.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = hTMLPageResponse22.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = hTMLPageResponse22.getResponseHeaders();
        java.lang.String str26 = hTMLPageResponse22.getUrl();
        org.jsoup.nodes.Document document27 = hTMLPageResponse22.getBody();
        boolean boolean28 = crawlerConfiguration6.equals((java.lang.Object) hTMLPageResponse22);
        boolean boolean29 = crawlerURL1.equals((java.lang.Object) hTMLPageResponse22);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = hTMLPageResponse22.getResponseHeaders();
        long long31 = hTMLPageResponse22.getFetchTime();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = hTMLPageResponse22.getHeaderValue("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(crawlerConfiguration6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "urls.txt" + "'", str14, "urls.txt");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str23, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "com.soulgalore.crawler.auth" + "'", str26, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 100L + "'", long31 == 100L);
    }

    @Test
    public void test05269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05269");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        java.lang.String str6 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str8 = crawlerConfiguration3.getOnlyOnPath();
        java.lang.String str9 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str10 = crawlerConfiguration3.getOnlyOnPath();
        java.lang.String str11 = crawlerConfiguration3.getOnlyOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test05270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05270");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = assetsVerificationResult6.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray11 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, assetResponseArray11);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray14 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet15 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15, assetResponseArray14);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult17 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = assetsVerificationResult17.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult19 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet10, assetResponseSet18);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = assetsVerificationResult19.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet21 = assetsVerificationResult19.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = assetsVerificationResult19.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet23 = assetsVerificationResult19.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet24 = assetsVerificationResult19.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = assetsVerificationResult19.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet26 = assetsVerificationResult19.getWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseSet9);
        org.junit.Assert.assertNotNull(assetResponseSet10);
        org.junit.Assert.assertNotNull(assetResponseArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(assetResponseArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(assetResponseSet18);
        org.junit.Assert.assertNotNull(assetResponseSet20);
        org.junit.Assert.assertNotNull(assetResponseSet21);
        org.junit.Assert.assertNotNull(assetResponseSet22);
        org.junit.Assert.assertNotNull(assetResponseSet23);
        org.junit.Assert.assertNotNull(assetResponseSet24);
        org.junit.Assert.assertNotNull(assetResponseSet25);
        org.junit.Assert.assertNotNull(assetResponseSet26);
    }

    @Test
    public void test05271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05271");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean14 = assetResponse4.equals((java.lang.Object) 100L);
        java.lang.String str15 = assetResponse4.getReferer();
        long long16 = assetResponse4.getFetchTime();
        java.lang.String str17 = assetResponse4.getReferer();
        java.lang.String str18 = assetResponse4.getUrl();
        long long19 = assetResponse4.getFetchTime();
        int int20 = assetResponse4.getResponseCode();
        int int21 = assetResponse4.getResponseCode();
        int int22 = assetResponse4.getResponseCode();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "100" + "'", str15, "100");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "100" + "'", str17, "100");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
    }

    @Test
    public void test05272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05272");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setNotOnPath("AssetResponseCallable url:AssetResponseCallable url:Redirected to new domain");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration9 = builder6.build();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL11 = new com.soulgalore.crawler.core.CrawlerURL("Malformed url");
        boolean boolean12 = crawlerConfiguration9.equals((java.lang.Object) "Malformed url");
        java.lang.String str13 = crawlerConfiguration9.getStartUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(crawlerConfiguration9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test05273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05273");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setStartUrl("CrawlerURL url:urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setStartUrl("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setNotOnPath("HTMLPageResponseurl:hi!responseCode:52encoding:urls.txt type:CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
    }

    @Test
    public void test05274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05274");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int19 = hTMLPageResponse18.getResponseCode();
        long long20 = hTMLPageResponse18.getFetchTime();
        long long21 = hTMLPageResponse18.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI25 = crawlerURL24.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean30 = crawlerURL29.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder32.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration37 = builder32.build();
        java.lang.String str38 = crawlerConfiguration37.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = crawlerConfiguration37.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, (-1), strMap39, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse51 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL24, 100, strMap39, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        boolean boolean52 = hTMLPageResponse18.equals((java.lang.Object) 100);
        int int53 = hTMLPageResponse18.getResponseCode();
        java.lang.String str54 = hTMLPageResponse18.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL57 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean58 = crawlerURL57.isWrongSyntax();
        java.lang.String str59 = crawlerURL57.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap61 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse67 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL57, (int) 'a', strMap61, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder68 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder70 = builder68.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder72 = builder68.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder74 = builder68.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder76 = builder74.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder78 = builder76.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder80 = builder78.setVerifyUrls(false);
        boolean boolean81 = hTMLPageResponse67.equals((java.lang.Object) builder80);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder83 = builder80.setRequestHeaders("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        boolean boolean84 = hTMLPageResponse18.equals((java.lang.Object) builder83);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL85 = hTMLPageResponse18.getPageUrl();
        java.lang.String str86 = hTMLPageResponse18.getResponseType();
        int int87 = hTMLPageResponse18.getResponseCode();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 580L + "'", long20 == 580L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 580L + "'", long21 == 580L);
        org.junit.Assert.assertNull(uRI25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(crawlerConfiguration37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "com.soulgalore.crawler.auth" + "'", str54, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "urls.txt" + "'", str59, "urls.txt");
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(crawlerURL85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "com.soulgalore.crawler.auth" + "'", str86, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
    }

    @Test
    public void test05275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05275");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("Unknown error", "CrawlerURL url:urls.txt", 583, (long) 10);
        com.soulgalore.crawler.util.StatusCode statusCode5 = com.soulgalore.crawler.util.StatusCode.SC_MALFORMED_URI;
        java.lang.String str6 = statusCode5.getFriendlyName();
        boolean boolean7 = assetResponse4.equals((java.lang.Object) statusCode5);
        java.lang.String str8 = statusCode5.getFriendlyName();
        java.lang.String str9 = statusCode5.getFriendlyName();
        java.lang.String str10 = statusCode5.getFriendlyName();
        org.junit.Assert.assertTrue("'" + statusCode5 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_MALFORMED_URI + "'", statusCode5.equals(com.soulgalore.crawler.util.StatusCode.SC_MALFORMED_URI));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Malformed url" + "'", str6, "Malformed url");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Malformed url" + "'", str8, "Malformed url");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Malformed url" + "'", str9, "Malformed url");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Malformed url" + "'", str10, "Malformed url");
    }

    @Test
    public void test05276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05276");
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet1 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray6 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL5 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet7 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet7, crawlerURLArray6);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray10 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet11 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet11, hTMLPageResponseArray10);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult13 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet7, hTMLPageResponseSet9, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet11);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult13.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult13.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult13.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = crawlerResult13.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray22 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL21 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet23 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet23, crawlerURLArray22);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet25 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray26 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet27 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet27, hTMLPageResponseArray26);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult29 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet23, hTMLPageResponseSet25, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet27);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet30 = crawlerResult29.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet31 = crawlerResult29.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult32 = new com.soulgalore.crawler.core.CrawlerResult("CrawlerURL url:1", crawlerURLSet1, hTMLPageResponseSet17, hTMLPageResponseSet31);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet33 = crawlerResult32.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet34 = crawlerResult32.getNonWorkingUrls();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet35 = crawlerResult32.getUrls();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(crawlerURLArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet17);
        org.junit.Assert.assertNotNull(crawlerURLArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet30);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet31);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet33);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet34);
    }

    @Test
    public void test05277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05277");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.lang.String str13 = crawlerResult12.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet14 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult12.getUrls();
        java.lang.String str17 = crawlerResult12.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet18 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray23 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL22 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet24 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, crawlerURLArray23);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray27 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet28 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28, hTMLPageResponseArray27);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult30 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, hTMLPageResponseSet26, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet31 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet32 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet33 = crawlerResult30.getUrls();
        java.lang.String str34 = crawlerResult30.getTheStartPoint();
        java.lang.String str35 = crawlerResult30.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet36 = crawlerResult30.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet37 = null;
        com.soulgalore.crawler.core.CrawlerResult crawlerResult38 = new com.soulgalore.crawler.core.CrawlerResult("CrawlerURL url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", crawlerURLSet18, hTMLPageResponseSet36, hTMLPageResponseSet37);
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet18);
        org.junit.Assert.assertNotNull(crawlerURLArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet31);
        org.junit.Assert.assertNotNull(crawlerURLSet32);
        org.junit.Assert.assertNotNull(crawlerURLSet33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet36);
    }

    @Test
    public void test05278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05278");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("AssetResponseCallable url:AssetResponseCallable url:Wrong content type");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:AssetResponseCallable url:AssetResponseCallable url:Wrong content type");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
    }

    @Test
    public void test05279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05279");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.lang.String str5 = crawlerURL2.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder9.build();
        java.lang.String str11 = crawlerConfiguration10.getStartUrl();
        int int12 = crawlerConfiguration10.getMaxLevels();
        int int13 = crawlerConfiguration10.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse20 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (byte) -1, strMap14, "100", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) (short) -1, "com.soulgalore.crawler.nrofhttpthreads", 0L);
        java.lang.String str21 = crawlerURL2.getUrl();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher24 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher26 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher28 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil29 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = headerUtil29.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable33 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher28, strMap31, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable35 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("com.soulgalore.crawler.auth", assetFetcher26, strMap31, "urls.txt");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable37 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("CrawlerURL url:10", assetFetcher24, strMap31, "errorurls.txt");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse43 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (byte) 1, strMap31, "HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (long) 10, "Malformed url", (long) 10);
        java.lang.String str44 = hTMLPageResponse43.toString();
        java.lang.String str46 = hTMLPageResponse43.getHeaderValue("Unknown error");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse51 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int52 = assetResponse51.getResponseCode();
        int int53 = assetResponse51.getResponseCode();
        int int54 = assetResponse51.getResponseCode();
        java.lang.String str55 = assetResponse51.getUrl();
        long long56 = assetResponse51.getFetchTime();
        boolean boolean57 = hTMLPageResponse43.equals((java.lang.Object) long56);
        long long58 = hTMLPageResponse43.getFetchTime();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "urls.txt" + "'", str5, "urls.txt");
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "com.soulgalore.crawler.auth" + "'", str21, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(headerUtil29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url" + "'", str44, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 10L + "'", long58 == 10L);
    }

    @Test
    public void test05280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05280");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder2.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setNotOnPath("0");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration8 = builder7.build();
        java.lang.String str9 = crawlerConfiguration8.getOnlyOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(crawlerConfiguration8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test05281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05281");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder13.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder13.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setVerifyUrls(false);
        boolean boolean26 = hTMLPageResponse12.equals((java.lang.Object) builder25);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder25.setOnlyOnPath("HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder28.setNotOnPath("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder28.setRequestHeaders("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setVerifyUrls(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
    }

    @Test
    public void test05282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05282");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.lang.String str12 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet13 = crawlerResult11.getNonWorkingUrls();
        java.lang.String str14 = crawlerResult11.getTheStartPoint();
        java.lang.String str15 = crawlerResult11.getTheStartPoint();
        java.lang.String str16 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet17 = crawlerResult11.getUrls();
        java.lang.Class<?> wildcardClass18 = crawlerURLSet17.getClass();
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test05283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05283");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int19 = hTMLPageResponse18.getResponseCode();
        java.lang.String str20 = hTMLPageResponse18.getResponseType();
        java.lang.String str22 = hTMLPageResponse18.getHeaderValue("urls.txt");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL23 = hTMLPageResponse18.getPageUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder24.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder26.setMaxLevels((int) '4');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder28.setMaxLevels(583);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder28.setOnlyOnPath("Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration33 = builder32.build();
        java.lang.String str34 = crawlerConfiguration33.getStartUrl();
        java.lang.String str35 = crawlerConfiguration33.getStartUrl();
        boolean boolean36 = hTMLPageResponse18.equals((java.lang.Object) str35);
        long long37 = hTMLPageResponse18.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL38 = hTMLPageResponse18.getPageUrl();
        org.jsoup.nodes.Document document39 = hTMLPageResponse18.getBody();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "com.soulgalore.crawler.auth" + "'", str20, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(crawlerURL23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(crawlerConfiguration33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 580L + "'", long37 == 580L);
        org.junit.Assert.assertNotNull(crawlerURL38);
        org.junit.Assert.assertNull(document39);
    }

    @Test
    public void test05284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05284");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration8 = builder7.build();
        java.lang.String str9 = crawlerConfiguration8.getStartUrl();
        int int10 = crawlerConfiguration8.getMaxLevels();
        int int11 = crawlerConfiguration8.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration8.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (short) 10, strMap12, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        int int19 = hTMLPageResponse18.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = hTMLPageResponse18.getResponseHeaders();
        java.lang.String str22 = hTMLPageResponse18.getHeaderValue("");
        int int23 = hTMLPageResponse18.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = hTMLPageResponse18.getResponseHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = hTMLPageResponse18.getResponseHeaders();
        java.lang.String str26 = hTMLPageResponse18.getEncoding();
        org.jsoup.nodes.Document document27 = hTMLPageResponse18.getBody();
        java.lang.String str28 = hTMLPageResponse18.getResponseType();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(crawlerConfiguration8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str26, "com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertNull(document27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str28, "com.soulgalore.crawler.http.connection.timeout");
    }

    @Test
    public void test05285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05285");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        long long6 = assetResponse4.getFetchTime();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        java.lang.String str9 = assetResponse4.getUrl();
        long long10 = assetResponse4.getFetchTime();
        java.lang.Class<?> wildcardClass11 = assetResponse4.getClass();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test05286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05286");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        long long15 = hTMLPageResponse12.getFetchTime();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        long long17 = hTMLPageResponse12.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean21 = crawlerURL20.isWrongSyntax();
        java.lang.String str22 = crawlerURL20.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse30 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, (int) 'a', strMap24, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str31 = hTMLPageResponse30.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = hTMLPageResponse30.getResponseHeaders();
        java.lang.String str33 = hTMLPageResponse30.getEncoding();
        java.lang.String str34 = hTMLPageResponse30.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = builder35.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = builder35.setMaxLevels((int) (short) 0);
        boolean boolean40 = hTMLPageResponse30.equals((java.lang.Object) builder39);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = builder39.setOnlyOnPath("10");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder44 = builder39.setOnlyOnPath("AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder46 = builder39.setStartUrl("com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration47 = builder46.build();
        boolean boolean48 = hTMLPageResponse12.equals((java.lang.Object) builder46);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet49 = null;
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet50 = null;
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult51 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet49, assetResponseSet50);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet52 = assetsVerificationResult51.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet53 = assetsVerificationResult51.getNonWorkingAssets();
        boolean boolean54 = hTMLPageResponse12.equals((java.lang.Object) assetsVerificationResult51);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 100L + "'", long15 == 100L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 100L + "'", long17 == 100L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "urls.txt" + "'", str22, "urls.txt");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str31, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str33, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str34, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(crawlerConfiguration47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(assetResponseSet52);
        org.junit.Assert.assertNull(assetResponseSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test05287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05287");
        com.soulgalore.crawler.util.StatusCode statusCode0 = com.soulgalore.crawler.util.StatusCode.SC_MALFORMED_URI;
        java.lang.String str1 = statusCode0.getFriendlyName();
        java.lang.String str2 = statusCode0.getFriendlyName();
        int int3 = statusCode0.getCode();
        java.lang.String str4 = statusCode0.getFriendlyName();
        java.lang.String str5 = statusCode0.getFriendlyName();
        int int6 = statusCode0.getCode();
        org.junit.Assert.assertTrue("'" + statusCode0 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_MALFORMED_URI + "'", statusCode0.equals(com.soulgalore.crawler.util.StatusCode.SC_MALFORMED_URI));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Malformed url" + "'", str1, "Malformed url");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Malformed url" + "'", str2, "Malformed url");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 582 + "'", int3 == 582);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Malformed url" + "'", str4, "Malformed url");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Malformed url" + "'", str5, "Malformed url");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 582 + "'", int6 == 582);
    }

    @Test
    public void test05288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05288");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int19 = hTMLPageResponse18.getResponseCode();
        java.lang.String str20 = hTMLPageResponse18.getResponseType();
        java.lang.String str22 = hTMLPageResponse18.getHeaderValue("urls.txt");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL23 = hTMLPageResponse18.getPageUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder24.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder26.setMaxLevels((int) '4');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder28.setMaxLevels(583);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder28.setOnlyOnPath("Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration33 = builder32.build();
        java.lang.String str34 = crawlerConfiguration33.getStartUrl();
        java.lang.String str35 = crawlerConfiguration33.getStartUrl();
        boolean boolean36 = hTMLPageResponse18.equals((java.lang.Object) str35);
        long long37 = hTMLPageResponse18.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL38 = hTMLPageResponse18.getPageUrl();
        java.lang.String str39 = hTMLPageResponse18.getEncoding();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "com.soulgalore.crawler.auth" + "'", str20, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(crawlerURL23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(crawlerConfiguration33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 580L + "'", long37 == 580L);
        org.junit.Assert.assertNotNull(crawlerURL38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "errorurls.txt" + "'", str39, "errorurls.txt");
    }

    @Test
    public void test05289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05289");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:32encoding:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url type:com.soulgalore.crawler.http.connection.timeout");
        java.net.URI uRI3 = crawlerURL2.getUri();
        org.junit.Assert.assertNull(uRI3);
    }

    @Test
    public void test05290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05290");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.lang.String str5 = crawlerURL2.getHost();
        java.lang.String str6 = crawlerURL2.getHost();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse14 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) ' ', strMap8, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:-1encoding:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads type:AssetResponseCallable url:errorassets.csv", "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url", (long) 0, "com.soulgalore.crawler.http.connection.timeout", 0L);
        org.jsoup.nodes.Document document15 = hTMLPageResponse14.getBody();
        java.lang.String str16 = hTMLPageResponse14.getUrl();
        java.lang.String str17 = hTMLPageResponse14.getUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(document15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "com.soulgalore.crawler.auth" + "'", str17, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test05291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05291");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        java.lang.String str15 = crawlerURL14.getUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str13, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.auth" + "'", str15, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test05292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05292");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration5.getRequestHeadersMap();
        java.lang.String str8 = crawlerConfiguration5.getNotOnPath();
        int int9 = crawlerConfiguration5.getMaxLevels();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray10 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet11 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet11, assetResponseArray10);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray13 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet14 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet14, assetResponseArray13);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult16 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet11, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet14);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet17 = assetsVerificationResult16.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = assetsVerificationResult16.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet19 = assetsVerificationResult16.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = assetsVerificationResult16.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray21 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, assetResponseArray21);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray24 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet25, assetResponseArray24);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult27 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet25);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet28 = assetsVerificationResult27.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = assetsVerificationResult27.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray30 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet31 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet31, assetResponseArray30);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray33 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet34 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet34, assetResponseArray33);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult36 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet31, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet34);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult37 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet29, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet31);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult38 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet20, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet31);
        boolean boolean39 = crawlerConfiguration5.equals((java.lang.Object) assetResponseSet31);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = null;
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult41 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet31, assetResponseSet40);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet42 = assetsVerificationResult41.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray43 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet44 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet44, assetResponseArray43);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray46 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet47 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet47, assetResponseArray46);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult49 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet44, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet47);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet50 = assetsVerificationResult49.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray51 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet52 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet52, assetResponseArray51);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray54 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet55 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet55, assetResponseArray54);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult57 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet52, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet55);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult58 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet50, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet55);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult59 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet42, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet55);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(assetResponseArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(assetResponseArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(assetResponseSet17);
        org.junit.Assert.assertNotNull(assetResponseSet18);
        org.junit.Assert.assertNotNull(assetResponseSet19);
        org.junit.Assert.assertNotNull(assetResponseSet20);
        org.junit.Assert.assertNotNull(assetResponseArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(assetResponseArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(assetResponseSet28);
        org.junit.Assert.assertNotNull(assetResponseSet29);
        org.junit.Assert.assertNotNull(assetResponseArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(assetResponseArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(assetResponseSet42);
        org.junit.Assert.assertNotNull(assetResponseArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(assetResponseArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(assetResponseSet50);
        org.junit.Assert.assertNotNull(assetResponseArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(assetResponseArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test05293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05293");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean6 = crawlerURL5.isWrongSyntax();
        java.lang.String str7 = crawlerURL5.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse15 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (int) 'a', strMap9, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str16 = hTMLPageResponse15.getUrl();
        boolean boolean17 = crawlerURL1.equals((java.lang.Object) str16);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher20 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil21 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = headerUtil21.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable25 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher20, strMap23, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse31 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) 100, strMap23, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        long long32 = hTMLPageResponse31.getFetchTime();
        org.jsoup.nodes.Document document33 = hTMLPageResponse31.getBody();
        long long34 = hTMLPageResponse31.getFetchTime();
        org.jsoup.nodes.Document document35 = hTMLPageResponse31.getBody();
        java.lang.String str37 = hTMLPageResponse31.getHeaderValue("errorurls.txt");
        int int38 = hTMLPageResponse31.getResponseCode();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "urls.txt" + "'", str7, "urls.txt");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(headerUtil21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 100L + "'", long32 == 100L);
        org.junit.Assert.assertNull(document33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 100L + "'", long34 == 100L);
        org.junit.Assert.assertNull(document35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
    }

    @Test
    public void test05294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05294");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet12 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult11.getUrls();
        java.lang.String str15 = crawlerResult11.getTheStartPoint();
        java.lang.String str16 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet17 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet18 = crawlerResult11.getNonWorkingUrls();
        java.lang.String str19 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet20 = crawlerResult11.getUrls();
        java.lang.Class<?> wildcardClass21 = crawlerResult11.getClass();
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet12);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet17);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test05295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05295");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int13 = hTMLPageResponse12.getResponseCode();
        java.lang.String str14 = hTMLPageResponse12.getResponseType();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL15 = hTMLPageResponse12.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str17 = hTMLPageResponse12.toString();
        java.lang.String str18 = hTMLPageResponse12.getUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(crawlerURL15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str17, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.auth" + "'", str18, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test05296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05296");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.http.socket.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder4.build();
        java.lang.String str6 = crawlerConfiguration5.getStartUrl();
        int int7 = crawlerConfiguration5.getMaxLevels();
        int int8 = crawlerConfiguration5.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL11 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean12 = crawlerURL11.isWrongSyntax();
        java.lang.String str13 = crawlerURL11.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse21 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL11, (int) 'a', strMap15, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str22 = hTMLPageResponse21.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL23 = hTMLPageResponse21.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = hTMLPageResponse21.getResponseHeaders();
        java.lang.String str25 = hTMLPageResponse21.getUrl();
        org.jsoup.nodes.Document document26 = hTMLPageResponse21.getBody();
        boolean boolean27 = crawlerConfiguration5.equals((java.lang.Object) hTMLPageResponse21);
        java.util.Map<java.lang.String, java.lang.String> strMap28 = crawlerConfiguration5.getRequestHeadersMap();
        boolean boolean29 = crawlerURL1.equals((java.lang.Object) strMap28);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL32 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI33 = crawlerURL32.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL37 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean38 = crawlerURL37.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = builder40.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder44 = builder40.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration45 = builder40.build();
        java.lang.String str46 = crawlerConfiguration45.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = crawlerConfiguration45.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse53 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL37, (-1), strMap47, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse59 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL32, 100, strMap47, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.lang.String str60 = hTMLPageResponse59.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL61 = hTMLPageResponse59.getPageUrl();
        java.lang.String str62 = crawlerURL61.getUrl();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher65 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL68 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "Response timed out");
        com.soulgalore.crawler.util.HeaderUtil headerUtil70 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap72 = headerUtil70.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse78 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL68, (int) '4', strMap72, "com.soulgalore.crawler.http.socket.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 580, "com.soulgalore.crawler.auth", (long) (short) 1);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable80 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:Malformed url", assetFetcher65, strMap72, "0");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse86 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL61, (int) (byte) 0, strMap72, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:0 type:", 100L, "", 32L);
        java.lang.String str87 = crawlerURL61.toString();
        boolean boolean88 = crawlerURL1.equals((java.lang.Object) str87);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "urls.txt" + "'", str13, "urls.txt");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str22, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "com.soulgalore.crawler.auth" + "'", str25, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(uRI33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(crawlerConfiguration45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "com.soulgalore.crawler.auth" + "'", str60, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "com.soulgalore.crawler.auth" + "'", str62, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(headerUtil70);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str87, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test05297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05297");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration8 = builder7.build();
        java.lang.String str9 = crawlerConfiguration8.getStartUrl();
        int int10 = crawlerConfiguration8.getMaxLevels();
        int int11 = crawlerConfiguration8.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration8.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (short) 10, strMap12, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        java.lang.String str19 = hTMLPageResponse18.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder20.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder20.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder20.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration27 = builder20.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder20.setVerifyUrls(true);
        boolean boolean30 = hTMLPageResponse18.equals((java.lang.Object) builder29);
        java.lang.String str31 = hTMLPageResponse18.getEncoding();
        long long32 = hTMLPageResponse18.getFetchTime();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(crawlerConfiguration8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout" + "'", str19, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(crawlerConfiguration27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str31, "com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 580L + "'", long32 == 580L);
    }

    @Test
    public void test05298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05298");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder13.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder13.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setVerifyUrls(false);
        boolean boolean26 = hTMLPageResponse12.equals((java.lang.Object) builder25);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str28 = hTMLPageResponse12.getResponseType();
        java.lang.String str29 = hTMLPageResponse12.toString();
        java.lang.String str30 = hTMLPageResponse12.toString();
        java.lang.String str31 = hTMLPageResponse12.getUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str29, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str30, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "com.soulgalore.crawler.auth" + "'", str31, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test05299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05299");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        int int5 = crawlerConfiguration3.getMaxLevels();
        int int6 = crawlerConfiguration3.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str8 = crawlerConfiguration3.getStartUrl();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int14 = assetResponse13.getResponseCode();
        int int15 = assetResponse13.getResponseCode();
        long long16 = assetResponse13.getFetchTime();
        long long17 = assetResponse13.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse22 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean23 = assetResponse13.equals((java.lang.Object) 100L);
        java.lang.String str24 = assetResponse13.getReferer();
        java.lang.String str25 = assetResponse13.getReferer();
        long long26 = assetResponse13.getFetchTime();
        boolean boolean27 = crawlerConfiguration3.equals((java.lang.Object) assetResponse13);
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse32 = new com.soulgalore.crawler.core.assets.AssetResponse("", "1", (int) (short) 10, (long) '#');
        int int33 = assetResponse32.getResponseCode();
        boolean boolean34 = crawlerConfiguration3.equals((java.lang.Object) assetResponse32);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL36 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI37 = crawlerURL36.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL40 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean41 = crawlerURL40.isWrongSyntax();
        java.lang.String str42 = crawlerURL40.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse50 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL40, (int) 'a', strMap44, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str51 = hTMLPageResponse50.getUrl();
        boolean boolean52 = crawlerURL36.equals((java.lang.Object) str51);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher55 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil56 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap58 = headerUtil56.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable60 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher55, strMap58, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse66 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL36, (int) (short) 100, strMap58, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher69 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder70 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder72 = builder70.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder74 = builder70.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration75 = builder70.build();
        int int76 = crawlerConfiguration75.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil77 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean78 = crawlerConfiguration75.equals((java.lang.Object) headerUtil77);
        java.util.Map<java.lang.String, java.lang.String> strMap80 = headerUtil77.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap82 = headerUtil77.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable84 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", assetFetcher69, strMap82, "Unknown error");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse90 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL36, (int) (short) -1, strMap82, "CrawlerURL url:10", "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", (long) (byte) -1, "AssetResponseCallable url:errorassets.csv", (long) (byte) 1);
        boolean boolean91 = crawlerConfiguration3.equals((java.lang.Object) hTMLPageResponse90);
        java.util.Map<java.lang.String, java.lang.String> strMap92 = hTMLPageResponse90.getResponseHeaders();
        java.lang.String str93 = hTMLPageResponse90.getUrl();
        java.lang.String str94 = hTMLPageResponse90.getUrl();
        long long95 = hTMLPageResponse90.getFetchTime();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "100" + "'", str24, "100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "100" + "'", str25, "100");
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(uRI37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "urls.txt" + "'", str42, "urls.txt");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "com.soulgalore.crawler.auth" + "'", str51, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(headerUtil56);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(crawlerConfiguration75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(headerUtil77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str93, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str94, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertTrue("'" + long95 + "' != '" + 1L + "'", long95 == 1L);
    }

    @Test
    public void test05300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05300");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.lang.String str5 = crawlerConfiguration3.getStartUrl();
        java.lang.String str6 = crawlerConfiguration3.getOnlyOnPath();
        boolean boolean7 = crawlerConfiguration3.isVerifyUrls();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test05301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05301");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getOnlyOnPath();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        int int6 = crawlerConfiguration3.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str8 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str9 = crawlerConfiguration3.getOnlyOnPath();
        java.lang.String str10 = crawlerConfiguration3.getRequestHeaders();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test05302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05302");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        int int5 = crawlerConfiguration3.getMaxLevels();
        int int6 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        int int8 = crawlerConfiguration3.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder9.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration14 = builder9.build();
        int int15 = crawlerConfiguration14.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil16 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean17 = crawlerConfiguration14.equals((java.lang.Object) headerUtil16);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = headerUtil16.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap21 = headerUtil16.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.util.Map<java.lang.String, java.lang.String> strMap23 = headerUtil16.createHeadersFromString("AssetResponseCallable url:result.csv");
        boolean boolean24 = crawlerConfiguration3.equals((java.lang.Object) strMap23);
        java.lang.String str25 = crawlerConfiguration3.getNotOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = crawlerConfiguration3.getRequestHeadersMap();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL30 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray31 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL30 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet32 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet32, crawlerURLArray31);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet34 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray35 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet36 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet36, hTMLPageResponseArray35);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult38 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet32, hTMLPageResponseSet34, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet36);
        java.lang.String str39 = crawlerResult38.getTheStartPoint();
        java.lang.String str40 = crawlerResult38.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet41 = crawlerResult38.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet42 = crawlerResult38.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet43 = crawlerResult38.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet44 = crawlerResult38.getNonWorkingUrls();
        java.lang.String str45 = crawlerResult38.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet46 = crawlerResult38.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet47 = crawlerResult38.getNonWorkingUrls();
        boolean boolean48 = crawlerConfiguration3.equals((java.lang.Object) hTMLPageResponseSet47);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(crawlerConfiguration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(headerUtil16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(crawlerURLArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet41);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet42);
        org.junit.Assert.assertNotNull(crawlerURLSet43);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet46);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test05303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05303");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        int int5 = crawlerConfiguration3.getMaxLevels();
        int int6 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        int int8 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str9 = crawlerConfiguration3.getOnlyOnPath();
        boolean boolean10 = crawlerConfiguration3.isVerifyUrls();
        java.lang.String str11 = crawlerConfiguration3.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test05304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05304");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet12 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet16 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet17 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet18 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet19 = crawlerResult11.getUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet12);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet16);
        org.junit.Assert.assertNotNull(crawlerURLSet17);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet18);
        org.junit.Assert.assertNotNull(crawlerURLSet19);
    }

    @Test
    public void test05305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05305");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider(100, (int) (byte) -1, (int) (short) 10, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"AssetResponseCallable url\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05306");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int19 = hTMLPageResponse18.getResponseCode();
        long long20 = hTMLPageResponse18.getFetchTime();
        long long21 = hTMLPageResponse18.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI25 = crawlerURL24.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean30 = crawlerURL29.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder32.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration37 = builder32.build();
        java.lang.String str38 = crawlerConfiguration37.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = crawlerConfiguration37.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, (-1), strMap39, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse51 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL24, 100, strMap39, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        boolean boolean52 = hTMLPageResponse18.equals((java.lang.Object) 100);
        org.jsoup.nodes.Document document53 = hTMLPageResponse18.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL56 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "com.soulgalore.crawler.auth");
        java.lang.String str57 = crawlerURL56.toString();
        boolean boolean58 = hTMLPageResponse18.equals((java.lang.Object) str57);
        java.lang.String str59 = hTMLPageResponse18.getEncoding();
        long long60 = hTMLPageResponse18.getFetchTime();
        java.lang.String str61 = hTMLPageResponse18.getResponseType();
        java.lang.String str63 = hTMLPageResponse18.getHeaderValue("CrawlerURL url:Wrong content type");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 580L + "'", long20 == 580L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 580L + "'", long21 == 580L);
        org.junit.Assert.assertNull(uRI25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(crawlerConfiguration37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(document53);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "CrawlerURL url:urls.txt" + "'", str57, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "errorurls.txt" + "'", str59, "errorurls.txt");
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 580L + "'", long60 == 580L);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "com.soulgalore.crawler.auth" + "'", str61, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(str63);
    }

    @Test
    public void test05307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05307");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet4 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet6 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet8 = authUtil0.createAuthsFromString("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet10 = authUtil0.createAuthsFromString("AssetResponseCallable url:errorassets.csv");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:AssetResponseCallable url:errorassets.csv");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
        org.junit.Assert.assertNotNull(authSet2);
        org.junit.Assert.assertNotNull(authSet4);
        org.junit.Assert.assertNotNull(authSet6);
        org.junit.Assert.assertNotNull(authSet8);
    }

    @Test
    public void test05308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05308");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder10.build();
        java.lang.String str12 = crawlerConfiguration11.getRequestHeaders();
        java.lang.String str13 = crawlerConfiguration11.getRequestHeaders();
        java.lang.String str14 = crawlerConfiguration11.getStartUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str14, "com.soulgalore.crawler.http.connection.timeout");
    }

    @Test
    public void test05309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05309");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean6 = crawlerURL5.isWrongSyntax();
        java.lang.String str7 = crawlerURL5.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse15 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (int) 'a', strMap9, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str16 = hTMLPageResponse15.getUrl();
        boolean boolean17 = crawlerURL1.equals((java.lang.Object) str16);
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse22 = new com.soulgalore.crawler.core.assets.AssetResponse("", "errorurls.txt", 97, (-1L));
        java.lang.String str23 = assetResponse22.getReferer();
        int int24 = assetResponse22.getResponseCode();
        boolean boolean25 = crawlerURL1.equals((java.lang.Object) int24);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI30 = crawlerURL29.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration35 = builder34.build();
        java.lang.String str36 = crawlerConfiguration35.getStartUrl();
        int int37 = crawlerConfiguration35.getMaxLevels();
        int int38 = crawlerConfiguration35.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = crawlerConfiguration35.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, (int) (short) 10, strMap39, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        int int46 = hTMLPageResponse45.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = hTMLPageResponse45.getResponseHeaders();
        java.lang.String str49 = hTMLPageResponse45.getHeaderValue("");
        java.util.Map<java.lang.String, java.lang.String> strMap50 = hTMLPageResponse45.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse56 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 100, strMap50, "52", "HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", (long) (short) 0, "", (long) 582);
        java.lang.String str57 = hTMLPageResponse56.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL60 = new com.soulgalore.crawler.core.CrawlerURL("-1", "com.soulgalore.crawler.auth");
        java.lang.String str61 = crawlerURL60.getUrl();
        boolean boolean62 = hTMLPageResponse56.equals((java.lang.Object) crawlerURL60);
        java.lang.String str63 = crawlerURL60.getReferer();
        boolean boolean64 = crawlerURL60.isWrongSyntax();
        java.lang.String str65 = crawlerURL60.getUrl();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "urls.txt" + "'", str7, "urls.txt");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "errorurls.txt" + "'", str23, "errorurls.txt");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 97 + "'", int24 == 97);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(uRI30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(crawlerConfiguration35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:" + "'", str57, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "-1" + "'", str61, "-1");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "com.soulgalore.crawler.auth" + "'", str63, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "-1" + "'", str65, "-1");
    }

    @Test
    public void test05310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05310");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider(580, 0, (int) (byte) 100, "errorurls.txt", "HTMLPageResponseurl:responseCode:308encoding:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt type:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:errorurls.txt");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05311");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder4.setOnlyOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setMaxLevels((int) (byte) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder12.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder12.setNotOnPath("AssetResponseCallable url:Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder12.setStartUrl("AssetResponseCallable url:Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder19.setStartUrl("AssetResponseCallable url:CrawlerURL url:10");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
    }

    @Test
    public void test05312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05312");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        java.lang.String str3 = crawlerURL1.getUrl();
        java.lang.String str4 = crawlerURL1.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder5.setNotOnPath("AssetResponseCallable url:errorassets.csv");
        boolean boolean12 = crawlerURL1.equals((java.lang.Object) builder11);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder11.setOnlyOnPath("HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setStartUrl("AssetResponseCallable url:");
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str3, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str4, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test05313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05313");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean9 = crawlerURL8.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder11.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration16 = builder11.build();
        java.lang.String str17 = crawlerConfiguration16.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = crawlerConfiguration16.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse24 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL8, (-1), strMap18, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int25 = hTMLPageResponse24.getResponseCode();
        long long26 = hTMLPageResponse24.getFetchTime();
        long long27 = hTMLPageResponse24.getFetchTime();
        boolean boolean28 = crawlerConfiguration3.equals((java.lang.Object) hTMLPageResponse24);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = hTMLPageResponse24.getPageUrl();
        java.lang.String str30 = hTMLPageResponse24.toString();
        org.jsoup.nodes.Document document31 = hTMLPageResponse24.getBody();
        java.lang.String str32 = hTMLPageResponse24.toString();
        int int33 = hTMLPageResponse24.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = hTMLPageResponse24.getResponseHeaders();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(crawlerConfiguration16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 580L + "'", long26 == 580L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 580L + "'", long27 == 580L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(crawlerURL29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth" + "'", str30, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth" + "'", str32, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strMap34);
    }

    @Test
    public void test05314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05314");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider(0, 1, 308, "AssetResponseCallable url:", "com.soulgalore.crawler.http.socket.timeout");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:AssetResponseCallable url:");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05315");
        com.soulgalore.crawler.guice.ExecutorServiceProvider executorServiceProvider1 = new com.soulgalore.crawler.guice.ExecutorServiceProvider((int) (byte) 1);
        java.lang.Class<?> wildcardClass2 = executorServiceProvider1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test05316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05316");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getNotOnPath();
        java.lang.String str7 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str8 = crawlerConfiguration5.getOnlyOnPath();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("Response timed out", "0", 580, (long) (byte) -1);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL15 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI20 = crawlerURL19.getUri();
        java.lang.String str21 = crawlerURL19.getReferer();
        java.lang.String str22 = crawlerURL19.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder24.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration27 = builder26.build();
        java.lang.String str28 = crawlerConfiguration27.getStartUrl();
        int int29 = crawlerConfiguration27.getMaxLevels();
        int int30 = crawlerConfiguration27.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = crawlerConfiguration27.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse37 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL19, (int) (byte) -1, strMap31, "100", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) (short) -1, "com.soulgalore.crawler.nrofhttpthreads", 0L);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse43 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL15, 580, strMap31, "10", "HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", 580L, "0", (long) 0);
        boolean boolean44 = assetResponse13.equals((java.lang.Object) 0);
        java.lang.String str45 = assetResponse13.getUrl();
        boolean boolean46 = crawlerConfiguration5.equals((java.lang.Object) assetResponse13);
        java.lang.String str47 = assetResponse13.getUrl();
        java.lang.String str48 = assetResponse13.getReferer();
        java.lang.String str49 = assetResponse13.getUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(uRI20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "urls.txt" + "'", str21, "urls.txt");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "urls.txt" + "'", str22, "urls.txt");
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(crawlerConfiguration27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Response timed out" + "'", str45, "Response timed out");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Response timed out" + "'", str47, "Response timed out");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "0" + "'", str48, "0");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Response timed out" + "'", str49, "Response timed out");
    }

    @Test
    public void test05317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05317");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult6.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray9 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, assetResponseArray9);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray12 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13, assetResponseArray12);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult15 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult16 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet8, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray17 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, assetResponseArray17);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray20 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet21 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21, assetResponseArray20);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult23 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet24 = assetsVerificationResult23.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = assetsVerificationResult23.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet26 = assetsVerificationResult23.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet27 = assetsVerificationResult23.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray28 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, assetResponseArray28);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray31 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet32 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32, assetResponseArray31);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult34 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet35 = assetsVerificationResult34.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet36 = assetsVerificationResult34.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray37 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet38 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet38, assetResponseArray37);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray40 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet41, assetResponseArray40);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult43 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet38, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet41);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult44 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet36, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet38);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult45 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet27, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet38);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult46 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, assetResponseSet27);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray47 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet48 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet48, assetResponseArray47);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray50 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet51 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet51, assetResponseArray50);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult53 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet48, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet51);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet54 = assetsVerificationResult53.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet55 = assetsVerificationResult53.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet56 = assetsVerificationResult53.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet57 = assetsVerificationResult53.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet58 = assetsVerificationResult53.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet59 = assetsVerificationResult53.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet60 = assetsVerificationResult53.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult61 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, assetResponseSet60);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet62 = assetsVerificationResult61.getWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(assetResponseArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(assetResponseArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(assetResponseArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(assetResponseSet24);
        org.junit.Assert.assertNotNull(assetResponseSet25);
        org.junit.Assert.assertNotNull(assetResponseSet26);
        org.junit.Assert.assertNotNull(assetResponseSet27);
        org.junit.Assert.assertNotNull(assetResponseArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(assetResponseArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(assetResponseSet35);
        org.junit.Assert.assertNotNull(assetResponseSet36);
        org.junit.Assert.assertNotNull(assetResponseArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(assetResponseArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(assetResponseArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(assetResponseArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(assetResponseSet54);
        org.junit.Assert.assertNotNull(assetResponseSet55);
        org.junit.Assert.assertNotNull(assetResponseSet56);
        org.junit.Assert.assertNotNull(assetResponseSet57);
        org.junit.Assert.assertNotNull(assetResponseSet58);
        org.junit.Assert.assertNotNull(assetResponseSet59);
        org.junit.Assert.assertNotNull(assetResponseSet60);
        org.junit.Assert.assertNotNull(assetResponseSet62);
    }

    @Test
    public void test05318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05318");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult6.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray9 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, assetResponseArray9);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray12 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13, assetResponseArray12);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult15 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult16 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet8, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray17 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, assetResponseArray17);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray20 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet21 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21, assetResponseArray20);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult23 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet24 = assetsVerificationResult23.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = assetsVerificationResult23.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet26 = assetsVerificationResult23.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet27 = assetsVerificationResult23.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray28 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, assetResponseArray28);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray31 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet32 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32, assetResponseArray31);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult34 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet35 = assetsVerificationResult34.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet36 = assetsVerificationResult34.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray37 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet38 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet38, assetResponseArray37);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray40 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet41, assetResponseArray40);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult43 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet38, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet41);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult44 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet36, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet38);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult45 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet27, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet38);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult46 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, assetResponseSet27);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray47 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet48 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet48, assetResponseArray47);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray50 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet51 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet51, assetResponseArray50);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult53 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet48, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet51);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet54 = assetsVerificationResult53.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet55 = assetsVerificationResult53.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray56 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet57 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet57, assetResponseArray56);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray59 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet60 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet60, assetResponseArray59);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult62 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet57, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet60);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet63 = assetsVerificationResult62.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet64 = assetsVerificationResult62.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet65 = assetsVerificationResult62.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult66 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet55, assetResponseSet65);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult67 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet27, assetResponseSet65);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet68 = assetsVerificationResult67.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet69 = assetsVerificationResult67.getNonWorkingAssets();
        java.lang.Class<?> wildcardClass70 = assetResponseSet69.getClass();
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(assetResponseArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(assetResponseArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(assetResponseArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(assetResponseSet24);
        org.junit.Assert.assertNotNull(assetResponseSet25);
        org.junit.Assert.assertNotNull(assetResponseSet26);
        org.junit.Assert.assertNotNull(assetResponseSet27);
        org.junit.Assert.assertNotNull(assetResponseArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(assetResponseArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(assetResponseSet35);
        org.junit.Assert.assertNotNull(assetResponseSet36);
        org.junit.Assert.assertNotNull(assetResponseArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(assetResponseArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(assetResponseArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(assetResponseArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(assetResponseSet54);
        org.junit.Assert.assertNotNull(assetResponseSet55);
        org.junit.Assert.assertNotNull(assetResponseArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(assetResponseArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(assetResponseSet63);
        org.junit.Assert.assertNotNull(assetResponseSet64);
        org.junit.Assert.assertNotNull(assetResponseSet65);
        org.junit.Assert.assertNotNull(assetResponseSet68);
        org.junit.Assert.assertNotNull(assetResponseSet69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test05319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05319");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setMaxLevels((int) '4');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setMaxLevels(583);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration9 = builder8.build();
        boolean boolean10 = crawlerURL1.equals((java.lang.Object) builder8);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder11.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder11.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setMaxLevels((int) '#');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration24 = builder21.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder21.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder26.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder26.setOnlyOnPath("HTMLPageResponseurl:hi!responseCode:10encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        boolean boolean31 = crawlerURL1.equals((java.lang.Object) builder30);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(crawlerConfiguration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(crawlerConfiguration24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test05320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05320");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        long long14 = hTMLPageResponse12.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL15 = hTMLPageResponse12.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str17 = hTMLPageResponse12.getResponseType();
        int int18 = hTMLPageResponse12.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean23 = crawlerURL22.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL26 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean27 = crawlerURL26.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL30 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI31 = crawlerURL30.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray32 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL22, crawlerURL26, crawlerURL30 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet33 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet33, crawlerURLArray32);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray35 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet36 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet36, hTMLPageResponseArray35);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL41 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray42 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL41 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet43 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet43, crawlerURLArray42);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet45 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray46 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet47 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet47, hTMLPageResponseArray46);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult49 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet43, hTMLPageResponseSet45, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet47);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult50 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet33, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet36, hTMLPageResponseSet45);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet51 = crawlerResult50.getUrls();
        java.lang.String str52 = crawlerResult50.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet53 = crawlerResult50.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet54 = crawlerResult50.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet55 = crawlerResult50.getUrls();
        java.lang.String str56 = crawlerResult50.getTheStartPoint();
        boolean boolean57 = hTMLPageResponse12.equals((java.lang.Object) crawlerResult50);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet58 = crawlerResult50.getVerifiedURLResponses();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 100L + "'", long14 == 100L);
        org.junit.Assert.assertNotNull(crawlerURL15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 97 + "'", int18 == 97);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(uRI31);
        org.junit.Assert.assertNotNull(crawlerURLArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "com.soulgalore.crawler.auth" + "'", str52, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet53);
        org.junit.Assert.assertNotNull(crawlerURLSet54);
        org.junit.Assert.assertNotNull(crawlerURLSet55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "com.soulgalore.crawler.auth" + "'", str56, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet58);
    }

    @Test
    public void test05321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05321");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder0.build();
        java.lang.Object obj8 = null;
        boolean boolean9 = crawlerConfiguration7.equals(obj8);
        java.lang.String str10 = crawlerConfiguration7.getOnlyOnPath();
        int int11 = crawlerConfiguration7.getMaxLevels();
        java.lang.String str12 = crawlerConfiguration7.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = crawlerConfiguration7.getRequestHeadersMap();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strMap13);
    }

    @Test
    public void test05322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05322");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        boolean boolean22 = hTMLPageResponse12.equals((java.lang.Object) builder21);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL23 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher26 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI30 = crawlerURL29.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL34 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean35 = crawlerURL34.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = builder37.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder41 = builder37.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration42 = builder37.build();
        java.lang.String str43 = crawlerConfiguration42.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = crawlerConfiguration42.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse50 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL34, (-1), strMap44, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse56 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, 100, strMap44, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.util.Map<java.lang.String, java.lang.String> strMap57 = hTMLPageResponse56.getResponseHeaders();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable59 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("result.csv", assetFetcher26, strMap57, "-1");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse65 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL23, (int) '4', strMap57, "Wrong content type", "com.soulgalore.crawler.http.connection.timeout", (long) (short) 1, "errorassets.csv", (long) ' ');
        boolean boolean66 = crawlerURL23.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder68 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder70 = builder68.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder72 = builder68.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration73 = builder68.build();
        java.lang.String str74 = crawlerConfiguration73.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder75 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder77 = builder75.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration78 = builder77.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder80 = builder77.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder82 = builder80.setMaxLevels((int) '4');
        boolean boolean83 = crawlerConfiguration73.equals((java.lang.Object) builder82);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder85 = builder82.setOnlyOnPath("com.soulgalore.crawler.proxy");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder87 = builder85.setRequestHeaders("AssetResponseCallable url:errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder89 = builder85.setRequestHeaders("CrawlerURL url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration90 = builder89.build();
        java.util.Map<java.lang.String, java.lang.String> strMap91 = crawlerConfiguration90.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap92 = crawlerConfiguration90.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse98 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL23, (-1), strMap92, "AssetResponseCallable url:-1", "HTMLPageResponseurl:hi!responseCode:-1encoding:errorurls.txt type:result.csv", 0L, "AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", (long) 1);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL99 = hTMLPageResponse98.getPageUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(crawlerURL23);
        org.junit.Assert.assertNull(uRI30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(crawlerConfiguration42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(crawlerConfiguration73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(crawlerConfiguration78);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(crawlerConfiguration90);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNotNull(crawlerURL99);
    }

    @Test
    public void test05323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05323");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray20 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL19 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet21 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet21, crawlerURLArray20);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet23 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray24 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet25 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet25, hTMLPageResponseArray24);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult27 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet21, hTMLPageResponseSet23, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet25);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet28 = crawlerResult27.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet29 = crawlerResult27.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet30 = crawlerResult27.getUrls();
        java.lang.String str31 = crawlerResult27.getTheStartPoint();
        java.lang.String str32 = crawlerResult27.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet33 = crawlerResult27.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet34 = crawlerResult27.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray40 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL39 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, crawlerURLArray40);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet43 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray44 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet45 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45, hTMLPageResponseArray44);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult47 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, hTMLPageResponseSet43, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet48 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet49 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet50 = crawlerResult47.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet51 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet52 = crawlerResult47.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet53 = crawlerResult47.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL57 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray58 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL57 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet59 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet59, crawlerURLArray58);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet61 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray62 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet63 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet63, hTMLPageResponseArray62);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult65 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet59, hTMLPageResponseSet61, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet63);
        java.lang.String str66 = crawlerResult65.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet67 = crawlerResult65.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet68 = crawlerResult65.getNonWorkingUrls();
        java.lang.String str69 = crawlerResult65.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet70 = crawlerResult65.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL74 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray75 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL74 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet76 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet76, crawlerURLArray75);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet78 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray79 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet80 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet80, hTMLPageResponseArray79);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult82 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet76, hTMLPageResponseSet78, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet80);
        java.lang.String str83 = crawlerResult82.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet84 = crawlerResult82.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet85 = crawlerResult82.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult86 = new com.soulgalore.crawler.core.CrawlerResult("CrawlerURL url:urls.txt", crawlerURLSet53, hTMLPageResponseSet70, hTMLPageResponseSet85);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult87 = new com.soulgalore.crawler.core.CrawlerResult("32", crawlerURLSet15, hTMLPageResponseSet34, hTMLPageResponseSet70);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet88 = crawlerResult87.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet89 = crawlerResult87.getNonWorkingUrls();
        java.lang.String str90 = crawlerResult87.getTheStartPoint();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(crawlerURLArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet28);
        org.junit.Assert.assertNotNull(crawlerURLSet29);
        org.junit.Assert.assertNotNull(crawlerURLSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet33);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet34);
        org.junit.Assert.assertNotNull(crawlerURLArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet48);
        org.junit.Assert.assertNotNull(crawlerURLSet49);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet50);
        org.junit.Assert.assertNotNull(crawlerURLSet51);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet52);
        org.junit.Assert.assertNotNull(crawlerURLSet53);
        org.junit.Assert.assertNotNull(crawlerURLArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet67);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet70);
        org.junit.Assert.assertNotNull(crawlerURLArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet84);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet85);
        org.junit.Assert.assertNotNull(crawlerURLSet88);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "32" + "'", str90, "32");
    }

    @Test
    public void test05324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05324");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration5.getRequestHeadersMap();
        boolean boolean8 = crawlerConfiguration5.isVerifyUrls();
        java.lang.String str9 = crawlerConfiguration5.getStartUrl();
        boolean boolean10 = crawlerConfiguration5.isVerifyUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL13 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean14 = crawlerURL13.isWrongSyntax();
        java.lang.String str15 = crawlerURL13.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL13, (int) 'a', strMap17, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int24 = hTMLPageResponse23.getResponseCode();
        java.lang.String str25 = hTMLPageResponse23.getResponseType();
        java.lang.String str26 = hTMLPageResponse23.toString();
        java.lang.String str27 = hTMLPageResponse23.getEncoding();
        boolean boolean28 = crawlerConfiguration5.equals((java.lang.Object) hTMLPageResponse23);
        long long29 = hTMLPageResponse23.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL32 = new com.soulgalore.crawler.core.CrawlerURL("errorurls.txt", "Unknown error");
        java.lang.String str33 = crawlerURL32.getHost();
        boolean boolean34 = hTMLPageResponse23.equals((java.lang.Object) crawlerURL32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = hTMLPageResponse23.getResponseHeaders();
        java.lang.String str36 = hTMLPageResponse23.getResponseType();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "urls.txt" + "'", str15, "urls.txt");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 97 + "'", int24 == 97);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str26, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str27, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 100L + "'", long29 == 100L);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
    }

    @Test
    public void test05325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05325");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray21 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL20 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet22, crawlerURLArray21);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet24 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray25 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet26, hTMLPageResponseArray25);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult28 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet22, hTMLPageResponseSet24, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet26);
        java.lang.String str29 = crawlerResult28.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet30 = crawlerResult28.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet31 = crawlerResult28.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL35 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean36 = crawlerURL35.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean40 = crawlerURL39.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL43 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI44 = crawlerURL43.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray45 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL35, crawlerURL39, crawlerURL43 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet46 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet46, crawlerURLArray45);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray48 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet49 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet49, hTMLPageResponseArray48);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL54 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray55 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL54 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet56 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet56, crawlerURLArray55);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet58 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray59 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet60 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet60, hTMLPageResponseArray59);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult62 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet56, hTMLPageResponseSet58, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet60);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult63 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet46, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet49, hTMLPageResponseSet58);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet64 = crawlerResult63.getVerifiedURLResponses();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult65 = new com.soulgalore.crawler.core.CrawlerResult("errorurls.txt", crawlerURLSet16, hTMLPageResponseSet31, hTMLPageResponseSet64);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet66 = crawlerResult65.getUrls();
        java.lang.String str67 = crawlerResult65.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet68 = crawlerResult65.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet69 = crawlerResult65.getUrls();
        java.lang.String str70 = crawlerResult65.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet71 = crawlerResult65.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet72 = crawlerResult65.getNonWorkingUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertNotNull(crawlerURLArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet30);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(uRI44);
        org.junit.Assert.assertNotNull(crawlerURLArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet64);
        org.junit.Assert.assertNotNull(crawlerURLSet66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "errorurls.txt" + "'", str67, "errorurls.txt");
        org.junit.Assert.assertNotNull(crawlerURLSet68);
        org.junit.Assert.assertNotNull(crawlerURLSet69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "errorurls.txt" + "'", str70, "errorurls.txt");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet71);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet72);
    }

    @Test
    public void test05326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05326");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        long long15 = hTMLPageResponse12.getFetchTime();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        java.lang.String str17 = hTMLPageResponse12.getUrl();
        java.lang.String str18 = hTMLPageResponse12.getEncoding();
        long long19 = hTMLPageResponse12.getFetchTime();
        java.lang.String str20 = hTMLPageResponse12.toString();
        java.lang.String str21 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder22.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder22.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration27 = builder22.build();
        int int28 = crawlerConfiguration27.getMaxLevels();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray29 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet30 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30, assetResponseArray29);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray32 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet33 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33, assetResponseArray32);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult35 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray36 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet37 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37, assetResponseArray36);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray39 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40, assetResponseArray39);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult42 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet43 = assetsVerificationResult42.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult44 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33, assetResponseSet43);
        boolean boolean45 = crawlerConfiguration27.equals((java.lang.Object) assetResponseSet43);
        boolean boolean46 = hTMLPageResponse12.equals((java.lang.Object) boolean45);
        java.lang.String str47 = hTMLPageResponse12.getUrl();
        long long48 = hTMLPageResponse12.getFetchTime();
        java.lang.String str49 = hTMLPageResponse12.getEncoding();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 100L + "'", long15 == 100L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "com.soulgalore.crawler.auth" + "'", str17, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str18, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 100L + "'", long19 == 100L);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str20, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str21, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(crawlerConfiguration27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(assetResponseArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(assetResponseArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(assetResponseArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(assetResponseArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(assetResponseSet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "com.soulgalore.crawler.auth" + "'", str47, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 100L + "'", long48 == 100L);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str49, "com.soulgalore.crawler.http.socket.timeout");
    }

    @Test
    public void test05327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05327");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration8 = builder7.build();
        java.lang.String str9 = crawlerConfiguration8.getStartUrl();
        int int10 = crawlerConfiguration8.getMaxLevels();
        int int11 = crawlerConfiguration8.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration8.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (short) 10, strMap12, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        java.lang.String str20 = hTMLPageResponse18.getHeaderValue("com.soulgalore.crawler.nrofhttpthreads");
        java.lang.String str21 = hTMLPageResponse18.toString();
        org.jsoup.nodes.Document document22 = hTMLPageResponse18.getBody();
        int int23 = hTMLPageResponse18.getResponseCode();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse28 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        long long29 = assetResponse28.getFetchTime();
        long long30 = assetResponse28.getFetchTime();
        java.lang.String str31 = assetResponse28.getReferer();
        java.lang.String str32 = assetResponse28.getReferer();
        boolean boolean33 = hTMLPageResponse18.equals((java.lang.Object) str32);
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(crawlerConfiguration8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout" + "'", str21, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertNull(document22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 100L + "'", long29 == 100L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 100L + "'", long30 == 100L);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str31, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str32, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test05328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05328");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder0.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder0.setRequestHeaders("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration12 = builder9.build();
        java.lang.String str13 = crawlerConfiguration12.getRequestHeaders();
        boolean boolean14 = crawlerConfiguration12.isVerifyUrls();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(crawlerConfiguration12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test05329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05329");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean6 = crawlerURL5.isWrongSyntax();
        java.lang.String str7 = crawlerURL5.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse15 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (int) 'a', strMap9, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str16 = hTMLPageResponse15.getUrl();
        boolean boolean17 = crawlerURL1.equals((java.lang.Object) str16);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher20 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil21 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = headerUtil21.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable25 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher20, strMap23, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse31 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) 100, strMap23, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        org.jsoup.nodes.Document document32 = hTMLPageResponse31.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = hTMLPageResponse31.getPageUrl();
        java.lang.String str34 = hTMLPageResponse31.getEncoding();
        java.lang.String str36 = hTMLPageResponse31.getHeaderValue("com.soulgalore.crawler.proxy");
        long long37 = hTMLPageResponse31.getFetchTime();
        java.lang.String str38 = hTMLPageResponse31.getResponseType();
        int int39 = hTMLPageResponse31.getResponseCode();
        int int40 = hTMLPageResponse31.getResponseCode();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "urls.txt" + "'", str7, "urls.txt");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(headerUtil21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(document32);
        org.junit.Assert.assertNotNull(crawlerURL33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Unknown error" + "'", str34, "Unknown error");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 100L + "'", long37 == 100L);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "errorurls.txt" + "'", str38, "errorurls.txt");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
    }

    @Test
    public void test05330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05330");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder0.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder0.setRequestHeaders("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration12 = builder9.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder9.setStartUrl("CrawlerURL url:10");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder9.setNotOnPath("urls.txt");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(crawlerConfiguration12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test05331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05331");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder2.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration6 = builder5.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder5.setStartUrl("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder5.setRequestHeaders("AssetResponseCallable url:97");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setOnlyOnPath("AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration13 = builder10.build();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(crawlerConfiguration6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(crawlerConfiguration13);
    }

    @Test
    public void test05332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05332");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setStartUrl("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setMaxLevels(32);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setNotOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:32encoding:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder8.setMaxLevels(97);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder8.setRequestHeaders("AssetResponseCallable url:HTMLPageResponseurl:hi!responseCode:-1encoding:errorurls.txt type:result.csv");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test05333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05333");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setStartUrl("-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setNotOnPath("10");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setStartUrl("AssetResponseCallable url:urls.txt");
        java.lang.Class<?> wildcardClass11 = builder10.getClass();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test05334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05334");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI5 = crawlerURL4.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean9 = crawlerURL8.isWrongSyntax();
        java.lang.String str10 = crawlerURL8.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL8, (int) 'a', strMap12, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str19 = hTMLPageResponse18.getUrl();
        boolean boolean20 = crawlerURL4.equals((java.lang.Object) str19);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher23 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil24 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = headerUtil24.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable28 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher23, strMap26, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse34 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL4, (int) (short) 100, strMap26, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse40 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) -1, strMap26, "com.soulgalore.crawler.http.socket.timeout", "errorurls.txt", (long) 100, "result.csv", (long) (short) 0);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = hTMLPageResponse40.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL44 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI45 = crawlerURL44.getUri();
        java.net.URI uRI46 = crawlerURL44.getUri();
        java.net.URI uRI47 = crawlerURL44.getUri();
        java.net.URI uRI48 = crawlerURL44.getUri();
        boolean boolean49 = crawlerURL44.isWrongSyntax();
        java.lang.String str50 = crawlerURL44.getUrl();
        boolean boolean51 = hTMLPageResponse40.equals((java.lang.Object) str50);
        java.util.Map<java.lang.String, java.lang.String> strMap52 = hTMLPageResponse40.getResponseHeaders();
        org.jsoup.nodes.Document document53 = hTMLPageResponse40.getBody();
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "urls.txt" + "'", str10, "urls.txt");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "com.soulgalore.crawler.auth" + "'", str19, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(headerUtil24);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(uRI45);
        org.junit.Assert.assertNull(uRI46);
        org.junit.Assert.assertNull(uRI47);
        org.junit.Assert.assertNull(uRI48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "com.soulgalore.crawler.auth" + "'", str50, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(document53);
    }

    @Test
    public void test05335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05335");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setStartUrl("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setMaxLevels(32);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("AssetResponseCallable url:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setMaxLevels((int) '#');
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test05336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05336");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("52");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder2.setOnlyOnPath("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder2.setRequestHeaders("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder2.setRequestHeaders("CrawlerURL url:Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setOnlyOnPath("com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test05337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05337");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("errorassets.csv", "AssetResponseCallable url:result.csv");
        java.lang.String str3 = crawlerURL2.getReferer();
        boolean boolean4 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:urls.txt");
        java.lang.String str7 = crawlerURL6.getReferer();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL11 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray12 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL11 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet13, crawlerURLArray12);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray16 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet17, hTMLPageResponseArray16);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult19 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet13, hTMLPageResponseSet15, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet17);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet20 = crawlerResult19.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet21 = crawlerResult19.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet22 = crawlerResult19.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet23 = crawlerResult19.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet24 = crawlerResult19.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet25 = crawlerResult19.getNonWorkingUrls();
        java.lang.String str26 = crawlerResult19.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet27 = crawlerResult19.getUrls();
        boolean boolean28 = crawlerURL6.equals((java.lang.Object) crawlerResult19);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet29 = crawlerResult19.getNonWorkingUrls();
        boolean boolean30 = crawlerURL2.equals((java.lang.Object) crawlerResult19);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AssetResponseCallable url:result.csv" + "'", str3, "AssetResponseCallable url:result.csv");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(crawlerURLArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet20);
        org.junit.Assert.assertNotNull(crawlerURLSet21);
        org.junit.Assert.assertNotNull(crawlerURLSet22);
        org.junit.Assert.assertNotNull(crawlerURLSet23);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet24);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test05338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05338");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        long long15 = hTMLPageResponse12.getFetchTime();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        long long17 = hTMLPageResponse12.getFetchTime();
        long long18 = hTMLPageResponse12.getFetchTime();
        java.lang.String str19 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = hTMLPageResponse12.getResponseHeaders();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = hTMLPageResponse12.getHeaderValue("AssetResponseCallable url:35");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 100L + "'", long15 == 100L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 100L + "'", long17 == 100L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 100L + "'", long18 == 100L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str19, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap20);
    }

    @Test
    public void test05339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05339");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setMaxLevels((int) (short) -1);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration9 = builder8.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder8.setRequestHeaders("CrawlerURL url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(crawlerConfiguration9);
        org.junit.Assert.assertNotNull(builder11);
    }

    @Test
    public void test05340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05340");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet4 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet6 = authUtil0.createAuthsFromString("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet8 = authUtil0.createAuthsFromString("100");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:100");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
        org.junit.Assert.assertNotNull(authSet2);
        org.junit.Assert.assertNotNull(authSet4);
        org.junit.Assert.assertNotNull(authSet6);
    }

    @Test
    public void test05341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05341");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.auth", "AssetResponseCallable url:Redirected to new domain");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher5 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil6 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = headerUtil6.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil6.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil6.createHeadersFromString("AssetResponseCallable url:100");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable14 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("hi!", assetFetcher5, strMap12, "35");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse20 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "CrawlerURL url:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout", "", 582L, "result.csv", (long) (byte) 1);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL23 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean24 = crawlerURL23.isWrongSyntax();
        java.lang.String str25 = crawlerURL23.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse33 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL23, (int) 'a', strMap27, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        org.jsoup.nodes.Document document34 = hTMLPageResponse33.getBody();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = builder35.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = builder35.setMaxLevels((int) (short) 0);
        boolean boolean40 = hTMLPageResponse33.equals((java.lang.Object) builder35);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL41 = hTMLPageResponse33.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = hTMLPageResponse33.getResponseHeaders();
        boolean boolean43 = crawlerURL2.equals((java.lang.Object) hTMLPageResponse33);
        java.net.URI uRI44 = crawlerURL2.getUri();
        org.junit.Assert.assertNotNull(headerUtil6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "urls.txt" + "'", str25, "urls.txt");
        org.junit.Assert.assertNull(document34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(crawlerURL41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(uRI44);
    }

    @Test
    public void test05342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05342");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setOnlyOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setOnlyOnPath("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder16.setRequestHeaders("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder16.setNotOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration23 = builder16.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder24.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration27 = builder24.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder24.setStartUrl("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration30 = builder29.build();
        boolean boolean31 = crawlerConfiguration23.equals((java.lang.Object) crawlerConfiguration30);
        boolean boolean32 = crawlerConfiguration23.isVerifyUrls();
        java.lang.String str33 = crawlerConfiguration23.getStartUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(crawlerConfiguration23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(crawlerConfiguration27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(crawlerConfiguration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
    }

    @Test
    public void test05343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05343");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        boolean boolean3 = crawlerURL1.isWrongSyntax();
        java.lang.String str4 = crawlerURL1.getHost();
        java.net.URI uRI5 = crawlerURL1.getUri();
        java.net.URI uRI6 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL10 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI11 = crawlerURL10.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration16 = builder15.build();
        java.lang.String str17 = crawlerConfiguration16.getStartUrl();
        int int18 = crawlerConfiguration16.getMaxLevels();
        int int19 = crawlerConfiguration16.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = crawlerConfiguration16.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse26 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL10, (int) (short) 10, strMap20, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        int int27 = hTMLPageResponse26.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = hTMLPageResponse26.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse34 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 0, strMap28, "CrawlerURL url:result.csv", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) 583, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (byte) 1);
        java.lang.String str35 = hTMLPageResponse34.getUrl();
        int int36 = hTMLPageResponse34.getResponseCode();
        java.lang.String str38 = hTMLPageResponse34.getHeaderValue("AssetResponseCallable url:-1");
        java.lang.String str39 = hTMLPageResponse34.getEncoding();
        java.lang.String str40 = hTMLPageResponse34.toString();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray41 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet42 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet42, assetResponseArray41);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray44 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet45 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet45, assetResponseArray44);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult47 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet42, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet45);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet48 = assetsVerificationResult47.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet49 = assetsVerificationResult47.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray50 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet51 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet51, assetResponseArray50);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray53 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet54 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet54, assetResponseArray53);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult56 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet51, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet54);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult57 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet49, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet51);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet58 = assetsVerificationResult57.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet59 = null;
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray60 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet61 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet61, assetResponseArray60);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray63 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet64 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet64, assetResponseArray63);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult66 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet61, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet64);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet67 = assetsVerificationResult66.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray68 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet69 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet69, assetResponseArray68);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray71 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet72 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet72, assetResponseArray71);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult74 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet69, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet72);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult75 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet67, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet72);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult76 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet59, assetResponseSet67);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult77 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet58, assetResponseSet67);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray78 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet79 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet79, assetResponseArray78);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray81 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet82 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet82, assetResponseArray81);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult84 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet79, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet82);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet85 = assetsVerificationResult84.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet86 = assetsVerificationResult84.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult87 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet67, assetResponseSet86);
        boolean boolean88 = hTMLPageResponse34.equals((java.lang.Object) assetResponseSet67);
        java.lang.String str89 = hTMLPageResponse34.toString();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertNull(uRI6);
        org.junit.Assert.assertNull(uRI11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(crawlerConfiguration16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str35, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1" + "'", str39, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1" + "'", str40, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        org.junit.Assert.assertNotNull(assetResponseArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(assetResponseArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(assetResponseSet48);
        org.junit.Assert.assertNotNull(assetResponseSet49);
        org.junit.Assert.assertNotNull(assetResponseArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(assetResponseArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(assetResponseSet58);
        org.junit.Assert.assertNotNull(assetResponseArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(assetResponseArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(assetResponseSet67);
        org.junit.Assert.assertNotNull(assetResponseArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(assetResponseArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(assetResponseArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(assetResponseArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(assetResponseSet85);
        org.junit.Assert.assertNotNull(assetResponseSet86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1" + "'", str89, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
    }

    @Test
    public void test05344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05344");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "com.soulgalore.crawler.auth");
        java.lang.String str3 = crawlerURL2.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI8 = crawlerURL7.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration13 = builder12.build();
        java.lang.String str14 = crawlerConfiguration13.getStartUrl();
        int int15 = crawlerConfiguration13.getMaxLevels();
        int int16 = crawlerConfiguration13.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration13.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (int) (short) 10, strMap17, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        java.lang.String str25 = hTMLPageResponse23.getHeaderValue("com.soulgalore.crawler.nrofhttpthreads");
        java.lang.String str26 = hTMLPageResponse23.toString();
        java.lang.String str27 = hTMLPageResponse23.getUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = hTMLPageResponse23.getResponseHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = hTMLPageResponse23.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse35 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (short) 0, strMap29, "AssetResponseCallable url:Redirected to new domain", "CrawlerURL url:errorurls.txt", 583L, "CrawlerURL url:urls.txt", 100L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "urls.txt" + "'", str3, "urls.txt");
        org.junit.Assert.assertNull(uRI8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(crawlerConfiguration13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout" + "'", str26, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "com.soulgalore.crawler.auth" + "'", str27, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap29);
    }

    @Test
    public void test05345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05345");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getOnlyOnPath();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        int int6 = crawlerConfiguration3.getMaxLevels();
        int int7 = crawlerConfiguration3.getMaxLevels();
        boolean boolean8 = crawlerConfiguration3.isVerifyUrls();
        boolean boolean9 = crawlerConfiguration3.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = crawlerConfiguration3.getRequestHeadersMap();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        boolean boolean13 = crawlerConfiguration3.equals((java.lang.Object) crawlerURL12);
        java.lang.String str14 = crawlerConfiguration3.getOnlyOnPath();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean18 = crawlerURL17.isWrongSyntax();
        java.lang.String str19 = crawlerURL17.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse27 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL17, (int) 'a', strMap21, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str28 = hTMLPageResponse27.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = hTMLPageResponse27.getResponseHeaders();
        java.lang.String str30 = hTMLPageResponse27.getEncoding();
        java.lang.String str31 = hTMLPageResponse27.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL32 = hTMLPageResponse27.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = hTMLPageResponse27.getPageUrl();
        int int34 = hTMLPageResponse27.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL35 = hTMLPageResponse27.getPageUrl();
        java.lang.String str36 = crawlerURL35.getReferer();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL40 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "Response timed out");
        com.soulgalore.crawler.util.HeaderUtil headerUtil42 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = headerUtil42.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse50 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL40, (int) '4', strMap44, "com.soulgalore.crawler.http.socket.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 580, "com.soulgalore.crawler.auth", (long) (short) 1);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse56 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL35, (int) (byte) 1, strMap44, "AssetResponseCallable url:Malformed url", "urls.txt", (long) (byte) 10, "com.soulgalore.crawler.http.connection.timeout", (long) 97);
        java.lang.String str57 = crawlerURL35.getUrl();
        java.net.URI uRI58 = crawlerURL35.getUri();
        java.lang.String str59 = crawlerURL35.getHost();
        java.lang.String str60 = crawlerURL35.getReferer();
        java.net.URI uRI61 = crawlerURL35.getUri();
        com.soulgalore.crawler.util.HeaderUtil headerUtil63 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap65 = headerUtil63.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse71 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL35, 581, strMap65, "Wrong content type", "AssetResponseCallable url:result.csv", (long) (byte) 10, "CrawlerURL url:CrawlerURL url:errorassets.csv", (long) 1);
        boolean boolean72 = crawlerURL35.isWrongSyntax();
        java.lang.String str73 = crawlerURL35.getReferer();
        boolean boolean74 = crawlerConfiguration3.equals((java.lang.Object) crawlerURL35);
        java.lang.String str75 = crawlerConfiguration3.getStartUrl();
        java.lang.String str76 = crawlerConfiguration3.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "urls.txt" + "'", str19, "urls.txt");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str28, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str30, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str31, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL32);
        org.junit.Assert.assertNotNull(crawlerURL33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 97 + "'", int34 == 97);
        org.junit.Assert.assertNotNull(crawlerURL35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "urls.txt" + "'", str36, "urls.txt");
        org.junit.Assert.assertNotNull(headerUtil42);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "com.soulgalore.crawler.auth" + "'", str57, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(uRI58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "urls.txt" + "'", str60, "urls.txt");
        org.junit.Assert.assertNull(uRI61);
        org.junit.Assert.assertNotNull(headerUtil63);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "urls.txt" + "'", str73, "urls.txt");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
    }

    @Test
    public void test05346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05346");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int19 = hTMLPageResponse18.getResponseCode();
        java.lang.String str20 = hTMLPageResponse18.getResponseType();
        java.lang.String str21 = hTMLPageResponse18.getResponseType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "com.soulgalore.crawler.auth" + "'", str20, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "com.soulgalore.crawler.auth" + "'", str21, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test05347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05347");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.lang.String str5 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = crawlerConfiguration3.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration3.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = crawlerConfiguration3.getRequestHeadersMap();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL11 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean12 = crawlerURL11.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration19 = builder14.build();
        java.lang.String str20 = crawlerConfiguration19.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = crawlerConfiguration19.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse27 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL11, (-1), strMap21, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int28 = hTMLPageResponse27.getResponseCode();
        int int29 = hTMLPageResponse27.getResponseCode();
        boolean boolean30 = crawlerConfiguration3.equals((java.lang.Object) hTMLPageResponse27);
        long long31 = hTMLPageResponse27.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL32 = hTMLPageResponse27.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL34 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI35 = crawlerURL34.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder36.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration39 = builder38.build();
        java.lang.String str40 = crawlerConfiguration39.getStartUrl();
        int int41 = crawlerConfiguration39.getMaxLevels();
        int int42 = crawlerConfiguration39.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL45 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean46 = crawlerURL45.isWrongSyntax();
        java.lang.String str47 = crawlerURL45.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse55 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL45, (int) 'a', strMap49, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str56 = hTMLPageResponse55.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL57 = hTMLPageResponse55.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap58 = hTMLPageResponse55.getResponseHeaders();
        java.lang.String str59 = hTMLPageResponse55.getUrl();
        org.jsoup.nodes.Document document60 = hTMLPageResponse55.getBody();
        boolean boolean61 = crawlerConfiguration39.equals((java.lang.Object) hTMLPageResponse55);
        boolean boolean62 = crawlerURL34.equals((java.lang.Object) hTMLPageResponse55);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder64 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder66 = builder64.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration67 = builder66.build();
        java.lang.String str68 = crawlerConfiguration67.getStartUrl();
        int int69 = crawlerConfiguration67.getMaxLevels();
        int int70 = crawlerConfiguration67.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap71 = crawlerConfiguration67.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse77 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL34, 582, strMap71, "urls.txt", "hi!", (long) (short) 0, "AssetResponseCallable url:result.csv", 10L);
        java.util.Map<java.lang.String, java.lang.String> strMap78 = hTMLPageResponse77.getResponseHeaders();
        java.lang.String str79 = hTMLPageResponse77.getUrl();
        boolean boolean80 = hTMLPageResponse27.equals((java.lang.Object) hTMLPageResponse77);
        long long81 = hTMLPageResponse27.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL82 = hTMLPageResponse27.getPageUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(crawlerConfiguration19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 580L + "'", long31 == 580L);
        org.junit.Assert.assertNotNull(crawlerURL32);
        org.junit.Assert.assertNull(uRI35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(crawlerConfiguration39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "urls.txt" + "'", str47, "urls.txt");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str56, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "com.soulgalore.crawler.auth" + "'", str59, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(crawlerConfiguration67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str79, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 580L + "'", long81 == 580L);
        org.junit.Assert.assertNotNull(crawlerURL82);
    }

    @Test
    public void test05348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05348");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet4 = authUtil0.createAuthsFromString("AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
        org.junit.Assert.assertNotNull(authSet2);
    }

    @Test
    public void test05349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05349");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.lang.String str14 = hTMLPageResponse12.getResponseType();
        java.lang.String str15 = hTMLPageResponse12.getUrl();
        java.lang.String str16 = hTMLPageResponse12.getEncoding();
        java.lang.String str17 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration21 = builder20.build();
        java.lang.String str22 = crawlerConfiguration21.getStartUrl();
        java.lang.String str23 = crawlerConfiguration21.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = crawlerConfiguration21.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = crawlerConfiguration21.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = crawlerConfiguration21.getRequestHeadersMap();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean30 = crawlerURL29.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder32.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration37 = builder32.build();
        java.lang.String str38 = crawlerConfiguration37.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = crawlerConfiguration37.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, (-1), strMap39, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int46 = hTMLPageResponse45.getResponseCode();
        int int47 = hTMLPageResponse45.getResponseCode();
        boolean boolean48 = crawlerConfiguration21.equals((java.lang.Object) hTMLPageResponse45);
        long long49 = hTMLPageResponse45.getFetchTime();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder50 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder52 = builder50.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration53 = builder52.build();
        java.lang.String str54 = crawlerConfiguration53.getStartUrl();
        java.lang.String str55 = crawlerConfiguration53.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = crawlerConfiguration53.getRequestHeadersMap();
        java.lang.String str57 = crawlerConfiguration53.getNotOnPath();
        java.lang.String str58 = crawlerConfiguration53.getStartUrl();
        java.lang.String str59 = crawlerConfiguration53.getRequestHeaders();
        boolean boolean60 = hTMLPageResponse45.equals((java.lang.Object) str59);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL63 = new com.soulgalore.crawler.core.CrawlerURL("Redirected to new domain", "1");
        boolean boolean64 = hTMLPageResponse45.equals((java.lang.Object) "Redirected to new domain");
        boolean boolean65 = hTMLPageResponse12.equals((java.lang.Object) "Redirected to new domain");
        java.util.Map<java.lang.String, java.lang.String> strMap66 = hTMLPageResponse12.getResponseHeaders();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.auth" + "'", str15, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str16, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str17, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(crawlerConfiguration21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(crawlerConfiguration37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 580L + "'", long49 == 580L);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(crawlerConfiguration53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(strMap66);
    }

    @Test
    public void test05350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05350");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setMaxLevels(10);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setNotOnPath("result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setOnlyOnPath("AssetResponseCallable url:CrawlerURL url:AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:10");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test05351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05351");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.lang.String str12 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet14 = crawlerResult11.getNonWorkingUrls();
        java.lang.String str15 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet16 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet17 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet18 = crawlerResult11.getNonWorkingUrls();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet19 = crawlerResult11.getVerifiedURLResponses();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet16);
        org.junit.Assert.assertNotNull(crawlerURLSet17);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet18);
    }

    @Test
    public void test05352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05352");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
    }

    @Test
    public void test05353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05353");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.lang.String str5 = crawlerURL2.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder9.build();
        java.lang.String str11 = crawlerConfiguration10.getStartUrl();
        int int12 = crawlerConfiguration10.getMaxLevels();
        int int13 = crawlerConfiguration10.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse20 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (byte) -1, strMap14, "100", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) (short) -1, "com.soulgalore.crawler.nrofhttpthreads", 0L);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder21.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder21.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder27.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder31.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = builder33.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = builder33.setMaxLevels((int) '#');
        boolean boolean38 = crawlerURL2.equals((java.lang.Object) builder37);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder37.setRequestHeaders("AssetResponseCallable url:HTMLPageResponseurl:hi!responseCode:52encoding:urls.txt type:CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "urls.txt" + "'", str5, "urls.txt");
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(builder40);
    }

    @Test
    public void test05354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05354");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder0.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder0.setOnlyOnPath("com.soulgalore.crawler.http.socket.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder0.setStartUrl("CrawlerURL url:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setStartUrl("97");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder15.setNotOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setRequestHeaders("AssetResponseCallable url:errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setNotOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setMaxLevels((int) '4');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setOnlyOnPath("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
    }

    @Test
    public void test05355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05355");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setStartUrl("-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setMaxLevels(100);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
    }

    @Test
    public void test05356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05356");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet4 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet6 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet8 = authUtil0.createAuthsFromString("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet10 = authUtil0.createAuthsFromString("AssetResponseCallable url:HTMLPageResponseurl:hi!responseCode:52encoding:urls.txt type:CrawlerURL url:com.soulgalore.crawler.auth");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"HTMLPageResponseurl\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
        org.junit.Assert.assertNotNull(authSet2);
        org.junit.Assert.assertNotNull(authSet4);
        org.junit.Assert.assertNotNull(authSet6);
        org.junit.Assert.assertNotNull(authSet8);
    }

    @Test
    public void test05357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05357");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        org.jsoup.nodes.Document document13 = hTMLPageResponse12.getBody();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) "100");
        int int16 = hTMLPageResponse12.getResponseCode();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNull(document13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 97 + "'", int16 == 97);
    }

    @Test
    public void test05358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05358");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        java.lang.String str3 = crawlerURL1.getUrl();
        java.lang.String str4 = crawlerURL1.getHost();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI9 = crawlerURL8.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration14 = builder13.build();
        java.lang.String str15 = crawlerConfiguration14.getStartUrl();
        int int16 = crawlerConfiguration14.getMaxLevels();
        int int17 = crawlerConfiguration14.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = crawlerConfiguration14.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse24 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL8, (int) (short) 10, strMap18, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        int int25 = hTMLPageResponse24.getResponseCode();
        java.lang.String str26 = hTMLPageResponse24.getUrl();
        long long27 = hTMLPageResponse24.getFetchTime();
        java.lang.String str29 = hTMLPageResponse24.getHeaderValue("HTMLPageResponseurl:CrawlerURL url:com.soulgalore.crawler.authresponseCode:0encoding:CrawlerURL url:result.csv type:-1");
        java.util.Map<java.lang.String, java.lang.String> strMap30 = hTMLPageResponse24.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse36 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (byte) 100, strMap30, "com.soulgalore.crawler.http.socket.timeout", "Redirected to new domain", (long) 32, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv", (long) (byte) -1);
        java.lang.String str37 = crawlerURL1.getUrl();
        java.lang.String str38 = crawlerURL1.getUrl();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str3, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(uRI9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(crawlerConfiguration14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "com.soulgalore.crawler.auth" + "'", str26, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 580L + "'", long27 == 580L);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str37, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str38, "com.soulgalore.crawler.nrofhttpthreads");
    }

    @Test
    public void test05359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05359");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str7 = crawlerConfiguration5.getRequestHeaders();
        boolean boolean9 = crawlerConfiguration5.equals((java.lang.Object) 0.0d);
        java.lang.String str10 = crawlerConfiguration5.getOnlyOnPath();
        boolean boolean12 = crawlerConfiguration5.equals((java.lang.Object) "urls.txt");
        java.lang.Class<?> wildcardClass13 = crawlerConfiguration5.getClass();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test05360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05360");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder3 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder3.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration6 = builder5.build();
        java.lang.String str7 = crawlerConfiguration6.getStartUrl();
        int int8 = crawlerConfiguration6.getMaxLevels();
        int int9 = crawlerConfiguration6.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean13 = crawlerURL12.isWrongSyntax();
        java.lang.String str14 = crawlerURL12.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse22 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL12, (int) 'a', strMap16, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str23 = hTMLPageResponse22.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = hTMLPageResponse22.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = hTMLPageResponse22.getResponseHeaders();
        java.lang.String str26 = hTMLPageResponse22.getUrl();
        org.jsoup.nodes.Document document27 = hTMLPageResponse22.getBody();
        boolean boolean28 = crawlerConfiguration6.equals((java.lang.Object) hTMLPageResponse22);
        boolean boolean29 = crawlerURL1.equals((java.lang.Object) hTMLPageResponse22);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder31.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration34 = builder33.build();
        java.lang.String str35 = crawlerConfiguration34.getStartUrl();
        int int36 = crawlerConfiguration34.getMaxLevels();
        int int37 = crawlerConfiguration34.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = crawlerConfiguration34.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse44 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 582, strMap38, "urls.txt", "hi!", (long) (short) 0, "AssetResponseCallable url:result.csv", 10L);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = hTMLPageResponse44.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL47 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI48 = crawlerURL47.getUri();
        boolean boolean49 = crawlerURL47.isWrongSyntax();
        java.lang.String str50 = crawlerURL47.getHost();
        java.net.URI uRI51 = crawlerURL47.getUri();
        java.net.URI uRI52 = crawlerURL47.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL56 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI57 = crawlerURL56.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder59 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder61 = builder59.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration62 = builder61.build();
        java.lang.String str63 = crawlerConfiguration62.getStartUrl();
        int int64 = crawlerConfiguration62.getMaxLevels();
        int int65 = crawlerConfiguration62.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap66 = crawlerConfiguration62.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse72 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL56, (int) (short) 10, strMap66, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        int int73 = hTMLPageResponse72.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap74 = hTMLPageResponse72.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse80 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL47, 0, strMap74, "CrawlerURL url:result.csv", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) 583, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (byte) 1);
        java.lang.String str81 = hTMLPageResponse80.getUrl();
        boolean boolean82 = hTMLPageResponse44.equals((java.lang.Object) str81);
        java.lang.String str83 = hTMLPageResponse44.getResponseType();
        java.lang.String str85 = hTMLPageResponse44.getHeaderValue("HTMLPageResponseurl:responseCode:308encoding:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt type:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(crawlerConfiguration6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "urls.txt" + "'", str14, "urls.txt");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str23, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "com.soulgalore.crawler.auth" + "'", str26, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(crawlerConfiguration34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(uRI48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(uRI51);
        org.junit.Assert.assertNull(uRI52);
        org.junit.Assert.assertNull(uRI57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(crawlerConfiguration62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 10 + "'", int73 == 10);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str81, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "AssetResponseCallable url:result.csv" + "'", str83, "AssetResponseCallable url:result.csv");
        org.junit.Assert.assertNull(str85);
    }

    @Test
    public void test05361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05361");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        java.lang.String str3 = crawlerURL1.getUrl();
        java.lang.String str4 = crawlerURL1.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder5.setNotOnPath("AssetResponseCallable url:errorassets.csv");
        boolean boolean12 = crawlerURL1.equals((java.lang.Object) builder11);
        java.lang.String str13 = crawlerURL1.getUrl();
        java.lang.String str14 = crawlerURL1.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration19 = builder18.build();
        java.lang.String str20 = crawlerConfiguration19.getOnlyOnPath();
        boolean boolean21 = crawlerConfiguration19.isVerifyUrls();
        int int22 = crawlerConfiguration19.getMaxLevels();
        java.lang.String str23 = crawlerConfiguration19.getNotOnPath();
        java.lang.String str24 = crawlerConfiguration19.getRequestHeaders();
        java.lang.String str25 = crawlerConfiguration19.getStartUrl();
        java.lang.String str26 = crawlerConfiguration19.getRequestHeaders();
        java.lang.String str27 = crawlerConfiguration19.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = crawlerConfiguration19.getRequestHeadersMap();
        java.lang.String str29 = crawlerConfiguration19.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = crawlerConfiguration19.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse36 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 52, strMap30, "AssetResponseCallable url:com.soulgalore.crawler.auth", "AssetResponseCallable url:Malformed url", (long) (short) -1, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", 583L);
        long long37 = hTMLPageResponse36.getFetchTime();
        java.lang.String str38 = hTMLPageResponse36.getEncoding();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str3, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str4, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str13, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(crawlerConfiguration19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 583L + "'", long37 == 583L);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "AssetResponseCallable url:Malformed url" + "'", str38, "AssetResponseCallable url:Malformed url");
    }

    @Test
    public void test05362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05362");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        java.lang.String str20 = hTMLPageResponse18.getHeaderValue("CrawlerURL url:hi!");
        java.lang.String str21 = hTMLPageResponse18.getUrl();
        java.lang.String str22 = hTMLPageResponse18.toString();
        long long23 = hTMLPageResponse18.getFetchTime();
        java.lang.String str24 = hTMLPageResponse18.getResponseType();
        java.lang.String str26 = hTMLPageResponse18.getHeaderValue("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "com.soulgalore.crawler.auth" + "'", str21, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth" + "'", str22, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 580L + "'", long23 == 580L);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "com.soulgalore.crawler.auth" + "'", str24, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test05363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05363");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL15 = hTMLPageResponse12.getPageUrl();
        java.lang.String str16 = crawlerURL15.toString();
        java.lang.String str17 = crawlerURL15.getReferer();
        com.soulgalore.crawler.util.HeaderUtil headerUtil18 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = headerUtil18.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap22 = headerUtil18.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap24 = headerUtil18.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt");
        java.util.Map<java.lang.String, java.lang.String> strMap26 = headerUtil18.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:0 type:");
        boolean boolean27 = crawlerURL15.equals((java.lang.Object) "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:0 type:");
        java.lang.String str28 = crawlerURL15.getUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(crawlerURL15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str16, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "urls.txt" + "'", str17, "urls.txt");
        org.junit.Assert.assertNotNull(headerUtil18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "com.soulgalore.crawler.auth" + "'", str28, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test05364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05364");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.lang.String str5 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        int int8 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str9 = crawlerConfiguration3.getRequestHeaders();
        java.lang.String str10 = crawlerConfiguration3.getStartUrl();
        boolean boolean11 = crawlerConfiguration3.isVerifyUrls();
        java.lang.String str12 = crawlerConfiguration3.getRequestHeaders();
        java.lang.String str13 = crawlerConfiguration3.getStartUrl();
        java.lang.Class<?> wildcardClass14 = crawlerConfiguration3.getClass();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test05365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05365");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil2 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = headerUtil2.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil2.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = headerUtil2.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt");
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil2.createHeadersFromString("CrawlerURL url:CrawlerURL url:errorassets.csv");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable12 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:Redirected to new domain", assetFetcher1, strMap10, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout");
        java.lang.String str13 = assetResponseCallable12.toString();
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.assets.AssetResponse assetResponse14 = assetResponseCallable12.call();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerUtil2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AssetResponseCallable url:AssetResponseCallable url:Redirected to new domain" + "'", str13, "AssetResponseCallable url:AssetResponseCallable url:Redirected to new domain");
    }

    @Test
    public void test05366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05366");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "", (int) (short) 100, 0L);
    }

    @Test
    public void test05367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05367");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setNotOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:581encoding:AssetResponseCallable url:result.csv type:CrawlerURL url:CrawlerURL url:errorassets.csv");
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
    }

    @Test
    public void test05368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05368");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        boolean boolean22 = hTMLPageResponse12.equals((java.lang.Object) builder21);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder21.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder21.setRequestHeaders("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder21.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder21.setVerifyUrls(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
    }

    @Test
    public void test05369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05369");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean14 = assetResponse4.equals((java.lang.Object) 100L);
        java.lang.String str15 = assetResponse4.getReferer();
        java.lang.String str16 = assetResponse4.getReferer();
        boolean boolean18 = assetResponse4.equals((java.lang.Object) "com.soulgalore.crawler.proxy");
        long long19 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("-1", "com.soulgalore.crawler.auth");
        java.lang.String str23 = crawlerURL22.getUrl();
        java.lang.String str24 = crawlerURL22.getUrl();
        boolean boolean25 = assetResponse4.equals((java.lang.Object) str24);
        int int26 = assetResponse4.getResponseCode();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "100" + "'", str15, "100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "100" + "'", str16, "100");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "-1" + "'", str23, "-1");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "-1" + "'", str24, "-1");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
    }

    @Test
    public void test05370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05370");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:com.soulgalore.crawler.proxy");
        com.soulgalore.crawler.util.HeaderUtil headerUtil2 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = headerUtil2.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil2.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = headerUtil2.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil2.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil2.createHeadersFromString("CrawlerURL url:10");
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil2.createHeadersFromString("");
        boolean boolean15 = crawlerURL1.equals((java.lang.Object) "");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean19 = crawlerURL18.isWrongSyntax();
        java.lang.String str20 = crawlerURL18.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse28 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL18, (int) 'a', strMap22, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str29 = hTMLPageResponse28.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = hTMLPageResponse28.getResponseHeaders();
        java.lang.String str31 = hTMLPageResponse28.getEncoding();
        java.lang.String str32 = hTMLPageResponse28.toString();
        long long33 = hTMLPageResponse28.getFetchTime();
        java.lang.String str34 = hTMLPageResponse28.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL35 = hTMLPageResponse28.getPageUrl();
        java.lang.String str36 = hTMLPageResponse28.getResponseType();
        java.lang.String str37 = hTMLPageResponse28.getResponseType();
        boolean boolean38 = crawlerURL1.equals((java.lang.Object) hTMLPageResponse28);
        java.lang.String str39 = crawlerURL1.getUrl();
        org.junit.Assert.assertNotNull(headerUtil2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "urls.txt" + "'", str20, "urls.txt");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str29, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str31, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str32, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 100L + "'", long33 == 100L);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str34, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.proxy" + "'", str39, "CrawlerURL url:com.soulgalore.crawler.proxy");
    }

    @Test
    public void test05371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05371");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        int int6 = crawlerConfiguration5.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil7 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean8 = crawlerConfiguration5.equals((java.lang.Object) headerUtil7);
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil7.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil7.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil7.createHeadersFromString("AssetResponseCallable url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap16 = headerUtil7.createHeadersFromString("CrawlerURL url:urls.txt");
        java.util.Map<java.lang.String, java.lang.String> strMap18 = headerUtil7.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout");
        java.util.Map<java.lang.String, java.lang.String> strMap20 = headerUtil7.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap22 = headerUtil7.createHeadersFromString("AssetResponseCallable url:Wrong content type");
        java.util.Map<java.lang.String, java.lang.String> strMap24 = headerUtil7.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.util.Map<java.lang.String, java.lang.String> strMap26 = headerUtil7.createHeadersFromString("AssetResponseCallable url:urls.txt");
        java.util.Map<java.lang.String, java.lang.String> strMap28 = headerUtil7.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:Wrong content type");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(headerUtil7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap28);
    }

    @Test
    public void test05372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05372");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int19 = hTMLPageResponse18.getResponseCode();
        long long20 = hTMLPageResponse18.getFetchTime();
        long long21 = hTMLPageResponse18.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI25 = crawlerURL24.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean30 = crawlerURL29.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder32.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration37 = builder32.build();
        java.lang.String str38 = crawlerConfiguration37.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = crawlerConfiguration37.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, (-1), strMap39, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse51 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL24, 100, strMap39, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        boolean boolean52 = hTMLPageResponse18.equals((java.lang.Object) 100);
        org.jsoup.nodes.Document document53 = hTMLPageResponse18.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL54 = hTMLPageResponse18.getPageUrl();
        java.lang.String str55 = crawlerURL54.getHost();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 580L + "'", long20 == 580L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 580L + "'", long21 == 580L);
        org.junit.Assert.assertNull(uRI25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(crawlerConfiguration37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(document53);
        org.junit.Assert.assertNotNull(crawlerURL54);
        org.junit.Assert.assertNull(str55);
    }

    @Test
    public void test05373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05373");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider(32, 97, 580, "AssetResponseCallable url:Unknown error", "CrawlerURL url:AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:AssetResponseCallable url:Unknown error");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05374");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        java.lang.String str17 = hTMLPageResponse12.toString();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = hTMLPageResponse12.getResponseHeaders();
        long long19 = hTMLPageResponse12.getFetchTime();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str17, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 100L + "'", long19 == 100L);
    }

    @Test
    public void test05375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05375");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        java.lang.String str2 = crawlerURL1.getUrl();
        boolean boolean3 = crawlerURL1.isWrongSyntax();
        com.soulgalore.crawler.util.HeaderUtil headerUtil5 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = headerUtil5.createHeadersFromString("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse13 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) 10, strMap7, "urls.txt", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (byte) 10, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", (-1L));
        java.lang.String str14 = crawlerURL1.getHost();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration19 = builder18.build();
        java.lang.String str20 = crawlerConfiguration19.getStartUrl();
        java.lang.String str21 = crawlerConfiguration19.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = crawlerConfiguration19.getRequestHeadersMap();
        java.lang.String str23 = crawlerConfiguration19.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder24.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder24.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder24.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder30.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder30.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration35 = builder34.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration36 = builder34.build();
        boolean boolean37 = crawlerConfiguration19.equals((java.lang.Object) crawlerConfiguration36);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder38.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = builder38.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration43 = builder38.build();
        int int44 = crawlerConfiguration43.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil45 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean46 = crawlerConfiguration43.equals((java.lang.Object) headerUtil45);
        java.util.Map<java.lang.String, java.lang.String> strMap48 = headerUtil45.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap50 = headerUtil45.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.util.Map<java.lang.String, java.lang.String> strMap52 = headerUtil45.createHeadersFromString("AssetResponseCallable url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap54 = headerUtil45.createHeadersFromString("CrawlerURL url:urls.txt");
        java.util.Map<java.lang.String, java.lang.String> strMap56 = headerUtil45.createHeadersFromString("AssetResponseCallable url:100");
        boolean boolean57 = crawlerConfiguration36.equals((java.lang.Object) headerUtil45);
        boolean boolean58 = crawlerConfiguration36.isVerifyUrls();
        boolean boolean59 = crawlerConfiguration36.isVerifyUrls();
        java.lang.String str60 = crawlerConfiguration36.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap61 = crawlerConfiguration36.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse67 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 308, strMap61, "AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", "AssetResponseCallable url:AssetResponseCallable url:97", (long) 1, "AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) 10);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(headerUtil5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(crawlerConfiguration19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(crawlerConfiguration35);
        org.junit.Assert.assertNotNull(crawlerConfiguration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(crawlerConfiguration43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(headerUtil45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str60, "com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertNotNull(strMap61);
    }

    @Test
    public void test05376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05376");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = assetsVerificationResult6.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray11 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, assetResponseArray11);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray14 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet15 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15, assetResponseArray14);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult17 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = assetsVerificationResult17.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult19 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet10, assetResponseSet18);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = assetsVerificationResult19.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray21 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, assetResponseArray21);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray24 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet25, assetResponseArray24);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult27 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet25);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet28 = assetsVerificationResult27.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray29 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet30 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30, assetResponseArray29);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray32 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet33 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33, assetResponseArray32);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult35 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult36 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet28, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult37 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet20, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet38 = assetsVerificationResult37.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet39 = assetsVerificationResult37.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray40 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet41, assetResponseArray40);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray43 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet44 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet44, assetResponseArray43);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult46 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet41, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet44);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet47 = assetsVerificationResult46.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult48 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet39, assetResponseSet47);
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseSet9);
        org.junit.Assert.assertNotNull(assetResponseSet10);
        org.junit.Assert.assertNotNull(assetResponseArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(assetResponseArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(assetResponseSet18);
        org.junit.Assert.assertNotNull(assetResponseSet20);
        org.junit.Assert.assertNotNull(assetResponseArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(assetResponseArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(assetResponseSet28);
        org.junit.Assert.assertNotNull(assetResponseArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(assetResponseArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(assetResponseSet38);
        org.junit.Assert.assertNotNull(assetResponseSet39);
        org.junit.Assert.assertNotNull(assetResponseArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(assetResponseArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(assetResponseSet47);
    }

    @Test
    public void test05377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05377");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getOnlyOnPath();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        int int6 = crawlerConfiguration3.getMaxLevels();
        int int7 = crawlerConfiguration3.getMaxLevels();
        boolean boolean8 = crawlerConfiguration3.isVerifyUrls();
        java.lang.String str9 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str10 = crawlerConfiguration3.getStartUrl();
        int int11 = crawlerConfiguration3.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder14.build();
        java.lang.String str16 = crawlerConfiguration15.getStartUrl();
        boolean boolean17 = crawlerConfiguration15.isVerifyUrls();
        java.lang.String str18 = crawlerConfiguration15.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = crawlerConfiguration15.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = crawlerConfiguration15.getRequestHeadersMap();
        boolean boolean21 = crawlerConfiguration3.equals((java.lang.Object) crawlerConfiguration15);
        boolean boolean22 = crawlerConfiguration15.isVerifyUrls();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test05378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05378");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", "10");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean7 = crawlerURL6.isWrongSyntax();
        java.lang.String str8 = crawlerURL6.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse16 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL6, (int) 'a', strMap10, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str17 = hTMLPageResponse16.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = hTMLPageResponse16.getResponseHeaders();
        java.lang.String str19 = hTMLPageResponse16.getEncoding();
        java.lang.String str20 = hTMLPageResponse16.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = hTMLPageResponse16.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = hTMLPageResponse16.getPageUrl();
        int int23 = hTMLPageResponse16.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = hTMLPageResponse16.getPageUrl();
        java.lang.String str25 = crawlerURL24.getReferer();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "Response timed out");
        com.soulgalore.crawler.util.HeaderUtil headerUtil31 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = headerUtil31.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse39 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, (int) '4', strMap33, "com.soulgalore.crawler.http.socket.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 580, "com.soulgalore.crawler.auth", (long) (short) 1);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL24, (int) (byte) 1, strMap33, "AssetResponseCallable url:Malformed url", "urls.txt", (long) (byte) 10, "com.soulgalore.crawler.http.connection.timeout", (long) 97);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse51 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 32, strMap33, "AssetResponseCallable url:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv", 35L, "com.soulgalore.crawler.nrofhttpthreads", (long) 97);
        java.lang.String str52 = crawlerURL2.getHost();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder54 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder56 = builder54.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder58 = builder54.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration59 = builder54.build();
        java.lang.String str60 = crawlerConfiguration59.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap61 = crawlerConfiguration59.getRequestHeadersMap();
        java.lang.String str62 = crawlerConfiguration59.getStartUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder63 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder65 = builder63.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration66 = builder65.build();
        java.lang.String str67 = crawlerConfiguration66.getStartUrl();
        boolean boolean68 = crawlerConfiguration66.isVerifyUrls();
        java.lang.String str69 = crawlerConfiguration66.getOnlyOnPath();
        boolean boolean70 = crawlerConfiguration59.equals((java.lang.Object) str69);
        boolean boolean71 = crawlerConfiguration59.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap72 = crawlerConfiguration59.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap73 = crawlerConfiguration59.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse79 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 1, strMap73, "", "Response timed out", (long) 1, "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (short) 10);
        java.lang.String str80 = crawlerURL2.getUrl();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "urls.txt" + "'", str8, "urls.txt");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str17, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str19, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str20, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL21);
        org.junit.Assert.assertNotNull(crawlerURL22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 97 + "'", int23 == 97);
        org.junit.Assert.assertNotNull(crawlerURL24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "urls.txt" + "'", str25, "urls.txt");
        org.junit.Assert.assertNotNull(headerUtil31);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(crawlerConfiguration59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(crawlerConfiguration66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str80, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
    }

    @Test
    public void test05379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05379");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI6 = crawlerURL5.getUri();
        boolean boolean7 = crawlerURL5.isWrongSyntax();
        java.lang.String str8 = crawlerURL5.getHost();
        java.net.URI uRI9 = crawlerURL5.getUri();
        java.net.URI uRI10 = crawlerURL5.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI15 = crawlerURL14.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration20 = builder19.build();
        java.lang.String str21 = crawlerConfiguration20.getStartUrl();
        int int22 = crawlerConfiguration20.getMaxLevels();
        int int23 = crawlerConfiguration20.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = crawlerConfiguration20.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse30 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL14, (int) (short) 10, strMap24, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        int int31 = hTMLPageResponse30.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = hTMLPageResponse30.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse38 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, 0, strMap32, "CrawlerURL url:result.csv", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) 583, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (byte) 1);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse44 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) 'a', strMap32, "AssetResponseCallable url:com.soulgalore.crawler.auth", "AssetResponseCallable url:errorassets.csv", (long) 100, "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", 35L);
        java.lang.String str45 = crawlerURL1.getHost();
        boolean boolean46 = crawlerURL1.isWrongSyntax();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertNull(uRI6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(uRI9);
        org.junit.Assert.assertNull(uRI10);
        org.junit.Assert.assertNull(uRI15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(crawlerConfiguration20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test05380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05380");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        boolean boolean22 = hTMLPageResponse12.equals((java.lang.Object) builder21);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL23 = hTMLPageResponse12.getPageUrl();
        java.lang.String str24 = crawlerURL23.getUrl();
        java.net.URI uRI25 = crawlerURL23.getUri();
        boolean boolean26 = crawlerURL23.isWrongSyntax();
        java.lang.String str27 = crawlerURL23.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(crawlerURL23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "com.soulgalore.crawler.auth" + "'", str24, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(uRI25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str27, "CrawlerURL url:com.soulgalore.crawler.auth");
    }

    @Test
    public void test05381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05381");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        boolean boolean22 = hTMLPageResponse12.equals((java.lang.Object) builder21);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder21.setOnlyOnPath("10");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder21.setOnlyOnPath("AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder26.setStartUrl("urls.txt");
        java.lang.Class<?> wildcardClass29 = builder26.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test05382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05382");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(false);
        java.lang.Class<?> wildcardClass13 = builder12.getClass();
        boolean boolean14 = crawlerConfiguration5.equals((java.lang.Object) wildcardClass13);
        java.lang.String str15 = crawlerConfiguration5.getRequestHeaders();
        com.soulgalore.crawler.util.HeaderUtil headerUtil16 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = headerUtil16.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap20 = headerUtil16.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap22 = headerUtil16.createHeadersFromString("AssetResponseCallable url:-1");
        boolean boolean23 = crawlerConfiguration5.equals((java.lang.Object) headerUtil16);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = headerUtil16.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(headerUtil16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strMap25);
    }

    @Test
    public void test05383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05383");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "Wrong content type", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        int int7 = assetResponse4.getResponseCode();
        long long8 = assetResponse4.getFetchTime();
        java.lang.String str9 = assetResponse4.getReferer();
        java.lang.String str10 = assetResponse4.getUrl();
        int int11 = assetResponse4.getResponseCode();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Wrong content type" + "'", str9, "Wrong content type");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
    }

    @Test
    public void test05384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05384");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        int int5 = crawlerConfiguration3.getMaxLevels();
        int int6 = crawlerConfiguration3.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str8 = crawlerConfiguration3.getStartUrl();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int14 = assetResponse13.getResponseCode();
        int int15 = assetResponse13.getResponseCode();
        long long16 = assetResponse13.getFetchTime();
        long long17 = assetResponse13.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse22 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean23 = assetResponse13.equals((java.lang.Object) 100L);
        java.lang.String str24 = assetResponse13.getReferer();
        java.lang.String str25 = assetResponse13.getReferer();
        long long26 = assetResponse13.getFetchTime();
        boolean boolean27 = crawlerConfiguration3.equals((java.lang.Object) assetResponse13);
        java.lang.String str28 = crawlerConfiguration3.getStartUrl();
        java.lang.String str29 = crawlerConfiguration3.getRequestHeaders();
        java.lang.String str30 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str31 = crawlerConfiguration3.getRequestHeaders();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "100" + "'", str24, "100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "100" + "'", str25, "100");
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
    }

    @Test
    public void test05385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05385");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", "CrawlerURL url:CrawlerURL url:errorassets.csv");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.lang.String str6 = crawlerURL5.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder7.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration12 = builder7.build();
        int int13 = crawlerConfiguration12.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil14 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean15 = crawlerConfiguration12.equals((java.lang.Object) headerUtil14);
        java.util.Map<java.lang.String, java.lang.String> strMap17 = headerUtil14.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap19 = headerUtil14.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        boolean boolean20 = crawlerURL5.equals((java.lang.Object) headerUtil14);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = headerUtil14.createHeadersFromString("AssetResponseCallable url:errorassets.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap24 = headerUtil14.createHeadersFromString("CrawlerURL url:com.soulgalore.crawler.auth");
        java.util.Map<java.lang.String, java.lang.String> strMap26 = headerUtil14.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads type:-1");
        java.util.Map<java.lang.String, java.lang.String> strMap28 = headerUtil14.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:97encoding:52 type:CrawlerURL url:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse34 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap28, "AssetResponseCallable url:1", "errorurls.txt", (long) '#', "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain", (long) (short) 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(crawlerConfiguration12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(headerUtil14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap28);
    }

    @Test
    public void test05386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05386");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "CrawlerURL url:Wrong content type", (int) (short) 0, 52L);
        java.lang.String str5 = assetResponse4.getReferer();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CrawlerURL url:Wrong content type" + "'", str5, "CrawlerURL url:Wrong content type");
    }

    @Test
    public void test05387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05387");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.auth", "errorurls.txt", 10, (long) 582);
    }

    @Test
    public void test05388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05388");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI5 = crawlerURL4.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL9 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean10 = crawlerURL9.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration17 = builder12.build();
        java.lang.String str18 = crawlerConfiguration17.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = crawlerConfiguration17.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse25 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL9, (-1), strMap19, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse31 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL4, 100, strMap19, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse39 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL4, (int) (short) 100, strMap33, "-1", "1", (long) (byte) 10, "com.soulgalore.crawler.nrofhttpthreads", (long) (short) 1);
        java.lang.String str40 = hTMLPageResponse39.getEncoding();
        java.lang.String str41 = hTMLPageResponse39.getEncoding();
        boolean boolean42 = crawlerURL1.equals((java.lang.Object) str41);
        java.lang.String str43 = crawlerURL1.toString();
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(crawlerConfiguration17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1" + "'", str40, "1");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1" + "'", str41, "1");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "CrawlerURL url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str43, "CrawlerURL url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
    }

    @Test
    public void test05389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05389");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.lang.String str30 = hTMLPageResponse29.getResponseType();
        long long31 = hTMLPageResponse29.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL34 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI35 = crawlerURL34.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean40 = crawlerURL39.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder44 = builder42.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder46 = builder42.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration47 = builder42.build();
        java.lang.String str48 = crawlerConfiguration47.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap49 = crawlerConfiguration47.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse55 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL39, (-1), strMap49, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse61 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL34, 100, strMap49, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.util.Map<java.lang.String, java.lang.String> strMap62 = hTMLPageResponse61.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL65 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean66 = crawlerURL65.isWrongSyntax();
        java.lang.String str67 = crawlerURL65.getReferer();
        java.lang.String str68 = crawlerURL65.getHost();
        java.lang.String str69 = crawlerURL65.getUrl();
        boolean boolean70 = hTMLPageResponse61.equals((java.lang.Object) crawlerURL65);
        java.lang.String str71 = hTMLPageResponse61.getUrl();
        java.lang.String str72 = hTMLPageResponse61.getUrl();
        org.jsoup.nodes.Document document73 = hTMLPageResponse61.getBody();
        java.lang.String str74 = hTMLPageResponse61.getEncoding();
        boolean boolean75 = hTMLPageResponse29.equals((java.lang.Object) hTMLPageResponse61);
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1" + "'", str30, "-1");
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNull(uRI35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(crawlerConfiguration47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "urls.txt" + "'", str67, "urls.txt");
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "com.soulgalore.crawler.auth" + "'", str69, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "com.soulgalore.crawler.auth" + "'", str71, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "com.soulgalore.crawler.auth" + "'", str72, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Malformed url" + "'", str74, "Malformed url");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test05390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05390");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "-1");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.net.URI uRI4 = crawlerURL2.getUri();
        boolean boolean5 = crawlerURL2.isWrongSyntax();
        java.lang.String str6 = crawlerURL2.getReferer();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(uRI4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-1" + "'", str6, "-1");
    }

    @Test
    public void test05391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05391");
        com.soulgalore.crawler.util.StatusCode statusCode0 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT;
        java.lang.String str1 = statusCode0.getFriendlyName();
        java.lang.String str2 = statusCode0.getFriendlyName();
        int int3 = statusCode0.getCode();
        java.lang.String str4 = statusCode0.getFriendlyName();
        int int5 = statusCode0.getCode();
        org.junit.Assert.assertTrue("'" + statusCode0 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT + "'", statusCode0.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Response timed out" + "'", str1, "Response timed out");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Response timed out" + "'", str2, "Response timed out");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 580 + "'", int3 == 580);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Response timed out" + "'", str4, "Response timed out");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 580 + "'", int5 == 580);
    }

    @Test
    public void test05392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05392");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        boolean boolean22 = hTMLPageResponse12.equals((java.lang.Object) builder21);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder21.setOnlyOnPath("10");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder21.setOnlyOnPath("AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder21.setStartUrl("com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder21.setStartUrl("com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder21.setStartUrl("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
    }

    @Test
    public void test05393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05393");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet12 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult11.getUrls();
        java.lang.String str15 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet16 = crawlerResult11.getNonWorkingUrls();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = crawlerResult11.getVerifiedURLResponses();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet12);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet16);
    }

    @Test
    public void test05394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05394");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int19 = hTMLPageResponse18.getResponseCode();
        long long20 = hTMLPageResponse18.getFetchTime();
        long long21 = hTMLPageResponse18.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI25 = crawlerURL24.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean30 = crawlerURL29.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder32.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration37 = builder32.build();
        java.lang.String str38 = crawlerConfiguration37.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = crawlerConfiguration37.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, (-1), strMap39, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse51 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL24, 100, strMap39, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        boolean boolean52 = hTMLPageResponse18.equals((java.lang.Object) 100);
        org.jsoup.nodes.Document document53 = hTMLPageResponse18.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL54 = hTMLPageResponse18.getPageUrl();
        java.lang.String str56 = hTMLPageResponse18.getHeaderValue("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        int int57 = hTMLPageResponse18.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap58 = hTMLPageResponse18.getResponseHeaders();
        long long59 = hTMLPageResponse18.getFetchTime();
        java.lang.String str61 = hTMLPageResponse18.getHeaderValue("com.soulgalore.crawler.http.socket.timeout");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL62 = hTMLPageResponse18.getPageUrl();
        java.lang.String str63 = crawlerURL62.getHost();
        boolean boolean64 = crawlerURL62.isWrongSyntax();
        java.lang.String str65 = crawlerURL62.getReferer();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 580L + "'", long20 == 580L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 580L + "'", long21 == 580L);
        org.junit.Assert.assertNull(uRI25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(crawlerConfiguration37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(document53);
        org.junit.Assert.assertNotNull(crawlerURL54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 580L + "'", long59 == 580L);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(crawlerURL62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "urls.txt" + "'", str65, "urls.txt");
    }

    @Test
    public void test05395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05395");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean6 = crawlerURL5.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration13 = builder8.build();
        java.lang.String str14 = crawlerConfiguration13.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = crawlerConfiguration13.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse21 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (-1), strMap15, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int22 = hTMLPageResponse21.getResponseCode();
        long long23 = hTMLPageResponse21.getFetchTime();
        java.lang.String str24 = hTMLPageResponse21.getUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = hTMLPageResponse21.getResponseHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = hTMLPageResponse21.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse32 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) 100, strMap26, "", "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 100, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:-1encoding:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads type:AssetResponseCallable url:errorassets.csv", 52L);
        boolean boolean33 = crawlerURL1.isWrongSyntax();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(crawlerConfiguration13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 580L + "'", long23 == 580L);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "com.soulgalore.crawler.auth" + "'", str24, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test05396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05396");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:CrawlerURL url:-1", "HTMLPageResponseurl:hi!responseCode:52encoding:urls.txt type:CrawlerURL url:com.soulgalore.crawler.auth", (int) '4', (long) (byte) 0);
        java.lang.String str5 = assetResponse4.getReferer();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "HTMLPageResponseurl:hi!responseCode:52encoding:urls.txt type:CrawlerURL url:com.soulgalore.crawler.auth" + "'", str5, "HTMLPageResponseurl:hi!responseCode:52encoding:urls.txt type:CrawlerURL url:com.soulgalore.crawler.auth");
    }

    @Test
    public void test05397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05397");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        java.util.Map<java.lang.String, java.lang.String> strMap2 = null;
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable4 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", assetFetcher1, strMap2, "CrawlerURL url:1");
        java.lang.String str5 = assetResponseCallable4.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AssetResponseCallable url:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth" + "'", str5, "AssetResponseCallable url:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
    }

    @Test
    public void test05398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05398");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        long long5 = assetResponse4.getFetchTime();
        java.lang.String str6 = assetResponse4.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder7.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setOnlyOnPath("result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setOnlyOnPath("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration16 = builder15.build();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration16.getRequestHeadersMap();
        boolean boolean18 = assetResponse4.equals((java.lang.Object) strMap17);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(crawlerConfiguration16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test05399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05399");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:AssetResponseCallable url:Unknown error type:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout", "HTMLPageResponseurl:Wrong content typeresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads type:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url", 308, (long) 'a');
    }

    @Test
    public void test05400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05400");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.lang.String str14 = hTMLPageResponse12.getResponseType();
        java.lang.String str15 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher17 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean21 = crawlerURL20.isWrongSyntax();
        java.lang.String str22 = crawlerURL20.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse30 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, (int) 'a', strMap24, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str31 = hTMLPageResponse30.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = hTMLPageResponse30.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = hTMLPageResponse30.getPageUrl();
        boolean boolean34 = crawlerURL33.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = builder35.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = builder35.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration40 = builder35.build();
        java.lang.String str41 = crawlerConfiguration40.getRequestHeaders();
        java.lang.String str42 = crawlerConfiguration40.getRequestHeaders();
        java.lang.String str43 = crawlerConfiguration40.getStartUrl();
        boolean boolean44 = crawlerConfiguration40.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = crawlerConfiguration40.getRequestHeadersMap();
        java.lang.String str46 = crawlerConfiguration40.getNotOnPath();
        boolean boolean47 = crawlerURL33.equals((java.lang.Object) crawlerConfiguration40);
        java.util.Map<java.lang.String, java.lang.String> strMap48 = crawlerConfiguration40.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable50 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Wrong content type", assetFetcher17, strMap48, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
        boolean boolean51 = hTMLPageResponse12.equals((java.lang.Object) "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
        int int52 = hTMLPageResponse12.getResponseCode();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.auth" + "'", str15, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "urls.txt" + "'", str22, "urls.txt");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str31, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(crawlerURL33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(crawlerConfiguration40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 97 + "'", int52 == 97);
    }

    @Test
    public void test05401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05401");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("52");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("AssetResponseCallable url:errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setRequestHeaders("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:0 type:");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
    }

    @Test
    public void test05402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05402");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("CrawlerURL url:AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", 32, (long) (short) 0);
    }

    @Test
    public void test05403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05403");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str7 = crawlerConfiguration5.getRequestHeaders();
        boolean boolean9 = crawlerConfiguration5.equals((java.lang.Object) 0.0d);
        boolean boolean10 = crawlerConfiguration5.isVerifyUrls();
        java.lang.String str11 = crawlerConfiguration5.getStartUrl();
        java.lang.String str12 = crawlerConfiguration5.getNotOnPath();
        int int13 = crawlerConfiguration5.getMaxLevels();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test05404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05404");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.lang.String str30 = crawlerURL2.getHost();
        java.lang.String str31 = crawlerURL2.getUrl();
        java.lang.String str32 = crawlerURL2.getHost();
        java.lang.String str33 = crawlerURL2.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = builder35.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = builder35.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration40 = builder35.build();
        int int41 = crawlerConfiguration40.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil42 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean43 = crawlerConfiguration40.equals((java.lang.Object) headerUtil42);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = headerUtil42.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap47 = headerUtil42.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.util.Map<java.lang.String, java.lang.String> strMap49 = headerUtil42.createHeadersFromString("AssetResponseCallable url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap51 = headerUtil42.createHeadersFromString("AssetResponseCallable url:Unknown error");
        java.util.Map<java.lang.String, java.lang.String> strMap53 = headerUtil42.createHeadersFromString("AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
        java.util.Map<java.lang.String, java.lang.String> strMap55 = headerUtil42.createHeadersFromString("CrawlerURL url:Wrong content type");
        java.util.Map<java.lang.String, java.lang.String> strMap57 = headerUtil42.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse63 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 308, strMap57, "", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain", (long) ' ', "CrawlerURL url:AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", (long) (byte) -1);
        java.lang.Class<?> wildcardClass64 = hTMLPageResponse63.getClass();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "com.soulgalore.crawler.auth" + "'", str31, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "com.soulgalore.crawler.auth" + "'", str33, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(crawlerConfiguration40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(headerUtil42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test05405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05405");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = null;
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray11 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, assetResponseArray11);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray14 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet15 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15, assetResponseArray14);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult17 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = assetsVerificationResult17.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray19 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet20, assetResponseArray19);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray22 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet23 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23, assetResponseArray22);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult25 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet20, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult26 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet18, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult27 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet10, assetResponseSet18);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult28 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet9, assetResponseSet18);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = assetsVerificationResult28.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray30 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet31 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet31, assetResponseArray30);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray33 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet34 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet34, assetResponseArray33);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult36 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet31, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet34);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet37 = assetsVerificationResult36.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet38 = assetsVerificationResult36.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet39 = assetsVerificationResult36.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult40 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet29, assetResponseSet39);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet41 = assetsVerificationResult40.getNonWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseSet9);
        org.junit.Assert.assertNotNull(assetResponseArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(assetResponseArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(assetResponseSet18);
        org.junit.Assert.assertNotNull(assetResponseArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(assetResponseArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(assetResponseSet29);
        org.junit.Assert.assertNotNull(assetResponseArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(assetResponseArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(assetResponseSet37);
        org.junit.Assert.assertNotNull(assetResponseSet38);
        org.junit.Assert.assertNotNull(assetResponseSet39);
        org.junit.Assert.assertNotNull(assetResponseSet41);
    }

    @Test
    public void test05406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05406");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setOnlyOnPath("result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setMaxLevels((int) (short) 100);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setRequestHeaders("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder6.setOnlyOnPath("CrawlerURL url:CrawlerURL url:urls.txt");
        java.lang.Class<?> wildcardClass13 = builder6.getClass();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test05407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05407");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration9 = builder8.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        java.lang.String str18 = crawlerConfiguration15.getStartUrl();
        java.lang.String str19 = crawlerConfiguration15.getNotOnPath();
        boolean boolean20 = crawlerConfiguration9.equals((java.lang.Object) crawlerConfiguration15);
        java.lang.String str21 = crawlerConfiguration9.getStartUrl();
        java.lang.String str22 = crawlerConfiguration9.getOnlyOnPath();
        java.lang.String str23 = crawlerConfiguration9.getRequestHeaders();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(crawlerConfiguration9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
    }

    @Test
    public void test05408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05408");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder6.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration8 = builder6.build();
        boolean boolean9 = crawlerConfiguration8.isVerifyUrls();
        int int10 = crawlerConfiguration8.getMaxLevels();
        boolean boolean11 = crawlerConfiguration8.isVerifyUrls();
        java.lang.String str12 = crawlerConfiguration8.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNotNull(crawlerConfiguration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "urls.txt" + "'", str12, "urls.txt");
    }

    @Test
    public void test05409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05409");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        long long5 = assetResponse4.getFetchTime();
        long long6 = assetResponse4.getFetchTime();
        int int7 = assetResponse4.getResponseCode();
        int int8 = assetResponse4.getResponseCode();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 100L + "'", long5 == 100L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 100L + "'", long6 == 100L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test05410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05410");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray21 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL20 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet22, crawlerURLArray21);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet24 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray25 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet26, hTMLPageResponseArray25);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult28 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet22, hTMLPageResponseSet24, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet26);
        java.lang.String str29 = crawlerResult28.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet30 = crawlerResult28.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet31 = crawlerResult28.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL35 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean36 = crawlerURL35.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean40 = crawlerURL39.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL43 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI44 = crawlerURL43.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray45 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL35, crawlerURL39, crawlerURL43 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet46 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet46, crawlerURLArray45);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray48 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet49 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet49, hTMLPageResponseArray48);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL54 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray55 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL54 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet56 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet56, crawlerURLArray55);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet58 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray59 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet60 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet60, hTMLPageResponseArray59);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult62 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet56, hTMLPageResponseSet58, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet60);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult63 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet46, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet49, hTMLPageResponseSet58);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet64 = crawlerResult63.getVerifiedURLResponses();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult65 = new com.soulgalore.crawler.core.CrawlerResult("errorurls.txt", crawlerURLSet16, hTMLPageResponseSet31, hTMLPageResponseSet64);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet66 = crawlerResult65.getUrls();
        java.lang.String str67 = crawlerResult65.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet68 = crawlerResult65.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet69 = crawlerResult65.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet70 = crawlerResult65.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet71 = crawlerResult65.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet72 = crawlerResult65.getVerifiedURLResponses();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertNotNull(crawlerURLArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet30);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(uRI44);
        org.junit.Assert.assertNotNull(crawlerURLArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet64);
        org.junit.Assert.assertNotNull(crawlerURLSet66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "errorurls.txt" + "'", str67, "errorurls.txt");
        org.junit.Assert.assertNotNull(crawlerURLSet68);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet69);
        org.junit.Assert.assertNotNull(crawlerURLSet70);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet71);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet72);
    }

    @Test
    public void test05411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05411");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.lang.String str5 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder8.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration19 = builder18.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration20 = builder18.build();
        boolean boolean21 = crawlerConfiguration3.equals((java.lang.Object) crawlerConfiguration20);
        java.lang.String str22 = crawlerConfiguration20.getNotOnPath();
        boolean boolean23 = crawlerConfiguration20.isVerifyUrls();
        java.lang.String str24 = crawlerConfiguration20.getRequestHeaders();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(crawlerConfiguration19);
        org.junit.Assert.assertNotNull(crawlerConfiguration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "urls.txt" + "'", str22, "urls.txt");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
    }

    @Test
    public void test05412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05412");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.lang.String str12 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet16 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet17 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet18 = crawlerResult11.getUrls();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet19 = crawlerResult11.getVerifiedURLResponses();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet15);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet16);
        org.junit.Assert.assertNotNull(crawlerURLSet17);
        org.junit.Assert.assertNotNull(crawlerURLSet18);
    }

    @Test
    public void test05413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05413");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.nrofhttpthreads", "AssetResponseCallable url:Redirected to new domain", 100, (long) '#');
        int int5 = assetResponse4.getResponseCode();
        long long6 = assetResponse4.getFetchTime();
        long long7 = assetResponse4.getFetchTime();
        int int8 = assetResponse4.getResponseCode();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray9 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, assetResponseArray9);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray12 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13, assetResponseArray12);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult15 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet16 = assetsVerificationResult15.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet17 = assetsVerificationResult15.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray18 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet19 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet19, assetResponseArray18);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray21 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, assetResponseArray21);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult24 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet19, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult25 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet17, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet19);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet26 = assetsVerificationResult25.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet27 = assetsVerificationResult25.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet28 = assetsVerificationResult25.getNonWorkingAssets();
        boolean boolean29 = assetResponse4.equals((java.lang.Object) assetsVerificationResult25);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 35L + "'", long6 == 35L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 35L + "'", long7 == 35L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertNotNull(assetResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(assetResponseArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(assetResponseSet16);
        org.junit.Assert.assertNotNull(assetResponseSet17);
        org.junit.Assert.assertNotNull(assetResponseArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(assetResponseArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(assetResponseSet26);
        org.junit.Assert.assertNotNull(assetResponseSet27);
        org.junit.Assert.assertNotNull(assetResponseSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test05414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05414");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setRequestHeaders("AssetResponseCallable url:AssetResponseCallable url:Redirected to new domain");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
    }

    @Test
    public void test05415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05415");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        int int19 = hTMLPageResponse12.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = hTMLPageResponse12.getPageUrl();
        java.lang.String str21 = crawlerURL20.getReferer();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL25 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "Response timed out");
        com.soulgalore.crawler.util.HeaderUtil headerUtil27 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = headerUtil27.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse35 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL25, (int) '4', strMap29, "com.soulgalore.crawler.http.socket.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 580, "com.soulgalore.crawler.auth", (long) (short) 1);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse41 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, (int) (byte) 1, strMap29, "AssetResponseCallable url:Malformed url", "urls.txt", (long) (byte) 10, "com.soulgalore.crawler.http.connection.timeout", (long) 97);
        java.lang.String str42 = crawlerURL20.getUrl();
        java.lang.String str43 = crawlerURL20.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder44 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder46 = builder44.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration47 = builder46.build();
        java.lang.String str48 = crawlerConfiguration47.getOnlyOnPath();
        boolean boolean49 = crawlerConfiguration47.isVerifyUrls();
        int int50 = crawlerConfiguration47.getMaxLevels();
        java.lang.String str51 = crawlerConfiguration47.getNotOnPath();
        java.lang.String str52 = crawlerConfiguration47.getRequestHeaders();
        java.lang.String str53 = crawlerConfiguration47.getOnlyOnPath();
        boolean boolean54 = crawlerURL20.equals((java.lang.Object) crawlerConfiguration47);
        java.lang.String str55 = crawlerURL20.toString();
        java.lang.String str56 = crawlerURL20.getReferer();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 97 + "'", int19 == 97);
        org.junit.Assert.assertNotNull(crawlerURL20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "urls.txt" + "'", str21, "urls.txt");
        org.junit.Assert.assertNotNull(headerUtil27);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "com.soulgalore.crawler.auth" + "'", str42, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str43, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(crawlerConfiguration47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str55, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "urls.txt" + "'", str56, "urls.txt");
    }

    @Test
    public void test05416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05416");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.lang.String str14 = hTMLPageResponse12.getUrl();
        long long15 = hTMLPageResponse12.getFetchTime();
        org.jsoup.nodes.Document document16 = hTMLPageResponse12.getBody();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "com.soulgalore.crawler.auth" + "'", str14, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 100L + "'", long15 == 100L);
        org.junit.Assert.assertNull(document16);
    }

    @Test
    public void test05417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05417");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI7 = crawlerURL6.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL10 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean11 = crawlerURL10.isWrongSyntax();
        java.lang.String str12 = crawlerURL10.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse20 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL10, (int) 'a', strMap14, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str21 = hTMLPageResponse20.getUrl();
        boolean boolean22 = crawlerURL6.equals((java.lang.Object) str21);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher25 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil26 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = headerUtil26.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable30 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher25, strMap28, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse36 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL6, (int) (short) 100, strMap28, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse42 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL3, (int) (short) -1, strMap28, "com.soulgalore.crawler.http.socket.timeout", "errorurls.txt", (long) 100, "result.csv", (long) (short) 0);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = hTMLPageResponse42.getResponseHeaders();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse48 = new com.soulgalore.crawler.core.assets.AssetResponse("", "Wrong content type", (int) (short) 1, 0L);
        int int49 = assetResponse48.getResponseCode();
        int int50 = assetResponse48.getResponseCode();
        boolean boolean51 = hTMLPageResponse42.equals((java.lang.Object) assetResponse48);
        java.lang.String str52 = hTMLPageResponse42.getUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = hTMLPageResponse42.getResponseHeaders();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable55 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout", assetFetcher1, strMap53, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:583encoding:CrawlerURL url:CrawlerURL url:CrawlerURL url:errorassets.csv type:CrawlerURL url:10");
        org.junit.Assert.assertNull(uRI7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "urls.txt" + "'", str12, "urls.txt");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "com.soulgalore.crawler.auth" + "'", str21, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(headerUtil26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertNotNull(strMap53);
    }

    @Test
    public void test05418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05418");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider((int) ' ', 580, 100, "AssetResponseCallable url:AssetResponseCallable url:com.soulgalore.crawler.auth", "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:AssetResponseCallable url:AssetResponseCallable url:com.soulgalore.crawler.auth");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05419");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("urls.txt", "-1", 100, (long) (short) 10);
        java.lang.String str5 = assetResponse4.getReferer();
        long long6 = assetResponse4.getFetchTime();
        long long7 = assetResponse4.getFetchTime();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-1" + "'", str5, "-1");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10L + "'", long6 == 10L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
    }

    @Test
    public void test05420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05420");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        int int19 = hTMLPageResponse12.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = hTMLPageResponse12.getPageUrl();
        java.lang.String str21 = crawlerURL20.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder23.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration28 = builder23.build();
        java.lang.String str29 = crawlerConfiguration28.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = crawlerConfiguration28.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = crawlerConfiguration28.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse37 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, (int) (short) -1, strMap31, "AssetResponseCallable url:Malformed url", "0", (long) (byte) 10, "", (long) 581);
        java.lang.String str38 = hTMLPageResponse37.toString();
        org.jsoup.nodes.Document document39 = hTMLPageResponse37.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL42 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean43 = crawlerURL42.isWrongSyntax();
        java.lang.String str44 = crawlerURL42.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse52 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL42, (int) 'a', strMap46, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str53 = hTMLPageResponse52.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder54 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean55 = hTMLPageResponse52.equals((java.lang.Object) builder54);
        long long56 = hTMLPageResponse52.getFetchTime();
        java.lang.String str57 = hTMLPageResponse52.toString();
        java.lang.String str58 = hTMLPageResponse52.toString();
        boolean boolean59 = hTMLPageResponse37.equals((java.lang.Object) hTMLPageResponse52);
        java.lang.String str60 = hTMLPageResponse37.getEncoding();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 97 + "'", int19 == 97);
        org.junit.Assert.assertNotNull(crawlerURL20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "urls.txt" + "'", str21, "urls.txt");
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(crawlerConfiguration28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:0 type:" + "'", str38, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:0 type:");
        org.junit.Assert.assertNull(document39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "urls.txt" + "'", str44, "urls.txt");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "com.soulgalore.crawler.auth" + "'", str53, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 100L + "'", long56 == 100L);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str57, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str58, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "0" + "'", str60, "0");
    }

    @Test
    public void test05421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05421");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean6 = crawlerURL5.isWrongSyntax();
        java.lang.String str7 = crawlerURL5.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse15 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (int) 'a', strMap9, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str16 = hTMLPageResponse15.getUrl();
        boolean boolean17 = crawlerURL1.equals((java.lang.Object) str16);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher20 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil21 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = headerUtil21.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable25 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher20, strMap23, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse31 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) 100, strMap23, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        long long32 = hTMLPageResponse31.getFetchTime();
        org.jsoup.nodes.Document document33 = hTMLPageResponse31.getBody();
        long long34 = hTMLPageResponse31.getFetchTime();
        java.lang.String str35 = hTMLPageResponse31.toString();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = hTMLPageResponse31.getResponseHeaders();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "urls.txt" + "'", str7, "urls.txt");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(headerUtil21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 100L + "'", long32 == 100L);
        org.junit.Assert.assertNull(document33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 100L + "'", long34 == 100L);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt" + "'", str35, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt");
        org.junit.Assert.assertNotNull(strMap36);
    }

    @Test
    public void test05422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05422");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = crawlerConfiguration5.getRequestHeadersMap();
        java.lang.String str7 = crawlerConfiguration5.getStartUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test05423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05423");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getOnlyOnPath();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        int int6 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str8 = crawlerConfiguration3.getRequestHeaders();
        java.lang.String str9 = crawlerConfiguration3.getStartUrl();
        java.lang.String str10 = crawlerConfiguration3.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder11.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder15.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder15.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder15.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration22 = builder21.build();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = crawlerConfiguration22.getRequestHeadersMap();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder24.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder24.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder24.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder30.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder34.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder34.setMaxLevels(308);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder34.setOnlyOnPath("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = builder40.setRequestHeaders("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder44 = builder42.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        boolean boolean45 = crawlerConfiguration22.equals((java.lang.Object) "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        boolean boolean46 = crawlerConfiguration3.equals((java.lang.Object) "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(crawlerConfiguration22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test05424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05424");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        int int5 = crawlerConfiguration3.getMaxLevels();
        int int6 = crawlerConfiguration3.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str8 = crawlerConfiguration3.getStartUrl();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int14 = assetResponse13.getResponseCode();
        int int15 = assetResponse13.getResponseCode();
        long long16 = assetResponse13.getFetchTime();
        long long17 = assetResponse13.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse22 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean23 = assetResponse13.equals((java.lang.Object) 100L);
        java.lang.String str24 = assetResponse13.getReferer();
        java.lang.String str25 = assetResponse13.getReferer();
        long long26 = assetResponse13.getFetchTime();
        boolean boolean27 = crawlerConfiguration3.equals((java.lang.Object) assetResponse13);
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse32 = new com.soulgalore.crawler.core.assets.AssetResponse("", "1", (int) (short) 10, (long) '#');
        int int33 = assetResponse32.getResponseCode();
        boolean boolean34 = crawlerConfiguration3.equals((java.lang.Object) assetResponse32);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL36 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI37 = crawlerURL36.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL40 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean41 = crawlerURL40.isWrongSyntax();
        java.lang.String str42 = crawlerURL40.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse50 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL40, (int) 'a', strMap44, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str51 = hTMLPageResponse50.getUrl();
        boolean boolean52 = crawlerURL36.equals((java.lang.Object) str51);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher55 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil56 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap58 = headerUtil56.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable60 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher55, strMap58, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse66 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL36, (int) (short) 100, strMap58, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher69 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder70 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder72 = builder70.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder74 = builder70.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration75 = builder70.build();
        int int76 = crawlerConfiguration75.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil77 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean78 = crawlerConfiguration75.equals((java.lang.Object) headerUtil77);
        java.util.Map<java.lang.String, java.lang.String> strMap80 = headerUtil77.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap82 = headerUtil77.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable84 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", assetFetcher69, strMap82, "Unknown error");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse90 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL36, (int) (short) -1, strMap82, "CrawlerURL url:10", "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", (long) (byte) -1, "AssetResponseCallable url:errorassets.csv", (long) (byte) 1);
        boolean boolean91 = crawlerConfiguration3.equals((java.lang.Object) hTMLPageResponse90);
        java.util.Map<java.lang.String, java.lang.String> strMap92 = hTMLPageResponse90.getResponseHeaders();
        java.lang.String str93 = hTMLPageResponse90.getUrl();
        java.lang.String str95 = hTMLPageResponse90.getHeaderValue("AssetResponseCallable url:AssetResponseCallable url:Wrong content type");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "100" + "'", str24, "100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "100" + "'", str25, "100");
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(uRI37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "urls.txt" + "'", str42, "urls.txt");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "com.soulgalore.crawler.auth" + "'", str51, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(headerUtil56);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(crawlerConfiguration75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(headerUtil77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str93, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNull(str95);
    }

    @Test
    public void test05425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05425");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = hTMLPageResponse12.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        java.lang.String str17 = hTMLPageResponse12.getUrl();
        java.lang.String str18 = hTMLPageResponse12.getEncoding();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "com.soulgalore.crawler.auth" + "'", str17, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str18, "com.soulgalore.crawler.http.socket.timeout");
    }

    @Test
    public void test05426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05426");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet12 = crawlerResult11.getUrls();
        java.lang.String str13 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult11.getUrls();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = crawlerResult11.getVerifiedURLResponses();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet14);
    }

    @Test
    public void test05427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05427");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        boolean boolean3 = crawlerURL1.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean7 = crawlerURL6.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder9.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration14 = builder9.build();
        java.lang.String str15 = crawlerConfiguration14.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = crawlerConfiguration14.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse22 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL6, (-1), strMap16, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int23 = hTMLPageResponse22.getResponseCode();
        long long24 = hTMLPageResponse22.getFetchTime();
        long long25 = hTMLPageResponse22.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL28 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI29 = crawlerURL28.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean34 = crawlerURL33.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder36.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder36.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration41 = builder36.build();
        java.lang.String str42 = crawlerConfiguration41.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = crawlerConfiguration41.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse49 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL33, (-1), strMap43, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse55 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL28, 100, strMap43, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        boolean boolean56 = hTMLPageResponse22.equals((java.lang.Object) 100);
        org.jsoup.nodes.Document document57 = hTMLPageResponse22.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL60 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "com.soulgalore.crawler.auth");
        java.lang.String str61 = crawlerURL60.toString();
        boolean boolean62 = hTMLPageResponse22.equals((java.lang.Object) str61);
        boolean boolean63 = crawlerURL1.equals((java.lang.Object) hTMLPageResponse22);
        java.lang.String str64 = hTMLPageResponse22.getResponseType();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL65 = hTMLPageResponse22.getPageUrl();
        org.jsoup.nodes.Document document66 = hTMLPageResponse22.getBody();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(crawlerConfiguration14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 580L + "'", long24 == 580L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 580L + "'", long25 == 580L);
        org.junit.Assert.assertNull(uRI29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(crawlerConfiguration41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(document57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "CrawlerURL url:urls.txt" + "'", str61, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "com.soulgalore.crawler.auth" + "'", str64, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL65);
        org.junit.Assert.assertNull(document66);
    }

    @Test
    public void test05428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05428");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("Redirected to new domain");
        java.lang.String str2 = crawlerURL1.getReferer();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
    }

    @Test
    public void test05429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05429");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.lang.String str5 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str6 = crawlerConfiguration3.getStartUrl();
        int int7 = crawlerConfiguration3.getMaxLevels();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }

    @Test
    public void test05430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05430");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        long long5 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean9 = crawlerURL8.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder11.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration16 = builder11.build();
        java.lang.String str17 = crawlerConfiguration16.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = crawlerConfiguration16.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse24 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL8, (-1), strMap18, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        boolean boolean25 = assetResponse4.equals((java.lang.Object) strMap18);
        java.lang.String str26 = assetResponse4.getReferer();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean30 = crawlerURL29.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder32.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration37 = builder32.build();
        java.lang.String str38 = crawlerConfiguration37.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = crawlerConfiguration37.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, (-1), strMap39, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int46 = hTMLPageResponse45.getResponseCode();
        long long47 = hTMLPageResponse45.getFetchTime();
        long long48 = hTMLPageResponse45.getFetchTime();
        boolean boolean49 = assetResponse4.equals((java.lang.Object) hTMLPageResponse45);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 100L + "'", long5 == 100L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(crawlerConfiguration16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str26, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(crawlerConfiguration37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 580L + "'", long47 == 580L);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 580L + "'", long48 == 580L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test05431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05431");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.lang.String str30 = hTMLPageResponse29.getResponseType();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = hTMLPageResponse29.getResponseHeaders();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "-1" + "'", str30, "-1");
        org.junit.Assert.assertNotNull(strMap31);
    }

    @Test
    public void test05432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05432");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.lang.String str5 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = crawlerConfiguration3.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration3.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = crawlerConfiguration3.getRequestHeadersMap();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL11 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean12 = crawlerURL11.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration19 = builder14.build();
        java.lang.String str20 = crawlerConfiguration19.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = crawlerConfiguration19.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse27 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL11, (-1), strMap21, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int28 = hTMLPageResponse27.getResponseCode();
        int int29 = hTMLPageResponse27.getResponseCode();
        boolean boolean30 = crawlerConfiguration3.equals((java.lang.Object) hTMLPageResponse27);
        long long31 = hTMLPageResponse27.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL32 = hTMLPageResponse27.getPageUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = builder33.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration36 = builder35.build();
        java.lang.String str37 = crawlerConfiguration36.getStartUrl();
        int int38 = crawlerConfiguration36.getMaxLevels();
        java.lang.String str39 = crawlerConfiguration36.getNotOnPath();
        boolean boolean41 = crawlerConfiguration36.equals((java.lang.Object) "Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap42 = crawlerConfiguration36.getRequestHeadersMap();
        boolean boolean43 = crawlerConfiguration36.isVerifyUrls();
        int int44 = crawlerConfiguration36.getMaxLevels();
        java.lang.String str45 = crawlerConfiguration36.getOnlyOnPath();
        boolean boolean46 = crawlerURL32.equals((java.lang.Object) crawlerConfiguration36);
        java.lang.String str47 = crawlerConfiguration36.getOnlyOnPath();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL50 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean51 = crawlerURL50.isWrongSyntax();
        java.lang.String str52 = crawlerURL50.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap54 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse60 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL50, (int) 'a', strMap54, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str61 = hTMLPageResponse60.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL62 = hTMLPageResponse60.getPageUrl();
        long long63 = hTMLPageResponse60.getFetchTime();
        java.lang.String str64 = hTMLPageResponse60.getUrl();
        java.lang.Object obj65 = null;
        boolean boolean66 = hTMLPageResponse60.equals(obj65);
        java.util.Map<java.lang.String, java.lang.String> strMap67 = hTMLPageResponse60.getResponseHeaders();
        boolean boolean68 = crawlerConfiguration36.equals((java.lang.Object) hTMLPageResponse60);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL69 = hTMLPageResponse60.getPageUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(crawlerConfiguration19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 580L + "'", long31 == 580L);
        org.junit.Assert.assertNotNull(crawlerURL32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(crawlerConfiguration36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "urls.txt" + "'", str52, "urls.txt");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str61, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 100L + "'", long63 == 100L);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "com.soulgalore.crawler.auth" + "'", str64, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(crawlerURL69);
    }

    @Test
    public void test05433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05433");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads type:-1", "AssetResponseCallable url:AssetResponseCallable url:Wrong content type", (int) '4', (long) (byte) 10);
    }

    @Test
    public void test05434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05434");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder9.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder9.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setMaxLevels((int) '4');
        boolean boolean15 = crawlerConfiguration5.equals((java.lang.Object) builder14);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder14.setStartUrl("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setStartUrl("AssetResponseCallable url:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setOnlyOnPath("HTMLPageResponseurl:hi!responseCode:10encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
    }

    @Test
    public void test05435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05435");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration22 = builder17.build();
        java.lang.String str23 = crawlerConfiguration22.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = crawlerConfiguration22.getRequestHeadersMap();
        boolean boolean25 = crawlerConfiguration22.isVerifyUrls();
        java.lang.String str26 = crawlerConfiguration22.getStartUrl();
        boolean boolean27 = crawlerConfiguration22.isVerifyUrls();
        com.soulgalore.crawler.util.StatusCode statusCode28 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT;
        int int29 = statusCode28.getCode();
        int int30 = statusCode28.getCode();
        java.lang.String str31 = statusCode28.getFriendlyName();
        java.lang.String str32 = statusCode28.getFriendlyName();
        java.lang.String str33 = statusCode28.getFriendlyName();
        boolean boolean34 = crawlerConfiguration22.equals((java.lang.Object) str33);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = crawlerConfiguration22.getRequestHeadersMap();
        boolean boolean36 = hTMLPageResponse12.equals((java.lang.Object) strMap35);
        org.jsoup.nodes.Document document37 = hTMLPageResponse12.getBody();
        java.lang.String str38 = hTMLPageResponse12.getResponseType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(crawlerConfiguration22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + statusCode28 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT + "'", statusCode28.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 580 + "'", int29 == 580);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 580 + "'", int30 == 580);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Response timed out" + "'", str31, "Response timed out");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Response timed out" + "'", str32, "Response timed out");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Response timed out" + "'", str33, "Response timed out");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(document37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
    }

    @Test
    public void test05436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05436");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        boolean boolean22 = hTMLPageResponse12.equals((java.lang.Object) builder21);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL23 = hTMLPageResponse12.getPageUrl();
        java.lang.String str24 = crawlerURL23.getUrl();
        java.net.URI uRI25 = crawlerURL23.getUri();
        boolean boolean26 = crawlerURL23.isWrongSyntax();
        com.soulgalore.crawler.util.HeaderUtil headerUtil28 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = headerUtil28.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap32 = headerUtil28.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap34 = headerUtil28.createHeadersFromString("AssetResponseCallable url:100");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse40 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL23, (int) (byte) 100, strMap34, "CrawlerURL url:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout", "CrawlerURL url:35", (long) (short) 10, "result.csv", (long) (short) 0);
        java.lang.String str41 = hTMLPageResponse40.getEncoding();
        java.lang.String str42 = hTMLPageResponse40.getEncoding();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(crawlerURL23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "com.soulgalore.crawler.auth" + "'", str24, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(uRI25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(headerUtil28);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "CrawlerURL url:35" + "'", str41, "CrawlerURL url:35");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "CrawlerURL url:35" + "'", str42, "CrawlerURL url:35");
    }

    @Test
    public void test05437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05437");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setRequestHeaders("AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder0.setMaxLevels((int) (byte) 1);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setRequestHeaders("CrawlerURL url:Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test05438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05438");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder1 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder3 = builder1.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration4 = builder3.build();
        java.lang.String str5 = crawlerConfiguration4.getStartUrl();
        java.lang.String str6 = crawlerConfiguration4.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration4.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = crawlerConfiguration4.getRequestHeadersMap();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray13 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL12 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet14, crawlerURLArray13);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet16 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray17 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet18 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet18, hTMLPageResponseArray17);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult20 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet14, hTMLPageResponseSet16, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet18);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet21 = crawlerResult20.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet22 = crawlerResult20.getUrls();
        boolean boolean23 = crawlerConfiguration4.equals((java.lang.Object) crawlerURLSet22);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL27 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray28 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL27 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet29 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet29, crawlerURLArray28);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet31 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray32 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet33 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet33, hTMLPageResponseArray32);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult35 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet29, hTMLPageResponseSet31, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet33);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet36 = crawlerResult35.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet37 = crawlerResult35.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet38 = crawlerResult35.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet39 = crawlerResult35.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet40 = crawlerResult35.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet41 = crawlerResult35.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet42 = crawlerResult35.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet43 = crawlerResult35.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL47 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean48 = crawlerURL47.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL51 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean52 = crawlerURL51.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL55 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI56 = crawlerURL55.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray57 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL47, crawlerURL51, crawlerURL55 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet58 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet58, crawlerURLArray57);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray60 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet61 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet61, hTMLPageResponseArray60);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL66 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray67 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL66 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet68 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet68, crawlerURLArray67);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet70 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray71 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet72 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet72, hTMLPageResponseArray71);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult74 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet68, hTMLPageResponseSet70, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet72);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult75 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet58, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet61, hTMLPageResponseSet70);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet76 = crawlerResult75.getUrls();
        java.lang.String str77 = crawlerResult75.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet78 = crawlerResult75.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet79 = crawlerResult75.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet80 = crawlerResult75.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet81 = crawlerResult75.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet82 = crawlerResult75.getVerifiedURLResponses();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult83 = new com.soulgalore.crawler.core.CrawlerResult("CrawlerURL url:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", crawlerURLSet22, hTMLPageResponseSet43, hTMLPageResponseSet82);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet84 = crawlerResult83.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet85 = crawlerResult83.getNonWorkingUrls();
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(crawlerConfiguration4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(crawlerURLArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet21);
        org.junit.Assert.assertNotNull(crawlerURLSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet36);
        org.junit.Assert.assertNotNull(crawlerURLSet37);
        org.junit.Assert.assertNotNull(crawlerURLSet38);
        org.junit.Assert.assertNotNull(crawlerURLSet39);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet40);
        org.junit.Assert.assertNotNull(crawlerURLSet41);
        org.junit.Assert.assertNotNull(crawlerURLSet42);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(uRI56);
        org.junit.Assert.assertNotNull(crawlerURLArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "com.soulgalore.crawler.auth" + "'", str77, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet78);
        org.junit.Assert.assertNotNull(crawlerURLSet79);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet80);
        org.junit.Assert.assertNotNull(crawlerURLSet81);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet82);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet84);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet85);
    }

    @Test
    public void test05439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05439");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean6 = crawlerURL5.isWrongSyntax();
        java.lang.String str7 = crawlerURL5.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse15 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (int) 'a', strMap9, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str16 = hTMLPageResponse15.getUrl();
        boolean boolean17 = crawlerURL1.equals((java.lang.Object) str16);
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse22 = new com.soulgalore.crawler.core.assets.AssetResponse("", "errorurls.txt", 97, (-1L));
        java.lang.String str23 = assetResponse22.getReferer();
        int int24 = assetResponse22.getResponseCode();
        boolean boolean25 = crawlerURL1.equals((java.lang.Object) int24);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI30 = crawlerURL29.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration35 = builder34.build();
        java.lang.String str36 = crawlerConfiguration35.getStartUrl();
        int int37 = crawlerConfiguration35.getMaxLevels();
        int int38 = crawlerConfiguration35.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = crawlerConfiguration35.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, (int) (short) 10, strMap39, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        int int46 = hTMLPageResponse45.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = hTMLPageResponse45.getResponseHeaders();
        java.lang.String str49 = hTMLPageResponse45.getHeaderValue("");
        java.util.Map<java.lang.String, java.lang.String> strMap50 = hTMLPageResponse45.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse56 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 100, strMap50, "52", "HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", (long) (short) 0, "", (long) 582);
        java.lang.String str57 = hTMLPageResponse56.toString();
        java.lang.String str58 = hTMLPageResponse56.toString();
        java.lang.String str59 = hTMLPageResponse56.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL60 = hTMLPageResponse56.getPageUrl();
        java.lang.String str61 = hTMLPageResponse56.getUrl();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "urls.txt" + "'", str7, "urls.txt");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "errorurls.txt" + "'", str23, "errorurls.txt");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 97 + "'", int24 == 97);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(uRI30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(crawlerConfiguration35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:" + "'", str57, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:" + "'", str58, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str59, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(crawlerURL60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str61, "com.soulgalore.crawler.nrofhttpthreads");
    }

    @Test
    public void test05440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05440");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("CrawlerURL url:errorassets.csv", "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", 97, (long) (short) 1);
        int int5 = assetResponse4.getResponseCode();
        java.lang.String str6 = assetResponse4.getUrl();
        java.lang.String str7 = assetResponse4.getUrl();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 97 + "'", int5 == 97);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "CrawlerURL url:errorassets.csv" + "'", str6, "CrawlerURL url:errorassets.csv");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CrawlerURL url:errorassets.csv" + "'", str7, "CrawlerURL url:errorassets.csv");
    }

    @Test
    public void test05441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05441");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) builder14);
        long long16 = hTMLPageResponse12.getFetchTime();
        java.lang.String str17 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str20 = hTMLPageResponse12.getEncoding();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str17, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str20, "com.soulgalore.crawler.http.socket.timeout");
    }

    @Test
    public void test05442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05442");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        java.lang.String str2 = crawlerURL1.toString();
        java.lang.String str3 = crawlerURL1.toString();
        java.lang.String str4 = crawlerURL1.getReferer();
        java.lang.String str5 = crawlerURL1.getReferer();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "CrawlerURL url:hi!" + "'", str2, "CrawlerURL url:hi!");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "CrawlerURL url:hi!" + "'", str3, "CrawlerURL url:hi!");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test05443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05443");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "Wrong content type", (int) (short) 1, 0L);
        java.lang.String str5 = assetResponse4.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder6.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setVerifyUrls(false);
        java.lang.Class<?> wildcardClass19 = builder18.getClass();
        boolean boolean20 = crawlerConfiguration11.equals((java.lang.Object) wildcardClass19);
        java.lang.String str21 = crawlerConfiguration11.getRequestHeaders();
        boolean boolean22 = assetResponse4.equals((java.lang.Object) crawlerConfiguration11);
        long long23 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher25 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder26.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration29 = builder28.build();
        java.lang.String str30 = crawlerConfiguration29.getStartUrl();
        int int31 = crawlerConfiguration29.getMaxLevels();
        java.lang.String str32 = crawlerConfiguration29.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = crawlerConfiguration29.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable35 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", assetFetcher25, strMap33, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.lang.String str36 = assetResponseCallable35.toString();
        boolean boolean37 = assetResponse4.equals((java.lang.Object) str36);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(crawlerConfiguration29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AssetResponseCallable url:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth" + "'", str36, "AssetResponseCallable url:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test05444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05444");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration8 = builder7.build();
        java.lang.String str9 = crawlerConfiguration8.getStartUrl();
        int int10 = crawlerConfiguration8.getMaxLevels();
        int int11 = crawlerConfiguration8.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration8.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (short) 10, strMap12, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        int int19 = hTMLPageResponse18.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = hTMLPageResponse18.getResponseHeaders();
        java.lang.String str22 = hTMLPageResponse18.getHeaderValue("");
        java.lang.String str24 = hTMLPageResponse18.getHeaderValue("");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse29 = new com.soulgalore.crawler.core.assets.AssetResponse("", "urls.txt", (int) (short) -1, (long) 10);
        java.lang.String str30 = assetResponse29.getUrl();
        java.lang.String str31 = assetResponse29.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration35 = builder34.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = builder34.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration38 = builder37.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder37.setOnlyOnPath("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = builder40.setRequestHeaders("");
        boolean boolean43 = assetResponse29.equals((java.lang.Object) builder40);
        boolean boolean44 = hTMLPageResponse18.equals((java.lang.Object) assetResponse29);
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(crawlerConfiguration8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "urls.txt" + "'", str31, "urls.txt");
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(crawlerConfiguration35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(crawlerConfiguration38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test05445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05445");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("52");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setRequestHeaders("AssetResponseCallable url:Wrong content type");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setOnlyOnPath("com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder0.setNotOnPath("AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder0.setRequestHeaders("AssetResponseCallable url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test05446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05446");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean14 = assetResponse4.equals((java.lang.Object) 100L);
        java.lang.String str15 = assetResponse4.getReferer();
        java.lang.String str16 = assetResponse4.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder17.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder23.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder29.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder29.setVerifyUrls(false);
        boolean boolean34 = assetResponse4.equals((java.lang.Object) builder29);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration35 = builder29.build();
        java.lang.String str36 = crawlerConfiguration35.getOnlyOnPath();
        java.lang.String str37 = crawlerConfiguration35.getNotOnPath();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray38 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet39 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet39, assetResponseArray38);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray41 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet42 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet42, assetResponseArray41);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult44 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet39, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet42);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet45 = assetsVerificationResult44.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet46 = assetsVerificationResult44.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray47 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet48 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet48, assetResponseArray47);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray50 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet51 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet51, assetResponseArray50);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult53 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet48, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet51);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet54 = assetsVerificationResult53.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet55 = assetsVerificationResult53.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray56 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet57 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet57, assetResponseArray56);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray59 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet60 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet60, assetResponseArray59);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult62 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet57, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet60);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult63 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet55, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet57);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray64 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet65 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet65, assetResponseArray64);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray67 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet68 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet68, assetResponseArray67);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult70 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet65, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet68);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet71 = assetsVerificationResult70.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult72 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet55, assetResponseSet71);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult73 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet46, assetResponseSet55);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet74 = assetsVerificationResult73.getWorkingAssets();
        boolean boolean75 = crawlerConfiguration35.equals((java.lang.Object) assetsVerificationResult73);
        java.lang.String str76 = crawlerConfiguration35.getNotOnPath();
        int int77 = crawlerConfiguration35.getMaxLevels();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "100" + "'", str15, "100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "100" + "'", str16, "100");
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(crawlerConfiguration35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "urls.txt" + "'", str37, "urls.txt");
        org.junit.Assert.assertNotNull(assetResponseArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(assetResponseArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(assetResponseSet45);
        org.junit.Assert.assertNotNull(assetResponseSet46);
        org.junit.Assert.assertNotNull(assetResponseArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(assetResponseArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(assetResponseSet54);
        org.junit.Assert.assertNotNull(assetResponseSet55);
        org.junit.Assert.assertNotNull(assetResponseArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(assetResponseArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(assetResponseArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(assetResponseArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(assetResponseSet71);
        org.junit.Assert.assertNotNull(assetResponseSet74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "urls.txt" + "'", str76, "urls.txt");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
    }

    @Test
    public void test05447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05447");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setStartUrl("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setMaxLevels(32);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("AssetResponseCallable url:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder10.setOnlyOnPath("CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test05448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05448");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider((int) '4', (int) (byte) 10, 35, "HTMLPageResponseurl:hi!responseCode:10encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", "HTMLPageResponseurl:hi!responseCode:10encoding:result.csv type:hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"hi!responseCode\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05449");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str7 = crawlerConfiguration5.getRequestHeaders();
        boolean boolean9 = crawlerConfiguration5.equals((java.lang.Object) 0.0d);
        java.lang.String str10 = crawlerConfiguration5.getStartUrl();
        java.lang.String str11 = crawlerConfiguration5.getStartUrl();
        java.lang.String str12 = crawlerConfiguration5.getRequestHeaders();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test05450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05450");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setStartUrl("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder0.setNotOnPath("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder0.setStartUrl("Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder0.build();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean15 = crawlerURL14.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration22 = builder17.build();
        java.lang.String str23 = crawlerConfiguration22.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = crawlerConfiguration22.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse30 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL14, (-1), strMap24, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        java.lang.String str32 = hTMLPageResponse30.getHeaderValue("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = hTMLPageResponse30.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL34 = hTMLPageResponse30.getPageUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = builder35.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = builder35.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder41 = builder35.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder43 = builder41.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder45 = builder41.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration46 = builder45.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration47 = builder45.build();
        boolean boolean48 = hTMLPageResponse30.equals((java.lang.Object) builder45);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder50 = builder45.setOnlyOnPath("result.csv");
        boolean boolean51 = crawlerConfiguration11.equals((java.lang.Object) "result.csv");
        java.lang.String str52 = crawlerConfiguration11.getRequestHeaders();
        java.lang.String str53 = crawlerConfiguration11.getRequestHeaders();
        java.lang.String str54 = crawlerConfiguration11.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(crawlerConfiguration22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(crawlerURL33);
        org.junit.Assert.assertNotNull(crawlerURL34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(crawlerConfiguration46);
        org.junit.Assert.assertNotNull(crawlerConfiguration47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "AssetResponseCallable url:Malformed url" + "'", str54, "AssetResponseCallable url:Malformed url");
    }

    @Test
    public void test05451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05451");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult6.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray9 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, assetResponseArray9);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray12 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13, assetResponseArray12);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult15 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult16 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet8, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet17 = assetsVerificationResult16.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = assetsVerificationResult16.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet19 = assetsVerificationResult16.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = assetsVerificationResult16.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray21 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, assetResponseArray21);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray24 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet25, assetResponseArray24);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult27 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet25);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet28 = assetsVerificationResult27.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = assetsVerificationResult27.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet30 = assetsVerificationResult27.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet31 = assetsVerificationResult27.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray32 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet33 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33, assetResponseArray32);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray35 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet36 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet36, assetResponseArray35);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult38 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet36);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet39 = assetsVerificationResult38.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult40 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet31, assetResponseSet39);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet41 = assetsVerificationResult40.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray42 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet43 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet43, assetResponseArray42);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray45 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet46 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet46, assetResponseArray45);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult48 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet43, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet46);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet49 = assetsVerificationResult48.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray50 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet51 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet51, assetResponseArray50);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray53 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet54 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet54, assetResponseArray53);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult56 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet51, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet54);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult57 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet49, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet54);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult58 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet41, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet54);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet59 = assetsVerificationResult58.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet60 = assetsVerificationResult58.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult61 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet20, assetResponseSet60);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet62 = null;
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult63 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet60, assetResponseSet62);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet64 = assetsVerificationResult63.getNonWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(assetResponseArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(assetResponseSet17);
        org.junit.Assert.assertNotNull(assetResponseSet18);
        org.junit.Assert.assertNotNull(assetResponseSet19);
        org.junit.Assert.assertNotNull(assetResponseSet20);
        org.junit.Assert.assertNotNull(assetResponseArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(assetResponseArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(assetResponseSet28);
        org.junit.Assert.assertNotNull(assetResponseSet29);
        org.junit.Assert.assertNotNull(assetResponseSet30);
        org.junit.Assert.assertNotNull(assetResponseSet31);
        org.junit.Assert.assertNotNull(assetResponseArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(assetResponseArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(assetResponseSet39);
        org.junit.Assert.assertNotNull(assetResponseSet41);
        org.junit.Assert.assertNotNull(assetResponseArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(assetResponseArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(assetResponseSet49);
        org.junit.Assert.assertNotNull(assetResponseArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(assetResponseArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(assetResponseSet59);
        org.junit.Assert.assertNotNull(assetResponseSet60);
        org.junit.Assert.assertNull(assetResponseSet64);
    }

    @Test
    public void test05452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05452");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.proxy", "", (int) (short) -1, (long) 583);
        com.soulgalore.crawler.guice.ExecutorServiceProvider executorServiceProvider6 = new com.soulgalore.crawler.guice.ExecutorServiceProvider((int) (byte) 10);
        boolean boolean7 = assetResponse4.equals((java.lang.Object) (byte) 10);
        int int8 = assetResponse4.getResponseCode();
        java.lang.String str9 = assetResponse4.getUrl();
        java.lang.String str10 = assetResponse4.getReferer();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "com.soulgalore.crawler.proxy" + "'", str9, "com.soulgalore.crawler.proxy");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test05453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05453");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider((-1), 10, (int) '#', "CrawlerURL url:errorassets.csv", "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:CrawlerURL url:errorassets.csv");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05454");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("Malformed url", "com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.util.HeaderUtil headerUtil6 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = headerUtil6.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse14 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL4, 583, strMap8, "Redirected to new domain", "result.csv", 0L, "result.csv", (long) (short) 100);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable16 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", assetFetcher1, strMap8, "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain");
        java.lang.String str17 = assetResponseCallable16.toString();
        java.lang.String str18 = assetResponseCallable16.toString();
        org.junit.Assert.assertNotNull(headerUtil6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1" + "'", str17, "AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1" + "'", str18, "AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
    }

    @Test
    public void test05455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05455");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider((int) (byte) 1, (int) (short) 10, 0, "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"HTMLPageResponseurl\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05456");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("result.csv", "Malformed url");
        java.net.URI uRI3 = crawlerURL2.getUri();
        java.lang.String str4 = crawlerURL2.getUrl();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "result.csv" + "'", str4, "result.csv");
    }

    @Test
    public void test05457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05457");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        long long14 = hTMLPageResponse12.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL15 = hTMLPageResponse12.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = hTMLPageResponse12.getResponseHeaders();
        long long17 = hTMLPageResponse12.getFetchTime();
        java.lang.String str18 = hTMLPageResponse12.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 100L + "'", long14 == 100L);
        org.junit.Assert.assertNotNull(crawlerURL15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 100L + "'", long17 == 100L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str18, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
    }

    @Test
    public void test05458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05458");
        com.soulgalore.crawler.util.HeaderUtil headerUtil0 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = headerUtil0.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap4 = headerUtil0.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil0.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = headerUtil0.createHeadersFromString("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil0.createHeadersFromString("CrawlerURL url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil0.createHeadersFromString("AssetResponseCallable url:CrawlerURL url:AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(headerUtil0);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test05459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05459");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration8 = builder7.build();
        java.lang.String str9 = crawlerConfiguration8.getStartUrl();
        int int10 = crawlerConfiguration8.getMaxLevels();
        int int11 = crawlerConfiguration8.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration8.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (short) 10, strMap12, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        int int19 = hTMLPageResponse18.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = hTMLPageResponse18.getResponseHeaders();
        java.lang.String str22 = hTMLPageResponse18.getHeaderValue("");
        int int23 = hTMLPageResponse18.getResponseCode();
        java.lang.String str24 = hTMLPageResponse18.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = hTMLPageResponse18.getResponseHeaders();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(crawlerConfiguration8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str24, "com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertNotNull(strMap25);
    }

    @Test
    public void test05460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05460");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder13.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder13.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setVerifyUrls(false);
        boolean boolean26 = hTMLPageResponse12.equals((java.lang.Object) builder25);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder25.setOnlyOnPath("HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder25.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder25.setStartUrl("AssetResponseCallable url:CrawlerURL url:-1");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
    }

    @Test
    public void test05461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05461");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        java.lang.String str20 = hTMLPageResponse18.getHeaderValue("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = hTMLPageResponse18.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = hTMLPageResponse18.getPageUrl();
        java.lang.String str23 = hTMLPageResponse18.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL25 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI26 = crawlerURL25.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean30 = crawlerURL29.isWrongSyntax();
        java.lang.String str31 = crawlerURL29.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse39 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, (int) 'a', strMap33, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str40 = hTMLPageResponse39.getUrl();
        boolean boolean41 = crawlerURL25.equals((java.lang.Object) str40);
        java.net.URI uRI42 = crawlerURL25.getUri();
        boolean boolean43 = hTMLPageResponse18.equals((java.lang.Object) uRI42);
        java.lang.String str45 = hTMLPageResponse18.getHeaderValue("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap46 = hTMLPageResponse18.getResponseHeaders();
        int int47 = hTMLPageResponse18.getResponseCode();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(crawlerURL21);
        org.junit.Assert.assertNotNull(crawlerURL22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.auth" + "'", str23, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(uRI26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "urls.txt" + "'", str31, "urls.txt");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "com.soulgalore.crawler.auth" + "'", str40, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(uRI42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
    }

    @Test
    public void test05462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05462");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.lang.String str13 = crawlerResult12.getTheStartPoint();
        java.lang.String str14 = crawlerResult12.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray21 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL20 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet22, crawlerURLArray21);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet24 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray25 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet26, hTMLPageResponseArray25);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult28 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet22, hTMLPageResponseSet24, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet26);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet29 = crawlerResult28.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet30 = crawlerResult28.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet31 = crawlerResult28.getUrls();
        java.lang.String str32 = crawlerResult28.getTheStartPoint();
        java.lang.String str33 = crawlerResult28.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet34 = crawlerResult28.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet35 = crawlerResult28.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray40 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL39 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, crawlerURLArray40);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet43 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray44 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet45 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45, hTMLPageResponseArray44);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult47 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, hTMLPageResponseSet43, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet48 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet49 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet50 = crawlerResult47.getNonWorkingUrls();
        java.lang.String str51 = crawlerResult47.getTheStartPoint();
        java.lang.String str52 = crawlerResult47.getTheStartPoint();
        java.lang.String str53 = crawlerResult47.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet54 = crawlerResult47.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult55 = new com.soulgalore.crawler.core.CrawlerResult("errorassets.csv", crawlerURLSet16, hTMLPageResponseSet35, hTMLPageResponseSet54);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet56 = crawlerResult55.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet57 = crawlerResult55.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet58 = crawlerResult55.getUrls();
        java.lang.String str59 = crawlerResult55.getTheStartPoint();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertNotNull(crawlerURLArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet29);
        org.junit.Assert.assertNotNull(crawlerURLSet30);
        org.junit.Assert.assertNotNull(crawlerURLSet31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet34);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet35);
        org.junit.Assert.assertNotNull(crawlerURLArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet48);
        org.junit.Assert.assertNotNull(crawlerURLSet49);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet54);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet56);
        org.junit.Assert.assertNotNull(crawlerURLSet57);
        org.junit.Assert.assertNotNull(crawlerURLSet58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "errorassets.csv" + "'", str59, "errorassets.csv");
    }

    @Test
    public void test05463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05463");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("1", "errorassets.csv");
        java.lang.String str3 = crawlerURL2.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "CrawlerURL url:1" + "'", str3, "CrawlerURL url:1");
    }

    @Test
    public void test05464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05464");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:result.csv", "HTMLPageResponseurl:hi!responseCode:10encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", (int) (short) 100, (long) 1);
        java.lang.String str5 = assetResponse4.getReferer();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "HTMLPageResponseurl:hi!responseCode:10encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url" + "'", str5, "HTMLPageResponseurl:hi!responseCode:10encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
    }

    @Test
    public void test05465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05465");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setOnlyOnPath("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder6.build();
        java.lang.String str12 = crawlerConfiguration11.getStartUrl();
        java.lang.String str13 = crawlerConfiguration11.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = crawlerConfiguration11.getRequestHeadersMap();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt");
        boolean boolean17 = crawlerConfiguration11.equals((java.lang.Object) "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test05466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05466");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "com.soulgalore.crawler.auth");
        java.lang.String str3 = crawlerURL2.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration8 = builder7.build();
        java.lang.String str9 = crawlerConfiguration8.getOnlyOnPath();
        boolean boolean10 = crawlerConfiguration8.isVerifyUrls();
        int int11 = crawlerConfiguration8.getMaxLevels();
        int int12 = crawlerConfiguration8.getMaxLevels();
        boolean boolean13 = crawlerConfiguration8.isVerifyUrls();
        boolean boolean14 = crawlerConfiguration8.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = crawlerConfiguration8.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse21 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap15, "Unknown error", "com.soulgalore.crawler.http.socket.timeout", (long) 10, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", 0L);
        int int22 = hTMLPageResponse21.getResponseCode();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "CrawlerURL url:urls.txt" + "'", str3, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(crawlerConfiguration8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
    }

    @Test
    public void test05467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05467");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = assetsVerificationResult6.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray11 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, assetResponseArray11);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray14 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet15 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15, assetResponseArray14);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult17 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = assetsVerificationResult17.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult19 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet10, assetResponseSet18);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = assetsVerificationResult19.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray21 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, assetResponseArray21);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray24 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet25, assetResponseArray24);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult27 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet25);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet28 = assetsVerificationResult27.getNonWorkingAssets();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder29.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder29.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration34 = builder29.build();
        java.lang.String str35 = crawlerConfiguration34.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = crawlerConfiguration34.getRequestHeadersMap();
        java.lang.String str37 = crawlerConfiguration34.getNotOnPath();
        int int38 = crawlerConfiguration34.getMaxLevels();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray39 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40, assetResponseArray39);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray42 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet43 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet43, assetResponseArray42);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult45 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet43);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet46 = assetsVerificationResult45.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet47 = assetsVerificationResult45.getWorkingAssets();
        boolean boolean48 = crawlerConfiguration34.equals((java.lang.Object) assetResponseSet47);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult49 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet28, assetResponseSet47);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet50 = assetsVerificationResult49.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet51 = assetsVerificationResult49.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet52 = assetsVerificationResult49.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult53 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet20, assetResponseSet52);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet54 = assetsVerificationResult53.getNonWorkingAssets();
        java.lang.Class<?> wildcardClass55 = assetResponseSet54.getClass();
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseSet9);
        org.junit.Assert.assertNotNull(assetResponseSet10);
        org.junit.Assert.assertNotNull(assetResponseArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(assetResponseArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(assetResponseSet18);
        org.junit.Assert.assertNotNull(assetResponseSet20);
        org.junit.Assert.assertNotNull(assetResponseArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(assetResponseArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(assetResponseSet28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(crawlerConfiguration34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(assetResponseArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(assetResponseArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(assetResponseSet46);
        org.junit.Assert.assertNotNull(assetResponseSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(assetResponseSet50);
        org.junit.Assert.assertNotNull(assetResponseSet51);
        org.junit.Assert.assertNotNull(assetResponseSet52);
        org.junit.Assert.assertNotNull(assetResponseSet54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test05468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05468");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt", "AssetResponseCallable url:AssetResponseCallable url:Redirected to new domain");
    }

    @Test
    public void test05469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05469");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet11 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet14 = assetsVerificationResult6.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray15 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet16 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet16, assetResponseArray15);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray18 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet19 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet19, assetResponseArray18);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult21 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet16, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet19);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray22 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet23 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23, assetResponseArray22);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray25 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet26 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet26, assetResponseArray25);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult28 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet26);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = assetsVerificationResult28.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult30 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet19, assetResponseSet29);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray31 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet32 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32, assetResponseArray31);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray34 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet35 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet35, assetResponseArray34);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult37 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet35);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet38 = assetsVerificationResult37.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult39 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet29, assetResponseSet38);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = assetsVerificationResult39.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult41 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet14, assetResponseSet40);
        java.lang.Class<?> wildcardClass42 = assetsVerificationResult41.getClass();
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseSet9);
        org.junit.Assert.assertNotNull(assetResponseSet10);
        org.junit.Assert.assertNotNull(assetResponseSet11);
        org.junit.Assert.assertNotNull(assetResponseSet12);
        org.junit.Assert.assertNotNull(assetResponseSet13);
        org.junit.Assert.assertNotNull(assetResponseSet14);
        org.junit.Assert.assertNotNull(assetResponseArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(assetResponseArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(assetResponseArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(assetResponseArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(assetResponseSet29);
        org.junit.Assert.assertNotNull(assetResponseArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(assetResponseArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(assetResponseSet38);
        org.junit.Assert.assertNotNull(assetResponseSet40);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test05470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05470");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        boolean boolean3 = crawlerURL1.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean7 = crawlerURL6.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder9.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration14 = builder9.build();
        java.lang.String str15 = crawlerConfiguration14.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = crawlerConfiguration14.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse22 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL6, (-1), strMap16, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int23 = hTMLPageResponse22.getResponseCode();
        long long24 = hTMLPageResponse22.getFetchTime();
        long long25 = hTMLPageResponse22.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL28 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI29 = crawlerURL28.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean34 = crawlerURL33.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder36.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder36.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration41 = builder36.build();
        java.lang.String str42 = crawlerConfiguration41.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = crawlerConfiguration41.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse49 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL33, (-1), strMap43, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse55 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL28, 100, strMap43, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        boolean boolean56 = hTMLPageResponse22.equals((java.lang.Object) 100);
        org.jsoup.nodes.Document document57 = hTMLPageResponse22.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL60 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "com.soulgalore.crawler.auth");
        java.lang.String str61 = crawlerURL60.toString();
        boolean boolean62 = hTMLPageResponse22.equals((java.lang.Object) str61);
        boolean boolean63 = crawlerURL1.equals((java.lang.Object) hTMLPageResponse22);
        long long64 = hTMLPageResponse22.getFetchTime();
        java.util.Map<java.lang.String, java.lang.String> strMap65 = hTMLPageResponse22.getResponseHeaders();
        java.lang.String str67 = hTMLPageResponse22.getHeaderValue("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(crawlerConfiguration14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 580L + "'", long24 == 580L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 580L + "'", long25 == 580L);
        org.junit.Assert.assertNull(uRI29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(crawlerConfiguration41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(document57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "CrawlerURL url:urls.txt" + "'", str61, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 580L + "'", long64 == 580L);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNull(str67);
    }

    @Test
    public void test05471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05471");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        long long6 = assetResponse4.getFetchTime();
        java.lang.String str7 = assetResponse4.getReferer();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray8 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet9, assetResponseArray8);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray11 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, assetResponseArray11);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult14 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet9, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet15 = assetsVerificationResult14.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet16 = assetsVerificationResult14.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet17 = assetsVerificationResult14.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = assetsVerificationResult14.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray19 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet20, assetResponseArray19);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray22 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet23 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23, assetResponseArray22);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult25 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet20, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet26 = assetsVerificationResult25.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult27 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet18, assetResponseSet26);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray28 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, assetResponseArray28);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray31 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet32 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32, assetResponseArray31);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult34 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray35 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet36 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet36, assetResponseArray35);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray38 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet39 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet39, assetResponseArray38);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult41 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet36, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet39);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet42 = assetsVerificationResult41.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult43 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32, assetResponseSet42);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult44 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet26, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32);
        boolean boolean45 = assetResponse4.equals((java.lang.Object) assetResponseSet32);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "100" + "'", str7, "100");
        org.junit.Assert.assertNotNull(assetResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(assetResponseArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(assetResponseSet15);
        org.junit.Assert.assertNotNull(assetResponseSet16);
        org.junit.Assert.assertNotNull(assetResponseSet17);
        org.junit.Assert.assertNotNull(assetResponseSet18);
        org.junit.Assert.assertNotNull(assetResponseArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(assetResponseArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(assetResponseSet26);
        org.junit.Assert.assertNotNull(assetResponseArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(assetResponseArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(assetResponseArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(assetResponseArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(assetResponseSet42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test05472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05472");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:52 type:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", "CrawlerURL url:CrawlerURL url:urls.txt", (int) 'a', (long) 52);
    }

    @Test
    public void test05473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05473");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("CrawlerURL url:CrawlerURL url:errorassets.csv", "", (-1), (long) (short) 10);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray5 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet6, assetResponseArray5);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray8 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet9, assetResponseArray8);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult11 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet6, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = assetsVerificationResult11.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = assetsVerificationResult11.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray14 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet15 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15, assetResponseArray14);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray17 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, assetResponseArray17);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult20 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult21 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet13, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray22 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet23 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23, assetResponseArray22);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray25 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet26 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet26, assetResponseArray25);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult28 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet26);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = assetsVerificationResult28.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult30 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet13, assetResponseSet29);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet31 = assetsVerificationResult30.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet32 = assetsVerificationResult30.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet33 = assetsVerificationResult30.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet34 = assetsVerificationResult30.getWorkingAssets();
        boolean boolean35 = assetResponse4.equals((java.lang.Object) assetResponseSet34);
        org.junit.Assert.assertNotNull(assetResponseArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(assetResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(assetResponseSet12);
        org.junit.Assert.assertNotNull(assetResponseSet13);
        org.junit.Assert.assertNotNull(assetResponseArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(assetResponseArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(assetResponseArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(assetResponseArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(assetResponseSet29);
        org.junit.Assert.assertNotNull(assetResponseSet31);
        org.junit.Assert.assertNotNull(assetResponseSet32);
        org.junit.Assert.assertNotNull(assetResponseSet33);
        org.junit.Assert.assertNotNull(assetResponseSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test05474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05474");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        java.net.URI uRI4 = crawlerURL2.getUri();
        java.net.URI uRI5 = crawlerURL2.getUri();
        java.net.URI uRI6 = crawlerURL2.getUri();
        java.lang.String str7 = crawlerURL2.toString();
        java.lang.String str8 = crawlerURL2.toString();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertNull(uRI4);
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertNull(uRI6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str7, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str8, "CrawlerURL url:com.soulgalore.crawler.auth");
    }

    @Test
    public void test05475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05475");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        java.lang.String str9 = assetResponse4.getUrl();
        int int10 = assetResponse4.getResponseCode();
        java.lang.String str11 = assetResponse4.getReferer();
        java.lang.String str12 = assetResponse4.getUrl();
        boolean boolean14 = assetResponse4.equals((java.lang.Object) "AssetResponseCallable url:Redirected to new domain");
        long long15 = assetResponse4.getFetchTime();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "100" + "'", str11, "100");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
    }

    @Test
    public void test05476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05476");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        long long5 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean9 = crawlerURL8.isWrongSyntax();
        java.lang.String str10 = crawlerURL8.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL8, (int) 'a', strMap12, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        org.jsoup.nodes.Document document19 = hTMLPageResponse18.getBody();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder20.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder20.setMaxLevels((int) (short) 0);
        boolean boolean25 = hTMLPageResponse18.equals((java.lang.Object) builder20);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL26 = hTMLPageResponse18.getPageUrl();
        boolean boolean27 = assetResponse4.equals((java.lang.Object) crawlerURL26);
        java.lang.Object obj28 = null;
        boolean boolean29 = assetResponse4.equals(obj28);
        long long30 = assetResponse4.getFetchTime();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 100L + "'", long5 == 100L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "urls.txt" + "'", str10, "urls.txt");
        org.junit.Assert.assertNull(document19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(crawlerURL26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 100L + "'", long30 == 100L);
    }

    @Test
    public void test05477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05477");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getNotOnPath();
        java.lang.String str7 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str8 = crawlerConfiguration5.getOnlyOnPath();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("Response timed out", "0", 580, (long) (byte) -1);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL15 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI20 = crawlerURL19.getUri();
        java.lang.String str21 = crawlerURL19.getReferer();
        java.lang.String str22 = crawlerURL19.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder24.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration27 = builder26.build();
        java.lang.String str28 = crawlerConfiguration27.getStartUrl();
        int int29 = crawlerConfiguration27.getMaxLevels();
        int int30 = crawlerConfiguration27.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = crawlerConfiguration27.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse37 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL19, (int) (byte) -1, strMap31, "100", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) (short) -1, "com.soulgalore.crawler.nrofhttpthreads", 0L);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse43 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL15, 580, strMap31, "10", "HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", 580L, "0", (long) 0);
        boolean boolean44 = assetResponse13.equals((java.lang.Object) 0);
        java.lang.String str45 = assetResponse13.getUrl();
        boolean boolean46 = crawlerConfiguration5.equals((java.lang.Object) assetResponse13);
        java.lang.String str47 = assetResponse13.getUrl();
        int int48 = assetResponse13.getResponseCode();
        java.lang.String str49 = assetResponse13.getReferer();
        java.lang.String str50 = assetResponse13.getReferer();
        long long51 = assetResponse13.getFetchTime();
        long long52 = assetResponse13.getFetchTime();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(uRI20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "urls.txt" + "'", str21, "urls.txt");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "urls.txt" + "'", str22, "urls.txt");
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(crawlerConfiguration27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Response timed out" + "'", str45, "Response timed out");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Response timed out" + "'", str47, "Response timed out");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 580 + "'", int48 == 580);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "0" + "'", str49, "0");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "0" + "'", str50, "0");
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
    }

    @Test
    public void test05478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05478");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("result.csv", "Malformed url");
        java.lang.String str3 = crawlerURL2.toString();
        boolean boolean4 = crawlerURL2.isWrongSyntax();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "CrawlerURL url:result.csv" + "'", str3, "CrawlerURL url:result.csv");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test05479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05479");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setOnlyOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder12.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder18.setMaxLevels(52);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration23 = builder22.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder22.setStartUrl("AssetResponseCallable url:Redirected to new domain");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder22.setRequestHeaders("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder22.setMaxLevels((int) (byte) 10);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(crawlerConfiguration23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
    }

    @Test
    public void test05480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05480");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setOnlyOnPath("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setRequestHeaders("HTMLPageResponseurl:hi!responseCode:-1encoding:errorurls.txt type:result.csv");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test05481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05481");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        java.lang.String str2 = crawlerURL1.getUrl();
        java.lang.String str3 = crawlerURL1.getReferer();
        java.lang.String str4 = crawlerURL1.toString();
        java.net.URI uRI5 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL9 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean10 = crawlerURL9.isWrongSyntax();
        java.lang.String str11 = crawlerURL9.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse19 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL9, (int) 'a', strMap13, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str20 = hTMLPageResponse19.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = hTMLPageResponse19.getResponseHeaders();
        java.lang.String str22 = hTMLPageResponse19.getEncoding();
        java.lang.String str23 = hTMLPageResponse19.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = hTMLPageResponse19.getPageUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder26.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder26.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration31 = builder26.build();
        java.lang.String str32 = crawlerConfiguration31.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = crawlerConfiguration31.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse39 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL24, (int) (byte) 10, strMap33, "errorurls.txt", "CrawlerURL url:result.csv", (long) '#', "CrawlerURL url:100", 35L);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) 'a', strMap33, "Response timed out", "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", 0L, "HTMLPageResponseurl:hi!responseCode:10encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", (long) 583);
        java.lang.String str46 = hTMLPageResponse45.getEncoding();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CrawlerURL url:hi!" + "'", str4, "CrawlerURL url:hi!");
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "urls.txt" + "'", str11, "urls.txt");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str20, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str22, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str23, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(crawlerConfiguration31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1" + "'", str46, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
    }

    @Test
    public void test05482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05482");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet18 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray23 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL22 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet24 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, crawlerURLArray23);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray27 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet28 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28, hTMLPageResponseArray27);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult30 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, hTMLPageResponseSet26, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28);
        java.lang.String str31 = crawlerResult30.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet32 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet33 = crawlerResult30.getNonWorkingUrls();
        java.lang.String str34 = crawlerResult30.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet35 = crawlerResult30.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray40 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL39 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, crawlerURLArray40);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet43 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray44 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet45 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45, hTMLPageResponseArray44);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult47 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, hTMLPageResponseSet43, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45);
        java.lang.String str48 = crawlerResult47.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet49 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet50 = crawlerResult47.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult51 = new com.soulgalore.crawler.core.CrawlerResult("CrawlerURL url:urls.txt", crawlerURLSet18, hTMLPageResponseSet35, hTMLPageResponseSet50);
        java.lang.String str52 = crawlerResult51.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet53 = crawlerResult51.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet54 = crawlerResult51.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet55 = crawlerResult51.getUrls();
        java.lang.String str56 = crawlerResult51.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet57 = crawlerResult51.getVerifiedURLResponses();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet17);
        org.junit.Assert.assertNotNull(crawlerURLSet18);
        org.junit.Assert.assertNotNull(crawlerURLArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet32);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet35);
        org.junit.Assert.assertNotNull(crawlerURLArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet49);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "CrawlerURL url:urls.txt" + "'", str52, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertNotNull(crawlerURLSet53);
        org.junit.Assert.assertNotNull(crawlerURLSet54);
        org.junit.Assert.assertNotNull(crawlerURLSet55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "CrawlerURL url:urls.txt" + "'", str56, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet57);
    }

    @Test
    public void test05483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05483");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder2.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration6 = builder5.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder5.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder5.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder5.setNotOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setOnlyOnPath("CrawlerURL url:100");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration17 = builder14.build();
        java.lang.String str18 = crawlerConfiguration17.getStartUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(crawlerConfiguration6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(crawlerConfiguration17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test05484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05484");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int13 = hTMLPageResponse12.getResponseCode();
        int int14 = hTMLPageResponse12.getResponseCode();
        java.lang.String str15 = hTMLPageResponse12.getUrl();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean20 = crawlerURL19.isWrongSyntax();
        java.lang.String str21 = crawlerURL19.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL19, (int) 'a', strMap23, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str30 = hTMLPageResponse29.getEncoding();
        java.lang.String str31 = hTMLPageResponse29.getResponseType();
        java.lang.String str32 = hTMLPageResponse29.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = hTMLPageResponse29.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL37 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "com.soulgalore.crawler.auth");
        java.lang.String str38 = crawlerURL37.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = builder40.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration43 = builder42.build();
        java.lang.String str44 = crawlerConfiguration43.getOnlyOnPath();
        boolean boolean45 = crawlerConfiguration43.isVerifyUrls();
        int int46 = crawlerConfiguration43.getMaxLevels();
        int int47 = crawlerConfiguration43.getMaxLevels();
        boolean boolean48 = crawlerConfiguration43.isVerifyUrls();
        boolean boolean49 = crawlerConfiguration43.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = crawlerConfiguration43.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse56 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL37, 100, strMap50, "Unknown error", "com.soulgalore.crawler.http.socket.timeout", (long) 10, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", 0L);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse62 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL33, (int) '4', strMap50, "97", "100", (long) (byte) 1, "com.soulgalore.crawler.http.socket.timeout", (long) (byte) -1);
        boolean boolean63 = hTMLPageResponse12.equals((java.lang.Object) "100");
        java.lang.String str64 = hTMLPageResponse12.getResponseType();
        java.lang.String str65 = hTMLPageResponse12.toString();
        java.util.Map<java.lang.String, java.lang.String> strMap66 = hTMLPageResponse12.getResponseHeaders();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 97 + "'", int14 == 97);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.auth" + "'", str15, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "urls.txt" + "'", str21, "urls.txt");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str30, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "com.soulgalore.crawler.auth" + "'", str32, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL33);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "CrawlerURL url:urls.txt" + "'", str38, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(crawlerConfiguration43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str65, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNull(strMap66);
    }

    @Test
    public void test05485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05485");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setStartUrl("-1");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder6.build();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = crawlerConfiguration7.getRequestHeadersMap();
        java.lang.String str9 = crawlerConfiguration7.getStartUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean13 = crawlerURL12.isWrongSyntax();
        java.lang.String str14 = crawlerURL12.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse22 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL12, (int) 'a', strMap16, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str23 = crawlerURL12.getUrl();
        com.soulgalore.crawler.util.HeaderUtil headerUtil25 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = headerUtil25.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse33 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL12, (int) (short) 0, strMap27, "com.soulgalore.crawler.http.socket.timeout", "Malformed url", (long) '4', "Unknown error", (long) (byte) 100);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL34 = hTMLPageResponse33.getPageUrl();
        boolean boolean35 = crawlerConfiguration7.equals((java.lang.Object) hTMLPageResponse33);
        java.lang.String str36 = crawlerConfiguration7.getRequestHeaders();
        java.lang.String str37 = crawlerConfiguration7.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = crawlerConfiguration7.getRequestHeadersMap();
        java.lang.String str39 = crawlerConfiguration7.getOnlyOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "-1" + "'", str9, "-1");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "urls.txt" + "'", str14, "urls.txt");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.auth" + "'", str23, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(headerUtil25);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(crawlerURL34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "-1" + "'", str37, "-1");
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
    }

    @Test
    public void test05486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05486");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("Response timed out", "0", 580, (long) (byte) -1);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL10 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI11 = crawlerURL10.getUri();
        java.lang.String str12 = crawlerURL10.getReferer();
        java.lang.String str13 = crawlerURL10.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder15.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration18 = builder17.build();
        java.lang.String str19 = crawlerConfiguration18.getStartUrl();
        int int20 = crawlerConfiguration18.getMaxLevels();
        int int21 = crawlerConfiguration18.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = crawlerConfiguration18.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse28 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL10, (int) (byte) -1, strMap22, "100", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) (short) -1, "com.soulgalore.crawler.nrofhttpthreads", 0L);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse34 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL6, 580, strMap22, "10", "HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", 580L, "0", (long) 0);
        boolean boolean35 = assetResponse4.equals((java.lang.Object) 0);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray40 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL39 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, crawlerURLArray40);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet43 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray44 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet45 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45, hTMLPageResponseArray44);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult47 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, hTMLPageResponseSet43, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet48 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet49 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet50 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet51 = crawlerResult47.getNonWorkingUrls();
        boolean boolean52 = assetResponse4.equals((java.lang.Object) hTMLPageResponseSet51);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder53 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder55 = builder53.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder57 = builder53.setStartUrl("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder59 = builder53.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder61 = builder53.setNotOnPath("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder63 = builder61.setStartUrl("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        boolean boolean64 = assetResponse4.equals((java.lang.Object) builder61);
        java.lang.String str65 = assetResponse4.getUrl();
        java.lang.String str66 = assetResponse4.getReferer();
        java.lang.String str67 = assetResponse4.getUrl();
        org.junit.Assert.assertNull(uRI11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "urls.txt" + "'", str12, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "urls.txt" + "'", str13, "urls.txt");
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(crawlerConfiguration18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet48);
        org.junit.Assert.assertNotNull(crawlerURLSet49);
        org.junit.Assert.assertNotNull(crawlerURLSet50);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Response timed out" + "'", str65, "Response timed out");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "0" + "'", str66, "0");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Response timed out" + "'", str67, "Response timed out");
    }

    @Test
    public void test05487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05487");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder3 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder3.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration6 = builder5.build();
        java.lang.String str7 = crawlerConfiguration6.getOnlyOnPath();
        boolean boolean8 = crawlerConfiguration6.isVerifyUrls();
        com.soulgalore.crawler.util.StatusCode statusCode9 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN;
        boolean boolean10 = crawlerConfiguration6.equals((java.lang.Object) statusCode9);
        java.lang.String str11 = statusCode9.getFriendlyName();
        java.lang.String str12 = statusCode9.getFriendlyName();
        int int13 = statusCode9.getCode();
        boolean boolean14 = crawlerURL2.equals((java.lang.Object) int13);
        java.lang.String str15 = crawlerURL2.getReferer();
        java.lang.String str16 = crawlerURL2.getReferer();
        java.lang.String str17 = crawlerURL2.getUrl();
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(crawlerConfiguration6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + statusCode9 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN + "'", statusCode9.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Unknown error" + "'", str11, "Unknown error");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Unknown error" + "'", str12, "Unknown error");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 581 + "'", int13 == 581);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1" + "'", str15, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth" + "'", str17, "HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
    }

    @Test
    public void test05488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05488");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        java.lang.String str2 = crawlerURL1.getUrl();
        boolean boolean3 = crawlerURL1.isWrongSyntax();
        java.lang.String str4 = crawlerURL1.toString();
        java.net.URI uRI5 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL9 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray10 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL9 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet11 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet11, crawlerURLArray10);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet13 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray14 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet15, hTMLPageResponseArray14);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult17 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet11, hTMLPageResponseSet13, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet15);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet18 = crawlerResult17.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet19 = crawlerResult17.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet20 = crawlerResult17.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet21 = crawlerResult17.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet22 = crawlerResult17.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet23 = crawlerResult17.getUrls();
        boolean boolean24 = crawlerURL1.equals((java.lang.Object) crawlerResult17);
        boolean boolean25 = crawlerURL1.isWrongSyntax();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CrawlerURL url:hi!" + "'", str4, "CrawlerURL url:hi!");
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertNotNull(crawlerURLArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet18);
        org.junit.Assert.assertNotNull(crawlerURLSet19);
        org.junit.Assert.assertNotNull(crawlerURLSet20);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet21);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet22);
        org.junit.Assert.assertNotNull(crawlerURLSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test05489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05489");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean5 = crawlerURL4.isWrongSyntax();
        java.lang.String str6 = crawlerURL4.getReferer();
        java.lang.String str7 = crawlerURL4.getHost();
        java.lang.String str8 = crawlerURL4.getHost();
        java.net.URI uRI9 = crawlerURL4.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration14 = builder13.build();
        java.lang.String str15 = crawlerConfiguration14.getStartUrl();
        int int16 = crawlerConfiguration14.getMaxLevels();
        int int17 = crawlerConfiguration14.getMaxLevels();
        java.lang.String str18 = crawlerConfiguration14.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = crawlerConfiguration14.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse25 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL4, (int) '4', strMap19, "com.soulgalore.crawler.http.socket.timeout", "Response timed out", (long) '#', "Malformed url", 1L);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable27 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("32", assetFetcher1, strMap19, "AssetResponseCallable url:-1");
        java.lang.String str28 = assetResponseCallable27.toString();
        java.lang.String str29 = assetResponseCallable27.toString();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "urls.txt" + "'", str6, "urls.txt");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(uRI9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(crawlerConfiguration14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AssetResponseCallable url:32" + "'", str28, "AssetResponseCallable url:32");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "AssetResponseCallable url:32" + "'", str29, "AssetResponseCallable url:32");
    }

    @Test
    public void test05490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05490");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setOnlyOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setOnlyOnPath("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder16.setStartUrl("52");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration21 = builder20.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder20.setStartUrl("CrawlerURL url:35");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration24 = builder20.build();
        int int25 = crawlerConfiguration24.getMaxLevels();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(crawlerConfiguration21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(crawlerConfiguration24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test05491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05491");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI5 = crawlerURL4.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder9.build();
        java.lang.String str11 = crawlerConfiguration10.getStartUrl();
        int int12 = crawlerConfiguration10.getMaxLevels();
        int int13 = crawlerConfiguration10.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse20 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL4, (int) (short) 10, strMap14, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable22 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("100", assetFetcher1, strMap14, "errorassets.csv");
        java.lang.String str23 = assetResponseCallable22.toString();
        java.lang.String str24 = assetResponseCallable22.toString();
        java.lang.String str25 = assetResponseCallable22.toString();
        java.lang.String str26 = assetResponseCallable22.toString();
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.assets.AssetResponse assetResponse27 = assetResponseCallable22.call();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "AssetResponseCallable url:100" + "'", str23, "AssetResponseCallable url:100");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AssetResponseCallable url:100" + "'", str24, "AssetResponseCallable url:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "AssetResponseCallable url:100" + "'", str25, "AssetResponseCallable url:100");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "AssetResponseCallable url:100" + "'", str26, "AssetResponseCallable url:100");
    }

    @Test
    public void test05492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05492");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:", "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:97encoding:52 type:CrawlerURL url:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.util.HeaderUtil headerUtil4 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil4.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = headerUtil4.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil4.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil4.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap12, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads type:-1", "result.csv", (long) (short) -1, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:0 type:", (long) (short) 1);
        org.junit.Assert.assertNotNull(headerUtil4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test05493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05493");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) "CrawlerURL url:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        java.lang.String str17 = crawlerURL16.getHost();
        java.net.URI uRI18 = crawlerURL16.getUri();
        java.lang.String str19 = crawlerURL16.toString();
        java.net.URI uRI20 = crawlerURL16.getUri();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(uRI18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str19, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(uRI20);
    }

    @Test
    public void test05494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05494");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        long long5 = assetResponse4.getFetchTime();
        long long6 = assetResponse4.getFetchTime();
        java.lang.String str7 = assetResponse4.getReferer();
        long long8 = assetResponse4.getFetchTime();
        long long9 = assetResponse4.getFetchTime();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 100L + "'", long5 == 100L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 100L + "'", long6 == 100L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str7, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 100L + "'", long8 == 100L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 100L + "'", long9 == 100L);
    }

    @Test
    public void test05495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05495");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int13 = hTMLPageResponse12.getResponseCode();
        int int14 = hTMLPageResponse12.getResponseCode();
        java.lang.String str15 = hTMLPageResponse12.getUrl();
        java.lang.String str16 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str18 = hTMLPageResponse12.getResponseType();
        java.lang.String str19 = hTMLPageResponse12.toString();
        org.jsoup.nodes.Document document20 = hTMLPageResponse12.getBody();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 97 + "'", int14 == 97);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.auth" + "'", str15, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str16, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str19, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNull(document20);
    }

    @Test
    public void test05496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05496");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:HTMLPageResponseurl:hi!responseCode:52encoding:urls.txt type:CrawlerURL url:com.soulgalore.crawler.auth", "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:");
    }

    @Test
    public void test05497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05497");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int13 = hTMLPageResponse12.getResponseCode();
        java.lang.String str14 = hTMLPageResponse12.getResponseType();
        java.lang.String str15 = hTMLPageResponse12.toString();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        java.lang.String str17 = hTMLPageResponse12.toString();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = hTMLPageResponse12.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = hTMLPageResponse12.getPageUrl();
        java.net.URI uRI20 = crawlerURL19.getUri();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str15, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str17, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(crawlerURL19);
        org.junit.Assert.assertNull(uRI20);
    }

    @Test
    public void test05498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05498");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int13 = hTMLPageResponse12.getResponseCode();
        int int14 = hTMLPageResponse12.getResponseCode();
        java.lang.String str15 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder16.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder20.setNotOnPath("errorurls.txt");
        boolean boolean23 = hTMLPageResponse12.equals((java.lang.Object) builder20);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration24 = builder20.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder20.setMaxLevels(52);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder26.setNotOnPath("CrawlerURL url:1");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 97 + "'", int14 == 97);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.auth" + "'", str15, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(crawlerConfiguration24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
    }

    @Test
    public void test05499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05499");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        long long14 = hTMLPageResponse12.getFetchTime();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = hTMLPageResponse12.getResponseHeaders();
        org.jsoup.nodes.Document document16 = hTMLPageResponse12.getBody();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 100L + "'", long14 == 100L);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(document16);
    }

    @Test
    public void test05500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05500");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setMaxLevels((int) '4');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setMaxLevels(583);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setMaxLevels((int) (short) 10);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setNotOnPath("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setMaxLevels((int) (short) 10);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setVerifyUrls(false);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
    }
}

