package com.soulgalore.crawler;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest19 {

    public static boolean debug = false;

    @Test
    public void test09501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09501");
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet1 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray7 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL6 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet8 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet8, crawlerURLArray7);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray11 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet12 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet12, hTMLPageResponseArray11);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult14 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet8, hTMLPageResponseSet10, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet12);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult14.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult14.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = crawlerResult14.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet18 = crawlerResult14.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet19 = crawlerResult14.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet20 = crawlerResult14.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray25 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL24 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet26 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet26, crawlerURLArray25);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet28 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray29 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet30 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet30, hTMLPageResponseArray29);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult32 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet26, hTMLPageResponseSet28, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet30);
        java.lang.String str33 = crawlerResult32.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet34 = crawlerResult32.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet35 = crawlerResult32.getNonWorkingUrls();
        java.lang.String str36 = crawlerResult32.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet37 = crawlerResult32.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL41 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray42 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL41 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet43 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet43, crawlerURLArray42);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet45 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray46 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet47 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet47, hTMLPageResponseArray46);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult49 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet43, hTMLPageResponseSet45, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet47);
        java.lang.String str50 = crawlerResult49.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet51 = crawlerResult49.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet52 = crawlerResult49.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult53 = new com.soulgalore.crawler.core.CrawlerResult("CrawlerURL url:urls.txt", crawlerURLSet20, hTMLPageResponseSet37, hTMLPageResponseSet52);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL57 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean58 = crawlerURL57.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL61 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean62 = crawlerURL61.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL65 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI66 = crawlerURL65.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray67 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL57, crawlerURL61, crawlerURL65 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet68 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet68, crawlerURLArray67);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray70 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet71 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet71, hTMLPageResponseArray70);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL76 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray77 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL76 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet78 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet78, crawlerURLArray77);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet80 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray81 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet82 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet82, hTMLPageResponseArray81);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult84 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet78, hTMLPageResponseSet80, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet82);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult85 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet68, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet71, hTMLPageResponseSet80);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult86 = new com.soulgalore.crawler.core.CrawlerResult("CrawlerURL url:hi!", crawlerURLSet1, hTMLPageResponseSet37, hTMLPageResponseSet80);
        java.lang.String str87 = crawlerResult86.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet88 = crawlerResult86.getVerifiedURLResponses();
        java.lang.String str89 = crawlerResult86.getTheStartPoint();
        org.junit.Assert.assertNotNull(crawlerURLArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet17);
        org.junit.Assert.assertNotNull(crawlerURLSet18);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet19);
        org.junit.Assert.assertNotNull(crawlerURLSet20);
        org.junit.Assert.assertNotNull(crawlerURLArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet34);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet37);
        org.junit.Assert.assertNotNull(crawlerURLArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet51);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet52);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(uRI66);
        org.junit.Assert.assertNotNull(crawlerURLArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "CrawlerURL url:hi!" + "'", str87, "CrawlerURL url:hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "CrawlerURL url:hi!" + "'", str89, "CrawlerURL url:hi!");
    }

    @Test
    public void test09502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09502");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.lang.String str5 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL10 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean11 = crawlerURL10.isWrongSyntax();
        java.lang.String str12 = crawlerURL10.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse20 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL10, (int) 'a', strMap14, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str21 = hTMLPageResponse20.toString();
        int int22 = hTMLPageResponse20.getResponseCode();
        boolean boolean23 = crawlerConfiguration3.equals((java.lang.Object) hTMLPageResponse20);
        int int24 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str25 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str26 = crawlerConfiguration3.getStartUrl();
        int int27 = crawlerConfiguration3.getMaxLevels();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "urls.txt" + "'", str12, "urls.txt");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str21, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 97 + "'", int22 == 97);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
    }

    @Test
    public void test09503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09503");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder13.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder13.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setVerifyUrls(false);
        boolean boolean26 = hTMLPageResponse12.equals((java.lang.Object) builder25);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = hTMLPageResponse12.getResponseHeaders();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = hTMLPageResponse12.getHeaderValue("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:AssetResponseCallable url:Unknown error type:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(strMap27);
    }

    @Test
    public void test09504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09504");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setMaxLevels((int) '4');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setMaxLevels(583);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setMaxLevels((int) (short) -1);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setNotOnPath("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder6.setMaxLevels(10);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test09505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09505");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        int int5 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str6 = crawlerConfiguration3.getNotOnPath();
        boolean boolean8 = crawlerConfiguration3.equals((java.lang.Object) "Malformed url");
        java.lang.String str9 = crawlerConfiguration3.getNotOnPath();
        boolean boolean10 = crawlerConfiguration3.isVerifyUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL13 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI14 = crawlerURL13.getUri();
        java.net.URI uRI15 = crawlerURL13.getUri();
        boolean boolean17 = crawlerURL13.equals((java.lang.Object) "10");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI20 = crawlerURL19.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL23 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean24 = crawlerURL23.isWrongSyntax();
        java.lang.String str25 = crawlerURL23.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse33 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL23, (int) 'a', strMap27, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str34 = hTMLPageResponse33.getUrl();
        boolean boolean35 = crawlerURL19.equals((java.lang.Object) str34);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher38 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil39 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = headerUtil39.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable43 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher38, strMap41, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse49 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL19, (int) (short) 100, strMap41, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        boolean boolean50 = crawlerURL13.equals((java.lang.Object) crawlerURL19);
        boolean boolean51 = crawlerURL19.isWrongSyntax();
        java.lang.String str52 = crawlerURL19.toString();
        java.lang.String str53 = crawlerURL19.getHost();
        boolean boolean54 = crawlerConfiguration3.equals((java.lang.Object) str53);
        int int55 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str56 = crawlerConfiguration3.getRequestHeaders();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(uRI14);
        org.junit.Assert.assertNull(uRI15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(uRI20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "urls.txt" + "'", str25, "urls.txt");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "com.soulgalore.crawler.auth" + "'", str34, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(headerUtil39);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str52, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
    }

    @Test
    public void test09506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09506");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL15 = hTMLPageResponse12.getPageUrl();
        boolean boolean16 = crawlerURL15.isWrongSyntax();
        java.lang.String str17 = crawlerURL15.toString();
        java.lang.String str18 = crawlerURL15.getReferer();
        java.lang.String str19 = crawlerURL15.getUrl();
        java.lang.String str20 = crawlerURL15.getUrl();
        boolean boolean21 = crawlerURL15.isWrongSyntax();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(crawlerURL15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str17, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "urls.txt" + "'", str18, "urls.txt");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "com.soulgalore.crawler.auth" + "'", str19, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "com.soulgalore.crawler.auth" + "'", str20, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test09507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09507");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getOnlyOnPath();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        int int6 = crawlerConfiguration3.getMaxLevels();
        int int7 = crawlerConfiguration3.getMaxLevels();
        boolean boolean8 = crawlerConfiguration3.isVerifyUrls();
        java.lang.String str9 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str10 = crawlerConfiguration3.getStartUrl();
        java.lang.String str11 = crawlerConfiguration3.getOnlyOnPath();
        java.lang.String str12 = crawlerConfiguration3.getRequestHeaders();
        java.lang.String str13 = crawlerConfiguration3.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test09508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09508");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        long long15 = hTMLPageResponse12.getFetchTime();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        java.lang.String str17 = hTMLPageResponse12.getUrl();
        java.lang.String str18 = hTMLPageResponse12.getEncoding();
        long long19 = hTMLPageResponse12.getFetchTime();
        java.lang.String str20 = hTMLPageResponse12.toString();
        java.lang.String str21 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder22.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder22.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration27 = builder22.build();
        int int28 = crawlerConfiguration27.getMaxLevels();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray29 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet30 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30, assetResponseArray29);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray32 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet33 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33, assetResponseArray32);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult35 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray36 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet37 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37, assetResponseArray36);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray39 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40, assetResponseArray39);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult42 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet43 = assetsVerificationResult42.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult44 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33, assetResponseSet43);
        boolean boolean45 = crawlerConfiguration27.equals((java.lang.Object) assetResponseSet43);
        boolean boolean46 = hTMLPageResponse12.equals((java.lang.Object) boolean45);
        long long47 = hTMLPageResponse12.getFetchTime();
        org.jsoup.nodes.Document document48 = hTMLPageResponse12.getBody();
        org.jsoup.nodes.Document document49 = hTMLPageResponse12.getBody();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 100L + "'", long15 == 100L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "com.soulgalore.crawler.auth" + "'", str17, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str18, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 100L + "'", long19 == 100L);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str20, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str21, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(crawlerConfiguration27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(assetResponseArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(assetResponseArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(assetResponseArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(assetResponseArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(assetResponseSet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 100L + "'", long47 == 100L);
        org.junit.Assert.assertNull(document48);
        org.junit.Assert.assertNull(document49);
    }

    @Test
    public void test09509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09509");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setStartUrl("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setStartUrl("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration21 = builder18.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder18.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setNotOnPath("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder25.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder25.setVerifyUrls(false);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(crawlerConfiguration21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
    }

    @Test
    public void test09510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09510");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet12 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet16 = crawlerResult11.getNonWorkingUrls();
        java.lang.String str17 = crawlerResult11.getTheStartPoint();
        java.lang.String str18 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet19 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet20 = crawlerResult11.getUrls();
        java.lang.String str21 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet22 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet23 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet24 = crawlerResult11.getNonWorkingUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet12);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet19);
        org.junit.Assert.assertNotNull(crawlerURLSet20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet22);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet23);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet24);
    }

    @Test
    public void test09511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09511");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) builder14);
        long long16 = hTMLPageResponse12.getFetchTime();
        java.lang.String str17 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        java.lang.String str19 = crawlerURL18.getHost();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder20.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder20.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder20.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration27 = builder20.build();
        java.lang.Object obj28 = null;
        boolean boolean29 = crawlerConfiguration27.equals(obj28);
        java.lang.String str30 = crawlerConfiguration27.getNotOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = crawlerConfiguration27.getRequestHeadersMap();
        boolean boolean32 = crawlerURL18.equals((java.lang.Object) crawlerConfiguration27);
        java.lang.String str33 = crawlerConfiguration27.getNotOnPath();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str17, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(crawlerConfiguration27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "urls.txt" + "'", str30, "urls.txt");
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "urls.txt" + "'", str33, "urls.txt");
    }

    @Test
    public void test09512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09512");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", "com.soulgalore.crawler.http.socket.timeout");
        com.soulgalore.crawler.util.HeaderUtil headerUtil4 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil4.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = headerUtil4.createHeadersFromString("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil4.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse16 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) '#', strMap10, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:0 type:", "", (long) 100, "AssetResponseCallable url:com.soulgalore.crawler.auth", (long) (byte) 100);
        java.lang.String str17 = crawlerURL2.getUrl();
        boolean boolean18 = crawlerURL2.isWrongSyntax();
        boolean boolean19 = crawlerURL2.isWrongSyntax();
        org.junit.Assert.assertNotNull(headerUtil4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str17, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test09513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09513");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        java.lang.String str20 = hTMLPageResponse18.getHeaderValue("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = hTMLPageResponse18.getPageUrl();
        java.lang.String str22 = hTMLPageResponse18.getResponseType();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL23 = hTMLPageResponse18.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL26 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", "AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        boolean boolean27 = crawlerURL23.equals((java.lang.Object) crawlerURL26);
        java.lang.String str28 = crawlerURL26.getHost();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(crawlerURL21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "com.soulgalore.crawler.auth" + "'", str22, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test09514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09514");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean14 = assetResponse4.equals((java.lang.Object) 100L);
        java.lang.String str15 = assetResponse4.getReferer();
        java.lang.String str16 = assetResponse4.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder17.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder23.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder29.setVerifyUrls(false);
        boolean boolean32 = assetResponse4.equals((java.lang.Object) false);
        java.lang.String str33 = assetResponse4.getReferer();
        java.lang.String str34 = assetResponse4.getUrl();
        int int35 = assetResponse4.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL37 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI38 = crawlerURL37.getUri();
        java.lang.String str39 = crawlerURL37.getUrl();
        java.lang.String str40 = crawlerURL37.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder41 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder43 = builder41.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder45 = builder41.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder47 = builder41.setNotOnPath("AssetResponseCallable url:errorassets.csv");
        boolean boolean48 = crawlerURL37.equals((java.lang.Object) builder47);
        java.lang.String str49 = crawlerURL37.getUrl();
        java.lang.Class<?> wildcardClass50 = crawlerURL37.getClass();
        boolean boolean51 = assetResponse4.equals((java.lang.Object) crawlerURL37);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder52 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder54 = builder52.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder56 = builder52.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder58 = builder52.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder60 = builder58.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder62 = builder60.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder64 = builder60.setMaxLevels(10);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder66 = builder60.setOnlyOnPath("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder68 = builder66.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder70 = builder66.setNotOnPath("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder72 = builder70.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder74 = builder72.setVerifyUrls(false);
        boolean boolean75 = assetResponse4.equals((java.lang.Object) false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "100" + "'", str15, "100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "100" + "'", str16, "100");
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "100" + "'", str33, "100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNull(uRI38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str39, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str40, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str49, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test09515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09515");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        java.lang.String str2 = crawlerURL1.getUrl();
        boolean boolean3 = crawlerURL1.isWrongSyntax();
        com.soulgalore.crawler.util.HeaderUtil headerUtil5 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = headerUtil5.createHeadersFromString("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse13 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) 10, strMap7, "urls.txt", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (byte) 10, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", (-1L));
        java.lang.String str15 = hTMLPageResponse13.getHeaderValue("CrawlerURL url:1");
        org.jsoup.nodes.Document document16 = hTMLPageResponse13.getBody();
        int int17 = hTMLPageResponse13.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = hTMLPageResponse13.getResponseHeaders();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(headerUtil5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(document16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10 + "'", int17 == 10);
        org.junit.Assert.assertNotNull(strMap18);
    }

    @Test
    public void test09516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09516");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:AssetResponseCallable url:Malformed url", "com.soulgalore.crawler.nrofhttpthreads", (int) (byte) 0, (long) (short) -1);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL9 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI10 = crawlerURL9.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL13 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean14 = crawlerURL13.isWrongSyntax();
        java.lang.String str15 = crawlerURL13.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL13, (int) 'a', strMap17, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str24 = hTMLPageResponse23.getUrl();
        boolean boolean25 = crawlerURL9.equals((java.lang.Object) str24);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher28 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil29 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = headerUtil29.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable33 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher28, strMap31, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse39 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL9, (int) (short) 100, strMap31, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL6, (int) (short) -1, strMap31, "com.soulgalore.crawler.http.socket.timeout", "errorurls.txt", (long) 100, "result.csv", (long) (short) 0);
        org.jsoup.nodes.Document document46 = hTMLPageResponse45.getBody();
        int int47 = hTMLPageResponse45.getResponseCode();
        boolean boolean48 = assetResponse4.equals((java.lang.Object) int47);
        org.junit.Assert.assertNull(uRI10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "urls.txt" + "'", str15, "urls.txt");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "com.soulgalore.crawler.auth" + "'", str24, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(headerUtil29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(document46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test09517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09517");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        int int7 = assetResponse4.getResponseCode();
        java.lang.String str8 = assetResponse4.getUrl();
        int int9 = assetResponse4.getResponseCode();
        long long10 = assetResponse4.getFetchTime();
        java.lang.String str11 = assetResponse4.getReferer();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray12 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13, assetResponseArray12);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray15 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet16 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet16, assetResponseArray15);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult18 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet16);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet19 = assetsVerificationResult18.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = assetsVerificationResult18.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray21 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, assetResponseArray21);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray24 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet25, assetResponseArray24);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult27 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet25);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult28 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet20, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray29 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet30 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30, assetResponseArray29);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray32 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet33 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33, assetResponseArray32);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult35 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet36 = assetsVerificationResult35.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult37 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet20, assetResponseSet36);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet38 = assetsVerificationResult37.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet39 = assetsVerificationResult37.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = assetsVerificationResult37.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet41 = assetsVerificationResult37.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet42 = assetsVerificationResult37.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet43 = assetsVerificationResult37.getWorkingAssets();
        boolean boolean44 = assetResponse4.equals((java.lang.Object) assetsVerificationResult37);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet45 = assetsVerificationResult37.getWorkingAssets();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "100" + "'", str11, "100");
        org.junit.Assert.assertNotNull(assetResponseArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(assetResponseArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(assetResponseSet19);
        org.junit.Assert.assertNotNull(assetResponseSet20);
        org.junit.Assert.assertNotNull(assetResponseArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(assetResponseArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(assetResponseArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(assetResponseArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(assetResponseSet36);
        org.junit.Assert.assertNotNull(assetResponseSet38);
        org.junit.Assert.assertNotNull(assetResponseSet39);
        org.junit.Assert.assertNotNull(assetResponseSet40);
        org.junit.Assert.assertNotNull(assetResponseSet41);
        org.junit.Assert.assertNotNull(assetResponseSet42);
        org.junit.Assert.assertNotNull(assetResponseSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(assetResponseSet45);
    }

    @Test
    public void test09518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09518");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setOnlyOnPath("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:32encoding:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setNotOnPath("CrawlerURL url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test09519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09519");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) builder14);
        long long16 = hTMLPageResponse12.getFetchTime();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder17.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration24 = builder17.build();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = crawlerConfiguration24.getRequestHeadersMap();
        boolean boolean26 = hTMLPageResponse12.equals((java.lang.Object) crawlerConfiguration24);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL27 = hTMLPageResponse12.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str29 = hTMLPageResponse12.getEncoding();
        java.lang.String str30 = hTMLPageResponse12.getResponseType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(crawlerConfiguration24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(crawlerURL27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str29, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
    }

    @Test
    public void test09520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09520");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url", "CrawlerURL url:result.csv", (-1), 0L);
        long long5 = assetResponse4.getFetchTime();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
    }

    @Test
    public void test09521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09521");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.lang.String str2 = crawlerURL1.toString();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse10 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) ' ', strMap4, "CrawlerURL url:urls.txt", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 1, "AssetResponseCallable url:-1", 52L);
        java.lang.String str11 = hTMLPageResponse10.toString();
        java.lang.String str12 = hTMLPageResponse10.getResponseType();
        int int13 = hTMLPageResponse10.getResponseCode();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str2, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:32encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:AssetResponseCallable url:-1" + "'", str11, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:32encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:AssetResponseCallable url:-1");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "AssetResponseCallable url:-1" + "'", str12, "AssetResponseCallable url:-1");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
    }

    @Test
    public void test09522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09522");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.lang.String str5 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = crawlerConfiguration3.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration3.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = crawlerConfiguration3.getRequestHeadersMap();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL11 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean12 = crawlerURL11.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration19 = builder14.build();
        java.lang.String str20 = crawlerConfiguration19.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = crawlerConfiguration19.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse27 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL11, (-1), strMap21, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int28 = hTMLPageResponse27.getResponseCode();
        int int29 = hTMLPageResponse27.getResponseCode();
        boolean boolean30 = crawlerConfiguration3.equals((java.lang.Object) hTMLPageResponse27);
        java.lang.String str31 = crawlerConfiguration3.getOnlyOnPath();
        java.lang.String str32 = crawlerConfiguration3.getOnlyOnPath();
        java.lang.String str33 = crawlerConfiguration3.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(crawlerConfiguration19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
    }

    @Test
    public void test09523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09523");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        long long15 = hTMLPageResponse12.getFetchTime();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        java.lang.String str17 = hTMLPageResponse12.getUrl();
        java.lang.String str18 = hTMLPageResponse12.getEncoding();
        java.lang.String str19 = hTMLPageResponse12.getResponseType();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = hTMLPageResponse12.getPageUrl();
        int int21 = hTMLPageResponse12.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = hTMLPageResponse12.getResponseHeaders();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 100L + "'", long15 == 100L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "com.soulgalore.crawler.auth" + "'", str17, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str18, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(crawlerURL20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 97 + "'", int21 == 97);
        org.junit.Assert.assertNull(strMap22);
    }

    @Test
    public void test09524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09524");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setOnlyOnPath("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setStartUrl("100");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setNotOnPath("CrawlerURL url:100");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test09525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09525");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder2.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder2.build();
        java.lang.String str8 = crawlerConfiguration7.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration12 = builder11.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder11.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setMaxLevels((int) '4');
        boolean boolean17 = crawlerConfiguration7.equals((java.lang.Object) builder16);
        boolean boolean18 = crawlerConfiguration7.isVerifyUrls();
        boolean boolean19 = crawlerConfiguration7.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = crawlerConfiguration7.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = crawlerConfiguration7.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable23 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:AssetResponseCallable url:Unknown error type:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout", assetFetcher1, strMap21, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:CrawlerURL url:1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain");
        java.lang.String str24 = assetResponseCallable23.toString();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(crawlerConfiguration12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:AssetResponseCallable url:Unknown error type:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout" + "'", str24, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:AssetResponseCallable url:Unknown error type:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
    }

    @Test
    public void test09526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09526");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.lang.String str5 = crawlerURL2.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder9.build();
        java.lang.String str11 = crawlerConfiguration10.getStartUrl();
        int int12 = crawlerConfiguration10.getMaxLevels();
        int int13 = crawlerConfiguration10.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse20 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (byte) -1, strMap14, "100", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) (short) -1, "com.soulgalore.crawler.nrofhttpthreads", 0L);
        org.jsoup.nodes.Document document21 = hTMLPageResponse20.getBody();
        int int22 = hTMLPageResponse20.getResponseCode();
        java.lang.String str23 = hTMLPageResponse20.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL25 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI26 = crawlerURL25.getUri();
        java.lang.String str27 = crawlerURL25.getHost();
        java.lang.String str28 = crawlerURL25.getReferer();
        boolean boolean29 = hTMLPageResponse20.equals((java.lang.Object) str28);
        java.lang.String str31 = hTMLPageResponse20.getHeaderValue("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap32 = hTMLPageResponse20.getResponseHeaders();
        java.lang.String str33 = hTMLPageResponse20.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL34 = hTMLPageResponse20.getPageUrl();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "urls.txt" + "'", str5, "urls.txt");
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(document21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.auth" + "'", str23, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(uRI26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads" + "'", str33, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(crawlerURL34);
    }

    @Test
    public void test09527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09527");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("result.csv", "Malformed url");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse8 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int9 = assetResponse8.getResponseCode();
        int int10 = assetResponse8.getResponseCode();
        long long11 = assetResponse8.getFetchTime();
        long long12 = assetResponse8.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse17 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean18 = assetResponse8.equals((java.lang.Object) 100L);
        java.lang.String str19 = assetResponse8.getReferer();
        java.lang.String str20 = assetResponse8.getReferer();
        boolean boolean22 = assetResponse8.equals((java.lang.Object) "com.soulgalore.crawler.proxy");
        java.lang.String str23 = assetResponse8.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL26 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean27 = crawlerURL26.isWrongSyntax();
        java.lang.String str28 = crawlerURL26.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse36 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL26, (int) 'a', strMap30, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str37 = hTMLPageResponse36.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = hTMLPageResponse36.getResponseHeaders();
        java.lang.String str39 = hTMLPageResponse36.getEncoding();
        java.lang.String str40 = hTMLPageResponse36.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL41 = hTMLPageResponse36.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL42 = hTMLPageResponse36.getPageUrl();
        int int43 = hTMLPageResponse36.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL44 = hTMLPageResponse36.getPageUrl();
        boolean boolean45 = crawlerURL44.isWrongSyntax();
        boolean boolean46 = assetResponse8.equals((java.lang.Object) boolean45);
        boolean boolean47 = crawlerURL2.equals((java.lang.Object) assetResponse8);
        java.lang.String str48 = crawlerURL2.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder49 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder51 = builder49.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration52 = builder51.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder54 = builder51.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration55 = builder54.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder57 = builder54.setStartUrl("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder59 = builder54.setRequestHeaders("AssetResponseCallable url:97");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder61 = builder59.setRequestHeaders("AssetResponseCallable url:CrawlerURL url:hi!");
        boolean boolean62 = crawlerURL2.equals((java.lang.Object) builder61);
        java.lang.Class<?> wildcardClass63 = builder61.getClass();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "100" + "'", str19, "100");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "100" + "'", str20, "100");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "urls.txt" + "'", str28, "urls.txt");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str37, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str39, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str40, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL41);
        org.junit.Assert.assertNotNull(crawlerURL42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 97 + "'", int43 == 97);
        org.junit.Assert.assertNotNull(crawlerURL44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Malformed url" + "'", str48, "Malformed url");
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(crawlerConfiguration52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(crawlerConfiguration55);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test09528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09528");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder2.setMaxLevels((int) (short) -1);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setRequestHeaders("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:0 type:");
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
    }

    @Test
    public void test09529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09529");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:", "HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", 0, (long) (byte) -1);
        java.lang.String str5 = assetResponse4.getUrl();
        java.lang.Object obj6 = null;
        boolean boolean7 = assetResponse4.equals(obj6);
        int int8 = assetResponse4.getResponseCode();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration12 = builder11.build();
        java.lang.String str13 = crawlerConfiguration12.getOnlyOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        boolean boolean15 = crawlerConfiguration12.equals((java.lang.Object) builder14);
        java.lang.String str16 = crawlerConfiguration12.getStartUrl();
        java.lang.String str17 = crawlerConfiguration12.getOnlyOnPath();
        java.lang.String str18 = crawlerConfiguration12.getStartUrl();
        boolean boolean19 = crawlerConfiguration12.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = crawlerConfiguration12.getRequestHeadersMap();
        boolean boolean21 = crawlerConfiguration12.isVerifyUrls();
        java.lang.String str22 = crawlerConfiguration12.getStartUrl();
        boolean boolean23 = assetResponse4.equals((java.lang.Object) str22);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AssetResponseCallable url:" + "'", str5, "AssetResponseCallable url:");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(crawlerConfiguration12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test09530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09530");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getNonWorkingAssets();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration13 = builder8.build();
        java.lang.String str14 = crawlerConfiguration13.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = crawlerConfiguration13.getRequestHeadersMap();
        java.lang.String str16 = crawlerConfiguration13.getNotOnPath();
        int int17 = crawlerConfiguration13.getMaxLevels();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray18 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet19 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet19, assetResponseArray18);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray21 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, assetResponseArray21);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult24 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet19, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = assetsVerificationResult24.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet26 = assetsVerificationResult24.getWorkingAssets();
        boolean boolean27 = crawlerConfiguration13.equals((java.lang.Object) assetResponseSet26);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult28 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet7, assetResponseSet26);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = assetsVerificationResult28.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet30 = assetsVerificationResult28.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray31 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet32 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32, assetResponseArray31);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray34 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet35 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet35, assetResponseArray34);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult37 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet35);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet38 = assetsVerificationResult37.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet39 = assetsVerificationResult37.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = assetsVerificationResult37.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet41 = null;
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray42 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet43 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet43, assetResponseArray42);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray45 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet46 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet46, assetResponseArray45);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult48 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet43, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet46);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet49 = assetsVerificationResult48.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray50 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet51 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet51, assetResponseArray50);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray53 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet54 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet54, assetResponseArray53);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult56 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet51, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet54);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult57 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet49, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet54);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult58 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet41, assetResponseSet49);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult59 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet40, assetResponseSet49);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet60 = assetsVerificationResult59.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet61 = assetsVerificationResult59.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet62 = assetsVerificationResult59.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet63 = assetsVerificationResult59.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet64 = assetsVerificationResult59.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult65 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet30, assetResponseSet64);
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(crawlerConfiguration13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(assetResponseArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(assetResponseArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(assetResponseSet25);
        org.junit.Assert.assertNotNull(assetResponseSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(assetResponseSet29);
        org.junit.Assert.assertNotNull(assetResponseSet30);
        org.junit.Assert.assertNotNull(assetResponseArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(assetResponseArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(assetResponseSet38);
        org.junit.Assert.assertNotNull(assetResponseSet39);
        org.junit.Assert.assertNotNull(assetResponseSet40);
        org.junit.Assert.assertNotNull(assetResponseArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(assetResponseArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(assetResponseSet49);
        org.junit.Assert.assertNotNull(assetResponseArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(assetResponseArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(assetResponseSet60);
        org.junit.Assert.assertNotNull(assetResponseSet61);
        org.junit.Assert.assertNotNull(assetResponseSet62);
        org.junit.Assert.assertNotNull(assetResponseSet63);
        org.junit.Assert.assertNotNull(assetResponseSet64);
    }

    @Test
    public void test09531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09531");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray8 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet9, assetResponseArray8);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray11 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, assetResponseArray11);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult14 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet9, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult15 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet7, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet16 = assetsVerificationResult15.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet17 = assetsVerificationResult15.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray18 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet19 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet19, assetResponseArray18);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray21 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, assetResponseArray21);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult24 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet19, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = assetsVerificationResult24.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult26 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet17, assetResponseSet25);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet27 = assetsVerificationResult26.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet28 = assetsVerificationResult26.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray29 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet30 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30, assetResponseArray29);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray32 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet33 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33, assetResponseArray32);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult35 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet36 = assetsVerificationResult35.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet37 = assetsVerificationResult35.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet38 = assetsVerificationResult35.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet39 = assetsVerificationResult35.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray40 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet41, assetResponseArray40);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray43 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet44 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet44, assetResponseArray43);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult46 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet41, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet44);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet47 = assetsVerificationResult46.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult48 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet39, assetResponseSet47);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet49 = assetsVerificationResult48.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet50 = assetsVerificationResult48.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet51 = assetsVerificationResult48.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult52 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet28, assetResponseSet51);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet53 = assetsVerificationResult52.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray54 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet55 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet55, assetResponseArray54);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray57 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet58 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet58, assetResponseArray57);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult60 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet55, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet58);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet61 = assetsVerificationResult60.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet62 = assetsVerificationResult60.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray63 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet64 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet64, assetResponseArray63);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray66 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet67 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet67, assetResponseArray66);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult69 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet64, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet67);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult70 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet62, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet64);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray71 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet72 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet72, assetResponseArray71);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray74 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet75 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet75, assetResponseArray74);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult77 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet72, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet75);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet78 = assetsVerificationResult77.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult79 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet62, assetResponseSet78);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray80 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet81 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet81, assetResponseArray80);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray83 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet84 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet84, assetResponseArray83);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult86 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet81, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet84);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet87 = assetsVerificationResult86.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult88 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet62, assetResponseSet87);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet89 = assetsVerificationResult88.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult90 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet53, assetResponseSet89);
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(assetResponseArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(assetResponseSet16);
        org.junit.Assert.assertNotNull(assetResponseSet17);
        org.junit.Assert.assertNotNull(assetResponseArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(assetResponseArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(assetResponseSet25);
        org.junit.Assert.assertNotNull(assetResponseSet27);
        org.junit.Assert.assertNotNull(assetResponseSet28);
        org.junit.Assert.assertNotNull(assetResponseArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(assetResponseArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(assetResponseSet36);
        org.junit.Assert.assertNotNull(assetResponseSet37);
        org.junit.Assert.assertNotNull(assetResponseSet38);
        org.junit.Assert.assertNotNull(assetResponseSet39);
        org.junit.Assert.assertNotNull(assetResponseArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(assetResponseArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(assetResponseSet47);
        org.junit.Assert.assertNotNull(assetResponseSet49);
        org.junit.Assert.assertNotNull(assetResponseSet50);
        org.junit.Assert.assertNotNull(assetResponseSet51);
        org.junit.Assert.assertNotNull(assetResponseSet53);
        org.junit.Assert.assertNotNull(assetResponseArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(assetResponseArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(assetResponseSet61);
        org.junit.Assert.assertNotNull(assetResponseSet62);
        org.junit.Assert.assertNotNull(assetResponseArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(assetResponseArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(assetResponseArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(assetResponseArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(assetResponseSet78);
        org.junit.Assert.assertNotNull(assetResponseArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(assetResponseArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(assetResponseSet87);
        org.junit.Assert.assertNotNull(assetResponseSet89);
    }

    @Test
    public void test09532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09532");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean14 = assetResponse4.equals((java.lang.Object) 100L);
        java.lang.String str15 = assetResponse4.getReferer();
        long long16 = assetResponse4.getFetchTime();
        java.lang.String str17 = assetResponse4.getReferer();
        long long18 = assetResponse4.getFetchTime();
        java.lang.String str19 = assetResponse4.getUrl();
        int int20 = assetResponse4.getResponseCode();
        long long21 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder22.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder22.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration27 = builder22.build();
        int int28 = crawlerConfiguration27.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil29 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean30 = crawlerConfiguration27.equals((java.lang.Object) headerUtil29);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = headerUtil29.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap34 = headerUtil29.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.util.Map<java.lang.String, java.lang.String> strMap36 = headerUtil29.createHeadersFromString("AssetResponseCallable url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap38 = headerUtil29.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:0 type:");
        boolean boolean39 = assetResponse4.equals((java.lang.Object) "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:0 type:");
        java.lang.String str40 = assetResponse4.getUrl();
        java.lang.String str41 = assetResponse4.getReferer();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "100" + "'", str15, "100");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "100" + "'", str17, "100");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(crawlerConfiguration27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(headerUtil29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "100" + "'", str41, "100");
    }

    @Test
    public void test09533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09533");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        int int17 = hTMLPageResponse12.getResponseCode();
        java.lang.String str18 = hTMLPageResponse12.getResponseType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 97 + "'", int17 == 97);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test09534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09534");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet4 = authUtil0.createAuthsFromString("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"HTMLPageResponseurl\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
        org.junit.Assert.assertNotNull(authSet2);
    }

    @Test
    public void test09535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09535");
        com.soulgalore.crawler.guice.ExecutorServiceProvider executorServiceProvider1 = new com.soulgalore.crawler.guice.ExecutorServiceProvider(1);
        java.util.concurrent.ExecutorService executorService2 = executorServiceProvider1.get();
        java.util.concurrent.ExecutorService executorService3 = executorServiceProvider1.get();
        java.util.concurrent.ExecutorService executorService4 = executorServiceProvider1.get();
        java.util.concurrent.ExecutorService executorService5 = executorServiceProvider1.get();
        org.junit.Assert.assertNotNull(executorService2);
        org.junit.Assert.assertNotNull(executorService3);
        org.junit.Assert.assertNotNull(executorService4);
        org.junit.Assert.assertNotNull(executorService5);
    }

    @Test
    public void test09536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09536");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type: type:AssetResponseCallable url:Redirected to new domain");
    }

    @Test
    public void test09537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09537");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "Response timed out");
        com.soulgalore.crawler.util.HeaderUtil headerUtil4 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil4.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) '4', strMap6, "com.soulgalore.crawler.http.socket.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 580, "com.soulgalore.crawler.auth", (long) (short) 1);
        org.jsoup.nodes.Document document13 = hTMLPageResponse12.getBody();
        java.lang.String str15 = hTMLPageResponse12.getHeaderValue("com.soulgalore.crawler.proxy");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray17 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, assetResponseArray17);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray20 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet21 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21, assetResponseArray20);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult23 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet24 = assetsVerificationResult23.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = assetsVerificationResult23.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet26 = assetsVerificationResult23.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet27 = null;
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray28 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, assetResponseArray28);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray31 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet32 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32, assetResponseArray31);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult34 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet35 = assetsVerificationResult34.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray36 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet37 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37, assetResponseArray36);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray39 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40, assetResponseArray39);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult42 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult43 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet35, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult44 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet27, assetResponseSet35);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult45 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet26, assetResponseSet35);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet46 = assetsVerificationResult45.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet47 = assetsVerificationResult45.getWorkingAssets();
        boolean boolean48 = hTMLPageResponse12.equals((java.lang.Object) assetResponseSet47);
        long long49 = hTMLPageResponse12.getFetchTime();
        org.junit.Assert.assertNotNull(headerUtil4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(document13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertNotNull(assetResponseArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(assetResponseArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(assetResponseSet24);
        org.junit.Assert.assertNotNull(assetResponseSet25);
        org.junit.Assert.assertNotNull(assetResponseSet26);
        org.junit.Assert.assertNotNull(assetResponseArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(assetResponseArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(assetResponseSet35);
        org.junit.Assert.assertNotNull(assetResponseArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(assetResponseArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(assetResponseSet46);
        org.junit.Assert.assertNotNull(assetResponseSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 1L + "'", long49 == 1L);
    }

    @Test
    public void test09538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09538");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int13 = hTMLPageResponse12.getResponseCode();
        int int14 = hTMLPageResponse12.getResponseCode();
        java.lang.String str15 = hTMLPageResponse12.getUrl();
        java.lang.String str16 = hTMLPageResponse12.getEncoding();
        java.lang.String str17 = hTMLPageResponse12.getResponseType();
        java.lang.String str18 = hTMLPageResponse12.getUrl();
        org.jsoup.nodes.Document document19 = hTMLPageResponse12.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = hTMLPageResponse12.getPageUrl();
        java.lang.String str21 = crawlerURL20.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 97 + "'", int14 == 97);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.auth" + "'", str15, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str16, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.auth" + "'", str18, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document19);
        org.junit.Assert.assertNotNull(crawlerURL20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str21, "CrawlerURL url:com.soulgalore.crawler.auth");
    }

    @Test
    public void test09539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09539");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:hi!");
    }

    @Test
    public void test09540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09540");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet16 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet17 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray23 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL22 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet24 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, crawlerURLArray23);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray27 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet28 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28, hTMLPageResponseArray27);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult30 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, hTMLPageResponseSet26, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet31 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet32 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet33 = crawlerResult30.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL37 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray38 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL37 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet39 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet39, crawlerURLArray38);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet41 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray42 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet43 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet43, hTMLPageResponseArray42);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult45 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet39, hTMLPageResponseSet41, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet43);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet46 = crawlerResult45.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet47 = crawlerResult45.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet48 = crawlerResult45.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet49 = crawlerResult45.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL53 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray54 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL53 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet55 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet55, crawlerURLArray54);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet57 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray58 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet59 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet59, hTMLPageResponseArray58);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult61 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet55, hTMLPageResponseSet57, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet59);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet62 = crawlerResult61.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet63 = crawlerResult61.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet64 = crawlerResult61.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet65 = crawlerResult61.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet66 = crawlerResult61.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet67 = crawlerResult61.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult68 = new com.soulgalore.crawler.core.CrawlerResult("Malformed url", crawlerURLSet33, hTMLPageResponseSet49, hTMLPageResponseSet67);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL72 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray73 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL72 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet74 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet74, crawlerURLArray73);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet76 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray77 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet78 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet78, hTMLPageResponseArray77);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult80 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet74, hTMLPageResponseSet76, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet78);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet81 = crawlerResult80.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult82 = new com.soulgalore.crawler.core.CrawlerResult("35", crawlerURLSet17, hTMLPageResponseSet49, hTMLPageResponseSet81);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet83 = crawlerResult82.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet84 = crawlerResult82.getVerifiedURLResponses();
        java.lang.String str85 = crawlerResult82.getTheStartPoint();
        java.lang.String str86 = crawlerResult82.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet87 = crawlerResult82.getVerifiedURLResponses();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet16);
        org.junit.Assert.assertNotNull(crawlerURLSet17);
        org.junit.Assert.assertNotNull(crawlerURLArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet31);
        org.junit.Assert.assertNotNull(crawlerURLSet32);
        org.junit.Assert.assertNotNull(crawlerURLSet33);
        org.junit.Assert.assertNotNull(crawlerURLArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet46);
        org.junit.Assert.assertNotNull(crawlerURLSet47);
        org.junit.Assert.assertNotNull(crawlerURLSet48);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet49);
        org.junit.Assert.assertNotNull(crawlerURLArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet62);
        org.junit.Assert.assertNotNull(crawlerURLSet63);
        org.junit.Assert.assertNotNull(crawlerURLSet64);
        org.junit.Assert.assertNotNull(crawlerURLSet65);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet66);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet67);
        org.junit.Assert.assertNotNull(crawlerURLArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet81);
        org.junit.Assert.assertNotNull(crawlerURLSet83);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "35" + "'", str85, "35");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "35" + "'", str86, "35");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet87);
    }

    @Test
    public void test09541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09541");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        int int19 = hTMLPageResponse12.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = hTMLPageResponse12.getPageUrl();
        java.lang.String str21 = crawlerURL20.getReferer();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL25 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "Response timed out");
        com.soulgalore.crawler.util.HeaderUtil headerUtil27 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = headerUtil27.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse35 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL25, (int) '4', strMap29, "com.soulgalore.crawler.http.socket.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 580, "com.soulgalore.crawler.auth", (long) (short) 1);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse41 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, (int) (byte) 1, strMap29, "AssetResponseCallable url:Malformed url", "urls.txt", (long) (byte) 10, "com.soulgalore.crawler.http.connection.timeout", (long) 97);
        java.lang.String str42 = crawlerURL20.getUrl();
        java.net.URI uRI43 = crawlerURL20.getUri();
        java.lang.String str44 = crawlerURL20.getHost();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL47 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI48 = crawlerURL47.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL51 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean52 = crawlerURL51.isWrongSyntax();
        java.lang.String str53 = crawlerURL51.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse61 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL51, (int) 'a', strMap55, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str62 = hTMLPageResponse61.getUrl();
        boolean boolean63 = crawlerURL47.equals((java.lang.Object) str62);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher66 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil67 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap69 = headerUtil67.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable71 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher66, strMap69, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse77 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL47, (int) (short) 100, strMap69, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        org.jsoup.nodes.Document document78 = hTMLPageResponse77.getBody();
        java.lang.String str80 = hTMLPageResponse77.getHeaderValue("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        java.util.Map<java.lang.String, java.lang.String> strMap81 = hTMLPageResponse77.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse87 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, 0, strMap81, "com.soulgalore.crawler.proxy", "errorurls.txt", (long) (-1), "Wrong content type", (long) 97);
        long long88 = hTMLPageResponse87.getFetchTime();
        int int89 = hTMLPageResponse87.getResponseCode();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 97 + "'", int19 == 97);
        org.junit.Assert.assertNotNull(crawlerURL20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "urls.txt" + "'", str21, "urls.txt");
        org.junit.Assert.assertNotNull(headerUtil27);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "com.soulgalore.crawler.auth" + "'", str42, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(uRI43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(uRI48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "urls.txt" + "'", str53, "urls.txt");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "com.soulgalore.crawler.auth" + "'", str62, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(headerUtil67);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNull(document78);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 97L + "'", long88 == 97L);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
    }

    @Test
    public void test09542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09542");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("", "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:");
    }

    @Test
    public void test09543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09543");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider((int) '4', (-1), (int) (byte) 100, "AssetResponseCallable url:1", "HTMLPageResponseurl:CrawlerURL url:com.soulgalore.crawler.authresponseCode:0encoding:CrawlerURL url:result.csv type:-1");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:AssetResponseCallable url:1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09544");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        org.jsoup.nodes.Document document15 = hTMLPageResponse12.getBody();
        java.lang.String str16 = hTMLPageResponse12.getResponseType();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse21 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int22 = assetResponse21.getResponseCode();
        int int23 = assetResponse21.getResponseCode();
        long long24 = assetResponse21.getFetchTime();
        boolean boolean26 = assetResponse21.equals((java.lang.Object) 0.0d);
        java.lang.String str27 = assetResponse21.getReferer();
        boolean boolean28 = hTMLPageResponse12.equals((java.lang.Object) assetResponse21);
        long long29 = assetResponse21.getFetchTime();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(document15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "100" + "'", str27, "100");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
    }

    @Test
    public void test09545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09545");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setOnlyOnPath("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setOnlyOnPath("CrawlerURL url:com.soulgalore.crawler.proxy");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration19 = builder18.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration20 = builder18.build();
        java.lang.String str21 = crawlerConfiguration20.getOnlyOnPath();
        java.lang.String str22 = crawlerConfiguration20.getRequestHeaders();
        java.lang.String str23 = crawlerConfiguration20.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(crawlerConfiguration19);
        org.junit.Assert.assertNotNull(crawlerConfiguration20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv" + "'", str21, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
    }

    @Test
    public void test09546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09546");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = null;
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray11 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, assetResponseArray11);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray14 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet15 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15, assetResponseArray14);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult17 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = assetsVerificationResult17.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray19 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet20, assetResponseArray19);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray22 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet23 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23, assetResponseArray22);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult25 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet20, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult26 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet18, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult27 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet10, assetResponseSet18);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult28 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet9, assetResponseSet18);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = assetsVerificationResult28.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet30 = assetsVerificationResult28.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet31 = assetsVerificationResult28.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet32 = assetsVerificationResult28.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet33 = assetsVerificationResult28.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet34 = assetsVerificationResult28.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet35 = assetsVerificationResult28.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray36 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet37 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37, assetResponseArray36);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray39 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40, assetResponseArray39);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult42 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet43 = assetsVerificationResult42.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet44 = assetsVerificationResult42.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet45 = assetsVerificationResult42.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet46 = assetsVerificationResult42.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet47 = assetsVerificationResult42.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet48 = assetsVerificationResult42.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult49 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet35, assetResponseSet48);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray50 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet51 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet51, assetResponseArray50);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray53 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet54 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet54, assetResponseArray53);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult56 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet51, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet54);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet57 = assetsVerificationResult56.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet58 = assetsVerificationResult56.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet59 = assetsVerificationResult56.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet60 = assetsVerificationResult56.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet61 = assetsVerificationResult56.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult62 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet48, assetResponseSet61);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet63 = assetsVerificationResult62.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet64 = assetsVerificationResult62.getNonWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseSet9);
        org.junit.Assert.assertNotNull(assetResponseArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(assetResponseArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(assetResponseSet18);
        org.junit.Assert.assertNotNull(assetResponseArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(assetResponseArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(assetResponseSet29);
        org.junit.Assert.assertNotNull(assetResponseSet30);
        org.junit.Assert.assertNotNull(assetResponseSet31);
        org.junit.Assert.assertNotNull(assetResponseSet32);
        org.junit.Assert.assertNotNull(assetResponseSet33);
        org.junit.Assert.assertNotNull(assetResponseSet34);
        org.junit.Assert.assertNotNull(assetResponseSet35);
        org.junit.Assert.assertNotNull(assetResponseArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(assetResponseArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(assetResponseSet43);
        org.junit.Assert.assertNotNull(assetResponseSet44);
        org.junit.Assert.assertNotNull(assetResponseSet45);
        org.junit.Assert.assertNotNull(assetResponseSet46);
        org.junit.Assert.assertNotNull(assetResponseSet47);
        org.junit.Assert.assertNotNull(assetResponseSet48);
        org.junit.Assert.assertNotNull(assetResponseArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(assetResponseArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(assetResponseSet57);
        org.junit.Assert.assertNotNull(assetResponseSet58);
        org.junit.Assert.assertNotNull(assetResponseSet59);
        org.junit.Assert.assertNotNull(assetResponseSet60);
        org.junit.Assert.assertNotNull(assetResponseSet61);
        org.junit.Assert.assertNotNull(assetResponseSet63);
        org.junit.Assert.assertNotNull(assetResponseSet64);
    }

    @Test
    public void test09547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09547");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        long long6 = assetResponse4.getFetchTime();
        java.lang.String str7 = assetResponse4.getUrl();
        java.lang.String str8 = assetResponse4.getReferer();
        java.lang.String str9 = assetResponse4.getReferer();
        long long10 = assetResponse4.getFetchTime();
        java.lang.String str11 = assetResponse4.getReferer();
        long long12 = assetResponse4.getFetchTime();
        int int13 = assetResponse4.getResponseCode();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "100" + "'", str8, "100");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "100" + "'", str9, "100");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "100" + "'", str11, "100");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test09548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09548");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:com.soulgalore.crawler.proxy");
        com.soulgalore.crawler.util.HeaderUtil headerUtil2 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = headerUtil2.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil2.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = headerUtil2.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil2.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil2.createHeadersFromString("CrawlerURL url:10");
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil2.createHeadersFromString("");
        boolean boolean15 = crawlerURL1.equals((java.lang.Object) "");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean19 = crawlerURL18.isWrongSyntax();
        java.lang.String str20 = crawlerURL18.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse28 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL18, (int) 'a', strMap22, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str29 = hTMLPageResponse28.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = hTMLPageResponse28.getResponseHeaders();
        java.lang.String str31 = hTMLPageResponse28.getEncoding();
        java.lang.String str32 = hTMLPageResponse28.toString();
        long long33 = hTMLPageResponse28.getFetchTime();
        java.lang.String str34 = hTMLPageResponse28.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL35 = hTMLPageResponse28.getPageUrl();
        java.lang.String str36 = hTMLPageResponse28.getResponseType();
        java.lang.String str37 = hTMLPageResponse28.getResponseType();
        boolean boolean38 = crawlerURL1.equals((java.lang.Object) hTMLPageResponse28);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = hTMLPageResponse28.getPageUrl();
        org.junit.Assert.assertNotNull(headerUtil2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "urls.txt" + "'", str20, "urls.txt");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str29, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str31, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str32, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 100L + "'", long33 == 100L);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str34, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(crawlerURL39);
    }

    @Test
    public void test09549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09549");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI4 = crawlerURL3.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        java.lang.String str9 = crawlerURL7.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse17 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (int) 'a', strMap11, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str18 = hTMLPageResponse17.getUrl();
        boolean boolean19 = crawlerURL3.equals((java.lang.Object) str18);
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse24 = new com.soulgalore.crawler.core.assets.AssetResponse("", "errorurls.txt", 97, (-1L));
        java.lang.String str25 = assetResponse24.getReferer();
        int int26 = assetResponse24.getResponseCode();
        boolean boolean27 = crawlerURL3.equals((java.lang.Object) int26);
        java.net.URI uRI28 = crawlerURL3.getUri();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher31 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration35 = builder34.build();
        java.lang.String str36 = crawlerConfiguration35.getStartUrl();
        java.lang.String str37 = crawlerConfiguration35.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = crawlerConfiguration35.getRequestHeadersMap();
        java.lang.String str39 = crawlerConfiguration35.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = builder40.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder44 = builder40.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder46 = builder40.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder48 = builder46.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder50 = builder46.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration51 = builder50.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration52 = builder50.build();
        boolean boolean53 = crawlerConfiguration35.equals((java.lang.Object) crawlerConfiguration52);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder54 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder56 = builder54.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder58 = builder54.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration59 = builder54.build();
        int int60 = crawlerConfiguration59.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil61 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean62 = crawlerConfiguration59.equals((java.lang.Object) headerUtil61);
        java.util.Map<java.lang.String, java.lang.String> strMap64 = headerUtil61.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap66 = headerUtil61.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.util.Map<java.lang.String, java.lang.String> strMap68 = headerUtil61.createHeadersFromString("AssetResponseCallable url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap70 = headerUtil61.createHeadersFromString("CrawlerURL url:urls.txt");
        java.util.Map<java.lang.String, java.lang.String> strMap72 = headerUtil61.createHeadersFromString("AssetResponseCallable url:100");
        boolean boolean73 = crawlerConfiguration52.equals((java.lang.Object) headerUtil61);
        java.util.Map<java.lang.String, java.lang.String> strMap75 = headerUtil61.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable77 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:0 type:", assetFetcher31, strMap75, "");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse83 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL3, (int) ' ', strMap75, "AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", "AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout", (long) 582, "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain", 52L);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable85 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("97", assetFetcher1, strMap75, "AssetResponseCallable url:35");
        java.lang.String str86 = assetResponseCallable85.toString();
        org.junit.Assert.assertNull(uRI4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "urls.txt" + "'", str9, "urls.txt");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.auth" + "'", str18, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "errorurls.txt" + "'", str25, "errorurls.txt");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 97 + "'", int26 == 97);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(uRI28);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(crawlerConfiguration35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(crawlerConfiguration51);
        org.junit.Assert.assertNotNull(crawlerConfiguration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(crawlerConfiguration59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(headerUtil61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "AssetResponseCallable url:97" + "'", str86, "AssetResponseCallable url:97");
    }

    @Test
    public void test09550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09550");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) builder14);
        long long16 = hTMLPageResponse12.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean20 = crawlerURL19.isWrongSyntax();
        java.lang.String str21 = crawlerURL19.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL19, (int) 'a', strMap23, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str30 = hTMLPageResponse29.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean32 = hTMLPageResponse29.equals((java.lang.Object) builder31);
        long long33 = hTMLPageResponse29.getFetchTime();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder34.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder34.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder34.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration41 = builder34.build();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = crawlerConfiguration41.getRequestHeadersMap();
        boolean boolean43 = hTMLPageResponse29.equals((java.lang.Object) crawlerConfiguration41);
        boolean boolean44 = hTMLPageResponse12.equals((java.lang.Object) boolean43);
        java.lang.String str45 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL49 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray50 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL49 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet51 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet51, crawlerURLArray50);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet53 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray54 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet55 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet55, hTMLPageResponseArray54);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult57 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet51, hTMLPageResponseSet53, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet55);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet58 = crawlerResult57.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet59 = crawlerResult57.getUrls();
        java.lang.String str60 = crawlerResult57.getTheStartPoint();
        boolean boolean61 = hTMLPageResponse12.equals((java.lang.Object) crawlerResult57);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet62 = crawlerResult57.getUrls();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "urls.txt" + "'", str21, "urls.txt");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "com.soulgalore.crawler.auth" + "'", str30, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 100L + "'", long33 == 100L);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(crawlerConfiguration41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str45, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURLArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet58);
        org.junit.Assert.assertNotNull(crawlerURLSet59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet62);
    }

    @Test
    public void test09551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09551");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str7 = crawlerConfiguration5.getOnlyOnPath();
        java.lang.String str8 = crawlerConfiguration5.getStartUrl();
        int int9 = crawlerConfiguration5.getMaxLevels();
        int int10 = crawlerConfiguration5.getMaxLevels();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test09552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09552");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider(97, (int) 'a', (int) (byte) -1, "AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.auth", "HTMLPageResponseurl:hi!responseCode:10encoding:result.csv type:hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.auth");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09553");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setRequestHeaders("CrawlerURL url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setNotOnPath("100");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration17 = builder16.build();
        java.lang.String str18 = crawlerConfiguration17.getStartUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(crawlerConfiguration17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str18, "com.soulgalore.crawler.http.connection.timeout");
    }

    @Test
    public void test09554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09554");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.lang.String str5 = crawlerURL2.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder9.build();
        java.lang.String str11 = crawlerConfiguration10.getStartUrl();
        int int12 = crawlerConfiguration10.getMaxLevels();
        int int13 = crawlerConfiguration10.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse20 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (byte) -1, strMap14, "100", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) (short) -1, "com.soulgalore.crawler.nrofhttpthreads", 0L);
        java.lang.String str21 = crawlerURL2.getUrl();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher24 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher26 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher28 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil29 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = headerUtil29.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable33 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher28, strMap31, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable35 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("com.soulgalore.crawler.auth", assetFetcher26, strMap31, "urls.txt");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable37 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("CrawlerURL url:10", assetFetcher24, strMap31, "errorurls.txt");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse43 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (byte) 1, strMap31, "HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (long) 10, "Malformed url", (long) 10);
        java.lang.String str44 = hTMLPageResponse43.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder45 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder47 = builder45.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder49 = builder45.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder51 = builder45.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder53 = builder51.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder55 = builder51.setVerifyUrls(false);
        boolean boolean56 = hTMLPageResponse43.equals((java.lang.Object) builder55);
        java.lang.String str57 = hTMLPageResponse43.getResponseType();
        org.jsoup.nodes.Document document58 = hTMLPageResponse43.getBody();
        java.lang.String str59 = hTMLPageResponse43.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL63 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray64 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL63 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet65 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet65, crawlerURLArray64);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet67 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray68 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet69 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet69, hTMLPageResponseArray68);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult71 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet65, hTMLPageResponseSet67, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet69);
        java.lang.String str72 = crawlerResult71.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet73 = crawlerResult71.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet74 = crawlerResult71.getUrls();
        java.lang.String str75 = crawlerResult71.getTheStartPoint();
        boolean boolean76 = hTMLPageResponse43.equals((java.lang.Object) crawlerResult71);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet77 = crawlerResult71.getVerifiedURLResponses();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "urls.txt" + "'", str5, "urls.txt");
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "com.soulgalore.crawler.auth" + "'", str21, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(headerUtil29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url" + "'", str44, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Malformed url" + "'", str57, "Malformed url");
        org.junit.Assert.assertNull(document58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url" + "'", str59, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
        org.junit.Assert.assertNotNull(crawlerURLArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet73);
        org.junit.Assert.assertNotNull(crawlerURLSet74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test09555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09555");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("10", "");
        java.lang.String str3 = crawlerURL2.getHost();
        boolean boolean4 = crawlerURL2.isWrongSyntax();
        java.lang.String str5 = crawlerURL2.getReferer();
        java.lang.String str6 = crawlerURL2.getReferer();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test09556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09556");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        int int6 = crawlerConfiguration5.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil7 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean8 = crawlerConfiguration5.equals((java.lang.Object) headerUtil7);
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil7.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil7.createHeadersFromString("CrawlerURL url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil7.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap16 = headerUtil7.createHeadersFromString("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        java.util.Map<java.lang.String, java.lang.String> strMap18 = headerUtil7.createHeadersFromString("HTMLPageResponseurl:hi!responseCode:10encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap20 = headerUtil7.createHeadersFromString("CrawlerURL url:CrawlerURL url:com.soulgalore.crawler.auth");
        java.util.Map<java.lang.String, java.lang.String> strMap22 = headerUtil7.createHeadersFromString("CrawlerURL url:AssetResponseCallable url:Redirected to new domain");
        java.util.Map<java.lang.String, java.lang.String> strMap24 = headerUtil7.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(headerUtil7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap24);
    }

    @Test
    public void test09557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09557");
        com.soulgalore.crawler.util.StatusCode statusCode0 = com.soulgalore.crawler.util.StatusCode.SC_WRONG_CONTENT_TYPE;
        int int1 = statusCode0.getCode();
        java.lang.String str2 = statusCode0.getFriendlyName();
        java.lang.String str3 = statusCode0.getFriendlyName();
        java.lang.String str4 = statusCode0.getFriendlyName();
        java.lang.String str5 = statusCode0.getFriendlyName();
        int int6 = statusCode0.getCode();
        java.lang.String str7 = statusCode0.getFriendlyName();
        org.junit.Assert.assertTrue("'" + statusCode0 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_WRONG_CONTENT_TYPE + "'", statusCode0.equals(com.soulgalore.crawler.util.StatusCode.SC_WRONG_CONTENT_TYPE));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 583 + "'", int1 == 583);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Wrong content type" + "'", str2, "Wrong content type");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Wrong content type" + "'", str3, "Wrong content type");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Wrong content type" + "'", str4, "Wrong content type");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Wrong content type" + "'", str5, "Wrong content type");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 583 + "'", int6 == 583);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Wrong content type" + "'", str7, "Wrong content type");
    }

    @Test
    public void test09558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09558");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        boolean boolean22 = hTMLPageResponse12.equals((java.lang.Object) builder21);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL23 = hTMLPageResponse12.getPageUrl();
        java.lang.String str24 = crawlerURL23.getUrl();
        java.net.URI uRI25 = crawlerURL23.getUri();
        boolean boolean26 = crawlerURL23.isWrongSyntax();
        com.soulgalore.crawler.util.HeaderUtil headerUtil28 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = headerUtil28.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap32 = headerUtil28.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap34 = headerUtil28.createHeadersFromString("AssetResponseCallable url:100");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse40 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL23, (int) (byte) 100, strMap34, "CrawlerURL url:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout", "CrawlerURL url:35", (long) (short) 10, "result.csv", (long) (short) 0);
        java.lang.String str41 = hTMLPageResponse40.getEncoding();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder44 = builder42.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder46 = builder44.setStartUrl("CrawlerURL url:urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder48 = builder46.setStartUrl("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder50 = builder46.setOnlyOnPath("Wrong content type");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder52 = builder46.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder54 = builder52.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder56 = builder52.setNotOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder58 = builder56.setOnlyOnPath("CrawlerURL url:AssetResponseCallable url:Malformed url");
        boolean boolean59 = hTMLPageResponse40.equals((java.lang.Object) builder58);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(crawlerURL23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "com.soulgalore.crawler.auth" + "'", str24, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(uRI25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(headerUtil28);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "CrawlerURL url:35" + "'", str41, "CrawlerURL url:35");
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test09559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09559");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setStartUrl("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder0.setNotOnPath("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setStartUrl("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration13 = builder8.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder8.setRequestHeaders("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:52 type:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration16 = builder15.build();
        java.lang.String str17 = crawlerConfiguration16.getStartUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(crawlerConfiguration13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(crawlerConfiguration16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str17, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
    }

    @Test
    public void test09560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09560");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        int int7 = assetResponse4.getResponseCode();
        java.lang.String str8 = assetResponse4.getUrl();
        int int9 = assetResponse4.getResponseCode();
        long long10 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder11.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration16 = builder15.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration17 = builder15.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder15.setRequestHeaders("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setNotOnPath("");
        boolean boolean22 = assetResponse4.equals((java.lang.Object) builder21);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder21.setMaxLevels(100);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration25 = builder21.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder21.setStartUrl("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setMaxLevels(32);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder29.setOnlyOnPath("AssetResponseCallable url:32");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(crawlerConfiguration16);
        org.junit.Assert.assertNotNull(crawlerConfiguration17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(crawlerConfiguration25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
    }

    @Test
    public void test09561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09561");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", "AssetResponseCallable url:-1", 32, (long) (short) 0);
    }

    @Test
    public void test09562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09562");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt", "CrawlerURL url:AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:10");
    }

    @Test
    public void test09563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09563");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getOnlyOnPath();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        int int6 = crawlerConfiguration3.getMaxLevels();
        int int7 = crawlerConfiguration3.getMaxLevels();
        boolean boolean8 = crawlerConfiguration3.isVerifyUrls();
        boolean boolean9 = crawlerConfiguration3.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str11 = crawlerConfiguration3.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration3.getRequestHeadersMap();
        int int13 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str14 = crawlerConfiguration3.getStartUrl();
        boolean boolean15 = crawlerConfiguration3.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = crawlerConfiguration3.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str18 = crawlerConfiguration3.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test09564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09564");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setMaxLevels(10);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder8.setOnlyOnPath("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setOnlyOnPath("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder14.setStartUrl("CrawlerURL url:Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder14.setOnlyOnPath("AssetResponseCallable url:CrawlerURL url:hi!");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test09565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09565");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int13 = hTMLPageResponse12.getResponseCode();
        int int14 = hTMLPageResponse12.getResponseCode();
        java.lang.String str15 = hTMLPageResponse12.toString();
        long long16 = hTMLPageResponse12.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        java.lang.String str18 = hTMLPageResponse12.getResponseType();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = hTMLPageResponse12.getResponseHeaders();
        java.lang.Object obj20 = null;
        boolean boolean21 = hTMLPageResponse12.equals(obj20);
        java.lang.String str22 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL23 = hTMLPageResponse12.getPageUrl();
        java.lang.String str24 = hTMLPageResponse12.toString();
        long long25 = hTMLPageResponse12.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL28 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean29 = crawlerURL28.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder31.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = builder31.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration36 = builder31.build();
        java.lang.String str37 = crawlerConfiguration36.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = crawlerConfiguration36.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse44 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL28, (-1), strMap38, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int45 = hTMLPageResponse44.getResponseCode();
        long long46 = hTMLPageResponse44.getFetchTime();
        long long47 = hTMLPageResponse44.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL50 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI51 = crawlerURL50.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL55 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean56 = crawlerURL55.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder58 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder60 = builder58.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder62 = builder58.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration63 = builder58.build();
        java.lang.String str64 = crawlerConfiguration63.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap65 = crawlerConfiguration63.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse71 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL55, (-1), strMap65, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse77 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL50, 100, strMap65, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        boolean boolean78 = hTMLPageResponse44.equals((java.lang.Object) 100);
        int int79 = hTMLPageResponse44.getResponseCode();
        java.lang.String str80 = hTMLPageResponse44.getUrl();
        java.lang.String str82 = hTMLPageResponse44.getHeaderValue("AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:10");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL83 = hTMLPageResponse44.getPageUrl();
        boolean boolean84 = hTMLPageResponse12.equals((java.lang.Object) crawlerURL83);
        java.lang.String str85 = crawlerURL83.getUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 97 + "'", int14 == 97);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str15, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str22, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str24, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 100L + "'", long25 == 100L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(crawlerConfiguration36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 580L + "'", long46 == 580L);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 580L + "'", long47 == 580L);
        org.junit.Assert.assertNull(uRI51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(crawlerConfiguration63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "com.soulgalore.crawler.auth" + "'", str80, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(crawlerURL83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "com.soulgalore.crawler.auth" + "'", str85, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test09566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09566");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = null;
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray11 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, assetResponseArray11);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray14 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet15 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15, assetResponseArray14);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult17 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = assetsVerificationResult17.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray19 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet20, assetResponseArray19);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray22 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet23 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23, assetResponseArray22);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult25 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet20, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult26 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet18, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult27 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet10, assetResponseSet18);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult28 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet9, assetResponseSet18);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = assetsVerificationResult28.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet30 = assetsVerificationResult28.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet31 = assetsVerificationResult28.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet32 = assetsVerificationResult28.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet33 = assetsVerificationResult28.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray34 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet35 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet35, assetResponseArray34);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray37 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet38 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet38, assetResponseArray37);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult40 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet35, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet38);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet41 = assetsVerificationResult40.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet42 = assetsVerificationResult40.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet43 = assetsVerificationResult40.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet44 = assetsVerificationResult40.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray45 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet46 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet46, assetResponseArray45);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray48 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet49 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet49, assetResponseArray48);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult51 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet46, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet49);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet52 = assetsVerificationResult51.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult53 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet44, assetResponseSet52);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet54 = assetsVerificationResult53.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet55 = assetsVerificationResult53.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray56 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet57 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet57, assetResponseArray56);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray59 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet60 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet60, assetResponseArray59);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult62 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet57, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet60);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet63 = assetsVerificationResult62.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet64 = assetsVerificationResult62.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet65 = assetsVerificationResult62.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult66 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet55, assetResponseSet65);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet67 = assetsVerificationResult66.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet68 = assetsVerificationResult66.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult69 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet33, assetResponseSet68);
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseSet9);
        org.junit.Assert.assertNotNull(assetResponseArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(assetResponseArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(assetResponseSet18);
        org.junit.Assert.assertNotNull(assetResponseArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(assetResponseArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(assetResponseSet29);
        org.junit.Assert.assertNotNull(assetResponseSet30);
        org.junit.Assert.assertNotNull(assetResponseSet31);
        org.junit.Assert.assertNotNull(assetResponseSet32);
        org.junit.Assert.assertNotNull(assetResponseSet33);
        org.junit.Assert.assertNotNull(assetResponseArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(assetResponseArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(assetResponseSet41);
        org.junit.Assert.assertNotNull(assetResponseSet42);
        org.junit.Assert.assertNotNull(assetResponseSet43);
        org.junit.Assert.assertNotNull(assetResponseSet44);
        org.junit.Assert.assertNotNull(assetResponseArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(assetResponseArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(assetResponseSet52);
        org.junit.Assert.assertNotNull(assetResponseSet54);
        org.junit.Assert.assertNotNull(assetResponseSet55);
        org.junit.Assert.assertNotNull(assetResponseArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(assetResponseArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(assetResponseSet63);
        org.junit.Assert.assertNotNull(assetResponseSet64);
        org.junit.Assert.assertNotNull(assetResponseSet65);
        org.junit.Assert.assertNotNull(assetResponseSet67);
        org.junit.Assert.assertNotNull(assetResponseSet68);
    }

    @Test
    public void test09567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09567");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean14 = assetResponse4.equals((java.lang.Object) 100L);
        java.lang.String str15 = assetResponse4.getReferer();
        java.lang.String str16 = assetResponse4.getReferer();
        boolean boolean18 = assetResponse4.equals((java.lang.Object) "com.soulgalore.crawler.proxy");
        long long19 = assetResponse4.getFetchTime();
        long long20 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse25 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int26 = assetResponse25.getResponseCode();
        int int27 = assetResponse25.getResponseCode();
        long long28 = assetResponse25.getFetchTime();
        long long29 = assetResponse25.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse34 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean35 = assetResponse25.equals((java.lang.Object) 100L);
        java.lang.String str36 = assetResponse25.getReferer();
        java.lang.String str37 = assetResponse25.getReferer();
        long long38 = assetResponse25.getFetchTime();
        boolean boolean40 = assetResponse25.equals((java.lang.Object) (-1));
        java.lang.String str41 = assetResponse25.getUrl();
        java.lang.String str42 = assetResponse25.getUrl();
        boolean boolean43 = assetResponse4.equals((java.lang.Object) assetResponse25);
        long long44 = assetResponse25.getFetchTime();
        java.lang.String str45 = assetResponse25.getReferer();
        long long46 = assetResponse25.getFetchTime();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "100" + "'", str15, "100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "100" + "'", str16, "100");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "100" + "'", str36, "100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "100" + "'", str37, "100");
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "100" + "'", str45, "100");
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
    }

    @Test
    public void test09568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09568");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet4 = authUtil0.createAuthsFromString("CrawlerURL url:AssetResponseCallable url:com.soulgalore.crawler.nrofhttpthreads");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:CrawlerURL url:AssetResponseCallable url:com.soulgalore.crawler.nrofhttpthreads");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
        org.junit.Assert.assertNotNull(authSet2);
    }

    @Test
    public void test09569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09569");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration8 = builder7.build();
        java.lang.String str9 = crawlerConfiguration8.getStartUrl();
        int int10 = crawlerConfiguration8.getMaxLevels();
        int int11 = crawlerConfiguration8.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration8.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (short) 10, strMap12, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        int int19 = hTMLPageResponse18.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = hTMLPageResponse18.getResponseHeaders();
        java.lang.String str22 = hTMLPageResponse18.getHeaderValue("");
        java.util.Map<java.lang.String, java.lang.String> strMap23 = hTMLPageResponse18.getResponseHeaders();
        java.lang.String str24 = hTMLPageResponse18.getEncoding();
        java.lang.String str26 = hTMLPageResponse18.getHeaderValue("AssetResponseCallable url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap27 = hTMLPageResponse18.getResponseHeaders();
        org.jsoup.nodes.Document document28 = hTMLPageResponse18.getBody();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder29.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder29.setStartUrl("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = builder29.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = builder29.setNotOnPath("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = builder29.setStartUrl("Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration40 = builder29.build();
        boolean boolean41 = crawlerConfiguration40.isVerifyUrls();
        int int42 = crawlerConfiguration40.getMaxLevels();
        java.lang.String str43 = crawlerConfiguration40.getOnlyOnPath();
        boolean boolean44 = hTMLPageResponse18.equals((java.lang.Object) crawlerConfiguration40);
        int int45 = hTMLPageResponse18.getResponseCode();
        java.lang.String str46 = hTMLPageResponse18.getUrl();
        java.lang.String str47 = hTMLPageResponse18.getUrl();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(crawlerConfiguration8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str24, "com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(document28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(crawlerConfiguration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "com.soulgalore.crawler.auth" + "'", str46, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "com.soulgalore.crawler.auth" + "'", str47, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test09570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09570");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setMaxLevels((int) '4');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setMaxLevels(583);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setOnlyOnPath("Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration9 = builder8.build();
        boolean boolean10 = crawlerConfiguration9.isVerifyUrls();
        int int11 = crawlerConfiguration9.getMaxLevels();
        java.lang.String str12 = crawlerConfiguration9.getNotOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = crawlerConfiguration9.getRequestHeadersMap();
        java.lang.String str14 = crawlerConfiguration9.getNotOnPath();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(crawlerConfiguration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 583 + "'", int11 == 583);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test09571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09571");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet4 = authUtil0.createAuthsFromString("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"com.soulgalore.crawler.nrofhttpthreadsresponseCode\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
        org.junit.Assert.assertNotNull(authSet2);
    }

    @Test
    public void test09572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09572");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.http.connection.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", 0, 10L);
        java.lang.String str5 = assetResponse4.getUrl();
        int int6 = assetResponse4.getResponseCode();
        java.lang.String str7 = assetResponse4.getUrl();
        java.lang.String str8 = assetResponse4.getUrl();
        long long9 = assetResponse4.getFetchTime();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str5, "com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str7, "com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str8, "com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10L + "'", long9 == 10L);
    }

    @Test
    public void test09573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09573");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet4 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet6 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet8 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet10 = authUtil0.createAuthsFromString("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet12 = authUtil0.createAuthsFromString("AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"CrawlerURL url\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
        org.junit.Assert.assertNotNull(authSet2);
        org.junit.Assert.assertNotNull(authSet4);
        org.junit.Assert.assertNotNull(authSet6);
        org.junit.Assert.assertNotNull(authSet8);
        org.junit.Assert.assertNotNull(authSet10);
    }

    @Test
    public void test09574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09574");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder0.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder0.setRequestHeaders("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration14 = builder13.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder15.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration18 = builder17.build();
        java.lang.String str19 = crawlerConfiguration18.getStartUrl();
        int int20 = crawlerConfiguration18.getMaxLevels();
        int int21 = crawlerConfiguration18.getMaxLevels();
        java.lang.String str22 = crawlerConfiguration18.getNotOnPath();
        int int23 = crawlerConfiguration18.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder24.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder24.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration29 = builder24.build();
        int int30 = crawlerConfiguration29.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil31 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean32 = crawlerConfiguration29.equals((java.lang.Object) headerUtil31);
        java.util.Map<java.lang.String, java.lang.String> strMap34 = headerUtil31.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap36 = headerUtil31.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.util.Map<java.lang.String, java.lang.String> strMap38 = headerUtil31.createHeadersFromString("AssetResponseCallable url:result.csv");
        boolean boolean39 = crawlerConfiguration18.equals((java.lang.Object) strMap38);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = crawlerConfiguration18.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = crawlerConfiguration18.getRequestHeadersMap();
        boolean boolean42 = crawlerConfiguration18.isVerifyUrls();
        boolean boolean43 = crawlerConfiguration14.equals((java.lang.Object) crawlerConfiguration18);
        int int44 = crawlerConfiguration18.getMaxLevels();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(crawlerConfiguration14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(crawlerConfiguration18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(crawlerConfiguration29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(headerUtil31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
    }

    @Test
    public void test09575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09575");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean14 = assetResponse4.equals((java.lang.Object) 100L);
        java.lang.String str15 = assetResponse4.getReferer();
        java.lang.String str16 = assetResponse4.getReferer();
        boolean boolean18 = assetResponse4.equals((java.lang.Object) "com.soulgalore.crawler.proxy");
        long long19 = assetResponse4.getFetchTime();
        long long20 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse25 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int26 = assetResponse25.getResponseCode();
        int int27 = assetResponse25.getResponseCode();
        long long28 = assetResponse25.getFetchTime();
        long long29 = assetResponse25.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse34 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean35 = assetResponse25.equals((java.lang.Object) 100L);
        java.lang.String str36 = assetResponse25.getReferer();
        java.lang.String str37 = assetResponse25.getReferer();
        long long38 = assetResponse25.getFetchTime();
        boolean boolean40 = assetResponse25.equals((java.lang.Object) (-1));
        java.lang.String str41 = assetResponse25.getUrl();
        java.lang.String str42 = assetResponse25.getUrl();
        boolean boolean43 = assetResponse4.equals((java.lang.Object) assetResponse25);
        long long44 = assetResponse4.getFetchTime();
        int int45 = assetResponse4.getResponseCode();
        int int46 = assetResponse4.getResponseCode();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "100" + "'", str15, "100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "100" + "'", str16, "100");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "100" + "'", str36, "100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "100" + "'", str37, "100");
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
    }

    @Test
    public void test09576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09576");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str7 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str8 = crawlerConfiguration5.getStartUrl();
        boolean boolean9 = crawlerConfiguration5.isVerifyUrls();
        int int10 = crawlerConfiguration5.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("errorassets.csv");
        boolean boolean13 = crawlerConfiguration5.equals((java.lang.Object) crawlerURL12);
        java.lang.String str14 = crawlerConfiguration5.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean18 = crawlerURL17.isWrongSyntax();
        java.lang.String str19 = crawlerURL17.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse27 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL17, (int) 'a', strMap21, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str28 = hTMLPageResponse27.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean30 = hTMLPageResponse27.equals((java.lang.Object) builder29);
        long long31 = hTMLPageResponse27.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL34 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean35 = crawlerURL34.isWrongSyntax();
        java.lang.String str36 = crawlerURL34.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse44 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL34, (int) 'a', strMap38, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str45 = hTMLPageResponse44.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder46 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean47 = hTMLPageResponse44.equals((java.lang.Object) builder46);
        long long48 = hTMLPageResponse44.getFetchTime();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder49 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder51 = builder49.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder53 = builder49.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder55 = builder49.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration56 = builder49.build();
        java.util.Map<java.lang.String, java.lang.String> strMap57 = crawlerConfiguration56.getRequestHeadersMap();
        boolean boolean58 = hTMLPageResponse44.equals((java.lang.Object) crawlerConfiguration56);
        boolean boolean59 = hTMLPageResponse27.equals((java.lang.Object) boolean58);
        java.lang.String str60 = hTMLPageResponse27.toString();
        boolean boolean61 = crawlerConfiguration5.equals((java.lang.Object) hTMLPageResponse27);
        java.lang.String str62 = hTMLPageResponse27.getEncoding();
        java.lang.String str63 = hTMLPageResponse27.toString();
        java.lang.String str64 = hTMLPageResponse27.toString();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "urls.txt" + "'", str19, "urls.txt");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "com.soulgalore.crawler.auth" + "'", str28, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 100L + "'", long31 == 100L);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "urls.txt" + "'", str36, "urls.txt");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "com.soulgalore.crawler.auth" + "'", str45, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 100L + "'", long48 == 100L);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(crawlerConfiguration56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str60, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str62, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str63, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str64, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
    }

    @Test
    public void test09577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09577");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setStartUrl("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration9 = builder6.build();
        int int10 = crawlerConfiguration9.getMaxLevels();
        java.lang.String str11 = crawlerConfiguration9.getNotOnPath();
        java.lang.String str12 = crawlerConfiguration9.getStartUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(crawlerConfiguration9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "errorassets.csv" + "'", str11, "errorassets.csv");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "com.soulgalore.crawler.auth" + "'", str12, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test09578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09578");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder4.setOnlyOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setMaxLevels((int) (byte) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setStartUrl("Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration17 = builder16.build();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(crawlerConfiguration17);
    }

    @Test
    public void test09579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09579");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:AssetResponseCallable url:1");
    }

    @Test
    public void test09580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09580");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        int int5 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str6 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str7 = crawlerConfiguration3.getStartUrl();
        java.lang.String str8 = crawlerConfiguration3.getRequestHeaders();
        java.lang.String str9 = crawlerConfiguration3.getStartUrl();
        int int10 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str11 = crawlerConfiguration3.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test09581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09581");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL15 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        java.lang.String str17 = hTMLPageResponse12.getResponseType();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = hTMLPageResponse12.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = hTMLPageResponse12.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = hTMLPageResponse12.getResponseHeaders();
        org.jsoup.nodes.Document document21 = hTMLPageResponse12.getBody();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = hTMLPageResponse12.getHeaderValue("CrawlerURL url:10");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(crawlerURL15);
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(crawlerURL19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(document21);
    }

    @Test
    public void test09582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09582");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", "CrawlerURL url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (int) (short) 0, 581L);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        java.lang.String str9 = crawlerURL7.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse17 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (int) 'a', strMap11, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str18 = hTMLPageResponse17.getEncoding();
        java.lang.String str19 = hTMLPageResponse17.getResponseType();
        java.lang.String str20 = hTMLPageResponse17.getUrl();
        java.lang.String str21 = hTMLPageResponse17.getEncoding();
        java.lang.String str22 = hTMLPageResponse17.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL23 = hTMLPageResponse17.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL26 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "Response timed out");
        com.soulgalore.crawler.util.HeaderUtil headerUtil28 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = headerUtil28.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse36 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL26, (int) '4', strMap30, "com.soulgalore.crawler.http.socket.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 580, "com.soulgalore.crawler.auth", (long) (short) 1);
        org.jsoup.nodes.Document document37 = hTMLPageResponse36.getBody();
        java.lang.String str39 = hTMLPageResponse36.getHeaderValue("com.soulgalore.crawler.proxy");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL40 = hTMLPageResponse36.getPageUrl();
        java.lang.String str41 = crawlerURL40.getHost();
        boolean boolean42 = crawlerURL23.equals((java.lang.Object) str41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse50 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL23, 582, strMap44, "", "com.soulgalore.crawler.auth", 1L, "CrawlerURL url:Response timed out", (long) (short) 1);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = hTMLPageResponse50.getResponseHeaders();
        java.lang.String str52 = hTMLPageResponse50.getResponseType();
        boolean boolean53 = assetResponse4.equals((java.lang.Object) str52);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "urls.txt" + "'", str9, "urls.txt");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str18, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "com.soulgalore.crawler.auth" + "'", str20, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str21, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "com.soulgalore.crawler.auth" + "'", str22, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL23);
        org.junit.Assert.assertNotNull(headerUtil28);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(document37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(crawlerURL40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "CrawlerURL url:Response timed out" + "'", str52, "CrawlerURL url:Response timed out");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test09583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09583");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider((int) (short) 1, 0, (int) (short) 10, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", "HTMLPageResponseurl:CrawlerURL url:com.soulgalore.crawler.authresponseCode:0encoding:CrawlerURL url:result.csv type:-1");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"com.soulgalore.crawler.authresponseCode\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09584");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher3 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration9 = builder4.build();
        java.lang.String str10 = crawlerConfiguration9.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = crawlerConfiguration9.getRequestHeadersMap();
        boolean boolean12 = crawlerConfiguration9.isVerifyUrls();
        java.lang.String str13 = crawlerConfiguration9.getStartUrl();
        boolean boolean14 = crawlerConfiguration9.isVerifyUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean18 = crawlerURL17.isWrongSyntax();
        java.lang.String str19 = crawlerURL17.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse27 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL17, (int) 'a', strMap21, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int28 = hTMLPageResponse27.getResponseCode();
        java.lang.String str29 = hTMLPageResponse27.getResponseType();
        java.lang.String str30 = hTMLPageResponse27.toString();
        java.lang.String str31 = hTMLPageResponse27.getEncoding();
        boolean boolean32 = crawlerConfiguration9.equals((java.lang.Object) hTMLPageResponse27);
        java.lang.String str33 = crawlerConfiguration9.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = crawlerConfiguration9.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable36 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", assetFetcher3, strMap34, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable38 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("CrawlerURL url:35", assetFetcher1, strMap34, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        java.lang.String str39 = assetResponseCallable38.toString();
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(crawlerConfiguration9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "urls.txt" + "'", str19, "urls.txt");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 97 + "'", int28 == 97);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str30, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str31, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "AssetResponseCallable url:CrawlerURL url:35" + "'", str39, "AssetResponseCallable url:CrawlerURL url:35");
    }

    @Test
    public void test09585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09585");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet12 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet16 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = crawlerResult11.getNonWorkingUrls();
        java.lang.Class<?> wildcardClass18 = hTMLPageResponseSet17.getClass();
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet12);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet16);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test09586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09586");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        boolean boolean2 = crawlerURL1.isWrongSyntax();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher5 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder6.build();
        java.lang.String str12 = crawlerConfiguration11.getRequestHeaders();
        java.lang.String str13 = crawlerConfiguration11.getRequestHeaders();
        java.lang.String str14 = crawlerConfiguration11.getStartUrl();
        boolean boolean15 = crawlerConfiguration11.isVerifyUrls();
        int int16 = crawlerConfiguration11.getMaxLevels();
        boolean boolean18 = crawlerConfiguration11.equals((java.lang.Object) (byte) 1);
        boolean boolean19 = crawlerConfiguration11.isVerifyUrls();
        java.lang.String str20 = crawlerConfiguration11.getNotOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = crawlerConfiguration11.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable23 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("CrawlerURL url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", assetFetcher5, strMap21, "CrawlerURL url:CrawlerURL url:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) 'a', strMap21, "AssetResponseCallable url:HTMLPageResponseurl:hi!responseCode:10encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads", 97L, "HTMLPageResponseurl:CrawlerURL url:urls.txtresponseCode:97encoding:CrawlerURL url:com.soulgalore.crawler.proxy type:", (long) (byte) -1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(strMap21);
    }

    @Test
    public void test09587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09587");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = hTMLPageResponse12.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        java.net.URI uRI18 = crawlerURL17.getUri();
        java.lang.String str19 = crawlerURL17.toString();
        java.lang.String str20 = crawlerURL17.getReferer();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertNull(uRI18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str19, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "urls.txt" + "'", str20, "urls.txt");
    }

    @Test
    public void test09588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09588");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        java.lang.String str18 = crawlerURL17.getUrl();
        java.lang.String str19 = crawlerURL17.getHost();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration24 = builder23.build();
        java.lang.String str25 = crawlerConfiguration24.getOnlyOnPath();
        boolean boolean26 = crawlerConfiguration24.isVerifyUrls();
        int int27 = crawlerConfiguration24.getMaxLevels();
        int int28 = crawlerConfiguration24.getMaxLevels();
        boolean boolean29 = crawlerConfiguration24.isVerifyUrls();
        boolean boolean30 = crawlerConfiguration24.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = crawlerConfiguration24.getRequestHeadersMap();
        java.lang.String str32 = crawlerConfiguration24.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = crawlerConfiguration24.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse39 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL17, 580, strMap33, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth", "CrawlerURL url:errorassets.csv", (long) (short) -1, "HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", 580L);
        java.lang.String str40 = hTMLPageResponse39.getEncoding();
        java.lang.String str41 = hTMLPageResponse39.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.auth" + "'", str18, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(crawlerConfiguration24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "CrawlerURL url:errorassets.csv" + "'", str40, "CrawlerURL url:errorassets.csv");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:580encoding:CrawlerURL url:errorassets.csv type:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth" + "'", str41, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:580encoding:CrawlerURL url:errorassets.csv type:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
    }

    @Test
    public void test09589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09589");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:result.csv", "35", (int) (byte) 100, (long) 10);
        int int5 = assetResponse4.getResponseCode();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder10.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder10.setOnlyOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration19 = builder18.build();
        boolean boolean20 = assetResponse4.equals((java.lang.Object) crawlerConfiguration19);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(crawlerConfiguration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test09590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09590");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI6 = crawlerURL5.getUri();
        boolean boolean7 = crawlerURL5.isWrongSyntax();
        java.lang.String str8 = crawlerURL5.getHost();
        java.net.URI uRI9 = crawlerURL5.getUri();
        java.net.URI uRI10 = crawlerURL5.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI15 = crawlerURL14.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration20 = builder19.build();
        java.lang.String str21 = crawlerConfiguration20.getStartUrl();
        int int22 = crawlerConfiguration20.getMaxLevels();
        int int23 = crawlerConfiguration20.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = crawlerConfiguration20.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse30 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL14, (int) (short) 10, strMap24, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        int int31 = hTMLPageResponse30.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = hTMLPageResponse30.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse38 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, 0, strMap32, "CrawlerURL url:result.csv", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) 583, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (byte) 1);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse44 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) 'a', strMap32, "AssetResponseCallable url:com.soulgalore.crawler.auth", "AssetResponseCallable url:errorassets.csv", (long) 100, "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", 35L);
        java.lang.String str45 = crawlerURL1.getUrl();
        java.net.URI uRI46 = crawlerURL1.getUri();
        java.net.URI uRI47 = crawlerURL1.getUri();
        java.lang.String str48 = crawlerURL1.getHost();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertNull(uRI6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(uRI9);
        org.junit.Assert.assertNull(uRI10);
        org.junit.Assert.assertNull(uRI15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(crawlerConfiguration20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str45, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNull(uRI46);
        org.junit.Assert.assertNull(uRI47);
        org.junit.Assert.assertNull(str48);
    }

    @Test
    public void test09591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09591");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL15 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        org.jsoup.nodes.Document document17 = hTMLPageResponse12.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        java.lang.String str20 = crawlerURL19.getUrl();
        java.lang.String str21 = crawlerURL19.toString();
        boolean boolean22 = crawlerURL19.isWrongSyntax();
        java.lang.String str23 = crawlerURL19.getReferer();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL25 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.lang.String str26 = crawlerURL25.getReferer();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL28 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        java.lang.String str29 = crawlerURL28.getUrl();
        java.lang.String str30 = crawlerURL28.toString();
        java.lang.String str31 = crawlerURL28.toString();
        boolean boolean32 = crawlerURL25.equals((java.lang.Object) crawlerURL28);
        java.lang.String str33 = crawlerURL28.getReferer();
        boolean boolean34 = crawlerURL19.equals((java.lang.Object) crawlerURL28);
        java.lang.String str35 = crawlerURL19.getHost();
        boolean boolean36 = crawlerURL19.isWrongSyntax();
        boolean boolean37 = hTMLPageResponse12.equals((java.lang.Object) crawlerURL19);
        int int38 = hTMLPageResponse12.getResponseCode();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(crawlerURL15);
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertNull(document17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "CrawlerURL url:hi!" + "'", str21, "CrawlerURL url:hi!");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "CrawlerURL url:hi!" + "'", str30, "CrawlerURL url:hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "CrawlerURL url:hi!" + "'", str31, "CrawlerURL url:hi!");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 97 + "'", int38 == 97);
    }

    @Test
    public void test09592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09592");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setStartUrl("CrawlerURL url:urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setStartUrl("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setOnlyOnPath("Wrong content type");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setOnlyOnPath("CrawlerURL url:1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setStartUrl("AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setNotOnPath("CrawlerURL url:35");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setOnlyOnPath("hi!");
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test09593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09593");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration8 = builder7.build();
        java.lang.String str9 = crawlerConfiguration8.getStartUrl();
        int int10 = crawlerConfiguration8.getMaxLevels();
        int int11 = crawlerConfiguration8.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration8.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (short) 10, strMap12, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        java.lang.String str20 = hTMLPageResponse18.getHeaderValue("com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = hTMLPageResponse18.getPageUrl();
        java.lang.String str23 = hTMLPageResponse18.getHeaderValue("AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.lang.String str24 = hTMLPageResponse18.toString();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(crawlerConfiguration8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(crawlerURL21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout" + "'", str24, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout");
    }

    @Test
    public void test09594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09594");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL15 = hTMLPageResponse12.getPageUrl();
        int int16 = hTMLPageResponse12.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = hTMLPageResponse12.getResponseHeaders();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(crawlerURL15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 97 + "'", int16 == 97);
        org.junit.Assert.assertNull(strMap17);
    }

    @Test
    public void test09595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09595");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.lang.String str13 = crawlerResult12.getTheStartPoint();
        java.lang.String str14 = crawlerResult12.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet16 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet17 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet18 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet19 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL23 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray24 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL23 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet25 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet25, crawlerURLArray24);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet27 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray28 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet29 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet29, hTMLPageResponseArray28);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult31 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet25, hTMLPageResponseSet27, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet29);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet32 = crawlerResult31.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet33 = crawlerResult31.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet34 = crawlerResult31.getNonWorkingUrls();
        java.lang.String str35 = crawlerResult31.getTheStartPoint();
        java.lang.String str36 = crawlerResult31.getTheStartPoint();
        java.lang.String str37 = crawlerResult31.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet38 = crawlerResult31.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult39 = new com.soulgalore.crawler.core.CrawlerResult("Wrong content type", crawlerURLSet18, hTMLPageResponseSet19, hTMLPageResponseSet38);
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet15);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet16);
        org.junit.Assert.assertNotNull(crawlerURLSet17);
        org.junit.Assert.assertNotNull(crawlerURLSet18);
        org.junit.Assert.assertNotNull(crawlerURLArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet32);
        org.junit.Assert.assertNotNull(crawlerURLSet33);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet38);
    }

    @Test
    public void test09596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09596");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:CrawlerURL url:-1", "CrawlerURL url:AssetResponseCallable url:100");
    }

    @Test
    public void test09597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09597");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:AssetResponseCallable url:32", "HTMLPageResponseurl:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1responseCode:10encoding:result.csv type:97");
    }

    @Test
    public void test09598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09598");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        java.lang.String str2 = crawlerURL1.getUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse10 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 32, strMap4, "AssetResponseCallable url:AssetResponseCallable url:Wrong content type", "CrawlerURL url:CrawlerURL url:35", 0L, "AssetResponseCallable url:HTMLPageResponseurl:hi!responseCode:-1encoding:errorurls.txt type:result.csv", 0L);
        java.lang.String str11 = crawlerURL1.getUrl();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test09599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09599");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:CrawlerURL url:100", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads type:-1");
    }

    @Test
    public void test09600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09600");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getOnlyOnPath();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        int int6 = crawlerConfiguration3.getMaxLevels();
        int int7 = crawlerConfiguration3.getMaxLevels();
        boolean boolean8 = crawlerConfiguration3.isVerifyUrls();
        boolean boolean9 = crawlerConfiguration3.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = crawlerConfiguration3.getRequestHeadersMap();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        boolean boolean13 = crawlerConfiguration3.equals((java.lang.Object) crawlerURL12);
        java.lang.String str14 = crawlerURL12.getReferer();
        java.lang.String str15 = crawlerURL12.getHost();
        java.lang.String str16 = crawlerURL12.toString();
        java.lang.String str17 = crawlerURL12.getUrl();
        java.lang.String str18 = crawlerURL12.getUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "CrawlerURL url:hi!" + "'", str16, "CrawlerURL url:hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test09601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09601");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder0.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder0.setRequestHeaders("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder9.setNotOnPath("Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder9.setNotOnPath("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder15.setMaxLevels((int) '#');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder15.setRequestHeaders("CrawlerURL url:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder15.setOnlyOnPath("AssetResponseCallable url:10");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setMaxLevels(52);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
    }

    @Test
    public void test09602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09602");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean6 = crawlerURL5.isWrongSyntax();
        java.lang.String str7 = crawlerURL5.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse15 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (int) 'a', strMap9, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str16 = hTMLPageResponse15.getUrl();
        boolean boolean17 = crawlerURL1.equals((java.lang.Object) str16);
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse22 = new com.soulgalore.crawler.core.assets.AssetResponse("", "errorurls.txt", 97, (-1L));
        java.lang.String str23 = assetResponse22.getReferer();
        int int24 = assetResponse22.getResponseCode();
        boolean boolean25 = crawlerURL1.equals((java.lang.Object) int24);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder26.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration29 = builder28.build();
        java.lang.String str30 = crawlerConfiguration29.getOnlyOnPath();
        boolean boolean31 = crawlerConfiguration29.isVerifyUrls();
        com.soulgalore.crawler.util.StatusCode statusCode32 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN;
        boolean boolean33 = crawlerConfiguration29.equals((java.lang.Object) statusCode32);
        boolean boolean34 = crawlerURL1.equals((java.lang.Object) boolean33);
        boolean boolean35 = crawlerURL1.isWrongSyntax();
        java.lang.String str36 = crawlerURL1.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean40 = crawlerURL39.isWrongSyntax();
        java.lang.String str41 = crawlerURL39.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse49 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL39, (int) 'a', strMap43, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str50 = hTMLPageResponse49.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap51 = hTMLPageResponse49.getResponseHeaders();
        java.lang.String str52 = hTMLPageResponse49.getEncoding();
        java.lang.String str53 = hTMLPageResponse49.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder54 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder56 = builder54.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder58 = builder54.setMaxLevels((int) (short) 0);
        boolean boolean59 = hTMLPageResponse49.equals((java.lang.Object) builder58);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder61 = builder58.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder63 = builder58.setMaxLevels((int) (short) 10);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration64 = builder58.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder66 = builder58.setVerifyUrls(true);
        boolean boolean67 = crawlerURL1.equals((java.lang.Object) builder58);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder69 = builder58.setMaxLevels(308);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder71 = builder69.setStartUrl("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt");
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "urls.txt" + "'", str7, "urls.txt");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "errorurls.txt" + "'", str23, "errorurls.txt");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 97 + "'", int24 == 97);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(crawlerConfiguration29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + statusCode32 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN + "'", statusCode32.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str36, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "urls.txt" + "'", str41, "urls.txt");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str50, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str52, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str53, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(crawlerConfiguration64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
    }

    @Test
    public void test09603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09603");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult6.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray9 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, assetResponseArray9);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray12 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13, assetResponseArray12);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult15 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult16 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet8, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet17 = assetsVerificationResult16.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = assetsVerificationResult16.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray19 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet20, assetResponseArray19);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray22 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet23 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23, assetResponseArray22);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult25 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet20, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet26 = assetsVerificationResult25.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet27 = assetsVerificationResult25.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray28 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, assetResponseArray28);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray31 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet32 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32, assetResponseArray31);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult34 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult35 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet27, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet36 = null;
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult37 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, assetResponseSet36);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult38 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet18, assetResponseSet36);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray39 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40, assetResponseArray39);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray42 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet43 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet43, assetResponseArray42);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult45 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet43);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet46 = assetsVerificationResult45.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet47 = assetsVerificationResult45.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet48 = assetsVerificationResult45.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet49 = assetsVerificationResult45.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray50 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet51 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet51, assetResponseArray50);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray53 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet54 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet54, assetResponseArray53);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult56 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet51, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet54);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet57 = assetsVerificationResult56.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult58 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet49, assetResponseSet57);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet59 = assetsVerificationResult58.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet60 = assetsVerificationResult58.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet61 = assetsVerificationResult58.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray62 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet63 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet63, assetResponseArray62);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray65 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet66 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet66, assetResponseArray65);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult68 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet63, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet66);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet69 = assetsVerificationResult68.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet70 = assetsVerificationResult68.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray71 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet72 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet72, assetResponseArray71);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray74 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet75 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet75, assetResponseArray74);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult77 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet72, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet75);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult78 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet70, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet72);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray79 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet80 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet80, assetResponseArray79);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray82 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet83 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet83, assetResponseArray82);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult85 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet80, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet83);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet86 = assetsVerificationResult85.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet87 = assetsVerificationResult85.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray88 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet89 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet89, assetResponseArray88);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray91 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet92 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet92, assetResponseArray91);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult94 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet89, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet92);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult95 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet87, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet89);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult96 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet70, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet89);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult97 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet61, assetResponseSet70);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult98 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet18, assetResponseSet61);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet99 = assetsVerificationResult98.getWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(assetResponseArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(assetResponseSet17);
        org.junit.Assert.assertNotNull(assetResponseSet18);
        org.junit.Assert.assertNotNull(assetResponseArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(assetResponseArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(assetResponseSet26);
        org.junit.Assert.assertNotNull(assetResponseSet27);
        org.junit.Assert.assertNotNull(assetResponseArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(assetResponseArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(assetResponseArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(assetResponseArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(assetResponseSet46);
        org.junit.Assert.assertNotNull(assetResponseSet47);
        org.junit.Assert.assertNotNull(assetResponseSet48);
        org.junit.Assert.assertNotNull(assetResponseSet49);
        org.junit.Assert.assertNotNull(assetResponseArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(assetResponseArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(assetResponseSet57);
        org.junit.Assert.assertNotNull(assetResponseSet59);
        org.junit.Assert.assertNotNull(assetResponseSet60);
        org.junit.Assert.assertNotNull(assetResponseSet61);
        org.junit.Assert.assertNotNull(assetResponseArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(assetResponseArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(assetResponseSet69);
        org.junit.Assert.assertNotNull(assetResponseSet70);
        org.junit.Assert.assertNotNull(assetResponseArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(assetResponseArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(assetResponseArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(assetResponseArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(assetResponseSet86);
        org.junit.Assert.assertNotNull(assetResponseSet87);
        org.junit.Assert.assertNotNull(assetResponseArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(assetResponseArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(assetResponseSet99);
    }

    @Test
    public void test09604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09604");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getOnlyOnPath();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        int int6 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str8 = crawlerConfiguration3.getRequestHeaders();
        java.lang.String str9 = crawlerConfiguration3.getStartUrl();
        java.lang.String str10 = crawlerConfiguration3.getNotOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str12 = crawlerConfiguration3.getNotOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str14 = crawlerConfiguration3.getOnlyOnPath();
        java.lang.String str15 = crawlerConfiguration3.getStartUrl();
        java.lang.String str16 = crawlerConfiguration3.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test09605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09605");
        com.soulgalore.crawler.util.HeaderUtil headerUtil0 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = headerUtil0.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap4 = headerUtil0.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil0.createHeadersFromString("HTMLPageResponseurl:responseCode:308encoding:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt type:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(headerUtil0);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap6);
    }

    @Test
    public void test09606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09606");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:", "AssetResponseCallable url:AssetResponseCallable url:Malformed url", 581, (long) 97);
    }

    @Test
    public void test09607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09607");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        int int5 = crawlerConfiguration3.getMaxLevels();
        int int6 = crawlerConfiguration3.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str8 = crawlerConfiguration3.getStartUrl();
        java.lang.String str9 = crawlerConfiguration3.getOnlyOnPath();
        java.lang.String str10 = crawlerConfiguration3.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder11.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder15.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setOnlyOnPath("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration22 = builder17.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder17.setOnlyOnPath("CrawlerURL url:com.soulgalore.crawler.auth");
        boolean boolean25 = crawlerConfiguration3.equals((java.lang.Object) builder17);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder17.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setVerifyUrls(false);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(crawlerConfiguration22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
    }

    @Test
    public void test09608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09608");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = hTMLPageResponse12.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        java.net.URI uRI18 = crawlerURL17.getUri();
        java.lang.String str19 = crawlerURL17.toString();
        java.lang.String str20 = crawlerURL17.getHost();
        com.soulgalore.crawler.util.HeaderUtil headerUtil22 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = headerUtil22.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap26 = headerUtil22.createHeadersFromString("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.util.Map<java.lang.String, java.lang.String> strMap28 = headerUtil22.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap30 = headerUtil22.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:CrawlerURL url:1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse36 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL17, (int) (byte) 0, strMap30, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url", "AssetResponseCallable url:CrawlerURL url:CrawlerURL url:CrawlerURL url:errorassets.csv", 582L, "CrawlerURL url:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout", 580L);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertNull(uRI18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str19, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(headerUtil22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap30);
    }

    @Test
    public void test09609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09609");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        long long17 = hTMLPageResponse12.getFetchTime();
        java.lang.String str18 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = hTMLPageResponse12.getPageUrl();
        int int20 = hTMLPageResponse12.getResponseCode();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 100L + "'", long17 == 100L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.auth" + "'", str18, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 97 + "'", int20 == 97);
    }

    @Test
    public void test09610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09610");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setNotOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setMaxLevels((int) (byte) -1);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder10.build();
        boolean boolean13 = crawlerConfiguration11.equals((java.lang.Object) 10);
        java.lang.String str14 = crawlerConfiguration11.getNotOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = crawlerConfiguration11.getRequestHeadersMap();
        int int16 = crawlerConfiguration11.getMaxLevels();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test09611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09611");
        com.soulgalore.crawler.util.StatusCode statusCode0 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT;
        int int1 = statusCode0.getCode();
        int int2 = statusCode0.getCode();
        java.lang.String str3 = statusCode0.getFriendlyName();
        int int4 = statusCode0.getCode();
        java.lang.String str5 = statusCode0.getFriendlyName();
        int int6 = statusCode0.getCode();
        java.lang.String str7 = statusCode0.getFriendlyName();
        java.lang.String str8 = statusCode0.getFriendlyName();
        java.lang.String str9 = statusCode0.getFriendlyName();
        org.junit.Assert.assertTrue("'" + statusCode0 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT + "'", statusCode0.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 580 + "'", int1 == 580);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 580 + "'", int2 == 580);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Response timed out" + "'", str3, "Response timed out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 580 + "'", int4 == 580);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Response timed out" + "'", str5, "Response timed out");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 580 + "'", int6 == 580);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Response timed out" + "'", str7, "Response timed out");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Response timed out" + "'", str8, "Response timed out");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Response timed out" + "'", str9, "Response timed out");
    }

    @Test
    public void test09612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09612");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        int int5 = crawlerConfiguration3.getMaxLevels();
        int int6 = crawlerConfiguration3.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str8 = crawlerConfiguration3.getStartUrl();
        java.lang.String str9 = crawlerConfiguration3.getStartUrl();
        int int10 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str11 = crawlerConfiguration3.getStartUrl();
        int int12 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str13 = crawlerConfiguration3.getOnlyOnPath();
        java.lang.String str14 = crawlerConfiguration3.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test09613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09613");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str7 = crawlerConfiguration5.getRequestHeaders();
        boolean boolean9 = crawlerConfiguration5.equals((java.lang.Object) 0.0d);
        java.lang.String str10 = crawlerConfiguration5.getStartUrl();
        java.lang.String str11 = crawlerConfiguration5.getStartUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean15 = crawlerURL14.isWrongSyntax();
        java.lang.String str16 = crawlerURL14.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse24 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL14, (int) 'a', strMap18, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int25 = hTMLPageResponse24.getResponseCode();
        int int26 = hTMLPageResponse24.getResponseCode();
        java.lang.String str27 = hTMLPageResponse24.toString();
        long long28 = hTMLPageResponse24.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = hTMLPageResponse24.getPageUrl();
        java.lang.String str30 = hTMLPageResponse24.getResponseType();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = hTMLPageResponse24.getResponseHeaders();
        java.lang.Object obj32 = null;
        boolean boolean33 = hTMLPageResponse24.equals(obj32);
        java.lang.String str34 = hTMLPageResponse24.toString();
        boolean boolean35 = crawlerConfiguration5.equals((java.lang.Object) str34);
        java.lang.String str36 = crawlerConfiguration5.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "urls.txt" + "'", str16, "urls.txt");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 97 + "'", int25 == 97);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 97 + "'", int26 == 97);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str27, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 100L + "'", long28 == 100L);
        org.junit.Assert.assertNotNull(crawlerURL29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str34, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
    }

    @Test
    public void test09614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09614");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setOnlyOnPath("35");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setOnlyOnPath("CrawlerURL url:CrawlerURL url:CrawlerURL url:errorassets.csv");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test09615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09615");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean14 = assetResponse4.equals((java.lang.Object) 100L);
        java.lang.String str15 = assetResponse4.getReferer();
        java.lang.String str16 = assetResponse4.getReferer();
        long long17 = assetResponse4.getFetchTime();
        boolean boolean19 = assetResponse4.equals((java.lang.Object) (-1));
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI23 = crawlerURL22.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL27 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean28 = crawlerURL27.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder30.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder30.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration35 = builder30.build();
        java.lang.String str36 = crawlerConfiguration35.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = crawlerConfiguration35.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse43 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL27, (-1), strMap37, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse49 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL22, 100, strMap37, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.lang.String str50 = crawlerURL22.getUrl();
        boolean boolean51 = assetResponse4.equals((java.lang.Object) crawlerURL22);
        java.net.URI uRI52 = crawlerURL22.getUri();
        java.lang.String str53 = crawlerURL22.toString();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "100" + "'", str15, "100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "100" + "'", str16, "100");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(uRI23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(crawlerConfiguration35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "com.soulgalore.crawler.auth" + "'", str50, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(uRI52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str53, "CrawlerURL url:com.soulgalore.crawler.auth");
    }

    @Test
    public void test09616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09616");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setMaxLevels(10);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setNotOnPath("result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setOnlyOnPath("HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration17 = builder16.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder16.setNotOnPath("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setRequestHeaders("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setStartUrl("Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setNotOnPath("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(crawlerConfiguration17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
    }

    @Test
    public void test09617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09617");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.lang.String str5 = crawlerURL2.getHost();
        boolean boolean6 = crawlerURL2.isWrongSyntax();
        java.net.URI uRI7 = crawlerURL2.getUri();
        java.lang.String str8 = crawlerURL2.getReferer();
        java.lang.Class<?> wildcardClass9 = crawlerURL2.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(uRI7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "urls.txt" + "'", str8, "urls.txt");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test09618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09618");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int13 = hTMLPageResponse12.getResponseCode();
        int int14 = hTMLPageResponse12.getResponseCode();
        java.lang.String str15 = hTMLPageResponse12.getUrl();
        long long16 = hTMLPageResponse12.getFetchTime();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = hTMLPageResponse12.getResponseHeaders();
        long long18 = hTMLPageResponse12.getFetchTime();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 97 + "'", int14 == 97);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.auth" + "'", str15, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 100L + "'", long18 == 100L);
    }

    @Test
    public void test09619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09619");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration5.getRequestHeadersMap();
        boolean boolean8 = crawlerConfiguration5.isVerifyUrls();
        java.lang.String str9 = crawlerConfiguration5.getStartUrl();
        boolean boolean10 = crawlerConfiguration5.isVerifyUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL13 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean14 = crawlerURL13.isWrongSyntax();
        java.lang.String str15 = crawlerURL13.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL13, (int) 'a', strMap17, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int24 = hTMLPageResponse23.getResponseCode();
        java.lang.String str25 = hTMLPageResponse23.getResponseType();
        java.lang.String str26 = hTMLPageResponse23.toString();
        java.lang.String str27 = hTMLPageResponse23.getEncoding();
        boolean boolean28 = crawlerConfiguration5.equals((java.lang.Object) hTMLPageResponse23);
        long long29 = hTMLPageResponse23.getFetchTime();
        java.lang.String str30 = hTMLPageResponse23.getUrl();
        java.lang.String str31 = hTMLPageResponse23.getResponseType();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "urls.txt" + "'", str15, "urls.txt");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 97 + "'", int24 == 97);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str26, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str27, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 100L + "'", long29 == 100L);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "com.soulgalore.crawler.auth" + "'", str30, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
    }

    @Test
    public void test09620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09620");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        long long14 = hTMLPageResponse12.getFetchTime();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration20 = builder19.build();
        java.lang.String str21 = crawlerConfiguration20.getOnlyOnPath();
        boolean boolean22 = crawlerConfiguration20.isVerifyUrls();
        int int23 = crawlerConfiguration20.getMaxLevels();
        int int24 = crawlerConfiguration20.getMaxLevels();
        boolean boolean25 = hTMLPageResponse12.equals((java.lang.Object) int24);
        org.jsoup.nodes.Document document26 = hTMLPageResponse12.getBody();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher28 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder29.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration32 = builder31.build();
        java.lang.String str33 = crawlerConfiguration32.getStartUrl();
        int int34 = crawlerConfiguration32.getMaxLevels();
        int int35 = crawlerConfiguration32.getMaxLevels();
        java.lang.String str36 = crawlerConfiguration32.getNotOnPath();
        int int37 = crawlerConfiguration32.getMaxLevels();
        boolean boolean38 = crawlerConfiguration32.isVerifyUrls();
        java.lang.String str39 = crawlerConfiguration32.getNotOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = crawlerConfiguration32.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable42 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", assetFetcher28, strMap40, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url");
        boolean boolean43 = hTMLPageResponse12.equals((java.lang.Object) assetResponseCallable42);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 100L + "'", long14 == 100L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(crawlerConfiguration20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(document26);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(crawlerConfiguration32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test09621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09621");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration5.getRequestHeadersMap();
        java.lang.String str8 = crawlerConfiguration5.getStartUrl();
        com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider14 = new com.soulgalore.crawler.guice.HttpClientProvider((int) (short) 100, (int) (byte) 1, (int) (byte) 100, "", "0");
        org.apache.http.client.HttpClient httpClient15 = httpClientProvider14.get();
        org.apache.http.client.HttpClient httpClient16 = httpClientProvider14.get();
        org.apache.http.client.HttpClient httpClient17 = httpClientProvider14.get();
        boolean boolean18 = crawlerConfiguration5.equals((java.lang.Object) httpClient17);
        boolean boolean19 = crawlerConfiguration5.isVerifyUrls();
        java.lang.String str20 = crawlerConfiguration5.getOnlyOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(httpClient15);
        org.junit.Assert.assertNotNull(httpClient16);
        org.junit.Assert.assertNotNull(httpClient17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test09622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09622");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration5.getRequestHeadersMap();
        java.lang.String str8 = crawlerConfiguration5.getStartUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration12 = builder11.build();
        java.lang.String str13 = crawlerConfiguration12.getStartUrl();
        boolean boolean14 = crawlerConfiguration12.isVerifyUrls();
        java.lang.String str15 = crawlerConfiguration12.getOnlyOnPath();
        boolean boolean16 = crawlerConfiguration5.equals((java.lang.Object) str15);
        boolean boolean17 = crawlerConfiguration5.isVerifyUrls();
        java.lang.String str18 = crawlerConfiguration5.getStartUrl();
        java.lang.String str19 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str20 = crawlerConfiguration5.getRequestHeaders();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder21.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder21.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration28 = builder21.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder21.setRequestHeaders("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder30.setNotOnPath("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder32.setNotOnPath("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration37 = builder36.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = builder36.setNotOnPath("AssetResponseCallable url:0");
        boolean boolean40 = crawlerConfiguration5.equals((java.lang.Object) builder36);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = crawlerConfiguration5.getRequestHeadersMap();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(crawlerConfiguration12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(crawlerConfiguration28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(crawlerConfiguration37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strMap41);
    }

    @Test
    public void test09623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09623");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str7 = crawlerConfiguration5.getRequestHeaders();
        boolean boolean9 = crawlerConfiguration5.equals((java.lang.Object) 0.0d);
        java.lang.String str10 = crawlerConfiguration5.getOnlyOnPath();
        int int11 = crawlerConfiguration5.getMaxLevels();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray12 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13, assetResponseArray12);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray15 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet16 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet16, assetResponseArray15);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult18 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet16);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet19 = assetsVerificationResult18.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = assetsVerificationResult18.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray21 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, assetResponseArray21);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray24 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet25, assetResponseArray24);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult27 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet25);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult28 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet20, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet22);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray29 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet30 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30, assetResponseArray29);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray32 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet33 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33, assetResponseArray32);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult35 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet36 = assetsVerificationResult35.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult37 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet20, assetResponseSet36);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet38 = assetsVerificationResult37.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet39 = assetsVerificationResult37.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = assetsVerificationResult37.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet41 = assetsVerificationResult37.getNonWorkingAssets();
        boolean boolean42 = crawlerConfiguration5.equals((java.lang.Object) assetResponseSet41);
        java.lang.String str43 = crawlerConfiguration5.getOnlyOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(assetResponseArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(assetResponseArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(assetResponseSet19);
        org.junit.Assert.assertNotNull(assetResponseSet20);
        org.junit.Assert.assertNotNull(assetResponseArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(assetResponseArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(assetResponseArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(assetResponseArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(assetResponseSet36);
        org.junit.Assert.assertNotNull(assetResponseSet38);
        org.junit.Assert.assertNotNull(assetResponseSet39);
        org.junit.Assert.assertNotNull(assetResponseSet40);
        org.junit.Assert.assertNotNull(assetResponseSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
    }

    @Test
    public void test09624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09624");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getOnlyOnPath();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        int int6 = crawlerConfiguration3.getMaxLevels();
        int int7 = crawlerConfiguration3.getMaxLevels();
        boolean boolean8 = crawlerConfiguration3.isVerifyUrls();
        boolean boolean9 = crawlerConfiguration3.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str11 = crawlerConfiguration3.getRequestHeaders();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test09625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09625");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet4 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet6 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet8 = authUtil0.createAuthsFromString("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet10 = authUtil0.createAuthsFromString("CrawlerURL url:CrawlerURL url:urls.txt");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:CrawlerURL url:CrawlerURL url:urls.txt");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
        org.junit.Assert.assertNotNull(authSet2);
        org.junit.Assert.assertNotNull(authSet4);
        org.junit.Assert.assertNotNull(authSet6);
        org.junit.Assert.assertNotNull(authSet8);
    }

    @Test
    public void test09626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09626");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        java.lang.String str3 = crawlerURL1.getUrl();
        java.lang.String str4 = crawlerURL1.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder5.setNotOnPath("AssetResponseCallable url:errorassets.csv");
        boolean boolean12 = crawlerURL1.equals((java.lang.Object) builder11);
        java.lang.String str13 = crawlerURL1.getUrl();
        java.lang.String str14 = crawlerURL1.getReferer();
        boolean boolean15 = crawlerURL1.isWrongSyntax();
        java.net.URI uRI16 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder18.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration23 = builder18.build();
        int int24 = crawlerConfiguration23.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil25 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean26 = crawlerConfiguration23.equals((java.lang.Object) headerUtil25);
        java.util.Map<java.lang.String, java.lang.String> strMap28 = headerUtil25.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap30 = headerUtil25.createHeadersFromString("CrawlerURL url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap32 = headerUtil25.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap34 = headerUtil25.createHeadersFromString("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        java.util.Map<java.lang.String, java.lang.String> strMap36 = headerUtil25.createHeadersFromString("HTMLPageResponseurl:hi!responseCode:10encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap38 = headerUtil25.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse44 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 308, strMap38, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.proxy type:AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", "AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout", (long) 'a', "AssetResponseCallable url:Redirected to new domain", (long) 100);
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str3, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str4, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str13, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(uRI16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(crawlerConfiguration23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(headerUtil25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
    }

    @Test
    public void test09627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09627");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setRequestHeaders("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setRequestHeaders("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels((int) ' ');
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
    }

    @Test
    public void test09628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09628");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder4.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration6 = builder4.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setRequestHeaders("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration9 = builder4.build();
        java.lang.String str10 = crawlerConfiguration9.getStartUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertNotNull(crawlerConfiguration6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(crawlerConfiguration9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test09629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09629");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain", "CrawlerURL url:Response timed out", 10, (long) (byte) 100);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray5 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet6, assetResponseArray5);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray8 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet9, assetResponseArray8);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult11 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet6, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = assetsVerificationResult11.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = assetsVerificationResult11.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet14 = assetsVerificationResult11.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet15 = assetsVerificationResult11.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet16 = assetsVerificationResult11.getWorkingAssets();
        boolean boolean17 = assetResponse4.equals((java.lang.Object) assetsVerificationResult11);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = assetsVerificationResult11.getWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(assetResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(assetResponseSet12);
        org.junit.Assert.assertNotNull(assetResponseSet13);
        org.junit.Assert.assertNotNull(assetResponseSet14);
        org.junit.Assert.assertNotNull(assetResponseSet15);
        org.junit.Assert.assertNotNull(assetResponseSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(assetResponseSet18);
    }

    @Test
    public void test09630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09630");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        org.junit.Assert.assertNull(uRI2);
    }

    @Test
    public void test09631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09631");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.lang.String str5 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder8.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration19 = builder18.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration20 = builder18.build();
        boolean boolean21 = crawlerConfiguration3.equals((java.lang.Object) crawlerConfiguration20);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder22.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder22.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration27 = builder22.build();
        int int28 = crawlerConfiguration27.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil29 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean30 = crawlerConfiguration27.equals((java.lang.Object) headerUtil29);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = headerUtil29.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap34 = headerUtil29.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.util.Map<java.lang.String, java.lang.String> strMap36 = headerUtil29.createHeadersFromString("AssetResponseCallable url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap38 = headerUtil29.createHeadersFromString("CrawlerURL url:urls.txt");
        java.util.Map<java.lang.String, java.lang.String> strMap40 = headerUtil29.createHeadersFromString("AssetResponseCallable url:100");
        boolean boolean41 = crawlerConfiguration20.equals((java.lang.Object) headerUtil29);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = headerUtil29.createHeadersFromString("CrawlerURL url:errorassets.csv");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(crawlerConfiguration19);
        org.junit.Assert.assertNotNull(crawlerConfiguration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(crawlerConfiguration27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(headerUtil29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strMap43);
    }

    @Test
    public void test09632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09632");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult6.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray9 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, assetResponseArray9);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray12 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13, assetResponseArray12);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult15 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult16 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet8, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray17 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, assetResponseArray17);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray20 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet21 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21, assetResponseArray20);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult23 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet24 = assetsVerificationResult23.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult25 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet8, assetResponseSet24);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet26 = assetsVerificationResult25.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet27 = assetsVerificationResult25.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet28 = assetsVerificationResult25.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray29 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet30 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30, assetResponseArray29);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray32 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet33 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33, assetResponseArray32);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult35 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet36 = assetsVerificationResult35.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet37 = assetsVerificationResult35.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet38 = assetsVerificationResult35.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet39 = assetsVerificationResult35.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult40 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet28, assetResponseSet39);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray41 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet42 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet42, assetResponseArray41);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray44 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet45 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet45, assetResponseArray44);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult47 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet42, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet45);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet48 = assetsVerificationResult47.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet49 = assetsVerificationResult47.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray50 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet51 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet51, assetResponseArray50);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray53 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet54 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet54, assetResponseArray53);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult56 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet51, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet54);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult57 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet49, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet51);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray58 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet59 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet59, assetResponseArray58);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray61 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet62 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet62, assetResponseArray61);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult64 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet59, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet62);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet65 = assetsVerificationResult64.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet66 = assetsVerificationResult64.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray67 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet68 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet68, assetResponseArray67);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray70 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet71 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet71, assetResponseArray70);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult73 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet68, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet71);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult74 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet66, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet68);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult75 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet49, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet68);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult76 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet28, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet68);
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(assetResponseArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(assetResponseArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(assetResponseArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(assetResponseSet24);
        org.junit.Assert.assertNotNull(assetResponseSet26);
        org.junit.Assert.assertNotNull(assetResponseSet27);
        org.junit.Assert.assertNotNull(assetResponseSet28);
        org.junit.Assert.assertNotNull(assetResponseArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(assetResponseArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(assetResponseSet36);
        org.junit.Assert.assertNotNull(assetResponseSet37);
        org.junit.Assert.assertNotNull(assetResponseSet38);
        org.junit.Assert.assertNotNull(assetResponseSet39);
        org.junit.Assert.assertNotNull(assetResponseArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(assetResponseArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(assetResponseSet48);
        org.junit.Assert.assertNotNull(assetResponseSet49);
        org.junit.Assert.assertNotNull(assetResponseArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(assetResponseArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(assetResponseArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(assetResponseArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(assetResponseSet65);
        org.junit.Assert.assertNotNull(assetResponseSet66);
        org.junit.Assert.assertNotNull(assetResponseArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(assetResponseArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test09633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09633");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setOnlyOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setOnlyOnPath("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder16.setRequestHeaders("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder16.setNotOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration23 = builder16.build();
        java.lang.String str24 = crawlerConfiguration23.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(crawlerConfiguration23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
    }

    @Test
    public void test09634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09634");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration5.getRequestHeadersMap();
        boolean boolean8 = crawlerConfiguration5.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = crawlerConfiguration5.getRequestHeadersMap();
        boolean boolean10 = crawlerConfiguration5.isVerifyUrls();
        java.lang.String str11 = crawlerConfiguration5.getStartUrl();
        java.lang.String str12 = crawlerConfiguration5.getOnlyOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test09635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09635");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = crawlerConfiguration3.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray6 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet7, assetResponseArray6);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray9 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, assetResponseArray9);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult12 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet7, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = assetsVerificationResult12.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray14 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet15 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15, assetResponseArray14);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray17 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, assetResponseArray17);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult20 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult21 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet13, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = assetsVerificationResult21.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray23 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet24 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet24, assetResponseArray23);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray26 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet27 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet27, assetResponseArray26);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult29 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet24, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet27);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet30 = assetsVerificationResult29.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet31 = assetsVerificationResult29.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray32 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet33 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33, assetResponseArray32);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray35 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet36 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet36, assetResponseArray35);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult38 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet36);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult39 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet31, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult40 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet22, assetResponseSet31);
        boolean boolean41 = crawlerConfiguration3.equals((java.lang.Object) assetsVerificationResult40);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet42 = assetsVerificationResult40.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet43 = assetsVerificationResult40.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet44 = assetsVerificationResult40.getWorkingAssets();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(assetResponseArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(assetResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(assetResponseSet13);
        org.junit.Assert.assertNotNull(assetResponseArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(assetResponseArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(assetResponseSet22);
        org.junit.Assert.assertNotNull(assetResponseArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(assetResponseArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(assetResponseSet30);
        org.junit.Assert.assertNotNull(assetResponseSet31);
        org.junit.Assert.assertNotNull(assetResponseArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(assetResponseArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(assetResponseSet42);
        org.junit.Assert.assertNotNull(assetResponseSet43);
        org.junit.Assert.assertNotNull(assetResponseSet44);
    }

    @Test
    public void test09636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09636");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads", "CrawlerURL url:errorassets.csv", (int) '4', 580L);
        int int5 = assetResponse4.getResponseCode();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setNotOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setMaxLevels((int) (byte) -1);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setOnlyOnPath("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder16.setOnlyOnPath("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        boolean boolean21 = assetResponse4.equals((java.lang.Object) builder20);
        long long22 = assetResponse4.getFetchTime();
        java.lang.String str23 = assetResponse4.getUrl();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 580L + "'", long22 == 580L);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads" + "'", str23, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
    }

    @Test
    public void test09637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09637");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        int int19 = hTMLPageResponse12.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = hTMLPageResponse12.getPageUrl();
        java.lang.String str21 = crawlerURL20.getHost();
        java.lang.String str22 = crawlerURL20.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 97 + "'", int19 == 97);
        org.junit.Assert.assertNotNull(crawlerURL20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str22, "CrawlerURL url:com.soulgalore.crawler.auth");
    }

    @Test
    public void test09638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09638");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher3 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil4 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil4.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = headerUtil4.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil4.createHeadersFromString("AssetResponseCallable url:100");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable12 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("hi!", assetFetcher3, strMap10, "35");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable14 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("100", assetFetcher1, strMap10, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:AssetResponseCallable url:Unknown error type:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertNotNull(headerUtil4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test09639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09639");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setStartUrl("CrawlerURL url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder16.setRequestHeaders("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test09640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09640");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:Wrong content type", "CrawlerURL url:result.csv");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray5 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet6, assetResponseArray5);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray8 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet9, assetResponseArray8);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult11 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet6, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = assetsVerificationResult11.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = assetsVerificationResult11.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet14 = assetsVerificationResult11.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray15 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet16 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet16, assetResponseArray15);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray18 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet19 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet19, assetResponseArray18);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult21 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet16, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet19);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = assetsVerificationResult21.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet23 = assetsVerificationResult21.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet24 = assetsVerificationResult21.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult25 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet14, assetResponseSet24);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet26 = assetsVerificationResult25.getNonWorkingAssets();
        boolean boolean27 = crawlerURL4.equals((java.lang.Object) assetResponseSet26);
        java.lang.String str28 = crawlerURL4.getUrl();
        java.net.URI uRI29 = crawlerURL4.getUri();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher32 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = builder33.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration36 = builder35.build();
        java.lang.String str37 = crawlerConfiguration36.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = crawlerConfiguration36.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable40 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("97", assetFetcher32, strMap38, "CrawlerURL url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse46 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL4, (int) (short) 1, strMap38, "CrawlerURL url:errorassets.csv", "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt", 35L, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", (long) 580);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable48 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("", assetFetcher1, strMap38, "CrawlerURL url:CrawlerURL url:errorassets.csv");
        org.junit.Assert.assertNotNull(assetResponseArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(assetResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(assetResponseSet12);
        org.junit.Assert.assertNotNull(assetResponseSet13);
        org.junit.Assert.assertNotNull(assetResponseSet14);
        org.junit.Assert.assertNotNull(assetResponseArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(assetResponseArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(assetResponseSet22);
        org.junit.Assert.assertNotNull(assetResponseSet23);
        org.junit.Assert.assertNotNull(assetResponseSet24);
        org.junit.Assert.assertNotNull(assetResponseSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "CrawlerURL url:Wrong content type" + "'", str28, "CrawlerURL url:Wrong content type");
        org.junit.Assert.assertNull(uRI29);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(crawlerConfiguration36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap38);
    }

    @Test
    public void test09641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09641");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet12 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet14 = crawlerResult11.getNonWorkingUrls();
        java.lang.String str15 = crawlerResult11.getTheStartPoint();
        java.lang.String str16 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = crawlerResult11.getNonWorkingUrls();
        java.lang.String str18 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet19 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet20 = crawlerResult11.getUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet12);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet19);
        org.junit.Assert.assertNotNull(crawlerURLSet20);
    }

    @Test
    public void test09642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09642");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean14 = assetResponse4.equals((java.lang.Object) 100L);
        java.lang.String str15 = assetResponse4.getReferer();
        java.lang.String str16 = assetResponse4.getReferer();
        java.lang.String str17 = assetResponse4.getUrl();
        java.lang.String str18 = assetResponse4.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean22 = crawlerURL21.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder24.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder24.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration29 = builder24.build();
        java.lang.String str30 = crawlerConfiguration29.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = crawlerConfiguration29.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse37 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL21, (-1), strMap31, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        java.lang.String str39 = hTMLPageResponse37.getHeaderValue("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL40 = hTMLPageResponse37.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL41 = hTMLPageResponse37.getPageUrl();
        java.lang.String str42 = hTMLPageResponse37.getEncoding();
        long long43 = hTMLPageResponse37.getFetchTime();
        java.lang.String str44 = hTMLPageResponse37.getResponseType();
        java.lang.String str45 = hTMLPageResponse37.toString();
        boolean boolean46 = assetResponse4.equals((java.lang.Object) hTMLPageResponse37);
        java.lang.String str47 = hTMLPageResponse37.getEncoding();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "100" + "'", str15, "100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "100" + "'", str16, "100");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(crawlerConfiguration29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(crawlerURL40);
        org.junit.Assert.assertNotNull(crawlerURL41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "errorurls.txt" + "'", str42, "errorurls.txt");
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 580L + "'", long43 == 580L);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "com.soulgalore.crawler.auth" + "'", str44, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth" + "'", str45, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "errorurls.txt" + "'", str47, "errorurls.txt");
    }

    @Test
    public void test09643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09643");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        java.lang.String str20 = hTMLPageResponse18.getHeaderValue("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = hTMLPageResponse18.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = hTMLPageResponse18.getPageUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder23.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder23.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder29.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder29.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration34 = builder33.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration35 = builder33.build();
        boolean boolean36 = hTMLPageResponse18.equals((java.lang.Object) builder33);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder33.setOnlyOnPath("result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder33.setRequestHeaders("AssetResponseCallable url:errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration41 = builder40.build();
        java.lang.String str42 = crawlerConfiguration41.getOnlyOnPath();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL44 = new com.soulgalore.crawler.core.CrawlerURL("errorassets.csv");
        java.lang.String str45 = crawlerURL44.getHost();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL49 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean50 = crawlerURL49.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL53 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean54 = crawlerURL53.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL57 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI58 = crawlerURL57.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray59 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL49, crawlerURL53, crawlerURL57 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet60 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet60, crawlerURLArray59);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray62 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet63 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet63, hTMLPageResponseArray62);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL68 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray69 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL68 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet70 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet70, crawlerURLArray69);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet72 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray73 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet74 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet74, hTMLPageResponseArray73);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult76 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet70, hTMLPageResponseSet72, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet74);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult77 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet60, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet63, hTMLPageResponseSet72);
        boolean boolean78 = crawlerURL44.equals((java.lang.Object) "com.soulgalore.crawler.auth");
        java.net.URI uRI79 = crawlerURL44.getUri();
        java.net.URI uRI80 = crawlerURL44.getUri();
        java.net.URI uRI81 = crawlerURL44.getUri();
        boolean boolean82 = crawlerConfiguration41.equals((java.lang.Object) crawlerURL44);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(crawlerURL21);
        org.junit.Assert.assertNotNull(crawlerURL22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(crawlerConfiguration34);
        org.junit.Assert.assertNotNull(crawlerConfiguration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(crawlerConfiguration41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "result.csv" + "'", str42, "result.csv");
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(uRI58);
        org.junit.Assert.assertNotNull(crawlerURLArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(uRI79);
        org.junit.Assert.assertNull(uRI80);
        org.junit.Assert.assertNull(uRI81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test09644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09644");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int19 = hTMLPageResponse18.getResponseCode();
        java.lang.String str21 = hTMLPageResponse18.getHeaderValue("HTMLPageResponseurl:Wrong content typeresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads type:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test09645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09645");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean6 = crawlerURL5.isWrongSyntax();
        java.lang.String str7 = crawlerURL5.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse15 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (int) 'a', strMap9, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str16 = hTMLPageResponse15.getUrl();
        boolean boolean17 = crawlerURL1.equals((java.lang.Object) str16);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher20 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil21 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = headerUtil21.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable25 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher20, strMap23, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse31 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) 100, strMap23, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        long long32 = hTMLPageResponse31.getFetchTime();
        long long33 = hTMLPageResponse31.getFetchTime();
        java.lang.String str34 = hTMLPageResponse31.getResponseType();
        java.lang.String str35 = hTMLPageResponse31.toString();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "urls.txt" + "'", str7, "urls.txt");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(headerUtil21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 100L + "'", long32 == 100L);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 100L + "'", long33 == 100L);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "errorurls.txt" + "'", str34, "errorurls.txt");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt" + "'", str35, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt");
    }

    @Test
    public void test09646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09646");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.proxy", "", (int) (short) -1, (long) 583);
        java.lang.String str5 = assetResponse4.getUrl();
        int int6 = assetResponse4.getResponseCode();
        int int7 = assetResponse4.getResponseCode();
        int int8 = assetResponse4.getResponseCode();
        long long9 = assetResponse4.getFetchTime();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "com.soulgalore.crawler.proxy" + "'", str5, "com.soulgalore.crawler.proxy");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 583L + "'", long9 == 583L);
    }

    @Test
    public void test09647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09647");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.lang.String str13 = crawlerResult12.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet14 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet16 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean21 = crawlerURL20.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean25 = crawlerURL24.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL28 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI29 = crawlerURL28.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray30 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL20, crawlerURL24, crawlerURL28 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet31 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet31, crawlerURLArray30);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray33 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet34 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet34, hTMLPageResponseArray33);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray40 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL39 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, crawlerURLArray40);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet43 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray44 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet45 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45, hTMLPageResponseArray44);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult47 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, hTMLPageResponseSet43, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult48 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet31, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet34, hTMLPageResponseSet43);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet49 = crawlerResult48.getUrls();
        java.lang.String str50 = crawlerResult48.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet51 = crawlerResult48.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet52 = crawlerResult48.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet53 = crawlerResult48.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet54 = crawlerResult48.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet55 = crawlerResult48.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet56 = crawlerResult48.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet57 = crawlerResult48.getVerifiedURLResponses();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult58 = new com.soulgalore.crawler.core.CrawlerResult("AssetResponseCallable url:CrawlerURL url:-1", crawlerURLSet15, hTMLPageResponseSet16, hTMLPageResponseSet57);
        java.lang.String str59 = crawlerResult58.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet60 = crawlerResult58.getUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(uRI29);
        org.junit.Assert.assertNotNull(crawlerURLArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "com.soulgalore.crawler.auth" + "'", str50, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet51);
        org.junit.Assert.assertNotNull(crawlerURLSet52);
        org.junit.Assert.assertNotNull(crawlerURLSet53);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet54);
        org.junit.Assert.assertNotNull(crawlerURLSet55);
        org.junit.Assert.assertNotNull(crawlerURLSet56);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "AssetResponseCallable url:CrawlerURL url:-1" + "'", str59, "AssetResponseCallable url:CrawlerURL url:-1");
        org.junit.Assert.assertNotNull(crawlerURLSet60);
    }

    @Test
    public void test09648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09648");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder3 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder3.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration6 = builder5.build();
        java.lang.String str7 = crawlerConfiguration6.getStartUrl();
        int int8 = crawlerConfiguration6.getMaxLevels();
        int int9 = crawlerConfiguration6.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean13 = crawlerURL12.isWrongSyntax();
        java.lang.String str14 = crawlerURL12.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse22 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL12, (int) 'a', strMap16, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str23 = hTMLPageResponse22.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = hTMLPageResponse22.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = hTMLPageResponse22.getResponseHeaders();
        java.lang.String str26 = hTMLPageResponse22.getUrl();
        org.jsoup.nodes.Document document27 = hTMLPageResponse22.getBody();
        boolean boolean28 = crawlerConfiguration6.equals((java.lang.Object) hTMLPageResponse22);
        boolean boolean29 = crawlerURL1.equals((java.lang.Object) hTMLPageResponse22);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder31.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration34 = builder33.build();
        java.lang.String str35 = crawlerConfiguration34.getStartUrl();
        int int36 = crawlerConfiguration34.getMaxLevels();
        int int37 = crawlerConfiguration34.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = crawlerConfiguration34.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse44 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 582, strMap38, "urls.txt", "hi!", (long) (short) 0, "AssetResponseCallable url:result.csv", 10L);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = hTMLPageResponse44.getResponseHeaders();
        java.lang.String str46 = hTMLPageResponse44.getUrl();
        java.lang.String str47 = hTMLPageResponse44.getResponseType();
        java.lang.String str48 = hTMLPageResponse44.toString();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(crawlerConfiguration6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "urls.txt" + "'", str14, "urls.txt");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str23, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "com.soulgalore.crawler.auth" + "'", str26, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(crawlerConfiguration34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str46, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "AssetResponseCallable url:result.csv" + "'", str47, "AssetResponseCallable url:result.csv");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv" + "'", str48, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv");
    }

    @Test
    public void test09649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09649");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher4 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable14 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Redirected to new domain", assetFetcher4, strMap12, "com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse20 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (byte) 10, strMap12, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", "CrawlerURL url:com.soulgalore.crawler.auth", (long) 0, "100", (-1L));
        java.net.URI uRI21 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse27 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int28 = assetResponse27.getResponseCode();
        int int29 = assetResponse27.getResponseCode();
        long long30 = assetResponse27.getFetchTime();
        long long31 = assetResponse27.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse36 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean37 = assetResponse27.equals((java.lang.Object) 100L);
        java.lang.String str38 = assetResponse27.getReferer();
        java.lang.String str39 = assetResponse27.getReferer();
        long long40 = assetResponse27.getFetchTime();
        boolean boolean42 = assetResponse27.equals((java.lang.Object) (-1));
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher44 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL47 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI48 = crawlerURL47.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder50 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder52 = builder50.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration53 = builder52.build();
        java.lang.String str54 = crawlerConfiguration53.getStartUrl();
        int int55 = crawlerConfiguration53.getMaxLevels();
        int int56 = crawlerConfiguration53.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap57 = crawlerConfiguration53.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse63 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL47, (int) (short) 10, strMap57, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable65 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Malformed url", assetFetcher44, strMap57, "errorurls.txt");
        boolean boolean66 = assetResponse27.equals((java.lang.Object) strMap57);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse72 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 581, strMap57, "CrawlerURL url:100", "Unknown error", (long) (-1), "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads", (long) 100);
        int int73 = hTMLPageResponse72.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap74 = hTMLPageResponse72.getResponseHeaders();
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(uRI21);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "100" + "'", str38, "100");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "100" + "'", str39, "100");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(uRI48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(crawlerConfiguration53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 581 + "'", int73 == 581);
        org.junit.Assert.assertNotNull(strMap74);
    }

    @Test
    public void test09650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09650");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.lang.String str5 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = crawlerConfiguration3.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration3.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = crawlerConfiguration3.getRequestHeadersMap();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL11 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean12 = crawlerURL11.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration19 = builder14.build();
        java.lang.String str20 = crawlerConfiguration19.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = crawlerConfiguration19.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse27 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL11, (-1), strMap21, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int28 = hTMLPageResponse27.getResponseCode();
        int int29 = hTMLPageResponse27.getResponseCode();
        boolean boolean30 = crawlerConfiguration3.equals((java.lang.Object) hTMLPageResponse27);
        long long31 = hTMLPageResponse27.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL32 = hTMLPageResponse27.getPageUrl();
        java.lang.String str33 = hTMLPageResponse27.getUrl();
        long long34 = hTMLPageResponse27.getFetchTime();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(crawlerConfiguration19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 580L + "'", long31 == 580L);
        org.junit.Assert.assertNotNull(crawlerURL32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "com.soulgalore.crawler.auth" + "'", str33, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 580L + "'", long34 == 580L);
    }

    @Test
    public void test09651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09651");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        int int4 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str5 = crawlerConfiguration3.getStartUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test09652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09652");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int19 = hTMLPageResponse18.getResponseCode();
        long long20 = hTMLPageResponse18.getFetchTime();
        long long21 = hTMLPageResponse18.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI25 = crawlerURL24.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean30 = crawlerURL29.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder32.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration37 = builder32.build();
        java.lang.String str38 = crawlerConfiguration37.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = crawlerConfiguration37.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, (-1), strMap39, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse51 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL24, 100, strMap39, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        boolean boolean52 = hTMLPageResponse18.equals((java.lang.Object) 100);
        org.jsoup.nodes.Document document53 = hTMLPageResponse18.getBody();
        java.lang.String str55 = hTMLPageResponse18.getHeaderValue("errorassets.csv");
        java.lang.String str56 = hTMLPageResponse18.getResponseType();
        int int57 = hTMLPageResponse18.getResponseCode();
        java.lang.String str59 = hTMLPageResponse18.getHeaderValue("HTMLPageResponseurl:urls.txtresponseCode:100encoding:com.soulgalore.crawler.http.socket.timeout type:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 580L + "'", long20 == 580L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 580L + "'", long21 == 580L);
        org.junit.Assert.assertNull(uRI25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(crawlerConfiguration37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(document53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "com.soulgalore.crawler.auth" + "'", str56, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNull(str59);
    }

    @Test
    public void test09653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09653");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        int int6 = crawlerConfiguration5.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration5.getRequestHeadersMap();
        java.lang.String str8 = crawlerConfiguration5.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test09654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09654");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads type:-1", "10");
    }

    @Test
    public void test09655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09655");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:CrawlerURL url:-1", "CrawlerURL url:10");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration9 = builder4.build();
        int int10 = crawlerConfiguration9.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil11 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean12 = crawlerConfiguration9.equals((java.lang.Object) headerUtil11);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil11.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap16 = headerUtil11.createHeadersFromString("CrawlerURL url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap18 = headerUtil11.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap20 = headerUtil11.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap22 = headerUtil11.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap24 = headerUtil11.createHeadersFromString("CrawlerURL url:35");
        java.util.Map<java.lang.String, java.lang.String> strMap26 = headerUtil11.createHeadersFromString("CrawlerURL url:Redirected to new domain");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse32 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap26, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:100 type:com.soulgalore.crawler.http.socket.timeout", "AssetResponseCallable url:errorassets.csv", 1L, "CrawlerURL url:errorurls.txt", (long) 582);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(crawlerConfiguration9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(headerUtil11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap26);
    }

    @Test
    public void test09656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09656");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder4.build();
        java.lang.String str6 = crawlerConfiguration5.getStartUrl();
        boolean boolean7 = crawlerConfiguration5.isVerifyUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL10 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean11 = crawlerURL10.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder13.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration18 = builder13.build();
        java.lang.String str19 = crawlerConfiguration18.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = crawlerConfiguration18.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse26 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL10, (-1), strMap20, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int27 = hTMLPageResponse26.getResponseCode();
        long long28 = hTMLPageResponse26.getFetchTime();
        long long29 = hTMLPageResponse26.getFetchTime();
        boolean boolean30 = crawlerConfiguration5.equals((java.lang.Object) hTMLPageResponse26);
        java.lang.String str31 = crawlerConfiguration5.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL34 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean35 = crawlerURL34.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = builder37.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder41 = builder37.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration42 = builder37.build();
        java.lang.String str43 = crawlerConfiguration42.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = crawlerConfiguration42.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse50 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL34, (-1), strMap44, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL54 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI55 = crawlerURL54.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL59 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean60 = crawlerURL59.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder62 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder64 = builder62.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder66 = builder62.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration67 = builder62.build();
        java.lang.String str68 = crawlerConfiguration67.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap69 = crawlerConfiguration67.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse75 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL59, (-1), strMap69, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse81 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL54, 100, strMap69, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse87 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL34, (int) (byte) 10, strMap69, "100", "errorassets.csv", (long) (byte) 100, "", (long) (short) 100);
        java.util.Map<java.lang.String, java.lang.String> strMap88 = hTMLPageResponse87.getResponseHeaders();
        boolean boolean89 = crawlerConfiguration5.equals((java.lang.Object) hTMLPageResponse87);
        java.util.Map<java.lang.String, java.lang.String> strMap90 = crawlerConfiguration5.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable92 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:CrawlerURL url:hi!", assetFetcher1, strMap90, "AssetResponseCallable url:HTMLPageResponseurl:hi!responseCode:10encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.assets.AssetResponse assetResponse93 = assetResponseCallable92.call();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(crawlerConfiguration18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 580L + "'", long28 == 580L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 580L + "'", long29 == 580L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(crawlerConfiguration42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(uRI55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(crawlerConfiguration67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(strMap90);
    }

    @Test
    public void test09657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09657");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:-1");
        java.lang.String str2 = crawlerURL1.getUrl();
        com.soulgalore.crawler.util.HeaderUtil headerUtil4 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil4.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = headerUtil4.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil4.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse16 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (byte) -1, strMap10, "CrawlerURL url:com.soulgalore.crawler.proxy", "32", 0L, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", (long) 582);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher19 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder20.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder20.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder20.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration27 = builder26.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration28 = builder26.build();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = crawlerConfiguration28.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable31 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:CrawlerURL url:10", assetFetcher19, strMap29, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse37 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 35, strMap29, "", "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:", 582L, "CrawlerURL url:CrawlerURL url:com.soulgalore.crawler.auth", (long) 0);
        int int38 = hTMLPageResponse37.getResponseCode();
        java.lang.String str39 = hTMLPageResponse37.getUrl();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "CrawlerURL url:-1" + "'", str2, "CrawlerURL url:-1");
        org.junit.Assert.assertNotNull(headerUtil4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(crawlerConfiguration27);
        org.junit.Assert.assertNotNull(crawlerConfiguration28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 35 + "'", int38 == 35);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "CrawlerURL url:-1" + "'", str39, "CrawlerURL url:-1");
    }

    @Test
    public void test09658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09658");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setMaxLevels((int) '#');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setMaxLevels((int) (byte) 100);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder10.build();
        int int12 = crawlerConfiguration11.getMaxLevels();
        java.lang.String str13 = crawlerConfiguration11.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "urls.txt" + "'", str13, "urls.txt");
    }

    @Test
    public void test09659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09659");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setStartUrl("CrawlerURL url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration17 = builder16.build();
        java.lang.String str18 = crawlerConfiguration17.getOnlyOnPath();
        java.lang.String str19 = crawlerConfiguration17.getRequestHeaders();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(crawlerConfiguration17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test09660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09660");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet4 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet6 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet8 = authUtil0.createAuthsFromString("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet10 = authUtil0.createAuthsFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:0encoding:Malformed url type:Unknown error");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"com.soulgalore.crawler.authresponseCode\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
        org.junit.Assert.assertNotNull(authSet2);
        org.junit.Assert.assertNotNull(authSet4);
        org.junit.Assert.assertNotNull(authSet6);
        org.junit.Assert.assertNotNull(authSet8);
    }

    @Test
    public void test09661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09661");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet12 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet16 = crawlerResult11.getNonWorkingUrls();
        java.lang.String str17 = crawlerResult11.getTheStartPoint();
        java.lang.String str18 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet19 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet20 = crawlerResult11.getUrls();
        java.lang.String str21 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet22 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet23 = crawlerResult11.getNonWorkingUrls();
        java.lang.String str24 = crawlerResult11.getTheStartPoint();
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet12);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet19);
        org.junit.Assert.assertNotNull(crawlerURLSet20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet22);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
    }

    @Test
    public void test09662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09662");
        com.soulgalore.crawler.util.HeaderUtil headerUtil0 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = headerUtil0.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap4 = headerUtil0.createHeadersFromString("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil0.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:10");
        org.junit.Assert.assertNotNull(headerUtil0);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap6);
    }

    @Test
    public void test09663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09663");
        com.soulgalore.crawler.util.HeaderUtil headerUtil0 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = headerUtil0.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap4 = headerUtil0.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil0.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = headerUtil0.createHeadersFromString("CrawlerURL url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil0.createHeadersFromString("AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertNotNull(headerUtil0);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test09664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09664");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", "com.soulgalore.crawler.http.connection.timeout", 0, (long) 580);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        java.lang.String str9 = crawlerURL7.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse17 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (int) 'a', strMap11, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str18 = hTMLPageResponse17.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = hTMLPageResponse17.getPageUrl();
        boolean boolean20 = crawlerURL19.isWrongSyntax();
        java.lang.String str21 = crawlerURL19.getHost();
        boolean boolean22 = assetResponse4.equals((java.lang.Object) crawlerURL19);
        int int23 = assetResponse4.getResponseCode();
        long long24 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder25.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder25.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder25.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder31.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = builder33.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = builder33.setRequestHeaders("AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration38 = builder33.build();
        boolean boolean39 = assetResponse4.equals((java.lang.Object) builder33);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "urls.txt" + "'", str9, "urls.txt");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str18, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 580L + "'", long24 == 580L);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(crawlerConfiguration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test09665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09665");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder0.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder0.setRequestHeaders("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder9.setNotOnPath("Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setOnlyOnPath("-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder15.setOnlyOnPath("Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder15.setNotOnPath("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration20 = builder15.build();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(crawlerConfiguration20);
    }

    @Test
    public void test09666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09666");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getOnlyOnPath();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        int int6 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str8 = crawlerConfiguration3.getRequestHeaders();
        java.lang.String str9 = crawlerConfiguration3.getStartUrl();
        java.lang.String str10 = crawlerConfiguration3.getRequestHeaders();
        java.lang.String str11 = crawlerConfiguration3.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str13 = crawlerConfiguration3.getStartUrl();
        java.lang.String str14 = crawlerConfiguration3.getOnlyOnPath();
        java.lang.String str15 = crawlerConfiguration3.getRequestHeaders();
        java.lang.String str16 = crawlerConfiguration3.getOnlyOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test09667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09667");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder2.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder2.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration9 = builder8.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder8.build();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable13 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("HTMLPageResponseurl:hi!responseCode:10encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", assetFetcher1, strMap11, "Unknown error");
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(crawlerConfiguration9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertNotNull(strMap11);
    }

    @Test
    public void test09668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09668");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.util.Map<java.lang.String, java.lang.String> strMap30 = hTMLPageResponse29.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean34 = crawlerURL33.isWrongSyntax();
        java.lang.String str35 = crawlerURL33.getReferer();
        java.lang.String str36 = crawlerURL33.getHost();
        java.lang.String str37 = crawlerURL33.getUrl();
        boolean boolean38 = hTMLPageResponse29.equals((java.lang.Object) crawlerURL33);
        java.lang.String str39 = hTMLPageResponse29.getUrl();
        java.lang.String str40 = hTMLPageResponse29.getUrl();
        java.lang.String str42 = hTMLPageResponse29.getHeaderValue("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        int int43 = hTMLPageResponse29.getResponseCode();
        java.lang.String str45 = hTMLPageResponse29.getHeaderValue("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads");
        java.lang.String str46 = hTMLPageResponse29.getUrl();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "urls.txt" + "'", str35, "urls.txt");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "com.soulgalore.crawler.auth" + "'", str37, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "com.soulgalore.crawler.auth" + "'", str39, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "com.soulgalore.crawler.auth" + "'", str40, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "com.soulgalore.crawler.auth" + "'", str46, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test09669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09669");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("Response timed out", "AssetResponseCallable url:result.csv", (int) (byte) -1, (long) (byte) -1);
        java.lang.String str5 = assetResponse4.getUrl();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Response timed out" + "'", str5, "Response timed out");
    }

    @Test
    public void test09670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09670");
        com.soulgalore.crawler.util.StatusCode statusCode0 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT;
        int int1 = statusCode0.getCode();
        int int2 = statusCode0.getCode();
        java.lang.String str3 = statusCode0.getFriendlyName();
        java.lang.String str4 = statusCode0.getFriendlyName();
        int int5 = statusCode0.getCode();
        java.lang.String str6 = statusCode0.getFriendlyName();
        int int7 = statusCode0.getCode();
        int int8 = statusCode0.getCode();
        int int9 = statusCode0.getCode();
        java.lang.String str10 = statusCode0.getFriendlyName();
        java.lang.String str11 = statusCode0.getFriendlyName();
        int int12 = statusCode0.getCode();
        org.junit.Assert.assertTrue("'" + statusCode0 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT + "'", statusCode0.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 580 + "'", int1 == 580);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 580 + "'", int2 == 580);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Response timed out" + "'", str3, "Response timed out");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Response timed out" + "'", str4, "Response timed out");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 580 + "'", int5 == 580);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Response timed out" + "'", str6, "Response timed out");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 580 + "'", int7 == 580);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 580 + "'", int8 == 580);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 580 + "'", int9 == 580);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Response timed out" + "'", str10, "Response timed out");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Response timed out" + "'", str11, "Response timed out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 580 + "'", int12 == 580);
    }

    @Test
    public void test09671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09671");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", "CrawlerURL url:CrawlerURL url:com.soulgalore.crawler.auth", 32, (-1L));
        java.lang.String str5 = assetResponse4.getUrl();
        java.lang.String str6 = assetResponse4.getReferer();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1" + "'", str5, "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "CrawlerURL url:CrawlerURL url:com.soulgalore.crawler.auth" + "'", str6, "CrawlerURL url:CrawlerURL url:com.soulgalore.crawler.auth");
    }

    @Test
    public void test09672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09672");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setOnlyOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setOnlyOnPath("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder16.setStartUrl("52");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration21 = builder20.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder20.setStartUrl("CrawlerURL url:35");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder20.setMaxLevels(100);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder25.setNotOnPath("AssetResponseCallable url:AssetResponseCallable url:97");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder25.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration30 = builder25.build();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(crawlerConfiguration21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(crawlerConfiguration30);
    }

    @Test
    public void test09673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09673");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        java.lang.String str3 = crawlerURL1.getUrl();
        java.lang.String str4 = crawlerURL1.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder6.build();
        java.lang.String str12 = crawlerConfiguration11.getRequestHeaders();
        java.lang.String str13 = crawlerConfiguration11.getRequestHeaders();
        boolean boolean15 = crawlerConfiguration11.equals((java.lang.Object) 0.0d);
        boolean boolean16 = crawlerConfiguration11.isVerifyUrls();
        java.lang.String str17 = crawlerConfiguration11.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = crawlerConfiguration11.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse24 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 0, strMap18, "10", "Unknown error", (long) (short) -1, "AssetResponseCallable url:Malformed url", (long) 97);
        java.lang.String str26 = hTMLPageResponse24.getHeaderValue("errorassets.csv");
        java.lang.String str27 = hTMLPageResponse24.getUrl();
        java.lang.String str28 = hTMLPageResponse24.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL31 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean32 = crawlerURL31.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder34.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder34.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration39 = builder34.build();
        java.lang.String str40 = crawlerConfiguration39.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = crawlerConfiguration39.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse47 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL31, (-1), strMap41, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        java.lang.String str49 = hTMLPageResponse47.getHeaderValue("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL50 = hTMLPageResponse47.getPageUrl();
        int int51 = hTMLPageResponse47.getResponseCode();
        boolean boolean52 = hTMLPageResponse24.equals((java.lang.Object) hTMLPageResponse47);
        int int53 = hTMLPageResponse24.getResponseCode();
        long long54 = hTMLPageResponse24.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL55 = hTMLPageResponse24.getPageUrl();
        java.lang.String str56 = crawlerURL55.getReferer();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str3, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str4, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str27, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url" + "'", str28, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(crawlerConfiguration39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(crawlerURL50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 97L + "'", long54 == 97L);
        org.junit.Assert.assertNotNull(crawlerURL55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
    }

    @Test
    public void test09674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09674");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean5 = crawlerURL4.isWrongSyntax();
        java.lang.String str6 = crawlerURL4.getReferer();
        java.lang.String str7 = crawlerURL4.getHost();
        java.lang.String str8 = crawlerURL4.getHost();
        java.net.URI uRI9 = crawlerURL4.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration14 = builder13.build();
        java.lang.String str15 = crawlerConfiguration14.getStartUrl();
        int int16 = crawlerConfiguration14.getMaxLevels();
        int int17 = crawlerConfiguration14.getMaxLevels();
        java.lang.String str18 = crawlerConfiguration14.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = crawlerConfiguration14.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse25 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL4, (int) '4', strMap19, "com.soulgalore.crawler.http.socket.timeout", "Response timed out", (long) '#', "Malformed url", 1L);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable27 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("35", assetFetcher1, strMap19, "AssetResponseCallable url:97");
        java.lang.String str28 = assetResponseCallable27.toString();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "urls.txt" + "'", str6, "urls.txt");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(uRI9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(crawlerConfiguration14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "AssetResponseCallable url:35" + "'", str28, "AssetResponseCallable url:35");
    }

    @Test
    public void test09675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09675");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setOnlyOnPath("com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("com.soulgalore.crawler.proxy");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setRequestHeaders("AssetResponseCallable url:CrawlerURL url:10");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder12.setOnlyOnPath("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setVerifyUrls(false);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test09676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09676");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.http.connection.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", 0, 10L);
        java.lang.String str5 = assetResponse4.getUrl();
        int int6 = assetResponse4.getResponseCode();
        java.lang.String str7 = assetResponse4.getUrl();
        long long8 = assetResponse4.getFetchTime();
        long long9 = assetResponse4.getFetchTime();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str5, "com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str7, "com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10L + "'", long8 == 10L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10L + "'", long9 == 10L);
    }

    @Test
    public void test09677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09677");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider((int) (short) 0, 308, (int) (byte) 0, "AssetResponseCallable url:CrawlerURL url:100", "");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:AssetResponseCallable url:CrawlerURL url:100");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09678");
        com.soulgalore.crawler.util.HeaderUtil headerUtil0 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = headerUtil0.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap4 = headerUtil0.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:97");
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil0.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv");
        org.junit.Assert.assertNotNull(headerUtil0);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap6);
    }

    @Test
    public void test09679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09679");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        int int5 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str6 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str7 = crawlerConfiguration3.getStartUrl();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher9 = null;
        java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable12 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("errorassets.csv", assetFetcher9, strMap10, "");
        java.lang.String str13 = assetResponseCallable12.toString();
        boolean boolean14 = crawlerConfiguration3.equals((java.lang.Object) assetResponseCallable12);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AssetResponseCallable url:errorassets.csv" + "'", str13, "AssetResponseCallable url:errorassets.csv");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test09680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09680");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "errorurls.txt", 97, (-1L));
        java.lang.String str5 = assetResponse4.getReferer();
        int int6 = assetResponse4.getResponseCode();
        int int7 = assetResponse4.getResponseCode();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "errorurls.txt" + "'", str5, "errorurls.txt");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 97 + "'", int6 == 97);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 97 + "'", int7 == 97);
    }

    @Test
    public void test09681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09681");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean6 = crawlerURL5.isWrongSyntax();
        java.lang.String str7 = crawlerURL5.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse15 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (int) 'a', strMap9, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str16 = hTMLPageResponse15.getUrl();
        boolean boolean17 = crawlerURL1.equals((java.lang.Object) str16);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher20 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil21 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = headerUtil21.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable25 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher20, strMap23, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse31 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) 100, strMap23, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        org.jsoup.nodes.Document document32 = hTMLPageResponse31.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = hTMLPageResponse31.getPageUrl();
        java.lang.String str35 = hTMLPageResponse31.getHeaderValue("errorassets.csv");
        java.lang.String str36 = hTMLPageResponse31.toString();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = hTMLPageResponse31.getResponseHeaders();
        java.lang.String str38 = hTMLPageResponse31.getResponseType();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "urls.txt" + "'", str7, "urls.txt");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(headerUtil21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(document32);
        org.junit.Assert.assertNotNull(crawlerURL33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt" + "'", str36, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt");
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "errorurls.txt" + "'", str38, "errorurls.txt");
    }

    @Test
    public void test09682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09682");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder6.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration8 = builder6.build();
        java.lang.String str9 = crawlerConfiguration8.getStartUrl();
        java.lang.String str10 = crawlerConfiguration8.getRequestHeaders();
        java.lang.String str11 = crawlerConfiguration8.getStartUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean15 = crawlerURL14.isWrongSyntax();
        java.lang.String str16 = crawlerURL14.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse24 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL14, (int) 'a', strMap18, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str25 = hTMLPageResponse24.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = hTMLPageResponse24.getResponseHeaders();
        java.lang.String str27 = hTMLPageResponse24.getEncoding();
        java.lang.String str28 = hTMLPageResponse24.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder29.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder29.setMaxLevels((int) (short) 0);
        boolean boolean34 = hTMLPageResponse24.equals((java.lang.Object) builder33);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder33.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder33.setMaxLevels((int) (short) 10);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration39 = builder33.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder41 = builder33.setVerifyUrls(true);
        boolean boolean42 = crawlerConfiguration8.equals((java.lang.Object) builder33);
        java.lang.String str43 = crawlerConfiguration8.getOnlyOnPath();
        java.lang.String str44 = crawlerConfiguration8.getOnlyOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNotNull(crawlerConfiguration8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "urls.txt" + "'", str16, "urls.txt");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str25, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str27, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str28, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(crawlerConfiguration39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
    }

    @Test
    public void test09683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09683");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean5 = crawlerURL4.isWrongSyntax();
        java.lang.String str6 = crawlerURL4.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse14 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL4, (int) 'a', strMap8, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str15 = hTMLPageResponse14.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = hTMLPageResponse14.getResponseHeaders();
        java.lang.String str17 = hTMLPageResponse14.getEncoding();
        java.lang.String str18 = hTMLPageResponse14.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = hTMLPageResponse14.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = hTMLPageResponse14.getPageUrl();
        int int21 = hTMLPageResponse14.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = hTMLPageResponse14.getPageUrl();
        java.lang.String str23 = crawlerURL22.getReferer();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL27 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "Response timed out");
        com.soulgalore.crawler.util.HeaderUtil headerUtil29 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = headerUtil29.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse37 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL27, (int) '4', strMap31, "com.soulgalore.crawler.http.socket.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 580, "com.soulgalore.crawler.auth", (long) (short) 1);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse43 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL22, (int) (byte) 1, strMap31, "AssetResponseCallable url:Malformed url", "urls.txt", (long) (byte) 10, "com.soulgalore.crawler.http.connection.timeout", (long) 97);
        java.lang.String str44 = crawlerURL22.getUrl();
        java.net.URI uRI45 = crawlerURL22.getUri();
        java.lang.String str46 = crawlerURL22.getHost();
        java.lang.String str47 = crawlerURL22.getReferer();
        java.net.URI uRI48 = crawlerURL22.getUri();
        com.soulgalore.crawler.util.HeaderUtil headerUtil50 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap52 = headerUtil50.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse58 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL22, 581, strMap52, "Wrong content type", "AssetResponseCallable url:result.csv", (long) (byte) 10, "CrawlerURL url:CrawlerURL url:errorassets.csv", (long) 1);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = hTMLPageResponse58.getResponseHeaders();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable61 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:CrawlerURL url:AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", assetFetcher1, strMap59, "AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
        java.lang.String str62 = assetResponseCallable61.toString();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "urls.txt" + "'", str6, "urls.txt");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str17, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str18, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL19);
        org.junit.Assert.assertNotNull(crawlerURL20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 97 + "'", int21 == 97);
        org.junit.Assert.assertNotNull(crawlerURL22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "urls.txt" + "'", str23, "urls.txt");
        org.junit.Assert.assertNotNull(headerUtil29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "com.soulgalore.crawler.auth" + "'", str44, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(uRI45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "urls.txt" + "'", str47, "urls.txt");
        org.junit.Assert.assertNull(uRI48);
        org.junit.Assert.assertNotNull(headerUtil50);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str62, "AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
    }

    @Test
    public void test09684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09684");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI5 = crawlerURL4.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean9 = crawlerURL8.isWrongSyntax();
        java.lang.String str10 = crawlerURL8.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL8, (int) 'a', strMap12, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str19 = hTMLPageResponse18.getUrl();
        boolean boolean20 = crawlerURL4.equals((java.lang.Object) str19);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher23 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil24 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = headerUtil24.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable28 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher23, strMap26, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse34 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL4, (int) (short) 100, strMap26, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse40 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) -1, strMap26, "com.soulgalore.crawler.http.socket.timeout", "errorurls.txt", (long) 100, "result.csv", (long) (short) 0);
        java.lang.String str41 = crawlerURL1.getHost();
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "urls.txt" + "'", str10, "urls.txt");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "com.soulgalore.crawler.auth" + "'", str19, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(headerUtil24);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test09685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09685");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        java.lang.String str2 = crawlerURL1.getUrl();
        boolean boolean3 = crawlerURL1.isWrongSyntax();
        com.soulgalore.crawler.util.HeaderUtil headerUtil5 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = headerUtil5.createHeadersFromString("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse13 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) 10, strMap7, "urls.txt", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (byte) 10, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", (-1L));
        java.lang.String str15 = hTMLPageResponse13.getHeaderValue("CrawlerURL url:1");
        long long16 = hTMLPageResponse13.getFetchTime();
        org.jsoup.nodes.Document document17 = hTMLPageResponse13.getBody();
        java.lang.String str18 = hTMLPageResponse13.getResponseType();
        org.jsoup.nodes.Document document19 = hTMLPageResponse13.getBody();
        java.lang.String str20 = hTMLPageResponse13.toString();
        java.lang.String str21 = hTMLPageResponse13.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean25 = crawlerURL24.isWrongSyntax();
        java.lang.String str26 = crawlerURL24.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse34 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL24, (int) 'a', strMap28, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str35 = hTMLPageResponse34.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = hTMLPageResponse34.getResponseHeaders();
        java.lang.String str37 = hTMLPageResponse34.getEncoding();
        java.lang.String str38 = hTMLPageResponse34.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder41 = builder39.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder43 = builder39.setMaxLevels((int) (short) 0);
        boolean boolean44 = hTMLPageResponse34.equals((java.lang.Object) builder43);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder46 = builder43.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder48 = builder43.setMaxLevels((int) (byte) 100);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder50 = builder43.setStartUrl("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        boolean boolean51 = hTMLPageResponse13.equals((java.lang.Object) "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(headerUtil5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNull(document17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url" + "'", str18, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertNull(document19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "HTMLPageResponseurl:hi!responseCode:10encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url" + "'", str20, "HTMLPageResponseurl:hi!responseCode:10encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "urls.txt" + "'", str26, "urls.txt");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str35, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str37, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str38, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test09686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09686");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) builder14);
        long long16 = hTMLPageResponse12.getFetchTime();
        java.lang.String str17 = hTMLPageResponse12.toString();
        java.lang.String str18 = hTMLPageResponse12.toString();
        java.lang.String str19 = hTMLPageResponse12.getEncoding();
        java.lang.String str20 = hTMLPageResponse12.getResponseType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str17, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str18, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str19, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test09687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09687");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.lang.String str5 = crawlerURL2.getHost();
        java.lang.String str6 = crawlerURL2.getUrl();
        java.lang.String str7 = crawlerURL2.getHost();
        java.lang.String str8 = crawlerURL2.getHost();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI13 = crawlerURL12.getUri();
        java.lang.String str14 = crawlerURL12.getReferer();
        java.lang.String str15 = crawlerURL12.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration20 = builder19.build();
        java.lang.String str21 = crawlerConfiguration20.getStartUrl();
        int int22 = crawlerConfiguration20.getMaxLevels();
        int int23 = crawlerConfiguration20.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = crawlerConfiguration20.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse30 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL12, (int) (byte) -1, strMap24, "100", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) (short) -1, "com.soulgalore.crawler.nrofhttpthreads", 0L);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse36 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap24, "com.soulgalore.crawler.auth", "AssetResponseCallable url:result.csv", 0L, "0", (long) 100);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher39 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL41 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI42 = crawlerURL41.getUri();
        java.lang.String str43 = crawlerURL41.getUrl();
        java.lang.String str44 = crawlerURL41.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder46 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder48 = builder46.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder50 = builder46.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration51 = builder46.build();
        java.lang.String str52 = crawlerConfiguration51.getRequestHeaders();
        java.lang.String str53 = crawlerConfiguration51.getRequestHeaders();
        boolean boolean55 = crawlerConfiguration51.equals((java.lang.Object) 0.0d);
        boolean boolean56 = crawlerConfiguration51.isVerifyUrls();
        java.lang.String str57 = crawlerConfiguration51.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap58 = crawlerConfiguration51.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse64 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL41, 0, strMap58, "10", "Unknown error", (long) (short) -1, "AssetResponseCallable url:Malformed url", (long) 97);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable66 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:Malformed url", assetFetcher39, strMap58, "");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse72 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) '4', strMap58, "32", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain", (long) 32, "AssetResponseCallable url:97", (long) 580);
        int int73 = hTMLPageResponse72.getResponseCode();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder74 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder76 = builder74.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration77 = builder76.build();
        java.lang.String str78 = crawlerConfiguration77.getOnlyOnPath();
        boolean boolean79 = crawlerConfiguration77.isVerifyUrls();
        int int80 = crawlerConfiguration77.getMaxLevels();
        java.lang.String str81 = crawlerConfiguration77.getNotOnPath();
        java.lang.String str82 = crawlerConfiguration77.getRequestHeaders();
        java.lang.String str83 = crawlerConfiguration77.getStartUrl();
        java.lang.String str84 = crawlerConfiguration77.getNotOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap85 = crawlerConfiguration77.getRequestHeadersMap();
        java.lang.String str86 = crawlerConfiguration77.getNotOnPath();
        boolean boolean87 = hTMLPageResponse72.equals((java.lang.Object) str86);
        java.util.Map<java.lang.String, java.lang.String> strMap88 = hTMLPageResponse72.getResponseHeaders();
        long long89 = hTMLPageResponse72.getFetchTime();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "com.soulgalore.crawler.auth" + "'", str6, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(uRI13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "urls.txt" + "'", str14, "urls.txt");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "urls.txt" + "'", str15, "urls.txt");
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(crawlerConfiguration20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(uRI42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str43, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str44, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(crawlerConfiguration51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 52 + "'", int73 == 52);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(crawlerConfiguration77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 580L + "'", long89 == 580L);
    }

    @Test
    public void test09688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09688");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("urls.txt", "", 100, (-1L));
        java.lang.String str5 = assetResponse4.getReferer();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test09689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09689");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:CrawlerURL url:1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain", "com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher5 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil6 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = headerUtil6.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil6.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil6.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt");
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil6.createHeadersFromString("CrawlerURL url:CrawlerURL url:errorassets.csv");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable16 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:Redirected to new domain", assetFetcher5, strMap14, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse22 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (byte) 10, strMap14, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", "AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.auth", 97L, "CrawlerURL url:CrawlerURL url:1", (-1L));
        org.jsoup.nodes.Document document23 = hTMLPageResponse22.getBody();
        org.junit.Assert.assertNotNull(headerUtil6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(document23);
    }

    @Test
    public void test09690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09690");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        org.jsoup.nodes.Document document13 = hTMLPageResponse12.getBody();
        java.lang.String str14 = hTMLPageResponse12.getResponseType();
        java.lang.String str15 = hTMLPageResponse12.getUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str17 = hTMLPageResponse12.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNull(document13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.auth" + "'", str15, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str17, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
    }

    @Test
    public void test09691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09691");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.toString();
        long long14 = hTMLPageResponse12.getFetchTime();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        java.lang.String str17 = hTMLPageResponse12.getEncoding();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str13, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 100L + "'", long14 == 100L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str17, "com.soulgalore.crawler.http.socket.timeout");
    }

    @Test
    public void test09692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09692");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", "CrawlerURL url:CrawlerURL url:CrawlerURL url:com.soulgalore.crawler.auth", 0, (long) 582);
    }

    @Test
    public void test09693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09693");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration9 = builder8.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        java.lang.String str18 = crawlerConfiguration15.getStartUrl();
        java.lang.String str19 = crawlerConfiguration15.getNotOnPath();
        boolean boolean20 = crawlerConfiguration9.equals((java.lang.Object) crawlerConfiguration15);
        java.lang.String str21 = crawlerConfiguration15.getStartUrl();
        java.lang.String str22 = crawlerConfiguration15.getOnlyOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(crawlerConfiguration9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
    }

    @Test
    public void test09694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09694");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher3 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration9 = builder4.build();
        int int10 = crawlerConfiguration9.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil11 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean12 = crawlerConfiguration9.equals((java.lang.Object) headerUtil11);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil11.createHeadersFromString("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable16 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("52", assetFetcher3, strMap14, "com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable18 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url", assetFetcher1, strMap14, "com.soulgalore.crawler.http.connection.timeout");
        java.lang.String str19 = assetResponseCallable18.toString();
        java.lang.String str20 = assetResponseCallable18.toString();
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.assets.AssetResponse assetResponse21 = assetResponseCallable18.call();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(crawlerConfiguration9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(headerUtil11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url" + "'", str19, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url" + "'", str20, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url");
    }

    @Test
    public void test09695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09695");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        long long14 = hTMLPageResponse12.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL15 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher18 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher20 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder21.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration26 = builder21.build();
        java.lang.String str27 = crawlerConfiguration26.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = crawlerConfiguration26.getRequestHeadersMap();
        boolean boolean29 = crawlerConfiguration26.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = crawlerConfiguration26.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable32 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("com.soulgalore.crawler.nrofhttpthreads", assetFetcher20, strMap30, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable34 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("com.soulgalore.crawler.http.connection.timeout", assetFetcher18, strMap30, "Response timed out");
        java.lang.String str35 = assetResponseCallable34.toString();
        boolean boolean36 = crawlerURL16.equals((java.lang.Object) str35);
        boolean boolean37 = crawlerURL16.isWrongSyntax();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 100L + "'", long14 == 100L);
        org.junit.Assert.assertNotNull(crawlerURL15);
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(crawlerConfiguration26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout" + "'", str35, "AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test09696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09696");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        java.lang.String str18 = crawlerURL17.getUrl();
        boolean boolean19 = crawlerURL17.isWrongSyntax();
        java.net.URI uRI20 = crawlerURL17.getUri();
        java.lang.Class<?> wildcardClass21 = crawlerURL17.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.auth" + "'", str18, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(uRI20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test09697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09697");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setOnlyOnPath("AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder10.setOnlyOnPath("10");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test09698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09698");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("CrawlerURL url:1", "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads", 308, 0L);
        java.lang.String str5 = assetResponse4.getUrl();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CrawlerURL url:1" + "'", str5, "CrawlerURL url:1");
    }

    @Test
    public void test09699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09699");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder2.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setMaxLevels((int) '4');
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration8 = builder7.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder7.setStartUrl("HTMLPageResponseurl:hi!responseCode:10encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder10.build();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(crawlerConfiguration8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
    }

    @Test
    public void test09700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09700");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult6.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray9 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, assetResponseArray9);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray12 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13, assetResponseArray12);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult15 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult16 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet8, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray17 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, assetResponseArray17);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray20 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet21 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21, assetResponseArray20);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult23 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet24 = assetsVerificationResult23.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult25 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet8, assetResponseSet24);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet26 = assetsVerificationResult25.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet27 = assetsVerificationResult25.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet28 = assetsVerificationResult25.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = assetsVerificationResult25.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet30 = assetsVerificationResult25.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet31 = assetsVerificationResult25.getNonWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(assetResponseArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(assetResponseArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(assetResponseArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(assetResponseSet24);
        org.junit.Assert.assertNotNull(assetResponseSet26);
        org.junit.Assert.assertNotNull(assetResponseSet27);
        org.junit.Assert.assertNotNull(assetResponseSet28);
        org.junit.Assert.assertNotNull(assetResponseSet29);
        org.junit.Assert.assertNotNull(assetResponseSet30);
        org.junit.Assert.assertNotNull(assetResponseSet31);
    }

    @Test
    public void test09701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09701");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder4.setOnlyOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setOnlyOnPath("Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setOnlyOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setRequestHeaders("AssetResponseCallable url:AssetResponseCallable url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test09702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09702");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.proxy", "", (int) (short) -1, (long) 583);
        java.lang.String str5 = assetResponse4.getUrl();
        long long6 = assetResponse4.getFetchTime();
        int int7 = assetResponse4.getResponseCode();
        long long8 = assetResponse4.getFetchTime();
        java.lang.String str9 = assetResponse4.getUrl();
        int int10 = assetResponse4.getResponseCode();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "com.soulgalore.crawler.proxy" + "'", str5, "com.soulgalore.crawler.proxy");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 583L + "'", long6 == 583L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 583L + "'", long8 == 583L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "com.soulgalore.crawler.proxy" + "'", str9, "com.soulgalore.crawler.proxy");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test09703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09703");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.lang.String str5 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        int int8 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str9 = crawlerConfiguration3.getRequestHeaders();
        java.lang.String str10 = crawlerConfiguration3.getRequestHeaders();
        java.lang.String str11 = crawlerConfiguration3.getStartUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test09704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09704");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("100", "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", (int) '4', (long) 1);
        int int5 = assetResponse4.getResponseCode();
        java.lang.String str6 = assetResponse4.getReferer();
        long long7 = assetResponse4.getFetchTime();
        java.lang.String str8 = assetResponse4.getUrl();
        int int9 = assetResponse4.getResponseCode();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url" + "'", str6, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "100" + "'", str8, "100");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
    }

    @Test
    public void test09705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09705");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        java.lang.String str15 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder16.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder20.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder22.setOnlyOnPath("com.soulgalore.crawler.auth");
        boolean boolean25 = hTMLPageResponse12.equals((java.lang.Object) builder22);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder22.setOnlyOnPath("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder27.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder31.setRequestHeaders("AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str15, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
    }

    @Test
    public void test09706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09706");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder3 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder3.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration6 = builder5.build();
        java.lang.String str7 = crawlerConfiguration6.getStartUrl();
        int int8 = crawlerConfiguration6.getMaxLevels();
        int int9 = crawlerConfiguration6.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean13 = crawlerURL12.isWrongSyntax();
        java.lang.String str14 = crawlerURL12.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse22 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL12, (int) 'a', strMap16, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str23 = hTMLPageResponse22.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = hTMLPageResponse22.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = hTMLPageResponse22.getResponseHeaders();
        java.lang.String str26 = hTMLPageResponse22.getUrl();
        org.jsoup.nodes.Document document27 = hTMLPageResponse22.getBody();
        boolean boolean28 = crawlerConfiguration6.equals((java.lang.Object) hTMLPageResponse22);
        boolean boolean29 = crawlerURL1.equals((java.lang.Object) hTMLPageResponse22);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder31.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration34 = builder33.build();
        java.lang.String str35 = crawlerConfiguration34.getStartUrl();
        int int36 = crawlerConfiguration34.getMaxLevels();
        int int37 = crawlerConfiguration34.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = crawlerConfiguration34.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse44 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 582, strMap38, "urls.txt", "hi!", (long) (short) 0, "AssetResponseCallable url:result.csv", 10L);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL45 = hTMLPageResponse44.getPageUrl();
        java.lang.String str46 = crawlerURL45.toString();
        java.lang.String str47 = crawlerURL45.toString();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(crawlerConfiguration6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "urls.txt" + "'", str14, "urls.txt");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str23, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "com.soulgalore.crawler.auth" + "'", str26, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(crawlerConfiguration34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(crawlerURL45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str46, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str47, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
    }

    @Test
    public void test09707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09707");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.nrofhttpthreads", "AssetResponseCallable url:Redirected to new domain", 100, (long) '#');
        int int5 = assetResponse4.getResponseCode();
        long long6 = assetResponse4.getFetchTime();
        long long7 = assetResponse4.getFetchTime();
        java.lang.String str8 = assetResponse4.getReferer();
        java.lang.String str9 = assetResponse4.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean13 = crawlerURL12.isWrongSyntax();
        java.lang.String str14 = crawlerURL12.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse22 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL12, (int) 'a', strMap16, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int23 = hTMLPageResponse22.getResponseCode();
        int int24 = hTMLPageResponse22.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL25 = hTMLPageResponse22.getPageUrl();
        java.lang.String str26 = crawlerURL25.getHost();
        boolean boolean27 = assetResponse4.equals((java.lang.Object) str26);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 35L + "'", long6 == 35L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 35L + "'", long7 == 35L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "AssetResponseCallable url:Redirected to new domain" + "'", str8, "AssetResponseCallable url:Redirected to new domain");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str9, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "urls.txt" + "'", str14, "urls.txt");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 97 + "'", int23 == 97);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 97 + "'", int24 == 97);
        org.junit.Assert.assertNotNull(crawlerURL25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test09708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09708");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder3 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder3.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder3.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder3.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder11.setMaxLevels(10);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder11.setOnlyOnPath("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setMaxLevels(97);
        boolean boolean20 = crawlerURL2.equals((java.lang.Object) builder17);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test09709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09709");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        java.util.Map<java.lang.String, java.lang.String> strMap2 = null;
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable4 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", assetFetcher1, strMap2, "CrawlerURL url:AssetResponseCallable url:Redirected to new domain");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.assets.AssetResponse assetResponse5 = assetResponseCallable4.call();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09710");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet16 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet17 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray23 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL22 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet24 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, crawlerURLArray23);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray27 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet28 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28, hTMLPageResponseArray27);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult30 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, hTMLPageResponseSet26, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet31 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet32 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet33 = crawlerResult30.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL37 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray38 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL37 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet39 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet39, crawlerURLArray38);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet41 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray42 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet43 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet43, hTMLPageResponseArray42);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult45 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet39, hTMLPageResponseSet41, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet43);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet46 = crawlerResult45.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet47 = crawlerResult45.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet48 = crawlerResult45.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet49 = crawlerResult45.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL53 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray54 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL53 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet55 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet55, crawlerURLArray54);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet57 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray58 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet59 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet59, hTMLPageResponseArray58);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult61 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet55, hTMLPageResponseSet57, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet59);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet62 = crawlerResult61.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet63 = crawlerResult61.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet64 = crawlerResult61.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet65 = crawlerResult61.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet66 = crawlerResult61.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet67 = crawlerResult61.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult68 = new com.soulgalore.crawler.core.CrawlerResult("Malformed url", crawlerURLSet33, hTMLPageResponseSet49, hTMLPageResponseSet67);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL72 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray73 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL72 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet74 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet74, crawlerURLArray73);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet76 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray77 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet78 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet78, hTMLPageResponseArray77);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult80 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet74, hTMLPageResponseSet76, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet78);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet81 = crawlerResult80.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult82 = new com.soulgalore.crawler.core.CrawlerResult("35", crawlerURLSet17, hTMLPageResponseSet49, hTMLPageResponseSet81);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet83 = crawlerResult82.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet84 = crawlerResult82.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet85 = crawlerResult82.getNonWorkingUrls();
        java.lang.String str86 = crawlerResult82.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet87 = crawlerResult82.getUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet16);
        org.junit.Assert.assertNotNull(crawlerURLSet17);
        org.junit.Assert.assertNotNull(crawlerURLArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet31);
        org.junit.Assert.assertNotNull(crawlerURLSet32);
        org.junit.Assert.assertNotNull(crawlerURLSet33);
        org.junit.Assert.assertNotNull(crawlerURLArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet46);
        org.junit.Assert.assertNotNull(crawlerURLSet47);
        org.junit.Assert.assertNotNull(crawlerURLSet48);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet49);
        org.junit.Assert.assertNotNull(crawlerURLArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet62);
        org.junit.Assert.assertNotNull(crawlerURLSet63);
        org.junit.Assert.assertNotNull(crawlerURLSet64);
        org.junit.Assert.assertNotNull(crawlerURLSet65);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet66);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet67);
        org.junit.Assert.assertNotNull(crawlerURLArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet81);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet83);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet84);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "35" + "'", str86, "35");
        org.junit.Assert.assertNotNull(crawlerURLSet87);
    }

    @Test
    public void test09711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09711");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("", "com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher5 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean9 = crawlerURL8.isWrongSyntax();
        java.lang.String str10 = crawlerURL8.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL8, (int) 'a', strMap12, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str19 = hTMLPageResponse18.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = hTMLPageResponse18.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = hTMLPageResponse18.getPageUrl();
        boolean boolean22 = crawlerURL21.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder23.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration28 = builder23.build();
        java.lang.String str29 = crawlerConfiguration28.getRequestHeaders();
        java.lang.String str30 = crawlerConfiguration28.getRequestHeaders();
        java.lang.String str31 = crawlerConfiguration28.getStartUrl();
        boolean boolean32 = crawlerConfiguration28.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = crawlerConfiguration28.getRequestHeadersMap();
        java.lang.String str34 = crawlerConfiguration28.getNotOnPath();
        boolean boolean35 = crawlerURL21.equals((java.lang.Object) crawlerConfiguration28);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = crawlerConfiguration28.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable38 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Wrong content type", assetFetcher5, strMap36, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse44 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 581, strMap36, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:581encoding:AssetResponseCallable url:result.csv type:CrawlerURL url:CrawlerURL url:errorassets.csv", "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:32encoding:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 35, "CrawlerURL url:35", 308L);
        java.lang.String str45 = crawlerURL2.getReferer();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "urls.txt" + "'", str10, "urls.txt");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str19, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(crawlerURL21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(crawlerConfiguration28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str45, "com.soulgalore.crawler.http.connection.timeout");
    }

    @Test
    public void test09712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09712");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray8 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet9, assetResponseArray8);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray11 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12, assetResponseArray11);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult14 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet9, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet12);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet15 = assetsVerificationResult14.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet16 = assetsVerificationResult14.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray17 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, assetResponseArray17);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray20 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet21 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21, assetResponseArray20);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult23 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult24 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet16, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray25 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet26 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet26, assetResponseArray25);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray28 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, assetResponseArray28);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult31 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet26, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet32 = assetsVerificationResult31.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult33 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet16, assetResponseSet32);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet34 = assetsVerificationResult33.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet35 = assetsVerificationResult33.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray36 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet37 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37, assetResponseArray36);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray39 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40, assetResponseArray39);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult42 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet43 = assetsVerificationResult42.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray44 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet45 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet45, assetResponseArray44);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray47 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet48 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet48, assetResponseArray47);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult50 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet45, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet48);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult51 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet43, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet48);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet52 = assetsVerificationResult51.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet53 = assetsVerificationResult51.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray54 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet55 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet55, assetResponseArray54);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray57 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet58 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet58, assetResponseArray57);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult60 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet55, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet58);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet61 = assetsVerificationResult60.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult62 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet53, assetResponseSet61);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult63 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet35, assetResponseSet53);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet64 = assetsVerificationResult63.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult65 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet7, assetResponseSet64);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet66 = assetsVerificationResult65.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet67 = assetsVerificationResult65.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet68 = assetsVerificationResult65.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet69 = assetsVerificationResult65.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet70 = assetsVerificationResult65.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet71 = assetsVerificationResult65.getWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(assetResponseArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(assetResponseSet15);
        org.junit.Assert.assertNotNull(assetResponseSet16);
        org.junit.Assert.assertNotNull(assetResponseArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(assetResponseArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(assetResponseArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(assetResponseArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(assetResponseSet32);
        org.junit.Assert.assertNotNull(assetResponseSet34);
        org.junit.Assert.assertNotNull(assetResponseSet35);
        org.junit.Assert.assertNotNull(assetResponseArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(assetResponseArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(assetResponseSet43);
        org.junit.Assert.assertNotNull(assetResponseArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(assetResponseArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(assetResponseSet52);
        org.junit.Assert.assertNotNull(assetResponseSet53);
        org.junit.Assert.assertNotNull(assetResponseArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(assetResponseArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(assetResponseSet61);
        org.junit.Assert.assertNotNull(assetResponseSet64);
        org.junit.Assert.assertNotNull(assetResponseSet66);
        org.junit.Assert.assertNotNull(assetResponseSet67);
        org.junit.Assert.assertNotNull(assetResponseSet68);
        org.junit.Assert.assertNotNull(assetResponseSet69);
        org.junit.Assert.assertNotNull(assetResponseSet70);
        org.junit.Assert.assertNotNull(assetResponseSet71);
    }

    @Test
    public void test09713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09713");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI4 = crawlerURL3.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration8 = builder7.build();
        java.lang.String str9 = crawlerConfiguration8.getStartUrl();
        int int10 = crawlerConfiguration8.getMaxLevels();
        int int11 = crawlerConfiguration8.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean15 = crawlerURL14.isWrongSyntax();
        java.lang.String str16 = crawlerURL14.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse24 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL14, (int) 'a', strMap18, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str25 = hTMLPageResponse24.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL26 = hTMLPageResponse24.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = hTMLPageResponse24.getResponseHeaders();
        java.lang.String str28 = hTMLPageResponse24.getUrl();
        org.jsoup.nodes.Document document29 = hTMLPageResponse24.getBody();
        boolean boolean30 = crawlerConfiguration8.equals((java.lang.Object) hTMLPageResponse24);
        boolean boolean31 = crawlerURL3.equals((java.lang.Object) hTMLPageResponse24);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = builder33.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration36 = builder35.build();
        java.lang.String str37 = crawlerConfiguration36.getStartUrl();
        int int38 = crawlerConfiguration36.getMaxLevels();
        int int39 = crawlerConfiguration36.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = crawlerConfiguration36.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse46 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL3, 582, strMap40, "urls.txt", "hi!", (long) (short) 0, "AssetResponseCallable url:result.csv", 10L);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = hTMLPageResponse46.getResponseHeaders();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable49 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:CrawlerURL url:1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain", assetFetcher1, strMap47, "AssetResponseCallable url:Unknown error");
        java.lang.String str50 = assetResponseCallable49.toString();
        org.junit.Assert.assertNull(uRI4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(crawlerConfiguration8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "urls.txt" + "'", str16, "urls.txt");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str25, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "com.soulgalore.crawler.auth" + "'", str28, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(crawlerConfiguration36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:CrawlerURL url:1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain" + "'", str50, "AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:CrawlerURL url:1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain");
    }

    @Test
    public void test09714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09714");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int19 = hTMLPageResponse18.getResponseCode();
        long long20 = hTMLPageResponse18.getFetchTime();
        long long21 = hTMLPageResponse18.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI25 = crawlerURL24.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean30 = crawlerURL29.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder32.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration37 = builder32.build();
        java.lang.String str38 = crawlerConfiguration37.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = crawlerConfiguration37.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, (-1), strMap39, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse51 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL24, 100, strMap39, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        boolean boolean52 = hTMLPageResponse18.equals((java.lang.Object) 100);
        org.jsoup.nodes.Document document53 = hTMLPageResponse18.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL54 = hTMLPageResponse18.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL55 = hTMLPageResponse18.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = hTMLPageResponse18.getResponseHeaders();
        java.lang.String str57 = hTMLPageResponse18.getUrl();
        org.jsoup.nodes.Document document58 = hTMLPageResponse18.getBody();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 580L + "'", long20 == 580L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 580L + "'", long21 == 580L);
        org.junit.Assert.assertNull(uRI25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(crawlerConfiguration37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(document53);
        org.junit.Assert.assertNotNull(crawlerURL54);
        org.junit.Assert.assertNotNull(crawlerURL55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "com.soulgalore.crawler.auth" + "'", str57, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document58);
    }

    @Test
    public void test09715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09715");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setOnlyOnPath("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder6.setOnlyOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setMaxLevels(52);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setOnlyOnPath("AssetResponseCallable url:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder14.setNotOnPath("CrawlerURL url:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test09716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09716");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int13 = hTMLPageResponse12.getResponseCode();
        java.lang.String str14 = hTMLPageResponse12.getResponseType();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL15 = hTMLPageResponse12.getPageUrl();
        long long16 = hTMLPageResponse12.getFetchTime();
        java.lang.String str17 = hTMLPageResponse12.toString();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = hTMLPageResponse12.getResponseHeaders();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(crawlerURL15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str17, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNull(strMap18);
    }

    @Test
    public void test09717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09717");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider((-1), (int) (byte) 100, (int) (byte) 1, "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv", "CrawlerURL url:hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"HTMLPageResponseurl\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09718");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:CrawlerURL url:com.soulgalore.crawler.auth", "AssetResponseCallable url:AssetResponseCallable url:Unknown error");
        java.lang.String str3 = crawlerURL2.toString();
        java.lang.String str4 = crawlerURL2.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "CrawlerURL url:CrawlerURL url:CrawlerURL url:com.soulgalore.crawler.auth" + "'", str3, "CrawlerURL url:CrawlerURL url:CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CrawlerURL url:CrawlerURL url:CrawlerURL url:com.soulgalore.crawler.auth" + "'", str4, "CrawlerURL url:CrawlerURL url:CrawlerURL url:com.soulgalore.crawler.auth");
    }

    @Test
    public void test09719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09719");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:Wrong content type", "CrawlerURL url:result.csv");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray6 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet7, assetResponseArray6);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult9 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet7);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = assetsVerificationResult9.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet11 = assetsVerificationResult9.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = assetsVerificationResult9.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray13 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet14 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet14, assetResponseArray13);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray16 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet17 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet17, assetResponseArray16);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult19 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet14, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet17);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet20 = assetsVerificationResult19.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet21 = assetsVerificationResult19.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = assetsVerificationResult19.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult23 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet12, assetResponseSet22);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet24 = assetsVerificationResult23.getNonWorkingAssets();
        boolean boolean25 = crawlerURL2.equals((java.lang.Object) assetResponseSet24);
        java.lang.String str26 = crawlerURL2.getUrl();
        java.net.URI uRI27 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher30 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder31.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration34 = builder33.build();
        java.lang.String str35 = crawlerConfiguration34.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = crawlerConfiguration34.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable38 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("97", assetFetcher30, strMap36, "CrawlerURL url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse44 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (short) 1, strMap36, "CrawlerURL url:errorassets.csv", "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt", 35L, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", (long) 580);
        java.lang.String str45 = crawlerURL2.getReferer();
        java.lang.String str46 = crawlerURL2.toString();
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(assetResponseSet10);
        org.junit.Assert.assertNotNull(assetResponseSet11);
        org.junit.Assert.assertNotNull(assetResponseSet12);
        org.junit.Assert.assertNotNull(assetResponseArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(assetResponseArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(assetResponseSet20);
        org.junit.Assert.assertNotNull(assetResponseSet21);
        org.junit.Assert.assertNotNull(assetResponseSet22);
        org.junit.Assert.assertNotNull(assetResponseSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "CrawlerURL url:Wrong content type" + "'", str26, "CrawlerURL url:Wrong content type");
        org.junit.Assert.assertNull(uRI27);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(crawlerConfiguration34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "CrawlerURL url:result.csv" + "'", str45, "CrawlerURL url:result.csv");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "CrawlerURL url:CrawlerURL url:Wrong content type" + "'", str46, "CrawlerURL url:CrawlerURL url:Wrong content type");
    }

    @Test
    public void test09720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09720");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str7 = crawlerConfiguration5.getRequestHeaders();
        boolean boolean9 = crawlerConfiguration5.equals((java.lang.Object) 0.0d);
        java.lang.String str10 = crawlerConfiguration5.getNotOnPath();
        java.lang.String str11 = crawlerConfiguration5.getNotOnPath();
        int int12 = crawlerConfiguration5.getMaxLevels();
        java.lang.String str13 = crawlerConfiguration5.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = crawlerConfiguration5.getRequestHeadersMap();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder15.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration18 = builder17.build();
        java.lang.String str19 = crawlerConfiguration18.getOnlyOnPath();
        boolean boolean20 = crawlerConfiguration18.isVerifyUrls();
        int int21 = crawlerConfiguration18.getMaxLevels();
        int int22 = crawlerConfiguration18.getMaxLevels();
        boolean boolean23 = crawlerConfiguration18.isVerifyUrls();
        java.lang.String str24 = crawlerConfiguration18.getNotOnPath();
        java.lang.String str25 = crawlerConfiguration18.getStartUrl();
        java.lang.Class<?> wildcardClass26 = crawlerConfiguration18.getClass();
        boolean boolean27 = crawlerConfiguration5.equals((java.lang.Object) crawlerConfiguration18);
        boolean boolean28 = crawlerConfiguration5.isVerifyUrls();
        java.lang.String str29 = crawlerConfiguration5.getOnlyOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(crawlerConfiguration18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
    }

    @Test
    public void test09721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09721");
        com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider((int) (short) 100, (int) (byte) 1, (int) (byte) 100, "", "0");
        org.apache.http.client.HttpClient httpClient6 = httpClientProvider5.get();
        org.apache.http.client.HttpClient httpClient7 = httpClientProvider5.get();
        org.apache.http.client.HttpClient httpClient8 = httpClientProvider5.get();
        org.apache.http.client.HttpClient httpClient9 = httpClientProvider5.get();
        org.apache.http.client.HttpClient httpClient10 = httpClientProvider5.get();
        org.apache.http.client.HttpClient httpClient11 = httpClientProvider5.get();
        org.apache.http.client.HttpClient httpClient12 = httpClientProvider5.get();
        org.apache.http.client.HttpClient httpClient13 = httpClientProvider5.get();
        org.apache.http.client.HttpClient httpClient14 = httpClientProvider5.get();
        org.apache.http.client.HttpClient httpClient15 = httpClientProvider5.get();
        org.apache.http.client.HttpClient httpClient16 = httpClientProvider5.get();
        org.apache.http.client.HttpClient httpClient17 = httpClientProvider5.get();
        org.apache.http.client.HttpClient httpClient18 = httpClientProvider5.get();
        org.apache.http.client.HttpClient httpClient19 = httpClientProvider5.get();
        org.junit.Assert.assertNotNull(httpClient6);
        org.junit.Assert.assertNotNull(httpClient7);
        org.junit.Assert.assertNotNull(httpClient8);
        org.junit.Assert.assertNotNull(httpClient9);
        org.junit.Assert.assertNotNull(httpClient10);
        org.junit.Assert.assertNotNull(httpClient11);
        org.junit.Assert.assertNotNull(httpClient12);
        org.junit.Assert.assertNotNull(httpClient13);
        org.junit.Assert.assertNotNull(httpClient14);
        org.junit.Assert.assertNotNull(httpClient15);
        org.junit.Assert.assertNotNull(httpClient16);
        org.junit.Assert.assertNotNull(httpClient17);
        org.junit.Assert.assertNotNull(httpClient18);
        org.junit.Assert.assertNotNull(httpClient19);
    }

    @Test
    public void test09722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09722");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet14 = crawlerResult12.getNonWorkingUrls();
        java.lang.String str15 = crawlerResult12.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean21 = crawlerURL20.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean25 = crawlerURL24.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL28 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI29 = crawlerURL28.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray30 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL20, crawlerURL24, crawlerURL28 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet31 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet31, crawlerURLArray30);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray33 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet34 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet34, hTMLPageResponseArray33);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray40 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL39 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, crawlerURLArray40);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet43 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray44 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet45 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45, hTMLPageResponseArray44);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult47 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, hTMLPageResponseSet43, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult48 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet31, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet34, hTMLPageResponseSet43);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet49 = crawlerResult48.getVerifiedURLResponses();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL53 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray54 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL53 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet55 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet55, crawlerURLArray54);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet57 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray58 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet59 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet59, hTMLPageResponseArray58);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult61 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet55, hTMLPageResponseSet57, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet59);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet62 = crawlerResult61.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult63 = new com.soulgalore.crawler.core.CrawlerResult("hi!", crawlerURLSet16, hTMLPageResponseSet49, hTMLPageResponseSet62);
        java.lang.String str64 = crawlerResult63.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet65 = crawlerResult63.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet66 = crawlerResult63.getNonWorkingUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(uRI29);
        org.junit.Assert.assertNotNull(crawlerURLArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet49);
        org.junit.Assert.assertNotNull(crawlerURLArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet65);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet66);
    }

    @Test
    public void test09723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09723");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet14 = crawlerResult12.getNonWorkingUrls();
        java.lang.String str15 = crawlerResult12.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean21 = crawlerURL20.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean25 = crawlerURL24.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL28 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI29 = crawlerURL28.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray30 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL20, crawlerURL24, crawlerURL28 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet31 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet31, crawlerURLArray30);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray33 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet34 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet34, hTMLPageResponseArray33);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray40 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL39 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, crawlerURLArray40);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet43 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray44 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet45 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45, hTMLPageResponseArray44);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult47 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, hTMLPageResponseSet43, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult48 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet31, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet34, hTMLPageResponseSet43);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet49 = crawlerResult48.getVerifiedURLResponses();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL53 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray54 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL53 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet55 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet55, crawlerURLArray54);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet57 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray58 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet59 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet59, hTMLPageResponseArray58);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult61 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet55, hTMLPageResponseSet57, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet59);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet62 = crawlerResult61.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult63 = new com.soulgalore.crawler.core.CrawlerResult("hi!", crawlerURLSet16, hTMLPageResponseSet49, hTMLPageResponseSet62);
        java.lang.String str64 = crawlerResult63.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet65 = crawlerResult63.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet66 = crawlerResult63.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet67 = crawlerResult63.getVerifiedURLResponses();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(uRI29);
        org.junit.Assert.assertNotNull(crawlerURLArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet49);
        org.junit.Assert.assertNotNull(crawlerURLArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet65);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet66);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet67);
    }

    @Test
    public void test09724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09724");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet18 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray23 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL22 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet24 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, crawlerURLArray23);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray27 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet28 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28, hTMLPageResponseArray27);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult30 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, hTMLPageResponseSet26, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet31 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet32 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet33 = crawlerResult30.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet34 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet35 = crawlerResult30.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet36 = crawlerResult30.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet37 = crawlerResult30.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL41 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean42 = crawlerURL41.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL45 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean46 = crawlerURL45.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL49 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI50 = crawlerURL49.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray51 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL41, crawlerURL45, crawlerURL49 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet52 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet52, crawlerURLArray51);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray54 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet55 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet55, hTMLPageResponseArray54);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL60 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray61 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL60 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet62 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet62, crawlerURLArray61);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet64 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray65 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet66 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet66, hTMLPageResponseArray65);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult68 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet62, hTMLPageResponseSet64, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet66);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult69 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet52, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet55, hTMLPageResponseSet64);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet70 = crawlerResult69.getUrls();
        java.lang.String str71 = crawlerResult69.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet72 = crawlerResult69.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet73 = crawlerResult69.getVerifiedURLResponses();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult74 = new com.soulgalore.crawler.core.CrawlerResult("0", crawlerURLSet18, hTMLPageResponseSet37, hTMLPageResponseSet73);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet75 = crawlerResult74.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet76 = crawlerResult74.getVerifiedURLResponses();
        java.lang.String str77 = crawlerResult74.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet78 = crawlerResult74.getVerifiedURLResponses();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet17);
        org.junit.Assert.assertNotNull(crawlerURLSet18);
        org.junit.Assert.assertNotNull(crawlerURLArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet31);
        org.junit.Assert.assertNotNull(crawlerURLSet32);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet33);
        org.junit.Assert.assertNotNull(crawlerURLSet34);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet35);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet36);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(uRI50);
        org.junit.Assert.assertNotNull(crawlerURLArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "com.soulgalore.crawler.auth" + "'", str71, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURLSet72);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet73);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet75);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "0" + "'", str77, "0");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet78);
    }

    @Test
    public void test09725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09725");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        int int6 = crawlerConfiguration5.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil7 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean8 = crawlerConfiguration5.equals((java.lang.Object) headerUtil7);
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil7.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil7.createHeadersFromString("CrawlerURL url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil7.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap16 = headerUtil7.createHeadersFromString("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        java.util.Map<java.lang.String, java.lang.String> strMap18 = headerUtil7.createHeadersFromString("CrawlerURL url:35");
        java.lang.Class<?> wildcardClass19 = headerUtil7.getClass();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(headerUtil7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test09726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09726");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) "CrawlerURL url:com.soulgalore.crawler.auth");
        int int16 = hTMLPageResponse12.getResponseCode();
        long long17 = hTMLPageResponse12.getFetchTime();
        long long18 = hTMLPageResponse12.getFetchTime();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 97 + "'", int16 == 97);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 100L + "'", long17 == 100L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 100L + "'", long18 == 100L);
    }

    @Test
    public void test09727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09727");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.proxy", "", (int) (short) -1, (long) 583);
        java.lang.String str5 = assetResponse4.getUrl();
        long long6 = assetResponse4.getFetchTime();
        java.lang.String str7 = assetResponse4.getUrl();
        java.lang.String str8 = assetResponse4.getReferer();
        com.soulgalore.crawler.util.StatusCode statusCode9 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT;
        int int10 = statusCode9.getCode();
        java.lang.String str11 = statusCode9.getFriendlyName();
        int int12 = statusCode9.getCode();
        boolean boolean13 = assetResponse4.equals((java.lang.Object) statusCode9);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "com.soulgalore.crawler.proxy" + "'", str5, "com.soulgalore.crawler.proxy");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 583L + "'", long6 == 583L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "com.soulgalore.crawler.proxy" + "'", str7, "com.soulgalore.crawler.proxy");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + statusCode9 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT + "'", statusCode9.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 580 + "'", int10 == 580);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Response timed out" + "'", str11, "Response timed out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 580 + "'", int12 == 580);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test09728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09728");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) 581);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str17 = hTMLPageResponse12.getEncoding();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str17, "com.soulgalore.crawler.http.socket.timeout");
    }

    @Test
    public void test09729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09729");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setOnlyOnPath("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setStartUrl("com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setNotOnPath("AssetResponseCallable url:97");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setVerifyUrls(true);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test09730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09730");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher3 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration9 = builder4.build();
        int int10 = crawlerConfiguration9.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil11 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean12 = crawlerConfiguration9.equals((java.lang.Object) headerUtil11);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil11.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap16 = headerUtil11.createHeadersFromString("CrawlerURL url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap18 = headerUtil11.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable20 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("CrawlerURL url:", assetFetcher3, strMap18, "");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable22 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("CrawlerURL url:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", assetFetcher1, strMap18, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url type:AssetResponseCallable url:CrawlerURL url:10");
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(crawlerConfiguration9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(headerUtil11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
    }

    @Test
    public void test09731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09731");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"com.soulgalore.crawler.authresponseCode\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
    }

    @Test
    public void test09732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09732");
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet1 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray6 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL5 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet7 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet7, crawlerURLArray6);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray10 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet11 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet11, hTMLPageResponseArray10);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult13 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet7, hTMLPageResponseSet9, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet11);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult13.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult13.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult13.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = crawlerResult13.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray22 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL21 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet23 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet23, crawlerURLArray22);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet25 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray26 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet27 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet27, hTMLPageResponseArray26);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult29 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet23, hTMLPageResponseSet25, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet27);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet30 = crawlerResult29.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet31 = crawlerResult29.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult32 = new com.soulgalore.crawler.core.CrawlerResult("CrawlerURL url:1", crawlerURLSet1, hTMLPageResponseSet17, hTMLPageResponseSet31);
        java.lang.String str33 = crawlerResult32.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet34 = crawlerResult32.getVerifiedURLResponses();
        org.junit.Assert.assertNotNull(crawlerURLArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet17);
        org.junit.Assert.assertNotNull(crawlerURLArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet30);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "CrawlerURL url:1" + "'", str33, "CrawlerURL url:1");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet34);
    }

    @Test
    public void test09733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09733");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("result.csv", "Malformed url");
        java.net.URI uRI3 = crawlerURL2.getUri();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.lang.String str5 = crawlerURL2.toString();
        java.lang.String str6 = crawlerURL2.getHost();
        java.lang.String str7 = crawlerURL2.toString();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int14 = assetResponse13.getResponseCode();
        int int15 = assetResponse13.getResponseCode();
        long long16 = assetResponse13.getFetchTime();
        long long17 = assetResponse13.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse22 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean23 = assetResponse13.equals((java.lang.Object) 100L);
        java.lang.String str24 = assetResponse13.getReferer();
        java.lang.String str25 = assetResponse13.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder26.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder26.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder26.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder32.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder36.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder38.setVerifyUrls(false);
        boolean boolean41 = assetResponse13.equals((java.lang.Object) false);
        int int42 = assetResponse13.getResponseCode();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse47 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int48 = assetResponse47.getResponseCode();
        long long49 = assetResponse47.getFetchTime();
        java.lang.String str50 = assetResponse47.getUrl();
        java.lang.String str51 = assetResponse47.getReferer();
        int int52 = assetResponse47.getResponseCode();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder53 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder55 = builder53.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration56 = builder53.build();
        boolean boolean57 = assetResponse47.equals((java.lang.Object) crawlerConfiguration56);
        java.util.Map<java.lang.String, java.lang.String> strMap58 = crawlerConfiguration56.getRequestHeadersMap();
        boolean boolean59 = assetResponse13.equals((java.lang.Object) strMap58);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse65 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (short) 100, strMap58, "CrawlerURL url:Response timed out", "", (long) '#', "Unknown error", 97L);
        java.lang.String str66 = hTMLPageResponse65.getUrl();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Malformed url" + "'", str4, "Malformed url");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CrawlerURL url:result.csv" + "'", str5, "CrawlerURL url:result.csv");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CrawlerURL url:result.csv" + "'", str7, "CrawlerURL url:result.csv");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "100" + "'", str24, "100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "100" + "'", str25, "100");
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "100" + "'", str51, "100");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(crawlerConfiguration56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "result.csv" + "'", str66, "result.csv");
    }

    @Test
    public void test09734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09734");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "Response timed out");
        com.soulgalore.crawler.util.HeaderUtil headerUtil4 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil4.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) '4', strMap6, "com.soulgalore.crawler.http.socket.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 580, "com.soulgalore.crawler.auth", (long) (short) 1);
        org.jsoup.nodes.Document document13 = hTMLPageResponse12.getBody();
        java.lang.String str15 = hTMLPageResponse12.getHeaderValue("com.soulgalore.crawler.proxy");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray17 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, assetResponseArray17);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray20 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet21 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21, assetResponseArray20);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult23 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet24 = assetsVerificationResult23.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = assetsVerificationResult23.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet26 = assetsVerificationResult23.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet27 = null;
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray28 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, assetResponseArray28);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray31 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet32 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32, assetResponseArray31);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult34 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet35 = assetsVerificationResult34.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray36 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet37 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37, assetResponseArray36);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray39 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40, assetResponseArray39);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult42 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult43 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet35, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult44 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet27, assetResponseSet35);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult45 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet26, assetResponseSet35);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet46 = assetsVerificationResult45.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet47 = assetsVerificationResult45.getWorkingAssets();
        boolean boolean48 = hTMLPageResponse12.equals((java.lang.Object) assetResponseSet47);
        int int49 = hTMLPageResponse12.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str51 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL55 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray56 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL55 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet57 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet57, crawlerURLArray56);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet59 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray60 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet61 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet61, hTMLPageResponseArray60);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult63 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet57, hTMLPageResponseSet59, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet61);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet64 = crawlerResult63.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet65 = crawlerResult63.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet66 = crawlerResult63.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet67 = crawlerResult63.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet68 = crawlerResult63.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet69 = crawlerResult63.getNonWorkingUrls();
        java.lang.String str70 = crawlerResult63.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet71 = crawlerResult63.getNonWorkingUrls();
        java.lang.String str72 = crawlerResult63.getTheStartPoint();
        boolean boolean73 = hTMLPageResponse12.equals((java.lang.Object) crawlerResult63);
        org.junit.Assert.assertNotNull(headerUtil4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(document13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertNotNull(assetResponseArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(assetResponseArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(assetResponseSet24);
        org.junit.Assert.assertNotNull(assetResponseSet25);
        org.junit.Assert.assertNotNull(assetResponseSet26);
        org.junit.Assert.assertNotNull(assetResponseArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(assetResponseArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(assetResponseSet35);
        org.junit.Assert.assertNotNull(assetResponseArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(assetResponseArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(assetResponseSet46);
        org.junit.Assert.assertNotNull(assetResponseSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 52 + "'", int49 == 52);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "urls.txt" + "'", str51, "urls.txt");
        org.junit.Assert.assertNotNull(crawlerURLArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet64);
        org.junit.Assert.assertNotNull(crawlerURLSet65);
        org.junit.Assert.assertNotNull(crawlerURLSet66);
        org.junit.Assert.assertNotNull(crawlerURLSet67);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet68);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test09735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09735");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration5.getRequestHeadersMap();
        java.lang.String str8 = crawlerConfiguration5.getStartUrl();
        com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider14 = new com.soulgalore.crawler.guice.HttpClientProvider((int) (short) 100, (int) (byte) 1, (int) (byte) 100, "", "0");
        org.apache.http.client.HttpClient httpClient15 = httpClientProvider14.get();
        org.apache.http.client.HttpClient httpClient16 = httpClientProvider14.get();
        org.apache.http.client.HttpClient httpClient17 = httpClientProvider14.get();
        boolean boolean18 = crawlerConfiguration5.equals((java.lang.Object) httpClient17);
        boolean boolean19 = crawlerConfiguration5.isVerifyUrls();
        java.lang.String str20 = crawlerConfiguration5.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(httpClient15);
        org.junit.Assert.assertNotNull(httpClient16);
        org.junit.Assert.assertNotNull(httpClient17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test09736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09736");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray6 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL5 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet7 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet7, crawlerURLArray6);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray10 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet11 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet11, hTMLPageResponseArray10);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult13 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet7, hTMLPageResponseSet9, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet11);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult13.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult13.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult13.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray21 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL20 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet22, crawlerURLArray21);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet24 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray25 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet26, hTMLPageResponseArray25);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult28 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet22, hTMLPageResponseSet24, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet26);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet29 = crawlerResult28.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet30 = crawlerResult28.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet31 = crawlerResult28.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet32 = crawlerResult28.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL36 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray37 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL36 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet38 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet38, crawlerURLArray37);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet40 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray41 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet42 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet42, hTMLPageResponseArray41);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult44 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet38, hTMLPageResponseSet40, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet42);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet45 = crawlerResult44.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet46 = crawlerResult44.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet47 = crawlerResult44.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet48 = crawlerResult44.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet49 = crawlerResult44.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet50 = crawlerResult44.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult51 = new com.soulgalore.crawler.core.CrawlerResult("Malformed url", crawlerURLSet16, hTMLPageResponseSet32, hTMLPageResponseSet50);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet52 = crawlerResult51.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet53 = crawlerResult51.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet54 = crawlerResult51.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL58 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray59 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL58 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet60 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet60, crawlerURLArray59);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet62 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray63 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet64 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet64, hTMLPageResponseArray63);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult66 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet60, hTMLPageResponseSet62, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet64);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet67 = crawlerResult66.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet68 = crawlerResult66.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet69 = crawlerResult66.getUrls();
        java.lang.String str70 = crawlerResult66.getTheStartPoint();
        java.lang.String str71 = crawlerResult66.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet72 = crawlerResult66.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet73 = crawlerResult66.getNonWorkingUrls();
        java.lang.String str74 = crawlerResult66.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet75 = crawlerResult66.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL79 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray80 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL79 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet81 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet81, crawlerURLArray80);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet83 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray84 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet85 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet85, hTMLPageResponseArray84);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult87 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet81, hTMLPageResponseSet83, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet85);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet88 = crawlerResult87.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet89 = crawlerResult87.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet90 = crawlerResult87.getNonWorkingUrls();
        java.lang.String str91 = crawlerResult87.getTheStartPoint();
        java.lang.String str92 = crawlerResult87.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet93 = crawlerResult87.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult94 = new com.soulgalore.crawler.core.CrawlerResult("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv", crawlerURLSet54, hTMLPageResponseSet75, hTMLPageResponseSet93);
        java.lang.String str95 = crawlerResult94.getTheStartPoint();
        java.lang.String str96 = crawlerResult94.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet97 = crawlerResult94.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet98 = crawlerResult94.getVerifiedURLResponses();
        org.junit.Assert.assertNotNull(crawlerURLArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertNotNull(crawlerURLArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet29);
        org.junit.Assert.assertNotNull(crawlerURLSet30);
        org.junit.Assert.assertNotNull(crawlerURLSet31);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet32);
        org.junit.Assert.assertNotNull(crawlerURLArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet45);
        org.junit.Assert.assertNotNull(crawlerURLSet46);
        org.junit.Assert.assertNotNull(crawlerURLSet47);
        org.junit.Assert.assertNotNull(crawlerURLSet48);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet49);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet50);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet52);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet53);
        org.junit.Assert.assertNotNull(crawlerURLSet54);
        org.junit.Assert.assertNotNull(crawlerURLArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet67);
        org.junit.Assert.assertNotNull(crawlerURLSet68);
        org.junit.Assert.assertNotNull(crawlerURLSet69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet72);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet75);
        org.junit.Assert.assertNotNull(crawlerURLArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet88);
        org.junit.Assert.assertNotNull(crawlerURLSet89);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!" + "'", str91, "hi!");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "hi!" + "'", str92, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet93);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv" + "'", str95, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv" + "'", str96, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet97);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet98);
    }

    @Test
    public void test09737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09737");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:52", "AssetResponseCallable url:AssetResponseCallable url:Unknown error", (int) 'a', (long) 583);
        java.lang.String str5 = assetResponse4.getReferer();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AssetResponseCallable url:AssetResponseCallable url:Unknown error" + "'", str5, "AssetResponseCallable url:AssetResponseCallable url:Unknown error");
    }

    @Test
    public void test09738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09738");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        long long5 = assetResponse4.getFetchTime();
        long long6 = assetResponse4.getFetchTime();
        java.lang.String str7 = assetResponse4.getReferer();
        java.lang.String str8 = assetResponse4.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder9.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder9.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder15.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels(10);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setNotOnPath("result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setMaxLevels(0);
        boolean boolean26 = assetResponse4.equals((java.lang.Object) 0);
        int int27 = assetResponse4.getResponseCode();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 100L + "'", long5 == 100L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 100L + "'", long6 == 100L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str7, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str8, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test09739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09739");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("CrawlerURL url:10", "0", (int) (short) 10, (long) 10);
        int int5 = assetResponse4.getResponseCode();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
    }

    @Test
    public void test09740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09740");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getOnlyOnPath();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        com.soulgalore.crawler.util.StatusCode statusCode6 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN;
        boolean boolean7 = crawlerConfiguration3.equals((java.lang.Object) statusCode6);
        int int8 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str9 = crawlerConfiguration3.getNotOnPath();
        boolean boolean10 = crawlerConfiguration3.isVerifyUrls();
        java.lang.String str11 = crawlerConfiguration3.getOnlyOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder12.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder20.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder20.setMaxLevels(10);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder24.setNotOnPath("result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder24.setOnlyOnPath("HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration29 = builder28.build();
        java.lang.String str30 = crawlerConfiguration29.getRequestHeaders();
        int int31 = crawlerConfiguration29.getMaxLevels();
        java.lang.Class<?> wildcardClass32 = crawlerConfiguration29.getClass();
        boolean boolean33 = crawlerConfiguration3.equals((java.lang.Object) wildcardClass32);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + statusCode6 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN + "'", statusCode6.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(crawlerConfiguration29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test09741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09741");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher3 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil4 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil4.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = headerUtil4.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable10 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("", assetFetcher3, strMap8, "AssetResponseCallable url:1");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable12 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("HTMLPageResponseurl:hi!responseCode:-1encoding:errorurls.txt type:result.csv", assetFetcher1, strMap8, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = assetResponseCallable12.call();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerUtil4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
    }

    @Test
    public void test09742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09742");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("result.csv", "Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder3 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder3.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder3.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setVerifyUrls(false);
        java.lang.Class<?> wildcardClass10 = builder7.getClass();
        boolean boolean11 = crawlerURL2.equals((java.lang.Object) wildcardClass10);
        java.lang.String str12 = crawlerURL2.getReferer();
        java.lang.String str13 = crawlerURL2.toString();
        com.soulgalore.crawler.util.HeaderUtil headerUtil15 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = headerUtil15.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap19 = headerUtil15.createHeadersFromString("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse25 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 582, strMap19, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (short) 1, "0", (long) 10);
        org.jsoup.nodes.Document document26 = hTMLPageResponse25.getBody();
        java.lang.String str27 = hTMLPageResponse25.getResponseType();
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Malformed url" + "'", str12, "Malformed url");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CrawlerURL url:result.csv" + "'", str13, "CrawlerURL url:result.csv");
        org.junit.Assert.assertNotNull(headerUtil15);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(document26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "0" + "'", str27, "0");
    }

    @Test
    public void test09743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09743");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder10.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration12 = builder10.build();
        boolean boolean13 = crawlerConfiguration12.isVerifyUrls();
        boolean boolean14 = crawlerConfiguration12.isVerifyUrls();
        java.lang.String str15 = crawlerConfiguration12.getStartUrl();
        java.lang.String str16 = crawlerConfiguration12.getOnlyOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertNotNull(crawlerConfiguration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str15, "com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test09744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09744");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        int int19 = hTMLPageResponse12.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = hTMLPageResponse12.getPageUrl();
        java.lang.String str21 = crawlerURL20.getReferer();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL25 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "Response timed out");
        com.soulgalore.crawler.util.HeaderUtil headerUtil27 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = headerUtil27.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse35 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL25, (int) '4', strMap29, "com.soulgalore.crawler.http.socket.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 580, "com.soulgalore.crawler.auth", (long) (short) 1);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse41 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, (int) (byte) 1, strMap29, "AssetResponseCallable url:Malformed url", "urls.txt", (long) (byte) 10, "com.soulgalore.crawler.http.connection.timeout", (long) 97);
        java.lang.String str42 = crawlerURL20.getUrl();
        java.net.URI uRI43 = crawlerURL20.getUri();
        java.lang.String str44 = crawlerURL20.getHost();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL48 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean49 = crawlerURL48.isWrongSyntax();
        java.lang.String str50 = crawlerURL48.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap52 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse58 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL48, (int) 'a', strMap52, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str59 = hTMLPageResponse58.getEncoding();
        java.lang.String str60 = hTMLPageResponse58.getResponseType();
        java.lang.String str61 = hTMLPageResponse58.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL62 = hTMLPageResponse58.getPageUrl();
        java.net.URI uRI63 = crawlerURL62.getUri();
        java.net.URI uRI64 = crawlerURL62.getUri();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher67 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder68 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder70 = builder68.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder72 = builder68.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration73 = builder68.build();
        int int74 = crawlerConfiguration73.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil75 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean76 = crawlerConfiguration73.equals((java.lang.Object) headerUtil75);
        java.util.Map<java.lang.String, java.lang.String> strMap78 = headerUtil75.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap80 = headerUtil75.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable82 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", assetFetcher67, strMap80, "Unknown error");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse88 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL62, (int) (byte) -1, strMap80, "AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", "1", (long) 0, "com.soulgalore.crawler.http.connection.timeout", (long) 10);
        java.lang.String str89 = hTMLPageResponse88.getUrl();
        org.jsoup.nodes.Document document90 = hTMLPageResponse88.getBody();
        java.util.Map<java.lang.String, java.lang.String> strMap91 = hTMLPageResponse88.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse97 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, (int) (byte) -1, strMap91, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:AssetResponseCallable url:Unknown error type:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout", "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt", (long) (short) -1, "AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) 582);
        long long98 = hTMLPageResponse97.getFetchTime();
        java.lang.String str99 = hTMLPageResponse97.getEncoding();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 97 + "'", int19 == 97);
        org.junit.Assert.assertNotNull(crawlerURL20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "urls.txt" + "'", str21, "urls.txt");
        org.junit.Assert.assertNotNull(headerUtil27);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "com.soulgalore.crawler.auth" + "'", str42, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(uRI43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "urls.txt" + "'", str50, "urls.txt");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str59, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "com.soulgalore.crawler.auth" + "'", str61, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL62);
        org.junit.Assert.assertNull(uRI63);
        org.junit.Assert.assertNull(uRI64);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(crawlerConfiguration73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(headerUtil75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "com.soulgalore.crawler.auth" + "'", str89, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document90);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertTrue("'" + long98 + "' != '" + 582L + "'", long98 == 582L);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt" + "'", str99, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt");
    }

    @Test
    public void test09745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09745");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher3 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI9 = crawlerURL8.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean13 = crawlerURL12.isWrongSyntax();
        java.lang.String str14 = crawlerURL12.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse22 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL12, (int) 'a', strMap16, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str23 = hTMLPageResponse22.getUrl();
        boolean boolean24 = crawlerURL8.equals((java.lang.Object) str23);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher27 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil28 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = headerUtil28.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable32 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher27, strMap30, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse38 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL8, (int) (short) 100, strMap30, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse44 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (int) (short) -1, strMap30, "com.soulgalore.crawler.http.socket.timeout", "errorurls.txt", (long) 100, "result.csv", (long) (short) 0);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = hTMLPageResponse44.getResponseHeaders();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable47 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("com.soulgalore.crawler.nrofhttpthreads", assetFetcher3, strMap45, "HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable49 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:52 type:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", assetFetcher1, strMap45, "AssetResponseCallable url:AssetResponseCallable url:97");
        org.junit.Assert.assertNull(uRI9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "urls.txt" + "'", str14, "urls.txt");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.auth" + "'", str23, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(headerUtil28);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap45);
    }

    @Test
    public void test09746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09746");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        java.lang.String str2 = crawlerURL1.getUrl();
        boolean boolean3 = crawlerURL1.isWrongSyntax();
        com.soulgalore.crawler.util.HeaderUtil headerUtil5 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = headerUtil5.createHeadersFromString("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse13 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) 10, strMap7, "urls.txt", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (byte) 10, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", (-1L));
        java.lang.String str15 = hTMLPageResponse13.getHeaderValue("CrawlerURL url:1");
        java.lang.String str16 = hTMLPageResponse13.getUrl();
        java.lang.String str17 = hTMLPageResponse13.getResponseType();
        java.lang.String str18 = hTMLPageResponse13.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = hTMLPageResponse13.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = hTMLPageResponse13.getResponseHeaders();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(headerUtil5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url" + "'", str17, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(crawlerURL19);
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test09747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09747");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:100", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads", (int) (short) 100, (long) (byte) 100);
    }

    @Test
    public void test09748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09748");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.lang.String str30 = hTMLPageResponse29.getEncoding();
        java.lang.String str31 = hTMLPageResponse29.toString();
        int int32 = hTMLPageResponse29.getResponseCode();
        long long33 = hTMLPageResponse29.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL34 = hTMLPageResponse29.getPageUrl();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Malformed url" + "'", str30, "Malformed url");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1" + "'", str31, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(crawlerURL34);
    }

    @Test
    public void test09749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09749");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.lang.String str5 = crawlerURL2.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder9.build();
        java.lang.String str11 = crawlerConfiguration10.getStartUrl();
        int int12 = crawlerConfiguration10.getMaxLevels();
        int int13 = crawlerConfiguration10.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse20 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (byte) -1, strMap14, "100", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) (short) -1, "com.soulgalore.crawler.nrofhttpthreads", 0L);
        org.jsoup.nodes.Document document21 = hTMLPageResponse20.getBody();
        int int22 = hTMLPageResponse20.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL27 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray28 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL27 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet29 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet29, crawlerURLArray28);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet31 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray32 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet33 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet33, hTMLPageResponseArray32);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult35 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet29, hTMLPageResponseSet31, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet33);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet36 = crawlerResult35.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL40 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray41 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL40 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet42 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet42, crawlerURLArray41);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet44 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray45 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet46 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet46, hTMLPageResponseArray45);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult48 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet42, hTMLPageResponseSet44, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet46);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL52 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray53 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL52 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet54 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet54, crawlerURLArray53);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet56 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray57 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet58 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet58, hTMLPageResponseArray57);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult60 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet54, hTMLPageResponseSet56, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet58);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet61 = crawlerResult60.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet62 = crawlerResult60.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult63 = new com.soulgalore.crawler.core.CrawlerResult("Wrong content type", crawlerURLSet36, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet46, hTMLPageResponseSet62);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet64 = crawlerResult63.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet65 = crawlerResult63.getNonWorkingUrls();
        boolean boolean66 = hTMLPageResponse20.equals((java.lang.Object) crawlerResult63);
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "urls.txt" + "'", str5, "urls.txt");
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(document21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(crawlerURLArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet36);
        org.junit.Assert.assertNotNull(crawlerURLArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet61);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet62);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet64);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test09750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09750");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray4 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, crawlerURLArray4);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet7 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray8 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9, hTMLPageResponseArray8);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult11 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet5, hTMLPageResponseSet7, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet12 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet16 = crawlerResult11.getNonWorkingUrls();
        java.lang.String str17 = crawlerResult11.getTheStartPoint();
        java.lang.String str18 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet19 = crawlerResult11.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet20 = crawlerResult11.getUrls();
        java.lang.String str21 = crawlerResult11.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet22 = crawlerResult11.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet23 = crawlerResult11.getUrls();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet24 = crawlerResult11.getVerifiedURLResponses();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(crawlerURLArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet12);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet19);
        org.junit.Assert.assertNotNull(crawlerURLSet20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet22);
        org.junit.Assert.assertNotNull(crawlerURLSet23);
    }

    @Test
    public void test09751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09751");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        java.lang.String str18 = crawlerURL17.getReferer();
        java.lang.String str19 = crawlerURL17.getUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "urls.txt" + "'", str18, "urls.txt");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "com.soulgalore.crawler.auth" + "'", str19, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test09752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09752");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder9.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder9.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setMaxLevels((int) '4');
        boolean boolean15 = crawlerConfiguration5.equals((java.lang.Object) builder14);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder14.setOnlyOnPath("com.soulgalore.crawler.proxy");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setRequestHeaders("AssetResponseCallable url:errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setRequestHeaders("CrawlerURL url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration22 = builder21.build();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = crawlerConfiguration22.getRequestHeadersMap();
        boolean boolean24 = crawlerConfiguration22.isVerifyUrls();
        java.lang.String str25 = crawlerConfiguration22.getOnlyOnPath();
        java.lang.String str26 = crawlerConfiguration22.getRequestHeaders();
        java.lang.String str27 = crawlerConfiguration22.getStartUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(crawlerConfiguration22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "com.soulgalore.crawler.proxy" + "'", str25, "com.soulgalore.crawler.proxy");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "CrawlerURL url:result.csv" + "'", str26, "CrawlerURL url:result.csv");
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test09753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09753");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str7 = crawlerConfiguration5.getRequestHeaders();
        boolean boolean9 = crawlerConfiguration5.equals((java.lang.Object) 0.0d);
        boolean boolean10 = crawlerConfiguration5.isVerifyUrls();
        java.lang.String str11 = crawlerConfiguration5.getStartUrl();
        java.lang.String str12 = crawlerConfiguration5.getNotOnPath();
        java.lang.String str13 = crawlerConfiguration5.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test09754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09754");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet11 = assetsVerificationResult6.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet14 = assetsVerificationResult6.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray15 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet16 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet16, assetResponseArray15);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray18 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet19 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet19, assetResponseArray18);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult21 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet16, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet19);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = assetsVerificationResult21.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet23 = assetsVerificationResult21.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet24 = assetsVerificationResult21.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray25 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet26 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet26, assetResponseArray25);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray28 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, assetResponseArray28);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult31 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet26, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet32 = assetsVerificationResult31.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray33 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet34 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet34, assetResponseArray33);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray36 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet37 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37, assetResponseArray36);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult39 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet34, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = assetsVerificationResult39.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet41 = assetsVerificationResult39.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray42 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet43 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet43, assetResponseArray42);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray45 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet46 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet46, assetResponseArray45);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult48 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet43, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet46);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult49 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet41, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet43);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray50 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet51 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet51, assetResponseArray50);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray53 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet54 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet54, assetResponseArray53);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult56 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet51, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet54);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet57 = assetsVerificationResult56.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult58 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet41, assetResponseSet57);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet59 = assetsVerificationResult58.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet60 = assetsVerificationResult58.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray61 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet62 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet62, assetResponseArray61);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray64 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet65 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet65, assetResponseArray64);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult67 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet62, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet65);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet68 = assetsVerificationResult67.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray69 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet70 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet70, assetResponseArray69);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray72 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet73 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet73, assetResponseArray72);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult75 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet70, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet73);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult76 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet68, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet73);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet77 = assetsVerificationResult76.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet78 = assetsVerificationResult76.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray79 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet80 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet80, assetResponseArray79);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray82 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet83 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet83, assetResponseArray82);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult85 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet80, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet83);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet86 = assetsVerificationResult85.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult87 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet78, assetResponseSet86);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult88 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet60, assetResponseSet78);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet89 = assetsVerificationResult88.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult90 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet32, assetResponseSet89);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet91 = assetsVerificationResult90.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult92 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet24, assetResponseSet91);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet93 = assetsVerificationResult92.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult94 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet14, assetResponseSet93);
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseSet9);
        org.junit.Assert.assertNotNull(assetResponseSet10);
        org.junit.Assert.assertNotNull(assetResponseSet11);
        org.junit.Assert.assertNotNull(assetResponseSet12);
        org.junit.Assert.assertNotNull(assetResponseSet13);
        org.junit.Assert.assertNotNull(assetResponseSet14);
        org.junit.Assert.assertNotNull(assetResponseArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(assetResponseArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(assetResponseSet22);
        org.junit.Assert.assertNotNull(assetResponseSet23);
        org.junit.Assert.assertNotNull(assetResponseSet24);
        org.junit.Assert.assertNotNull(assetResponseArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(assetResponseArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(assetResponseSet32);
        org.junit.Assert.assertNotNull(assetResponseArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(assetResponseArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(assetResponseSet40);
        org.junit.Assert.assertNotNull(assetResponseSet41);
        org.junit.Assert.assertNotNull(assetResponseArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(assetResponseArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(assetResponseArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(assetResponseArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(assetResponseSet57);
        org.junit.Assert.assertNotNull(assetResponseSet59);
        org.junit.Assert.assertNotNull(assetResponseSet60);
        org.junit.Assert.assertNotNull(assetResponseArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(assetResponseArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(assetResponseSet68);
        org.junit.Assert.assertNotNull(assetResponseArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(assetResponseArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(assetResponseSet77);
        org.junit.Assert.assertNotNull(assetResponseSet78);
        org.junit.Assert.assertNotNull(assetResponseArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(assetResponseArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(assetResponseSet86);
        org.junit.Assert.assertNotNull(assetResponseSet89);
        org.junit.Assert.assertNotNull(assetResponseSet91);
        org.junit.Assert.assertNotNull(assetResponseSet93);
    }

    @Test
    public void test09755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09755");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:CrawlerURL url:Response timed out");
    }

    @Test
    public void test09756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09756");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("52");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder2.setOnlyOnPath("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setStartUrl("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder6.setStartUrl("1");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration13 = builder6.build();
        java.lang.String str14 = crawlerConfiguration13.getStartUrl();
        java.lang.String str15 = crawlerConfiguration13.getStartUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(crawlerConfiguration13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1" + "'", str14, "1");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1" + "'", str15, "1");
    }

    @Test
    public void test09757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09757");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setMaxLevels((int) '4');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setMaxLevels(583);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setOnlyOnPath("Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration9 = builder8.build();
        java.lang.String str10 = crawlerConfiguration9.getStartUrl();
        boolean boolean11 = crawlerConfiguration9.isVerifyUrls();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(crawlerConfiguration9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test09758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09758");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url", "", (int) (short) -1, 0L);
        int int5 = assetResponse4.getResponseCode();
        long long6 = assetResponse4.getFetchTime();
        long long7 = assetResponse4.getFetchTime();
        int int8 = assetResponse4.getResponseCode();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test09759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09759");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder13.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder13.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setVerifyUrls(false);
        boolean boolean26 = hTMLPageResponse12.equals((java.lang.Object) builder25);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder25.setOnlyOnPath("HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder25.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder25.setMaxLevels((int) ' ');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder25.setOnlyOnPath("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder25.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration37 = builder36.build();
        int int38 = crawlerConfiguration37.getMaxLevels();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(crawlerConfiguration37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 32 + "'", int38 == 32);
    }

    @Test
    public void test09760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09760");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        java.lang.String str18 = crawlerURL17.getUrl();
        java.lang.String str19 = crawlerURL17.getHost();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration24 = builder23.build();
        java.lang.String str25 = crawlerConfiguration24.getOnlyOnPath();
        boolean boolean26 = crawlerConfiguration24.isVerifyUrls();
        int int27 = crawlerConfiguration24.getMaxLevels();
        int int28 = crawlerConfiguration24.getMaxLevels();
        boolean boolean29 = crawlerConfiguration24.isVerifyUrls();
        boolean boolean30 = crawlerConfiguration24.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = crawlerConfiguration24.getRequestHeadersMap();
        java.lang.String str32 = crawlerConfiguration24.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = crawlerConfiguration24.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse39 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL17, 580, strMap33, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth", "CrawlerURL url:errorassets.csv", (long) (short) -1, "HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", 580L);
        java.net.URI uRI40 = crawlerURL17.getUri();
        boolean boolean41 = crawlerURL17.isWrongSyntax();
        java.lang.String str42 = crawlerURL17.getReferer();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.auth" + "'", str18, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(crawlerConfiguration24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(uRI40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "urls.txt" + "'", str42, "urls.txt");
    }

    @Test
    public void test09761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09761");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:Response timed out", "result.csv");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.toString();
        boolean boolean5 = crawlerURL2.isWrongSyntax();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CrawlerURL url:CrawlerURL url:Response timed out" + "'", str4, "CrawlerURL url:CrawlerURL url:Response timed out");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test09762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09762");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder13.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder13.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setVerifyUrls(false);
        boolean boolean26 = hTMLPageResponse12.equals((java.lang.Object) builder25);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder25.setOnlyOnPath("HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder25.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder25.setMaxLevels((int) ' ');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder25.setRequestHeaders("CrawlerURL url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder25.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder36.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder38.setMaxLevels(583);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = builder40.setOnlyOnPath("AssetResponseCallable url:97");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder44 = builder42.setOnlyOnPath("CrawlerURL url:CrawlerURL url:-1");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
    }

    @Test
    public void test09763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09763");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.lang.String str2 = crawlerURL1.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder3 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder3.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder3.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration8 = builder3.build();
        int int9 = crawlerConfiguration8.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil10 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean11 = crawlerConfiguration8.equals((java.lang.Object) headerUtil10);
        java.util.Map<java.lang.String, java.lang.String> strMap13 = headerUtil10.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap15 = headerUtil10.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        boolean boolean16 = crawlerURL1.equals((java.lang.Object) headerUtil10);
        boolean boolean17 = crawlerURL1.isWrongSyntax();
        java.lang.String str18 = crawlerURL1.getReferer();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(crawlerConfiguration8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(headerUtil10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test09764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09764");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        java.net.URI uRI4 = crawlerURL2.getUri();
        boolean boolean6 = crawlerURL2.equals((java.lang.Object) "10");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL10 = new com.soulgalore.crawler.core.CrawlerURL("Malformed url", "com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.util.HeaderUtil headerUtil12 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil12.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse20 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL10, 583, strMap14, "Redirected to new domain", "result.csv", 0L, "result.csv", (long) (short) 100);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse26 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (byte) 0, strMap14, "AssetResponseCallable url:Malformed url", "AssetResponseCallable url:Malformed url", (long) (byte) -1, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", 581L);
        int int27 = hTMLPageResponse26.getResponseCode();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse32 = new com.soulgalore.crawler.core.assets.AssetResponse("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url", "CrawlerURL url:10", (int) '#', (long) 581);
        java.lang.String str33 = assetResponse32.getUrl();
        boolean boolean34 = hTMLPageResponse26.equals((java.lang.Object) str33);
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertNull(uRI4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(headerUtil12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url" + "'", str33, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test09765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09765");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) builder14);
        long long16 = hTMLPageResponse12.getFetchTime();
        java.lang.String str17 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        org.jsoup.nodes.Document document19 = hTMLPageResponse12.getBody();
        int int20 = hTMLPageResponse12.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str22 = hTMLPageResponse12.getResponseType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str17, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertNull(document19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 97 + "'", int20 == 97);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
    }

    @Test
    public void test09766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09766");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration1 = builder0.build();
        java.lang.String str2 = crawlerConfiguration1.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(crawlerConfiguration1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
    }

    @Test
    public void test09767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09767");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher3 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder6.build();
        java.lang.String str8 = crawlerConfiguration7.getStartUrl();
        java.lang.String str9 = crawlerConfiguration7.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = crawlerConfiguration7.getRequestHeadersMap();
        java.lang.String str11 = crawlerConfiguration7.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder12.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder18.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration23 = builder22.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration24 = builder22.build();
        boolean boolean25 = crawlerConfiguration7.equals((java.lang.Object) crawlerConfiguration24);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder26.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder26.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration31 = builder26.build();
        int int32 = crawlerConfiguration31.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil33 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean34 = crawlerConfiguration31.equals((java.lang.Object) headerUtil33);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = headerUtil33.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap38 = headerUtil33.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.util.Map<java.lang.String, java.lang.String> strMap40 = headerUtil33.createHeadersFromString("AssetResponseCallable url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap42 = headerUtil33.createHeadersFromString("CrawlerURL url:urls.txt");
        java.util.Map<java.lang.String, java.lang.String> strMap44 = headerUtil33.createHeadersFromString("AssetResponseCallable url:100");
        boolean boolean45 = crawlerConfiguration24.equals((java.lang.Object) headerUtil33);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = headerUtil33.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable49 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:0 type:", assetFetcher3, strMap47, "");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable51 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("errorassets.csv", assetFetcher1, strMap47, "com.soulgalore.crawler.auth");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.assets.AssetResponse assetResponse52 = assetResponseCallable51.call();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(crawlerConfiguration23);
        org.junit.Assert.assertNotNull(crawlerConfiguration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(crawlerConfiguration31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(headerUtil33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strMap47);
    }

    @Test
    public void test09768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09768");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(false);
        java.lang.Class<?> wildcardClass13 = builder12.getClass();
        boolean boolean14 = crawlerConfiguration5.equals((java.lang.Object) wildcardClass13);
        java.lang.String str15 = crawlerConfiguration5.getRequestHeaders();
        com.soulgalore.crawler.util.HeaderUtil headerUtil16 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = headerUtil16.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap20 = headerUtil16.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap22 = headerUtil16.createHeadersFromString("AssetResponseCallable url:-1");
        boolean boolean23 = crawlerConfiguration5.equals((java.lang.Object) headerUtil16);
        java.lang.String str24 = crawlerConfiguration5.getOnlyOnPath();
        com.soulgalore.crawler.util.HeaderUtil headerUtil25 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = headerUtil25.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap29 = headerUtil25.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap31 = headerUtil25.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt");
        java.util.Map<java.lang.String, java.lang.String> strMap33 = headerUtil25.createHeadersFromString("AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.auth");
        java.util.Map<java.lang.String, java.lang.String> strMap35 = headerUtil25.createHeadersFromString("CrawlerURL url:CrawlerURL url:35");
        java.util.Map<java.lang.String, java.lang.String> strMap37 = headerUtil25.createHeadersFromString("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        boolean boolean38 = crawlerConfiguration5.equals((java.lang.Object) "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(headerUtil16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(headerUtil25);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test09769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09769");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        int int5 = crawlerConfiguration3.getMaxLevels();
        int int6 = crawlerConfiguration3.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str8 = crawlerConfiguration3.getStartUrl();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int14 = assetResponse13.getResponseCode();
        int int15 = assetResponse13.getResponseCode();
        long long16 = assetResponse13.getFetchTime();
        long long17 = assetResponse13.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse22 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean23 = assetResponse13.equals((java.lang.Object) 100L);
        java.lang.String str24 = assetResponse13.getReferer();
        java.lang.String str25 = assetResponse13.getReferer();
        long long26 = assetResponse13.getFetchTime();
        boolean boolean27 = crawlerConfiguration3.equals((java.lang.Object) assetResponse13);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL30 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean31 = crawlerURL30.isWrongSyntax();
        java.lang.String str32 = crawlerURL30.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse40 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL30, (int) 'a', strMap34, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str41 = hTMLPageResponse40.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL42 = hTMLPageResponse40.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = hTMLPageResponse40.getResponseHeaders();
        org.jsoup.nodes.Document document44 = hTMLPageResponse40.getBody();
        boolean boolean45 = assetResponse13.equals((java.lang.Object) document44);
        long long46 = assetResponse13.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL49 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean50 = crawlerURL49.isWrongSyntax();
        java.lang.String str51 = crawlerURL49.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse59 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL49, (int) 'a', strMap53, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str60 = hTMLPageResponse59.toString();
        java.lang.String str61 = hTMLPageResponse59.getResponseType();
        java.lang.String str62 = hTMLPageResponse59.getEncoding();
        boolean boolean63 = assetResponse13.equals((java.lang.Object) hTMLPageResponse59);
        java.lang.String str64 = hTMLPageResponse59.toString();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "100" + "'", str24, "100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "100" + "'", str25, "100");
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "urls.txt" + "'", str32, "urls.txt");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str41, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(document44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "urls.txt" + "'", str51, "urls.txt");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str60, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str62, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str64, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
    }

    @Test
    public void test09770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09770");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.lang.String str5 = crawlerURL2.getHost();
        java.lang.String str6 = crawlerURL2.getHost();
        java.net.URI uRI7 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration12 = builder11.build();
        java.lang.String str13 = crawlerConfiguration12.getStartUrl();
        int int14 = crawlerConfiguration12.getMaxLevels();
        int int15 = crawlerConfiguration12.getMaxLevels();
        java.lang.String str16 = crawlerConfiguration12.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration12.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) '4', strMap17, "com.soulgalore.crawler.http.socket.timeout", "Response timed out", (long) '#', "Malformed url", 1L);
        java.lang.String str24 = hTMLPageResponse23.getResponseType();
        java.lang.String str26 = hTMLPageResponse23.getHeaderValue("com.soulgalore.crawler.nrofhttpthreads");
        java.lang.String str27 = hTMLPageResponse23.getUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(uRI7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(crawlerConfiguration12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Malformed url" + "'", str24, "Malformed url");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "com.soulgalore.crawler.auth" + "'", str27, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test09771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09771");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        long long6 = assetResponse4.getFetchTime();
        java.lang.Class<?> wildcardClass7 = assetResponse4.getClass();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test09772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09772");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setOnlyOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setOnlyOnPath("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder18.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration23 = builder18.build();
        java.lang.String str24 = crawlerConfiguration23.getRequestHeaders();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(crawlerConfiguration23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
    }

    @Test
    public void test09773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09773");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder6.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder6.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder6.setStartUrl("HTMLPageResponseurl:hi!responseCode:52encoding:urls.txt type:CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
    }

    @Test
    public void test09774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09774");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider((int) '4', (int) (short) 10, (int) (short) 10, "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:0encoding:Malformed url type:Unknown error");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"HTMLPageResponseurl\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09775");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int13 = hTMLPageResponse12.getResponseCode();
        java.lang.String str14 = hTMLPageResponse12.getResponseType();
        java.lang.String str15 = hTMLPageResponse12.toString();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        java.lang.String str17 = hTMLPageResponse12.toString();
        org.jsoup.nodes.Document document18 = hTMLPageResponse12.getBody();
        java.lang.String str19 = hTMLPageResponse12.getUrl();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = hTMLPageResponse12.getHeaderValue("Malformed url");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str15, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str17, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNull(document18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "com.soulgalore.crawler.auth" + "'", str19, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test09776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09776");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("CrawlerURL url:hi!", "100", 0, (long) 97);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI7 = crawlerURL6.getUri();
        java.lang.String str8 = crawlerURL6.getUrl();
        java.lang.String str9 = crawlerURL6.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder11.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration16 = builder11.build();
        java.lang.String str17 = crawlerConfiguration16.getRequestHeaders();
        java.lang.String str18 = crawlerConfiguration16.getRequestHeaders();
        boolean boolean20 = crawlerConfiguration16.equals((java.lang.Object) 0.0d);
        boolean boolean21 = crawlerConfiguration16.isVerifyUrls();
        java.lang.String str22 = crawlerConfiguration16.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = crawlerConfiguration16.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL6, 0, strMap23, "10", "Unknown error", (long) (short) -1, "AssetResponseCallable url:Malformed url", (long) 97);
        java.lang.String str31 = hTMLPageResponse29.getHeaderValue("errorassets.csv");
        java.lang.String str33 = hTMLPageResponse29.getHeaderValue("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        boolean boolean34 = assetResponse4.equals((java.lang.Object) hTMLPageResponse29);
        java.lang.String str35 = hTMLPageResponse29.getEncoding();
        java.lang.String str36 = hTMLPageResponse29.getResponseType();
        org.junit.Assert.assertNull(uRI7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str8, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str9, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(crawlerConfiguration16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Unknown error" + "'", str35, "Unknown error");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "AssetResponseCallable url:Malformed url" + "'", str36, "AssetResponseCallable url:Malformed url");
    }

    @Test
    public void test09777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09777");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("32", "com.soulgalore.crawler.http.socket.timeout", (int) '#', (long) 10);
        java.lang.String str5 = assetResponse4.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder6.build();
        int int12 = crawlerConfiguration11.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil13 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean14 = crawlerConfiguration11.equals((java.lang.Object) headerUtil13);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = headerUtil13.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap18 = headerUtil13.createHeadersFromString("CrawlerURL url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap20 = headerUtil13.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap22 = headerUtil13.createHeadersFromString("");
        boolean boolean23 = assetResponse4.equals((java.lang.Object) headerUtil13);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = headerUtil13.createHeadersFromString("AssetResponseCallable url:com.soulgalore.crawler.nrofhttpthreads");
        java.util.Map<java.lang.String, java.lang.String> strMap27 = headerUtil13.createHeadersFromString("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.util.Map<java.lang.String, java.lang.String> strMap29 = headerUtil13.createHeadersFromString("CrawlerURL url:CrawlerURL url:HTMLPageResponseurl:CrawlerURL url:com.soulgalore.crawler.authresponseCode:0encoding:CrawlerURL url:result.csv type:-1");
        java.util.Map<java.lang.String, java.lang.String> strMap31 = headerUtil13.createHeadersFromString("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap33 = headerUtil13.createHeadersFromString("CrawlerURL url:result.csv");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "32" + "'", str5, "32");
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(headerUtil13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap33);
    }

    @Test
    public void test09778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09778");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setMaxLevels(10);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setNotOnPath("result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setStartUrl("CrawlerURL url:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setNotOnPath("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:32encoding:hi! type:97");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder16.setVerifyUrls(true);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test09779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09779");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getOnlyOnPath();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        int int6 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        java.lang.Class<?> wildcardClass8 = crawlerConfiguration3.getClass();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test09780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09780");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder4.setOnlyOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setMaxLevels((int) (byte) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setStartUrl("Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setVerifyUrls(false);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test09781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09781");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setMaxLevels((int) (short) 10);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder4.build();
        boolean boolean8 = crawlerConfiguration7.isVerifyUrls();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test09782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09782");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider((int) (short) 10, (int) (short) 1, 52, "CrawlerURL url:1", "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:CrawlerURL url:1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09783");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration5.getRequestHeadersMap();
        boolean boolean8 = crawlerConfiguration5.isVerifyUrls();
        java.lang.String str9 = crawlerConfiguration5.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = crawlerConfiguration5.getRequestHeadersMap();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test09784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09784");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        boolean boolean4 = crawlerConfiguration3.isVerifyUrls();
        java.lang.String str5 = crawlerConfiguration3.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = crawlerConfiguration3.getRequestHeadersMap();
        int int7 = crawlerConfiguration3.getMaxLevels();
        java.lang.Class<?> wildcardClass8 = crawlerConfiguration3.getClass();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test09785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09785");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setRequestHeaders("AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration13 = builder10.build();
        boolean boolean14 = crawlerConfiguration13.isVerifyUrls();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(crawlerConfiguration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test09786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09786");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setMaxLevels((int) '4');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setMaxLevels(583);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setOnlyOnPath("Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration9 = builder8.build();
        java.lang.String str10 = crawlerConfiguration9.getStartUrl();
        java.lang.String str11 = crawlerConfiguration9.getOnlyOnPath();
        boolean boolean12 = crawlerConfiguration9.isVerifyUrls();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(crawlerConfiguration9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Unknown error" + "'", str11, "Unknown error");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test09787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09787");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        int int5 = crawlerConfiguration3.getMaxLevels();
        int int6 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        int int8 = crawlerConfiguration3.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder9.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration14 = builder9.build();
        int int15 = crawlerConfiguration14.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil16 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean17 = crawlerConfiguration14.equals((java.lang.Object) headerUtil16);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = headerUtil16.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap21 = headerUtil16.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.util.Map<java.lang.String, java.lang.String> strMap23 = headerUtil16.createHeadersFromString("AssetResponseCallable url:result.csv");
        boolean boolean24 = crawlerConfiguration3.equals((java.lang.Object) strMap23);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = crawlerConfiguration3.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str27 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str28 = crawlerConfiguration3.getRequestHeaders();
        java.lang.String str29 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str30 = crawlerConfiguration3.getStartUrl();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(crawlerConfiguration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(headerUtil16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test09788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09788");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setRequestHeaders("CrawlerURL url:errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder10.setRequestHeaders("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test09789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09789");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.lang.String str30 = hTMLPageResponse29.getEncoding();
        java.lang.String str32 = hTMLPageResponse29.getHeaderValue("CrawlerURL url:hi!");
        java.lang.String str33 = hTMLPageResponse29.getUrl();
        org.jsoup.nodes.Document document34 = hTMLPageResponse29.getBody();
        long long35 = hTMLPageResponse29.getFetchTime();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Malformed url" + "'", str30, "Malformed url");
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "com.soulgalore.crawler.auth" + "'", str33, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
    }

    @Test
    public void test09790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09790");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = crawlerConfiguration3.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray6 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet7, assetResponseArray6);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray9 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, assetResponseArray9);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult12 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet7, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = assetsVerificationResult12.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray14 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet15 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15, assetResponseArray14);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray17 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, assetResponseArray17);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult20 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult21 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet13, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet22 = assetsVerificationResult21.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray23 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet24 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet24, assetResponseArray23);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray26 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet27 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet27, assetResponseArray26);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult29 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet24, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet27);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet30 = assetsVerificationResult29.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet31 = assetsVerificationResult29.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray32 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet33 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33, assetResponseArray32);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray35 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet36 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet36, assetResponseArray35);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult38 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet36);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult39 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet31, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult40 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet22, assetResponseSet31);
        boolean boolean41 = crawlerConfiguration3.equals((java.lang.Object) assetsVerificationResult40);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet42 = assetsVerificationResult40.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet43 = assetsVerificationResult40.getWorkingAssets();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(assetResponseArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(assetResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(assetResponseSet13);
        org.junit.Assert.assertNotNull(assetResponseArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(assetResponseArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(assetResponseSet22);
        org.junit.Assert.assertNotNull(assetResponseArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(assetResponseArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(assetResponseSet30);
        org.junit.Assert.assertNotNull(assetResponseSet31);
        org.junit.Assert.assertNotNull(assetResponseArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(assetResponseArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(assetResponseSet42);
        org.junit.Assert.assertNotNull(assetResponseSet43);
    }

    @Test
    public void test09791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09791");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setMaxLevels(52);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test09792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09792");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray21 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL20 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet22 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet22, crawlerURLArray21);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet24 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray25 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet26, hTMLPageResponseArray25);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult28 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet22, hTMLPageResponseSet24, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet26);
        java.lang.String str29 = crawlerResult28.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet30 = crawlerResult28.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet31 = crawlerResult28.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL35 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean36 = crawlerURL35.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean40 = crawlerURL39.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL43 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI44 = crawlerURL43.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray45 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL35, crawlerURL39, crawlerURL43 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet46 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet46, crawlerURLArray45);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray48 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet49 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet49, hTMLPageResponseArray48);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL54 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray55 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL54 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet56 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet56, crawlerURLArray55);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet58 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray59 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet60 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet60, hTMLPageResponseArray59);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult62 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet56, hTMLPageResponseSet58, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet60);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult63 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet46, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet49, hTMLPageResponseSet58);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet64 = crawlerResult63.getVerifiedURLResponses();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult65 = new com.soulgalore.crawler.core.CrawlerResult("errorurls.txt", crawlerURLSet16, hTMLPageResponseSet31, hTMLPageResponseSet64);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet66 = crawlerResult65.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet67 = crawlerResult65.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet68 = crawlerResult65.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet69 = crawlerResult65.getUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertNotNull(crawlerURLArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet30);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(uRI44);
        org.junit.Assert.assertNotNull(crawlerURLArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet64);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet66);
        org.junit.Assert.assertNotNull(crawlerURLSet67);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet68);
        org.junit.Assert.assertNotNull(crawlerURLSet69);
    }

    @Test
    public void test09793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09793");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("result.csv", "CrawlerURL url:urls.txt");
        java.lang.String str3 = crawlerURL2.getReferer();
        java.net.URI uRI4 = crawlerURL2.getUri();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "CrawlerURL url:urls.txt" + "'", str3, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertNull(uRI4);
    }

    @Test
    public void test09794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09794");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        long long17 = hTMLPageResponse12.getFetchTime();
        java.lang.String str18 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = hTMLPageResponse12.getPageUrl();
        org.jsoup.nodes.Document document20 = hTMLPageResponse12.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = hTMLPageResponse12.getPageUrl();
        java.lang.String str22 = hTMLPageResponse12.getUrl();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = hTMLPageResponse12.getHeaderValue("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 100L + "'", long17 == 100L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str18, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL19);
        org.junit.Assert.assertNull(document20);
        org.junit.Assert.assertNotNull(crawlerURL21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "com.soulgalore.crawler.auth" + "'", str22, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test09795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09795");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder2.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder10.build();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration11.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable14 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("urls.txt", assetFetcher1, strMap12, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.lang.String str15 = assetResponseCallable14.toString();
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.assets.AssetResponse assetResponse16 = assetResponseCallable14.call();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AssetResponseCallable url:urls.txt" + "'", str15, "AssetResponseCallable url:urls.txt");
    }

    @Test
    public void test09796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09796");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setMaxLevels((int) '#');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration13 = builder10.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder20.setNotOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder20.setMaxLevels((int) (byte) -1);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder24.setOnlyOnPath("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder24.setOnlyOnPath("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder28.setStartUrl("Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder30.setVerifyUrls(false);
        boolean boolean33 = crawlerConfiguration13.equals((java.lang.Object) false);
        int int34 = crawlerConfiguration13.getMaxLevels();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(crawlerConfiguration13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 35 + "'", int34 == 35);
    }

    @Test
    public void test09797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09797");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setOnlyOnPath("CrawlerURL url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setNotOnPath("");
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test09798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09798");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean14 = assetResponse4.equals((java.lang.Object) 100L);
        java.lang.String str15 = assetResponse4.getReferer();
        long long16 = assetResponse4.getFetchTime();
        java.lang.String str17 = assetResponse4.getReferer();
        long long18 = assetResponse4.getFetchTime();
        java.lang.String str19 = assetResponse4.getUrl();
        java.lang.String str20 = assetResponse4.getReferer();
        long long21 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.guice.ExecutorServiceProvider executorServiceProvider23 = new com.soulgalore.crawler.guice.ExecutorServiceProvider((int) (byte) 100);
        boolean boolean24 = assetResponse4.equals((java.lang.Object) executorServiceProvider23);
        int int25 = assetResponse4.getResponseCode();
        int int26 = assetResponse4.getResponseCode();
        java.lang.String str27 = assetResponse4.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder28.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder28.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration33 = builder28.build();
        int int34 = crawlerConfiguration33.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil35 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean36 = crawlerConfiguration33.equals((java.lang.Object) headerUtil35);
        java.util.Map<java.lang.String, java.lang.String> strMap38 = headerUtil35.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap40 = headerUtil35.createHeadersFromString("CrawlerURL url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap42 = headerUtil35.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap44 = headerUtil35.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap46 = headerUtil35.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap48 = headerUtil35.createHeadersFromString("CrawlerURL url:35");
        java.util.Map<java.lang.String, java.lang.String> strMap50 = headerUtil35.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads");
        boolean boolean51 = assetResponse4.equals((java.lang.Object) headerUtil35);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "100" + "'", str15, "100");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "100" + "'", str17, "100");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "100" + "'", str20, "100");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(crawlerConfiguration33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(headerUtil35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test09799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09799");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setOnlyOnPath("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setNotOnPath("com.soulgalore.crawler.http.socket.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder6.build();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
    }

    @Test
    public void test09800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09800");
        com.soulgalore.crawler.util.StatusCode statusCode0 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT;
        int int1 = statusCode0.getCode();
        java.lang.String str2 = statusCode0.getFriendlyName();
        java.lang.String str3 = statusCode0.getFriendlyName();
        int int4 = statusCode0.getCode();
        java.lang.String str5 = statusCode0.getFriendlyName();
        java.lang.String str6 = statusCode0.getFriendlyName();
        int int7 = statusCode0.getCode();
        org.junit.Assert.assertTrue("'" + statusCode0 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT + "'", statusCode0.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 580 + "'", int1 == 580);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Response timed out" + "'", str2, "Response timed out");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Response timed out" + "'", str3, "Response timed out");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 580 + "'", int4 == 580);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Response timed out" + "'", str5, "Response timed out");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Response timed out" + "'", str6, "Response timed out");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 580 + "'", int7 == 580);
    }

    @Test
    public void test09801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09801");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        java.net.URI uRI4 = crawlerURL2.getUri();
        java.net.URI uRI5 = crawlerURL2.getUri();
        java.lang.String str6 = crawlerURL2.getUrl();
        java.lang.String str7 = crawlerURL2.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL10 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI11 = crawlerURL10.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean15 = crawlerURL14.isWrongSyntax();
        java.lang.String str16 = crawlerURL14.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse24 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL14, (int) 'a', strMap18, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str25 = hTMLPageResponse24.getUrl();
        boolean boolean26 = crawlerURL10.equals((java.lang.Object) str25);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher29 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil30 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = headerUtil30.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable34 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher29, strMap32, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse40 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL10, (int) (short) 100, strMap32, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        org.jsoup.nodes.Document document41 = hTMLPageResponse40.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL42 = hTMLPageResponse40.getPageUrl();
        java.lang.String str44 = hTMLPageResponse40.getHeaderValue("errorassets.csv");
        java.lang.String str45 = hTMLPageResponse40.toString();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = hTMLPageResponse40.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse52 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (byte) -1, strMap46, "Wrong content type", "AssetResponseCallable url:CrawlerURL url:100", 581L, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:32encoding:hi! type:97", 583L);
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertNull(uRI4);
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "com.soulgalore.crawler.auth" + "'", str6, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "com.soulgalore.crawler.auth" + "'", str7, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(uRI11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "urls.txt" + "'", str16, "urls.txt");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "com.soulgalore.crawler.auth" + "'", str25, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(headerUtil30);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(document41);
        org.junit.Assert.assertNotNull(crawlerURL42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt" + "'", str45, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt");
        org.junit.Assert.assertNotNull(strMap46);
    }

    @Test
    public void test09802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09802");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setOnlyOnPath("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setOnlyOnPath("CrawlerURL url:com.soulgalore.crawler.proxy");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder14.setVerifyUrls(false);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test09803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09803");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setMaxLevels((int) '4');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setNotOnPath("com.soulgalore.crawler.proxy");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration9 = builder4.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder4.setRequestHeaders("HTMLPageResponseurl:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1responseCode:581encoding:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:100");
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(crawlerConfiguration9);
        org.junit.Assert.assertNotNull(builder11);
    }

    @Test
    public void test09804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09804");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet16 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet17 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray23 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL22 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet24 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, crawlerURLArray23);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray27 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet28 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28, hTMLPageResponseArray27);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult30 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, hTMLPageResponseSet26, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet31 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet32 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet33 = crawlerResult30.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL37 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray38 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL37 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet39 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet39, crawlerURLArray38);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet41 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray42 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet43 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet43, hTMLPageResponseArray42);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult45 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet39, hTMLPageResponseSet41, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet43);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet46 = crawlerResult45.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet47 = crawlerResult45.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet48 = crawlerResult45.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet49 = crawlerResult45.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL53 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray54 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL53 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet55 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet55, crawlerURLArray54);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet57 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray58 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet59 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet59, hTMLPageResponseArray58);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult61 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet55, hTMLPageResponseSet57, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet59);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet62 = crawlerResult61.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet63 = crawlerResult61.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet64 = crawlerResult61.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet65 = crawlerResult61.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet66 = crawlerResult61.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet67 = crawlerResult61.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult68 = new com.soulgalore.crawler.core.CrawlerResult("Malformed url", crawlerURLSet33, hTMLPageResponseSet49, hTMLPageResponseSet67);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL72 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray73 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL72 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet74 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet74, crawlerURLArray73);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet76 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray77 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet78 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet78, hTMLPageResponseArray77);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult80 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet74, hTMLPageResponseSet76, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet78);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet81 = crawlerResult80.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult82 = new com.soulgalore.crawler.core.CrawlerResult("35", crawlerURLSet17, hTMLPageResponseSet49, hTMLPageResponseSet81);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet83 = crawlerResult82.getVerifiedURLResponses();
        java.lang.String str84 = crawlerResult82.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet85 = crawlerResult82.getVerifiedURLResponses();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet16);
        org.junit.Assert.assertNotNull(crawlerURLSet17);
        org.junit.Assert.assertNotNull(crawlerURLArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet31);
        org.junit.Assert.assertNotNull(crawlerURLSet32);
        org.junit.Assert.assertNotNull(crawlerURLSet33);
        org.junit.Assert.assertNotNull(crawlerURLArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet46);
        org.junit.Assert.assertNotNull(crawlerURLSet47);
        org.junit.Assert.assertNotNull(crawlerURLSet48);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet49);
        org.junit.Assert.assertNotNull(crawlerURLArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet62);
        org.junit.Assert.assertNotNull(crawlerURLSet63);
        org.junit.Assert.assertNotNull(crawlerURLSet64);
        org.junit.Assert.assertNotNull(crawlerURLSet65);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet66);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet67);
        org.junit.Assert.assertNotNull(crawlerURLArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet81);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "35" + "'", str84, "35");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet85);
    }

    @Test
    public void test09805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09805");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        java.lang.String str3 = crawlerURL1.getUrl();
        java.lang.String str4 = crawlerURL1.getHost();
        java.lang.String str5 = crawlerURL1.getUrl();
        java.lang.String str6 = crawlerURL1.getHost();
        boolean boolean7 = crawlerURL1.isWrongSyntax();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int14 = assetResponse13.getResponseCode();
        int int15 = assetResponse13.getResponseCode();
        long long16 = assetResponse13.getFetchTime();
        long long17 = assetResponse13.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse22 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean23 = assetResponse13.equals((java.lang.Object) 100L);
        java.lang.String str24 = assetResponse13.getReferer();
        java.lang.String str25 = assetResponse13.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder26.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder26.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder26.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder32.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder36.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder38.setVerifyUrls(false);
        boolean boolean41 = assetResponse13.equals((java.lang.Object) false);
        int int42 = assetResponse13.getResponseCode();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse47 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int48 = assetResponse47.getResponseCode();
        long long49 = assetResponse47.getFetchTime();
        java.lang.String str50 = assetResponse47.getUrl();
        java.lang.String str51 = assetResponse47.getReferer();
        int int52 = assetResponse47.getResponseCode();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder53 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder55 = builder53.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration56 = builder53.build();
        boolean boolean57 = assetResponse47.equals((java.lang.Object) crawlerConfiguration56);
        java.util.Map<java.lang.String, java.lang.String> strMap58 = crawlerConfiguration56.getRequestHeadersMap();
        boolean boolean59 = assetResponse13.equals((java.lang.Object) strMap58);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse65 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 52, strMap58, "HTMLPageResponseurl:hi!responseCode:10encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads", 580L, "AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout", (long) 308);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder66 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder68 = builder66.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration69 = builder68.build();
        java.lang.String str70 = crawlerConfiguration69.getStartUrl();
        java.lang.String str71 = crawlerConfiguration69.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap72 = crawlerConfiguration69.getRequestHeadersMap();
        java.lang.String str73 = crawlerConfiguration69.getNotOnPath();
        int int74 = crawlerConfiguration69.getMaxLevels();
        java.lang.String str75 = crawlerConfiguration69.getRequestHeaders();
        java.lang.String str76 = crawlerConfiguration69.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap77 = crawlerConfiguration69.getRequestHeadersMap();
        boolean boolean78 = hTMLPageResponse65.equals((java.lang.Object) strMap77);
        java.lang.String str80 = hTMLPageResponse65.getHeaderValue("com.soulgalore.crawler.proxy");
        java.lang.String str81 = hTMLPageResponse65.toString();
        java.lang.String str82 = hTMLPageResponse65.getEncoding();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str3, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str5, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "100" + "'", str24, "100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "100" + "'", str25, "100");
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "100" + "'", str51, "100");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(crawlerConfiguration56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(crawlerConfiguration69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:52encoding:AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads type:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout" + "'", str81, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:52encoding:AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads type:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads" + "'", str82, "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
    }

    @Test
    public void test09806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09806");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.lang.String str13 = crawlerResult12.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = crawlerResult12.getNonWorkingUrls();
        java.lang.String str16 = crawlerResult12.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet17 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray22 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL21 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet23 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet23, crawlerURLArray22);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet25 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray26 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet27 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet27, hTMLPageResponseArray26);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult29 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet23, hTMLPageResponseSet25, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet27);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet30 = crawlerResult29.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet31 = crawlerResult29.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet32 = crawlerResult29.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet33 = crawlerResult29.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet34 = crawlerResult29.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet35 = crawlerResult29.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray40 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL39 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, crawlerURLArray40);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet43 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray44 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet45 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45, hTMLPageResponseArray44);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult47 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, hTMLPageResponseSet43, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet48 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet49 = crawlerResult47.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult50 = new com.soulgalore.crawler.core.CrawlerResult("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", crawlerURLSet17, hTMLPageResponseSet35, hTMLPageResponseSet49);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet51 = crawlerResult50.getVerifiedURLResponses();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet17);
        org.junit.Assert.assertNotNull(crawlerURLArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet30);
        org.junit.Assert.assertNotNull(crawlerURLSet31);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet32);
        org.junit.Assert.assertNotNull(crawlerURLSet33);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet34);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet35);
        org.junit.Assert.assertNotNull(crawlerURLArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet48);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet49);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet51);
    }

    @Test
    public void test09807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09807");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int19 = hTMLPageResponse18.getResponseCode();
        long long20 = hTMLPageResponse18.getFetchTime();
        long long21 = hTMLPageResponse18.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI25 = crawlerURL24.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean30 = crawlerURL29.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder32.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration37 = builder32.build();
        java.lang.String str38 = crawlerConfiguration37.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = crawlerConfiguration37.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, (-1), strMap39, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse51 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL24, 100, strMap39, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        boolean boolean52 = hTMLPageResponse18.equals((java.lang.Object) 100);
        org.jsoup.nodes.Document document53 = hTMLPageResponse18.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL56 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "com.soulgalore.crawler.auth");
        java.lang.String str57 = crawlerURL56.toString();
        boolean boolean58 = hTMLPageResponse18.equals((java.lang.Object) str57);
        java.lang.String str59 = hTMLPageResponse18.getEncoding();
        long long60 = hTMLPageResponse18.getFetchTime();
        java.lang.String str61 = hTMLPageResponse18.getResponseType();
        java.lang.String str62 = hTMLPageResponse18.toString();
        int int63 = hTMLPageResponse18.getResponseCode();
        java.lang.String str64 = hTMLPageResponse18.toString();
        java.lang.String str65 = hTMLPageResponse18.getResponseType();
        java.lang.String str66 = hTMLPageResponse18.getResponseType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 580L + "'", long20 == 580L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 580L + "'", long21 == 580L);
        org.junit.Assert.assertNull(uRI25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(crawlerConfiguration37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(document53);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "CrawlerURL url:urls.txt" + "'", str57, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "errorurls.txt" + "'", str59, "errorurls.txt");
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 580L + "'", long60 == 580L);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "com.soulgalore.crawler.auth" + "'", str61, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth" + "'", str62, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth" + "'", str64, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "com.soulgalore.crawler.auth" + "'", str65, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "com.soulgalore.crawler.auth" + "'", str66, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test09808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09808");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.lang.String str2 = crawlerURL1.getReferer();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        java.lang.String str5 = crawlerURL4.getUrl();
        java.lang.String str6 = crawlerURL4.toString();
        java.lang.String str7 = crawlerURL4.toString();
        boolean boolean8 = crawlerURL1.equals((java.lang.Object) crawlerURL4);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL11 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean12 = crawlerURL11.isWrongSyntax();
        java.lang.String str13 = crawlerURL11.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse21 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL11, (int) 'a', strMap15, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder22.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder22.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder22.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder28.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder30.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setVerifyUrls(false);
        boolean boolean35 = hTMLPageResponse21.equals((java.lang.Object) builder34);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = builder34.setOnlyOnPath("HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = builder34.setVerifyUrls(true);
        boolean boolean40 = crawlerURL4.equals((java.lang.Object) builder39);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = builder39.setStartUrl("AssetResponseCallable url:0");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder44 = builder39.setVerifyUrls(true);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "CrawlerURL url:hi!" + "'", str6, "CrawlerURL url:hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CrawlerURL url:hi!" + "'", str7, "CrawlerURL url:hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "urls.txt" + "'", str13, "urls.txt");
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
    }

    @Test
    public void test09809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09809");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "CrawlerURL url:100", (int) (short) 1, (long) 1);
        long long5 = assetResponse4.getFetchTime();
        long long6 = assetResponse4.getFetchTime();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
    }

    @Test
    public void test09810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09810");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setOnlyOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setOnlyOnPath("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setStartUrl("-1");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder6.build();
        int int12 = crawlerConfiguration11.getMaxLevels();
        int int13 = crawlerConfiguration11.getMaxLevels();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test09811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09811");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        int int19 = hTMLPageResponse12.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = hTMLPageResponse12.getPageUrl();
        java.lang.String str21 = crawlerURL20.getReferer();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL25 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "Response timed out");
        com.soulgalore.crawler.util.HeaderUtil headerUtil27 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = headerUtil27.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse35 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL25, (int) '4', strMap29, "com.soulgalore.crawler.http.socket.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 580, "com.soulgalore.crawler.auth", (long) (short) 1);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse41 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, (int) (byte) 1, strMap29, "AssetResponseCallable url:Malformed url", "urls.txt", (long) (byte) 10, "com.soulgalore.crawler.http.connection.timeout", (long) 97);
        java.lang.String str42 = crawlerURL20.getUrl();
        java.net.URI uRI43 = crawlerURL20.getUri();
        java.lang.String str44 = crawlerURL20.getHost();
        java.lang.String str45 = crawlerURL20.getReferer();
        java.net.URI uRI46 = crawlerURL20.getUri();
        java.lang.String str47 = crawlerURL20.getReferer();
        boolean boolean48 = crawlerURL20.isWrongSyntax();
        boolean boolean49 = crawlerURL20.isWrongSyntax();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 97 + "'", int19 == 97);
        org.junit.Assert.assertNotNull(crawlerURL20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "urls.txt" + "'", str21, "urls.txt");
        org.junit.Assert.assertNotNull(headerUtil27);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "com.soulgalore.crawler.auth" + "'", str42, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(uRI43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "urls.txt" + "'", str45, "urls.txt");
        org.junit.Assert.assertNull(uRI46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "urls.txt" + "'", str47, "urls.txt");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test09812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09812");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:52encoding:AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads type:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout", "-1");
    }

    @Test
    public void test09813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09813");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.http.socket.timeout", "AssetResponseCallable url:35");
        com.soulgalore.crawler.util.HeaderUtil headerUtil4 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil4.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = headerUtil4.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil4.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil4.createHeadersFromString("AssetResponseCallable url:CrawlerURL url:AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil4.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:errorassets.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse20 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) ' ', strMap14, "AssetResponseCallable url:100", "CrawlerURL url:com.soulgalore.crawler.proxy", (long) 97, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt", 0L);
        org.junit.Assert.assertNotNull(headerUtil4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
    }

    @Test
    public void test09814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09814");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder2.setStartUrl("HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder2.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setStartUrl("hi!");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
    }

    @Test
    public void test09815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09815");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int13 = hTMLPageResponse12.getResponseCode();
        java.lang.String str14 = hTMLPageResponse12.getResponseType();
        java.lang.String str15 = hTMLPageResponse12.toString();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        java.lang.String str17 = hTMLPageResponse12.toString();
        java.lang.String str18 = hTMLPageResponse12.toString();
        java.lang.String str19 = hTMLPageResponse12.toString();
        org.jsoup.nodes.Document document20 = hTMLPageResponse12.getBody();
        java.lang.String str21 = hTMLPageResponse12.toString();
        java.lang.String str22 = hTMLPageResponse12.getResponseType();
        long long23 = hTMLPageResponse12.getFetchTime();
        java.lang.Object obj24 = null;
        boolean boolean25 = hTMLPageResponse12.equals(obj24);
        java.lang.String str26 = hTMLPageResponse12.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str15, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str17, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str18, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str19, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNull(document20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str21, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 100L + "'", long23 == 100L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str26, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
    }

    @Test
    public void test09816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09816");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.lang.String str5 = crawlerURL2.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder9.build();
        java.lang.String str11 = crawlerConfiguration10.getStartUrl();
        int int12 = crawlerConfiguration10.getMaxLevels();
        int int13 = crawlerConfiguration10.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse20 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (byte) -1, strMap14, "100", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) (short) -1, "com.soulgalore.crawler.nrofhttpthreads", 0L);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder21.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder21.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder27.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder31.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = builder33.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = builder33.setMaxLevels((int) '#');
        boolean boolean38 = crawlerURL2.equals((java.lang.Object) builder37);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder37.setStartUrl("35");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration41 = builder37.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder43 = builder37.setOnlyOnPath("CrawlerURL url:Response timed out");
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "urls.txt" + "'", str5, "urls.txt");
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(crawlerConfiguration41);
        org.junit.Assert.assertNotNull(builder43);
    }

    @Test
    public void test09817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09817");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder4.setOnlyOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder4.setStartUrl("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder4.setOnlyOnPath("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder4.setNotOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:0 type:");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test09818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09818");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout", "CrawlerURL url:AssetResponseCallable url:com.soulgalore.crawler.auth");
    }

    @Test
    public void test09819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09819");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder3 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder3.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration6 = builder5.build();
        java.lang.String str7 = crawlerConfiguration6.getOnlyOnPath();
        boolean boolean8 = crawlerConfiguration6.isVerifyUrls();
        com.soulgalore.crawler.util.StatusCode statusCode9 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN;
        boolean boolean10 = crawlerConfiguration6.equals((java.lang.Object) statusCode9);
        java.lang.String str11 = statusCode9.getFriendlyName();
        java.lang.String str12 = statusCode9.getFriendlyName();
        int int13 = statusCode9.getCode();
        boolean boolean14 = crawlerURL2.equals((java.lang.Object) int13);
        java.lang.String str15 = crawlerURL2.getReferer();
        java.lang.String str16 = crawlerURL2.getReferer();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean21 = crawlerURL20.isWrongSyntax();
        java.lang.String str22 = crawlerURL20.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse30 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, (int) 'a', strMap24, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str31 = hTMLPageResponse30.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = hTMLPageResponse30.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = hTMLPageResponse30.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL34 = hTMLPageResponse30.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL38 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean39 = crawlerURL38.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder41 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder43 = builder41.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder45 = builder41.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration46 = builder41.build();
        java.lang.String str47 = crawlerConfiguration46.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = crawlerConfiguration46.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse54 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL38, (-1), strMap48, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int55 = hTMLPageResponse54.getResponseCode();
        java.lang.String str56 = hTMLPageResponse54.toString();
        long long57 = hTMLPageResponse54.getFetchTime();
        java.util.Map<java.lang.String, java.lang.String> strMap58 = hTMLPageResponse54.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse64 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL34, 52, strMap58, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth", "AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout", (long) (short) 100, "com.soulgalore.crawler.http.socket.timeout", (long) 'a');
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse70 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (byte) 1, strMap58, "AssetResponseCallable url:Redirected to new domain", "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain", 0L, "", (long) 'a');
        int int71 = hTMLPageResponse70.getResponseCode();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse76 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.proxy", "", (int) (short) -1, (long) 583);
        java.lang.String str77 = assetResponse76.getUrl();
        long long78 = assetResponse76.getFetchTime();
        java.lang.String str79 = assetResponse76.getUrl();
        java.lang.String str80 = assetResponse76.getReferer();
        boolean boolean81 = hTMLPageResponse70.equals((java.lang.Object) str80);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(crawlerConfiguration6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + statusCode9 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN + "'", statusCode9.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Unknown error" + "'", str11, "Unknown error");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Unknown error" + "'", str12, "Unknown error");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 581 + "'", int13 == 581);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1" + "'", str15, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "urls.txt" + "'", str22, "urls.txt");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str31, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(crawlerURL33);
        org.junit.Assert.assertNotNull(crawlerURL34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(crawlerConfiguration46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth" + "'", str56, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 580L + "'", long57 == 580L);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "com.soulgalore.crawler.proxy" + "'", str77, "com.soulgalore.crawler.proxy");
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 583L + "'", long78 == 583L);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "com.soulgalore.crawler.proxy" + "'", str79, "com.soulgalore.crawler.proxy");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test09820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09820");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        java.lang.String str20 = hTMLPageResponse18.getHeaderValue("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder21.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder25.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setNotOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder27.setMaxLevels((int) (byte) -1);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration32 = builder31.build();
        boolean boolean33 = hTMLPageResponse18.equals((java.lang.Object) builder31);
        long long34 = hTMLPageResponse18.getFetchTime();
        java.lang.String str35 = hTMLPageResponse18.getEncoding();
        int int36 = hTMLPageResponse18.getResponseCode();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher38 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher40 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder41 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder43 = builder41.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration44 = builder43.build();
        java.lang.String str45 = crawlerConfiguration44.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = crawlerConfiguration44.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray47 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet48 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet48, assetResponseArray47);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray50 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet51 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet51, assetResponseArray50);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult53 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet48, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet51);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet54 = assetsVerificationResult53.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray55 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet56 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet56, assetResponseArray55);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray58 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet59 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet59, assetResponseArray58);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult61 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet56, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet59);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult62 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet54, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet59);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet63 = assetsVerificationResult62.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray64 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet65 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet65, assetResponseArray64);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray67 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet68 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet68, assetResponseArray67);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult70 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet65, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet68);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet71 = assetsVerificationResult70.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet72 = assetsVerificationResult70.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray73 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet74 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet74, assetResponseArray73);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray76 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet77 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet77, assetResponseArray76);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult79 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet74, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet77);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult80 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet72, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet74);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult81 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet63, assetResponseSet72);
        boolean boolean82 = crawlerConfiguration44.equals((java.lang.Object) assetsVerificationResult81);
        java.util.Map<java.lang.String, java.lang.String> strMap83 = crawlerConfiguration44.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable85 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("", assetFetcher40, strMap83, "errorassets.csv");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable87 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("97", assetFetcher38, strMap83, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:");
        boolean boolean88 = hTMLPageResponse18.equals((java.lang.Object) assetResponseCallable87);
        java.lang.String str90 = hTMLPageResponse18.getHeaderValue("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL91 = hTMLPageResponse18.getPageUrl();
        org.jsoup.nodes.Document document92 = hTMLPageResponse18.getBody();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(crawlerConfiguration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 580L + "'", long34 == 580L);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "errorurls.txt" + "'", str35, "errorurls.txt");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(crawlerConfiguration44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(assetResponseArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(assetResponseArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(assetResponseSet54);
        org.junit.Assert.assertNotNull(assetResponseArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(assetResponseArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(assetResponseSet63);
        org.junit.Assert.assertNotNull(assetResponseArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(assetResponseArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(assetResponseSet71);
        org.junit.Assert.assertNotNull(assetResponseSet72);
        org.junit.Assert.assertNotNull(assetResponseArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(assetResponseArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(crawlerURL91);
        org.junit.Assert.assertNull(document92);
    }

    @Test
    public void test09821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09821");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:CrawlerURL url:Wrong content type", "CrawlerURL url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
    }

    @Test
    public void test09822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09822");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet18 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray23 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL22 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet24 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, crawlerURLArray23);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray27 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet28 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28, hTMLPageResponseArray27);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult30 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, hTMLPageResponseSet26, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet31 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet32 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet33 = crawlerResult30.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet34 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet35 = crawlerResult30.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet36 = crawlerResult30.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet37 = crawlerResult30.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL41 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray42 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL41 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet43 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet43, crawlerURLArray42);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet45 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray46 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet47 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet47, hTMLPageResponseArray46);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult49 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet43, hTMLPageResponseSet45, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet47);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet50 = crawlerResult49.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet51 = crawlerResult49.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet52 = crawlerResult49.getUrls();
        java.lang.String str53 = crawlerResult49.getTheStartPoint();
        java.lang.String str54 = crawlerResult49.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet55 = crawlerResult49.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet56 = crawlerResult49.getNonWorkingUrls();
        java.lang.String str57 = crawlerResult49.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet58 = crawlerResult49.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult59 = new com.soulgalore.crawler.core.CrawlerResult("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout", crawlerURLSet18, hTMLPageResponseSet37, hTMLPageResponseSet58);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet60 = crawlerResult59.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet61 = crawlerResult59.getNonWorkingUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet17);
        org.junit.Assert.assertNotNull(crawlerURLSet18);
        org.junit.Assert.assertNotNull(crawlerURLArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet31);
        org.junit.Assert.assertNotNull(crawlerURLSet32);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet33);
        org.junit.Assert.assertNotNull(crawlerURLSet34);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet35);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet36);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet37);
        org.junit.Assert.assertNotNull(crawlerURLArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet50);
        org.junit.Assert.assertNotNull(crawlerURLSet51);
        org.junit.Assert.assertNotNull(crawlerURLSet52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet55);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet58);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet60);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet61);
    }

    @Test
    public void test09823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09823");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "Response timed out");
        com.soulgalore.crawler.util.HeaderUtil headerUtil4 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil4.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) '4', strMap6, "com.soulgalore.crawler.http.socket.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 580, "com.soulgalore.crawler.auth", (long) (short) 1);
        org.jsoup.nodes.Document document13 = hTMLPageResponse12.getBody();
        java.lang.String str15 = hTMLPageResponse12.getHeaderValue("com.soulgalore.crawler.proxy");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray17 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, assetResponseArray17);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray20 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet21 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21, assetResponseArray20);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult23 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet24 = assetsVerificationResult23.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet25 = assetsVerificationResult23.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet26 = assetsVerificationResult23.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet27 = null;
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray28 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, assetResponseArray28);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray31 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet32 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32, assetResponseArray31);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult34 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet29, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet32);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet35 = assetsVerificationResult34.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray36 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet37 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37, assetResponseArray36);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray39 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet40 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40, assetResponseArray39);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult42 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet37, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult43 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet35, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet40);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult44 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet27, assetResponseSet35);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult45 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet26, assetResponseSet35);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet46 = assetsVerificationResult45.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet47 = assetsVerificationResult45.getWorkingAssets();
        boolean boolean48 = hTMLPageResponse12.equals((java.lang.Object) assetResponseSet47);
        org.jsoup.nodes.Document document49 = hTMLPageResponse12.getBody();
        java.lang.String str50 = hTMLPageResponse12.getEncoding();
        long long51 = hTMLPageResponse12.getFetchTime();
        org.junit.Assert.assertNotNull(headerUtil4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(document13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertNotNull(assetResponseArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(assetResponseArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(assetResponseSet24);
        org.junit.Assert.assertNotNull(assetResponseSet25);
        org.junit.Assert.assertNotNull(assetResponseSet26);
        org.junit.Assert.assertNotNull(assetResponseArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(assetResponseArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(assetResponseSet35);
        org.junit.Assert.assertNotNull(assetResponseArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(assetResponseArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(assetResponseSet46);
        org.junit.Assert.assertNotNull(assetResponseSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(document49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str50, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1L + "'", long51 == 1L);
    }

    @Test
    public void test09824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09824");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder31.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration34 = builder33.build();
        java.lang.String str35 = crawlerConfiguration34.getStartUrl();
        int int36 = crawlerConfiguration34.getMaxLevels();
        int int37 = crawlerConfiguration34.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = crawlerConfiguration34.getRequestHeadersMap();
        java.lang.String str39 = crawlerConfiguration34.getStartUrl();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse44 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int45 = assetResponse44.getResponseCode();
        int int46 = assetResponse44.getResponseCode();
        long long47 = assetResponse44.getFetchTime();
        long long48 = assetResponse44.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse53 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean54 = assetResponse44.equals((java.lang.Object) 100L);
        java.lang.String str55 = assetResponse44.getReferer();
        java.lang.String str56 = assetResponse44.getReferer();
        long long57 = assetResponse44.getFetchTime();
        boolean boolean58 = crawlerConfiguration34.equals((java.lang.Object) assetResponse44);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = crawlerConfiguration34.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse65 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (short) 0, strMap59, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth", "Wrong content type", (long) 1, "com.soulgalore.crawler.http.connection.timeout", (long) (short) -1);
        java.lang.String str66 = hTMLPageResponse65.getUrl();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(crawlerConfiguration34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "100" + "'", str55, "100");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "100" + "'", str56, "100");
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "com.soulgalore.crawler.auth" + "'", str66, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test09825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09825");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet4 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet6 = authUtil0.createAuthsFromString("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet8 = authUtil0.createAuthsFromString("AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
        org.junit.Assert.assertNotNull(authSet2);
        org.junit.Assert.assertNotNull(authSet4);
        org.junit.Assert.assertNotNull(authSet6);
    }

    @Test
    public void test09826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09826");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setMaxLevels((int) '4');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setMaxLevels(583);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setMaxLevels(97);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test09827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09827");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray20 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL19 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet21 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet21, crawlerURLArray20);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet23 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray24 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet25 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet25, hTMLPageResponseArray24);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult27 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet21, hTMLPageResponseSet23, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet25);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet28 = crawlerResult27.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet29 = crawlerResult27.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet30 = crawlerResult27.getUrls();
        java.lang.String str31 = crawlerResult27.getTheStartPoint();
        java.lang.String str32 = crawlerResult27.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet33 = crawlerResult27.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet34 = crawlerResult27.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray40 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL39 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, crawlerURLArray40);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet43 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray44 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet45 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45, hTMLPageResponseArray44);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult47 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, hTMLPageResponseSet43, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet48 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet49 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet50 = crawlerResult47.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet51 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet52 = crawlerResult47.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet53 = crawlerResult47.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL57 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray58 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL57 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet59 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet59, crawlerURLArray58);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet61 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray62 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet63 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet63, hTMLPageResponseArray62);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult65 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet59, hTMLPageResponseSet61, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet63);
        java.lang.String str66 = crawlerResult65.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet67 = crawlerResult65.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet68 = crawlerResult65.getNonWorkingUrls();
        java.lang.String str69 = crawlerResult65.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet70 = crawlerResult65.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL74 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray75 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL74 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet76 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet76, crawlerURLArray75);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet78 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray79 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet80 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet80, hTMLPageResponseArray79);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult82 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet76, hTMLPageResponseSet78, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet80);
        java.lang.String str83 = crawlerResult82.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet84 = crawlerResult82.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet85 = crawlerResult82.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult86 = new com.soulgalore.crawler.core.CrawlerResult("CrawlerURL url:urls.txt", crawlerURLSet53, hTMLPageResponseSet70, hTMLPageResponseSet85);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult87 = new com.soulgalore.crawler.core.CrawlerResult("32", crawlerURLSet15, hTMLPageResponseSet34, hTMLPageResponseSet70);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet88 = crawlerResult87.getUrls();
        java.lang.String str89 = crawlerResult87.getTheStartPoint();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(crawlerURLArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet28);
        org.junit.Assert.assertNotNull(crawlerURLSet29);
        org.junit.Assert.assertNotNull(crawlerURLSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet33);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet34);
        org.junit.Assert.assertNotNull(crawlerURLArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet48);
        org.junit.Assert.assertNotNull(crawlerURLSet49);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet50);
        org.junit.Assert.assertNotNull(crawlerURLSet51);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet52);
        org.junit.Assert.assertNotNull(crawlerURLSet53);
        org.junit.Assert.assertNotNull(crawlerURLArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet67);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet70);
        org.junit.Assert.assertNotNull(crawlerURLArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet84);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet85);
        org.junit.Assert.assertNotNull(crawlerURLSet88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "32" + "'", str89, "32");
    }

    @Test
    public void test09828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09828");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider(32, (int) (byte) -1, (int) ' ', "AssetResponseCallable url:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", "AssetResponseCallable url:AssetResponseCallable url:Redirected to new domain");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"HTMLPageResponseurl\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09829");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setStartUrl("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder0.setNotOnPath("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setStartUrl("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("97");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setStartUrl("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setStartUrl("100");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration19 = builder18.build();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(crawlerConfiguration19);
    }

    @Test
    public void test09830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09830");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        java.lang.String str2 = crawlerURL1.getUrl();
        boolean boolean3 = crawlerURL1.isWrongSyntax();
        com.soulgalore.crawler.util.HeaderUtil headerUtil5 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = headerUtil5.createHeadersFromString("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse13 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) 10, strMap7, "urls.txt", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (byte) 10, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", (-1L));
        java.lang.String str15 = hTMLPageResponse13.getHeaderValue("CrawlerURL url:1");
        long long16 = hTMLPageResponse13.getFetchTime();
        java.lang.String str17 = hTMLPageResponse13.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse13.getPageUrl();
        org.jsoup.nodes.Document document19 = hTMLPageResponse13.getBody();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(headerUtil5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertNull(document19);
    }

    @Test
    public void test09831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09831");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("Redirected to new domain", "1");
        java.lang.String str3 = crawlerURL2.getReferer();
        java.lang.String str4 = crawlerURL2.toString();
        boolean boolean5 = crawlerURL2.isWrongSyntax();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "1" + "'", str3, "1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CrawlerURL url:Redirected to new domain" + "'", str4, "CrawlerURL url:Redirected to new domain");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test09832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09832");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        long long14 = hTMLPageResponse12.getFetchTime();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        java.lang.String str17 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse22 = new com.soulgalore.crawler.core.assets.AssetResponse("CrawlerURL url:CrawlerURL url:1", "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (int) (short) -1, 308L);
        boolean boolean23 = hTMLPageResponse12.equals((java.lang.Object) (short) -1);
        java.lang.String str24 = hTMLPageResponse12.getEncoding();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 100L + "'", long14 == 100L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "com.soulgalore.crawler.auth" + "'", str17, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str24, "com.soulgalore.crawler.http.socket.timeout");
    }

    @Test
    public void test09833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09833");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int13 = hTMLPageResponse12.getResponseCode();
        int int14 = hTMLPageResponse12.getResponseCode();
        java.lang.String str15 = hTMLPageResponse12.getUrl();
        java.lang.String str16 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str18 = hTMLPageResponse12.getResponseType();
        int int19 = hTMLPageResponse12.getResponseCode();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 97 + "'", int14 == 97);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.auth" + "'", str15, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str16, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 97 + "'", int19 == 97);
    }

    @Test
    public void test09834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09834");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet4 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet6 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet8 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet10 = authUtil0.createAuthsFromString("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet12 = authUtil0.createAuthsFromString("HTMLPageResponseurl:CrawlerURL url:com.soulgalore.crawler.authresponseCode:0encoding:CrawlerURL url:result.csv type:-1");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"CrawlerURL url\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
        org.junit.Assert.assertNotNull(authSet2);
        org.junit.Assert.assertNotNull(authSet4);
        org.junit.Assert.assertNotNull(authSet6);
        org.junit.Assert.assertNotNull(authSet8);
        org.junit.Assert.assertNotNull(authSet10);
    }

    @Test
    public void test09835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09835");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:com.soulgalore.crawler.auth");
    }

    @Test
    public void test09836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09836");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("32", "CrawlerURL url:1", (-1), (long) 1);
        java.lang.String str5 = assetResponse4.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration9 = builder8.build();
        java.lang.String str10 = crawlerConfiguration9.getOnlyOnPath();
        boolean boolean11 = crawlerConfiguration9.isVerifyUrls();
        com.soulgalore.crawler.util.StatusCode statusCode12 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN;
        boolean boolean13 = crawlerConfiguration9.equals((java.lang.Object) statusCode12);
        boolean boolean14 = crawlerConfiguration9.isVerifyUrls();
        java.lang.String str15 = crawlerConfiguration9.getOnlyOnPath();
        java.lang.String str16 = crawlerConfiguration9.getOnlyOnPath();
        boolean boolean17 = assetResponse4.equals((java.lang.Object) crawlerConfiguration9);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI21 = crawlerURL20.getUri();
        java.net.URI uRI22 = crawlerURL20.getUri();
        java.net.URI uRI23 = crawlerURL20.getUri();
        java.lang.String str24 = crawlerURL20.getHost();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL26 = new com.soulgalore.crawler.core.CrawlerURL("result.csv");
        java.net.URI uRI27 = crawlerURL26.getUri();
        java.lang.String str28 = crawlerURL26.getReferer();
        java.lang.String str29 = crawlerURL26.getHost();
        java.lang.String str30 = crawlerURL26.toString();
        java.lang.String str31 = crawlerURL26.getReferer();
        boolean boolean32 = crawlerURL20.equals((java.lang.Object) str31);
        boolean boolean33 = crawlerURL20.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder34.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration37 = builder36.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = builder36.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration40 = builder39.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = builder39.setStartUrl("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder44 = builder42.setVerifyUrls(true);
        boolean boolean45 = crawlerURL20.equals((java.lang.Object) builder44);
        boolean boolean46 = crawlerConfiguration9.equals((java.lang.Object) crawlerURL20);
        java.lang.String str47 = crawlerURL20.getReferer();
        java.lang.String str48 = crawlerURL20.getReferer();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "32" + "'", str5, "32");
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(crawlerConfiguration9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + statusCode12 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN + "'", statusCode12.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(uRI21);
        org.junit.Assert.assertNull(uRI22);
        org.junit.Assert.assertNull(uRI23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(uRI27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "CrawlerURL url:result.csv" + "'", str30, "CrawlerURL url:result.csv");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(crawlerConfiguration37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(crawlerConfiguration40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "urls.txt" + "'", str47, "urls.txt");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "urls.txt" + "'", str48, "urls.txt");
    }

    @Test
    public void test09837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09837");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setMaxLevels((int) '#');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder12.setNotOnPath("CrawlerURL url:CrawlerURL url:-1");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test09838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09838");
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray0 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet1 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, assetResponseArray0);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray3 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet4 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4, assetResponseArray3);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult6 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet1, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet4);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet7 = assetsVerificationResult6.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult6.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray9 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, assetResponseArray9);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray12 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13, assetResponseArray12);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult15 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet13);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult16 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet8, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet10);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray17 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, assetResponseArray17);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray20 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet21 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21, assetResponseArray20);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult23 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet21);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet24 = assetsVerificationResult23.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult25 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet8, assetResponseSet24);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet26 = assetsVerificationResult25.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet27 = assetsVerificationResult25.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet28 = assetsVerificationResult25.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray29 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet30 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30, assetResponseArray29);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray32 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet33 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33, assetResponseArray32);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult35 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet30, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet33);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet36 = assetsVerificationResult35.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet37 = assetsVerificationResult35.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet38 = assetsVerificationResult35.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet39 = assetsVerificationResult35.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult40 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet28, assetResponseSet39);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray41 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet42 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet42, assetResponseArray41);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray44 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet45 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet45, assetResponseArray44);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult47 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet42, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet45);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet48 = assetsVerificationResult47.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet49 = assetsVerificationResult47.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult50 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet28, assetResponseSet49);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet51 = assetsVerificationResult50.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray52 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet53 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet53, assetResponseArray52);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray55 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet56 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet56, assetResponseArray55);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult58 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet53, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet56);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray59 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet60 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet60, assetResponseArray59);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray62 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet63 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet63, assetResponseArray62);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult65 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet60, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet63);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet66 = assetsVerificationResult65.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult67 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet56, assetResponseSet66);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet68 = assetsVerificationResult67.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet69 = assetsVerificationResult67.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet70 = assetsVerificationResult67.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet71 = assetsVerificationResult67.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet72 = assetsVerificationResult67.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet73 = assetsVerificationResult67.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult74 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet51, assetResponseSet73);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet75 = assetsVerificationResult74.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet76 = assetsVerificationResult74.getNonWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(assetResponseArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(assetResponseSet7);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(assetResponseArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(assetResponseArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(assetResponseArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(assetResponseSet24);
        org.junit.Assert.assertNotNull(assetResponseSet26);
        org.junit.Assert.assertNotNull(assetResponseSet27);
        org.junit.Assert.assertNotNull(assetResponseSet28);
        org.junit.Assert.assertNotNull(assetResponseArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(assetResponseArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(assetResponseSet36);
        org.junit.Assert.assertNotNull(assetResponseSet37);
        org.junit.Assert.assertNotNull(assetResponseSet38);
        org.junit.Assert.assertNotNull(assetResponseSet39);
        org.junit.Assert.assertNotNull(assetResponseArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(assetResponseArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(assetResponseSet48);
        org.junit.Assert.assertNotNull(assetResponseSet49);
        org.junit.Assert.assertNotNull(assetResponseSet51);
        org.junit.Assert.assertNotNull(assetResponseArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(assetResponseArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(assetResponseArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(assetResponseArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(assetResponseSet66);
        org.junit.Assert.assertNotNull(assetResponseSet68);
        org.junit.Assert.assertNotNull(assetResponseSet69);
        org.junit.Assert.assertNotNull(assetResponseSet70);
        org.junit.Assert.assertNotNull(assetResponseSet71);
        org.junit.Assert.assertNotNull(assetResponseSet72);
        org.junit.Assert.assertNotNull(assetResponseSet73);
        org.junit.Assert.assertNotNull(assetResponseSet75);
        org.junit.Assert.assertNotNull(assetResponseSet76);
    }

    @Test
    public void test09839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09839");
        com.soulgalore.crawler.util.AuthUtil authUtil0 = com.soulgalore.crawler.util.AuthUtil.getInstance();
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet2 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet4 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet6 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet8 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet10 = authUtil0.createAuthsFromString("");
        java.util.Set<com.soulgalore.crawler.util.Auth> authSet12 = authUtil0.createAuthsFromString("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.soulgalore.crawler.util.Auth> authSet14 = authUtil0.createAuthsFromString("AssetResponseCallable url:CrawlerURL url:AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"CrawlerURL url\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(authUtil0);
        org.junit.Assert.assertNotNull(authSet2);
        org.junit.Assert.assertNotNull(authSet4);
        org.junit.Assert.assertNotNull(authSet6);
        org.junit.Assert.assertNotNull(authSet8);
        org.junit.Assert.assertNotNull(authSet10);
        org.junit.Assert.assertNotNull(authSet12);
    }

    @Test
    public void test09840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09840");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.util.Map<java.lang.String, java.lang.String> strMap30 = hTMLPageResponse29.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean34 = crawlerURL33.isWrongSyntax();
        java.lang.String str35 = crawlerURL33.getReferer();
        java.lang.String str36 = crawlerURL33.getHost();
        java.lang.String str37 = crawlerURL33.getUrl();
        boolean boolean38 = hTMLPageResponse29.equals((java.lang.Object) crawlerURL33);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL41 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI42 = crawlerURL41.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder43 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder45 = builder43.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration46 = builder45.build();
        java.lang.String str47 = crawlerConfiguration46.getStartUrl();
        int int48 = crawlerConfiguration46.getMaxLevels();
        int int49 = crawlerConfiguration46.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL52 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean53 = crawlerURL52.isWrongSyntax();
        java.lang.String str54 = crawlerURL52.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse62 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL52, (int) 'a', strMap56, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str63 = hTMLPageResponse62.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL64 = hTMLPageResponse62.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap65 = hTMLPageResponse62.getResponseHeaders();
        java.lang.String str66 = hTMLPageResponse62.getUrl();
        org.jsoup.nodes.Document document67 = hTMLPageResponse62.getBody();
        boolean boolean68 = crawlerConfiguration46.equals((java.lang.Object) hTMLPageResponse62);
        boolean boolean69 = crawlerURL41.equals((java.lang.Object) hTMLPageResponse62);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder71 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder73 = builder71.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration74 = builder73.build();
        java.lang.String str75 = crawlerConfiguration74.getStartUrl();
        int int76 = crawlerConfiguration74.getMaxLevels();
        int int77 = crawlerConfiguration74.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap78 = crawlerConfiguration74.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse84 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL41, 582, strMap78, "urls.txt", "hi!", (long) (short) 0, "AssetResponseCallable url:result.csv", 10L);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse90 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL33, (int) '4', strMap78, "CrawlerURL url:100", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads", (long) (byte) 1, "-1", (long) (short) 0);
        long long91 = hTMLPageResponse90.getFetchTime();
        long long92 = hTMLPageResponse90.getFetchTime();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "urls.txt" + "'", str35, "urls.txt");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "com.soulgalore.crawler.auth" + "'", str37, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(uRI42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(crawlerConfiguration46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "urls.txt" + "'", str54, "urls.txt");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str63, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "com.soulgalore.crawler.auth" + "'", str66, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(crawlerConfiguration74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 0L + "'", long91 == 0L);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 0L + "'", long92 == 0L);
    }

    @Test
    public void test09841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09841");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        java.lang.String str2 = crawlerURL1.getUrl();
        boolean boolean3 = crawlerURL1.isWrongSyntax();
        java.lang.String str4 = crawlerURL1.getUrl();
        java.lang.String str5 = crawlerURL1.getReferer();
        java.net.URI uRI6 = crawlerURL1.getUri();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(uRI6);
    }

    @Test
    public void test09842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09842");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse37 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (short) 100, strMap31, "-1", "1", (long) (byte) 10, "com.soulgalore.crawler.nrofhttpthreads", (long) (short) 1);
        java.lang.String str38 = hTMLPageResponse37.getEncoding();
        java.lang.String str39 = hTMLPageResponse37.getEncoding();
        java.lang.String str40 = hTMLPageResponse37.toString();
        int int41 = hTMLPageResponse37.getResponseCode();
        java.lang.String str42 = hTMLPageResponse37.toString();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1" + "'", str38, "1");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1" + "'", str39, "1");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads" + "'", str40, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads" + "'", str42, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads");
    }

    @Test
    public void test09843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09843");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider((int) 'a', (int) ' ', (int) ' ', "CrawlerURL url:CrawlerURL url:CrawlerURL url:com.soulgalore.crawler.auth", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"CrawlerURL url\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09844");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        java.lang.String str19 = crawlerURL18.getReferer();
        java.lang.String str20 = crawlerURL18.toString();
        java.lang.String str21 = crawlerURL18.getReferer();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "urls.txt" + "'", str19, "urls.txt");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str20, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "urls.txt" + "'", str21, "urls.txt");
    }

    @Test
    public void test09845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09845");
        com.soulgalore.crawler.util.StatusCode statusCode0 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT;
        java.lang.String str1 = statusCode0.getFriendlyName();
        int int2 = statusCode0.getCode();
        java.lang.String str3 = statusCode0.getFriendlyName();
        java.lang.String str4 = statusCode0.getFriendlyName();
        java.lang.String str5 = statusCode0.getFriendlyName();
        java.lang.String str6 = statusCode0.getFriendlyName();
        java.lang.String str7 = statusCode0.getFriendlyName();
        java.lang.String str8 = statusCode0.getFriendlyName();
        int int9 = statusCode0.getCode();
        org.junit.Assert.assertTrue("'" + statusCode0 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT + "'", statusCode0.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Response timed out" + "'", str1, "Response timed out");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 580 + "'", int2 == 580);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Response timed out" + "'", str3, "Response timed out");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Response timed out" + "'", str4, "Response timed out");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Response timed out" + "'", str5, "Response timed out");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Response timed out" + "'", str6, "Response timed out");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Response timed out" + "'", str7, "Response timed out");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Response timed out" + "'", str8, "Response timed out");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 580 + "'", int9 == 580);
    }

    @Test
    public void test09846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09846");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder6.setRequestHeaders("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:100 type:com.soulgalore.crawler.http.socket.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setMaxLevels((int) (byte) 0);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test09847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09847");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher3 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher5 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder6.build();
        java.lang.String str12 = crawlerConfiguration11.getRequestHeaders();
        java.lang.String str13 = crawlerConfiguration11.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = crawlerConfiguration11.getRequestHeadersMap();
        java.lang.String str15 = crawlerConfiguration11.getOnlyOnPath();
        java.lang.String str16 = crawlerConfiguration11.getOnlyOnPath();
        boolean boolean17 = crawlerConfiguration11.isVerifyUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "Response timed out");
        com.soulgalore.crawler.util.HeaderUtil headerUtil22 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = headerUtil22.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse30 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, (int) '4', strMap24, "com.soulgalore.crawler.http.socket.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 580, "com.soulgalore.crawler.auth", (long) (short) 1);
        boolean boolean31 = crawlerConfiguration11.equals((java.lang.Object) strMap24);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable33 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", assetFetcher5, strMap24, "AssetResponseCallable url:");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable35 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Unknown error", assetFetcher3, strMap24, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:errorassets.csv type:result.csv");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable37 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.proxy type:AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", assetFetcher1, strMap24, "52");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.assets.AssetResponse assetResponse38 = assetResponseCallable37.call();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(headerUtil22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test09848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09848");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("CrawlerURL url:AssetResponseCallable url:1", "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", 0, 97L);
    }

    @Test
    public void test09849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09849");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        java.lang.String str2 = crawlerURL1.toString();
        java.net.URI uRI3 = crawlerURL1.getUri();
        java.lang.String str4 = crawlerURL1.getUrl();
        java.lang.String str5 = crawlerURL1.getHost();
        java.net.URI uRI6 = crawlerURL1.getUri();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = uRI6.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "CrawlerURL url:hi!" + "'", str2, "CrawlerURL url:hi!");
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(uRI6);
    }

    @Test
    public void test09850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09850");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) builder14);
        long long16 = hTMLPageResponse12.getFetchTime();
        java.lang.String str17 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder19.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder19.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder25.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setVerifyUrls(false);
        boolean boolean30 = crawlerURL18.equals((java.lang.Object) builder29);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration31 = builder29.build();
        java.lang.String str32 = crawlerConfiguration31.getStartUrl();
        java.lang.String str33 = crawlerConfiguration31.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = crawlerConfiguration31.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = crawlerConfiguration31.getRequestHeadersMap();
        int int36 = crawlerConfiguration31.getMaxLevels();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str17, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(crawlerConfiguration31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test09851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09851");
        com.soulgalore.crawler.util.StatusCode statusCode0 = com.soulgalore.crawler.util.StatusCode.SC_MALFORMED_URI;
        int int1 = statusCode0.getCode();
        int int2 = statusCode0.getCode();
        java.lang.String str3 = statusCode0.getFriendlyName();
        org.junit.Assert.assertTrue("'" + statusCode0 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_MALFORMED_URI + "'", statusCode0.equals(com.soulgalore.crawler.util.StatusCode.SC_MALFORMED_URI));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 582 + "'", int1 == 582);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 582 + "'", int2 == 582);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Malformed url" + "'", str3, "Malformed url");
    }

    @Test
    public void test09852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09852");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        boolean boolean22 = hTMLPageResponse12.equals((java.lang.Object) builder21);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder21.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder21.setMaxLevels((int) (short) 10);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration27 = builder21.build();
        java.lang.String str28 = crawlerConfiguration27.getOnlyOnPath();
        java.lang.String str29 = crawlerConfiguration27.getOnlyOnPath();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(crawlerConfiguration27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
    }

    @Test
    public void test09853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09853");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("100", "com.soulgalore.crawler.http.connection.timeout", (int) (short) 0, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        java.lang.String str7 = assetResponse4.getReferer();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str7, "com.soulgalore.crawler.http.connection.timeout");
    }

    @Test
    public void test09854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09854");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI23 = crawlerURL22.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL27 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean28 = crawlerURL27.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder30.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder30.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration35 = builder30.build();
        java.lang.String str36 = crawlerConfiguration35.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = crawlerConfiguration35.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse43 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL27, (-1), strMap37, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse49 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL22, 100, strMap37, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse55 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (byte) 10, strMap37, "100", "errorassets.csv", (long) (byte) 100, "", (long) (short) 100);
        java.lang.String str57 = hTMLPageResponse55.getHeaderValue("35");
        java.util.Map<java.lang.String, java.lang.String> strMap58 = hTMLPageResponse55.getResponseHeaders();
        java.lang.String str59 = hTMLPageResponse55.toString();
        java.util.Map<java.lang.String, java.lang.String> strMap60 = hTMLPageResponse55.getResponseHeaders();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(uRI23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(crawlerConfiguration35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:" + "'", str59, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:");
        org.junit.Assert.assertNotNull(strMap60);
    }

    @Test
    public void test09855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09855");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setStartUrl("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setMaxLevels(32);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setNotOnPath("AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test09856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09856");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "Wrong content type", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        int int7 = assetResponse4.getResponseCode();
        java.lang.String str8 = assetResponse4.getReferer();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Wrong content type" + "'", str8, "Wrong content type");
    }

    @Test
    public void test09857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09857");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int19 = hTMLPageResponse18.getResponseCode();
        long long20 = hTMLPageResponse18.getFetchTime();
        long long21 = hTMLPageResponse18.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI25 = crawlerURL24.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean30 = crawlerURL29.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder32.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration37 = builder32.build();
        java.lang.String str38 = crawlerConfiguration37.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = crawlerConfiguration37.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, (-1), strMap39, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse51 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL24, 100, strMap39, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        boolean boolean52 = hTMLPageResponse18.equals((java.lang.Object) 100);
        org.jsoup.nodes.Document document53 = hTMLPageResponse18.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL54 = hTMLPageResponse18.getPageUrl();
        java.lang.String str56 = hTMLPageResponse18.getHeaderValue("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder57 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder59 = builder57.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder61 = builder57.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder63 = builder61.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder65 = builder63.setOnlyOnPath("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder67 = builder63.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder69 = builder67.setRequestHeaders("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout");
        boolean boolean70 = hTMLPageResponse18.equals((java.lang.Object) builder67);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder72 = builder67.setMaxLevels((int) (byte) 1);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder74 = builder67.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder76 = builder67.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration77 = builder67.build();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 580L + "'", long20 == 580L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 580L + "'", long21 == 580L);
        org.junit.Assert.assertNull(uRI25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(crawlerConfiguration37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(document53);
        org.junit.Assert.assertNotNull(crawlerURL54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(crawlerConfiguration77);
    }

    @Test
    public void test09858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09858");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder6.build();
        int int8 = crawlerConfiguration7.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL10 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        java.lang.String str11 = crawlerURL10.getReferer();
        java.lang.String str12 = crawlerURL10.toString();
        boolean boolean13 = crawlerConfiguration7.equals((java.lang.Object) str12);
        boolean boolean14 = crawlerConfiguration7.isVerifyUrls();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CrawlerURL url:hi!" + "'", str12, "CrawlerURL url:hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test09859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09859");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setStartUrl("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("AssetResponseCallable url:CrawlerURL url:hi!");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
    }

    @Test
    public void test09860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09860");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.lang.String str2 = crawlerURL1.toString();
        java.lang.String str3 = crawlerURL1.getReferer();
        java.lang.String str4 = crawlerURL1.getHost();
        java.lang.String str5 = crawlerURL1.getReferer();
        java.net.URI uRI6 = crawlerURL1.getUri();
        java.net.URI uRI7 = crawlerURL1.getUri();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str2, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(uRI6);
        org.junit.Assert.assertNull(uRI7);
    }

    @Test
    public void test09861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09861");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setMaxLevels(10);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder8.setOnlyOnPath("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setStartUrl("AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setOnlyOnPath("CrawlerURL url:1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder18.setOnlyOnPath("com.soulgalore.crawler.http.socket.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder18.setNotOnPath("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:52encoding:AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads type:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
    }

    @Test
    public void test09862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09862");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getNotOnPath();
        int int7 = crawlerConfiguration5.getMaxLevels();
        boolean boolean8 = crawlerConfiguration5.isVerifyUrls();
        java.lang.String str9 = crawlerConfiguration5.getRequestHeaders();
        boolean boolean10 = crawlerConfiguration5.isVerifyUrls();
        java.lang.String str11 = crawlerConfiguration5.getOnlyOnPath();
        java.lang.String str12 = crawlerConfiguration5.getNotOnPath();
        int int13 = crawlerConfiguration5.getMaxLevels();
        int int14 = crawlerConfiguration5.getMaxLevels();
        java.lang.String str15 = crawlerConfiguration5.getRequestHeaders();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test09863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09863");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder3 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder3.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration6 = builder5.build();
        java.lang.String str7 = crawlerConfiguration6.getStartUrl();
        int int8 = crawlerConfiguration6.getMaxLevels();
        int int9 = crawlerConfiguration6.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean13 = crawlerURL12.isWrongSyntax();
        java.lang.String str14 = crawlerURL12.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse22 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL12, (int) 'a', strMap16, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str23 = hTMLPageResponse22.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = hTMLPageResponse22.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = hTMLPageResponse22.getResponseHeaders();
        java.lang.String str26 = hTMLPageResponse22.getUrl();
        org.jsoup.nodes.Document document27 = hTMLPageResponse22.getBody();
        boolean boolean28 = crawlerConfiguration6.equals((java.lang.Object) hTMLPageResponse22);
        boolean boolean29 = crawlerURL1.equals((java.lang.Object) hTMLPageResponse22);
        int int30 = hTMLPageResponse22.getResponseCode();
        long long31 = hTMLPageResponse22.getFetchTime();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = hTMLPageResponse22.getHeaderValue("CrawlerURL url:AssetResponseCallable url:1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(crawlerConfiguration6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "urls.txt" + "'", str14, "urls.txt");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str23, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "com.soulgalore.crawler.auth" + "'", str26, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 97 + "'", int30 == 97);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 100L + "'", long31 == 100L);
    }

    @Test
    public void test09864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09864");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI5 = crawlerURL4.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL9 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean10 = crawlerURL9.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration17 = builder12.build();
        java.lang.String str18 = crawlerConfiguration17.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = crawlerConfiguration17.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse25 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL9, (-1), strMap19, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse31 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL4, 100, strMap19, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.lang.String str32 = hTMLPageResponse31.getEncoding();
        java.lang.String str33 = hTMLPageResponse31.toString();
        int int34 = hTMLPageResponse31.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL37 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean38 = crawlerURL37.isWrongSyntax();
        java.lang.String str39 = crawlerURL37.getReferer();
        java.lang.String str40 = crawlerURL37.getHost();
        java.lang.String str41 = crawlerURL37.getUrl();
        java.lang.String str42 = crawlerURL37.getHost();
        java.lang.String str43 = crawlerURL37.getReferer();
        com.soulgalore.crawler.util.HeaderUtil headerUtil45 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = headerUtil45.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap49 = headerUtil45.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap51 = headerUtil45.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse57 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL37, 582, strMap51, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:581encoding:AssetResponseCallable url:result.csv type:CrawlerURL url:CrawlerURL url:errorassets.csv", "urls.txt", (-1L), "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) 580);
        boolean boolean58 = hTMLPageResponse31.equals((java.lang.Object) "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.util.Map<java.lang.String, java.lang.String> strMap59 = hTMLPageResponse31.getResponseHeaders();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable61 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("errorurls.txt", assetFetcher1, strMap59, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.lang.String str62 = assetResponseCallable61.toString();
        org.junit.Assert.assertNull(uRI5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(crawlerConfiguration17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Malformed url" + "'", str32, "Malformed url");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1" + "'", str33, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "urls.txt" + "'", str39, "urls.txt");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "com.soulgalore.crawler.auth" + "'", str41, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "urls.txt" + "'", str43, "urls.txt");
        org.junit.Assert.assertNotNull(headerUtil45);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "AssetResponseCallable url:errorurls.txt" + "'", str62, "AssetResponseCallable url:errorurls.txt");
    }

    @Test
    public void test09865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09865");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        java.lang.String str2 = crawlerURL1.toString();
        java.lang.String str3 = crawlerURL1.toString();
        java.lang.String str4 = crawlerURL1.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (byte) -1, strMap6, "Response timed out", "AssetResponseCallable url:Wrong content type", 100L, "AssetResponseCallable url:-1", (long) 582);
        java.util.Map<java.lang.String, java.lang.String> strMap13 = hTMLPageResponse12.getResponseHeaders();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "CrawlerURL url:hi!" + "'", str2, "CrawlerURL url:hi!");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "CrawlerURL url:hi!" + "'", str3, "CrawlerURL url:hi!");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(strMap13);
    }

    @Test
    public void test09866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09866");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse37 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (short) 100, strMap31, "-1", "1", (long) (byte) 10, "com.soulgalore.crawler.nrofhttpthreads", (long) (short) 1);
        java.lang.String str38 = hTMLPageResponse37.toString();
        org.jsoup.nodes.Document document39 = hTMLPageResponse37.getBody();
        long long40 = hTMLPageResponse37.getFetchTime();
        java.lang.String str41 = hTMLPageResponse37.getUrl();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads" + "'", str38, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNull(document39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1L + "'", long40 == 1L);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "com.soulgalore.crawler.auth" + "'", str41, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test09867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09867");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        int int19 = hTMLPageResponse12.getResponseCode();
        java.lang.String str20 = hTMLPageResponse12.getEncoding();
        java.lang.String str21 = hTMLPageResponse12.getResponseType();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL23 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder24.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration27 = builder26.build();
        java.lang.String str28 = crawlerConfiguration27.getOnlyOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        boolean boolean30 = crawlerConfiguration27.equals((java.lang.Object) builder29);
        java.lang.String str31 = crawlerConfiguration27.getStartUrl();
        java.lang.String str32 = crawlerConfiguration27.getOnlyOnPath();
        java.lang.String str33 = crawlerConfiguration27.getStartUrl();
        boolean boolean34 = hTMLPageResponse12.equals((java.lang.Object) crawlerConfiguration27);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str36 = hTMLPageResponse12.getEncoding();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL17);
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 97 + "'", int19 == 97);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str20, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(crawlerURL22);
        org.junit.Assert.assertNotNull(crawlerURL23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(crawlerConfiguration27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str36, "com.soulgalore.crawler.http.socket.timeout");
    }

    @Test
    public void test09868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09868");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet14 = crawlerResult12.getNonWorkingUrls();
        java.lang.String str15 = crawlerResult12.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean21 = crawlerURL20.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean25 = crawlerURL24.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL28 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI29 = crawlerURL28.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray30 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL20, crawlerURL24, crawlerURL28 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet31 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet31, crawlerURLArray30);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray33 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet34 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet34, hTMLPageResponseArray33);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray40 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL39 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, crawlerURLArray40);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet43 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray44 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet45 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45, hTMLPageResponseArray44);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult47 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, hTMLPageResponseSet43, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult48 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet31, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet34, hTMLPageResponseSet43);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet49 = crawlerResult48.getVerifiedURLResponses();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL53 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray54 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL53 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet55 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet55, crawlerURLArray54);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet57 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray58 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet59 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet59, hTMLPageResponseArray58);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult61 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet55, hTMLPageResponseSet57, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet59);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet62 = crawlerResult61.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult63 = new com.soulgalore.crawler.core.CrawlerResult("hi!", crawlerURLSet16, hTMLPageResponseSet49, hTMLPageResponseSet62);
        java.lang.String str64 = crawlerResult63.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet65 = crawlerResult63.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet66 = crawlerResult63.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet67 = crawlerResult63.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet68 = crawlerResult63.getNonWorkingUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(uRI29);
        org.junit.Assert.assertNotNull(crawlerURLArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet49);
        org.junit.Assert.assertNotNull(crawlerURLArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet65);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet66);
        org.junit.Assert.assertNotNull(crawlerURLSet67);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet68);
    }

    @Test
    public void test09869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09869");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int19 = hTMLPageResponse18.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = hTMLPageResponse18.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL23 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI24 = crawlerURL23.getUri();
        java.lang.String str25 = crawlerURL23.getReferer();
        java.lang.String str26 = crawlerURL23.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder28.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration31 = builder30.build();
        java.lang.String str32 = crawlerConfiguration31.getStartUrl();
        int int33 = crawlerConfiguration31.getMaxLevels();
        int int34 = crawlerConfiguration31.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = crawlerConfiguration31.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse41 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL23, (int) (byte) -1, strMap35, "100", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) (short) -1, "com.soulgalore.crawler.nrofhttpthreads", 0L);
        java.lang.String str43 = hTMLPageResponse41.getHeaderValue("-1");
        java.lang.String str45 = hTMLPageResponse41.getHeaderValue("");
        java.lang.String str46 = hTMLPageResponse41.getResponseType();
        java.lang.String str48 = hTMLPageResponse41.getHeaderValue("AssetResponseCallable url:");
        boolean boolean49 = hTMLPageResponse18.equals((java.lang.Object) str48);
        java.lang.String str50 = hTMLPageResponse18.getResponseType();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL51 = hTMLPageResponse18.getPageUrl();
        org.jsoup.nodes.Document document52 = hTMLPageResponse18.getBody();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(uRI24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "urls.txt" + "'", str25, "urls.txt");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "urls.txt" + "'", str26, "urls.txt");
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(crawlerConfiguration31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str46, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "com.soulgalore.crawler.auth" + "'", str50, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL51);
        org.junit.Assert.assertNull(document52);
    }

    @Test
    public void test09870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09870");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int13 = hTMLPageResponse12.getResponseCode();
        java.lang.String str14 = hTMLPageResponse12.getResponseType();
        java.lang.String str15 = hTMLPageResponse12.toString();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        java.lang.String str17 = hTMLPageResponse12.getResponseType();
        long long18 = hTMLPageResponse12.getFetchTime();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = hTMLPageResponse12.getHeaderValue("CrawlerURL url:100");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str15, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 100L + "'", long18 == 100L);
    }

    @Test
    public void test09871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09871");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setOnlyOnPath("result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setOnlyOnPath("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration9 = builder8.build();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = crawlerConfiguration9.getRequestHeadersMap();
        int int11 = crawlerConfiguration9.getMaxLevels();
        int int12 = crawlerConfiguration9.getMaxLevels();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(crawlerConfiguration9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test09872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09872");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("", "errorassets.csv");
        java.lang.String str3 = crawlerURL2.toString();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse11 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 35, strMap5, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads type:-1", "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url", 1L, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url", 1L);
        java.lang.String str12 = hTMLPageResponse11.getResponseType();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "CrawlerURL url:" + "'", str3, "CrawlerURL url:");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url" + "'", str12, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
    }

    @Test
    public void test09873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09873");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse10 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) ' ', strMap4, "AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout", "hi!", (long) (short) 10, "97", (long) (short) 10);
        long long11 = hTMLPageResponse10.getFetchTime();
        java.lang.String str12 = hTMLPageResponse10.getUrl();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10L + "'", long11 == 10L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str12, "com.soulgalore.crawler.nrofhttpthreads");
    }

    @Test
    public void test09874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09874");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        int int6 = crawlerConfiguration5.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil7 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean8 = crawlerConfiguration5.equals((java.lang.Object) headerUtil7);
        int int9 = crawlerConfiguration5.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL12 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean13 = crawlerURL12.isWrongSyntax();
        java.lang.String str14 = crawlerURL12.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse22 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL12, (int) 'a', strMap16, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str23 = hTMLPageResponse22.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = hTMLPageResponse22.getResponseHeaders();
        java.lang.String str25 = hTMLPageResponse22.getEncoding();
        java.lang.String str26 = hTMLPageResponse22.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL27 = hTMLPageResponse22.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL28 = hTMLPageResponse22.getPageUrl();
        int int29 = hTMLPageResponse22.getResponseCode();
        java.lang.String str30 = hTMLPageResponse22.getEncoding();
        int int31 = hTMLPageResponse22.getResponseCode();
        java.lang.String str32 = hTMLPageResponse22.getResponseType();
        boolean boolean33 = crawlerConfiguration5.equals((java.lang.Object) str32);
        java.lang.String str34 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str35 = crawlerConfiguration5.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(headerUtil7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "urls.txt" + "'", str14, "urls.txt");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str23, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str25, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str26, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL27);
        org.junit.Assert.assertNotNull(crawlerURL28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 97 + "'", int29 == 97);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str30, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 97 + "'", int31 == 97);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
    }

    @Test
    public void test09875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09875");
        com.soulgalore.crawler.util.StatusCode statusCode0 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT;
        java.lang.String str1 = statusCode0.getFriendlyName();
        int int2 = statusCode0.getCode();
        int int3 = statusCode0.getCode();
        java.lang.String str4 = statusCode0.getFriendlyName();
        int int5 = statusCode0.getCode();
        java.lang.String str6 = statusCode0.getFriendlyName();
        org.junit.Assert.assertTrue("'" + statusCode0 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT + "'", statusCode0.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_TIMEOUT));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Response timed out" + "'", str1, "Response timed out");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 580 + "'", int2 == 580);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 580 + "'", int3 == 580);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Response timed out" + "'", str4, "Response timed out");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 580 + "'", int5 == 580);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Response timed out" + "'", str6, "Response timed out");
    }

    @Test
    public void test09876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09876");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean14 = assetResponse4.equals((java.lang.Object) 100L);
        java.lang.String str15 = assetResponse4.getReferer();
        java.lang.String str16 = assetResponse4.getReferer();
        long long17 = assetResponse4.getFetchTime();
        boolean boolean19 = assetResponse4.equals((java.lang.Object) (-1));
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher21 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI25 = crawlerURL24.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration30 = builder29.build();
        java.lang.String str31 = crawlerConfiguration30.getStartUrl();
        int int32 = crawlerConfiguration30.getMaxLevels();
        int int33 = crawlerConfiguration30.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = crawlerConfiguration30.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse40 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL24, (int) (short) 10, strMap34, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable42 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Malformed url", assetFetcher21, strMap34, "errorurls.txt");
        boolean boolean43 = assetResponse4.equals((java.lang.Object) strMap34);
        int int44 = assetResponse4.getResponseCode();
        java.lang.String str45 = assetResponse4.getUrl();
        long long46 = assetResponse4.getFetchTime();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "100" + "'", str15, "100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "100" + "'", str16, "100");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(uRI25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(crawlerConfiguration30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
    }

    @Test
    public void test09877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09877");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = crawlerURL2.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean17 = crawlerURL16.isWrongSyntax();
        java.lang.String str18 = crawlerURL16.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse26 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL16, (int) 'a', strMap20, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder27.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder27.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = builder33.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = builder35.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = builder37.setVerifyUrls(false);
        boolean boolean40 = hTMLPageResponse26.equals((java.lang.Object) builder39);
        boolean boolean41 = crawlerURL2.equals((java.lang.Object) hTMLPageResponse26);
        long long42 = hTMLPageResponse26.getFetchTime();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "urls.txt" + "'", str18, "urls.txt");
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 100L + "'", long42 == 100L);
    }

    @Test
    public void test09878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09878");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI23 = crawlerURL22.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL27 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean28 = crawlerURL27.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder30.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder30.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration35 = builder30.build();
        java.lang.String str36 = crawlerConfiguration35.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = crawlerConfiguration35.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse43 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL27, (-1), strMap37, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse49 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL22, 100, strMap37, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse55 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (byte) 10, strMap37, "100", "errorassets.csv", (long) (byte) 100, "", (long) (short) 100);
        java.lang.String str57 = hTMLPageResponse55.getHeaderValue("35");
        java.util.Map<java.lang.String, java.lang.String> strMap58 = hTMLPageResponse55.getResponseHeaders();
        java.lang.String str59 = hTMLPageResponse55.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL60 = hTMLPageResponse55.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap61 = hTMLPageResponse55.getResponseHeaders();
        java.lang.String str62 = hTMLPageResponse55.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(uRI23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(crawlerConfiguration35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:" + "'", str59, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:");
        org.junit.Assert.assertNotNull(crawlerURL60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:" + "'", str62, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:");
    }

    @Test
    public void test09879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09879");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:100", "result.csv", 0, (long) (short) 1);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray5 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet6, assetResponseArray5);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray8 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet9, assetResponseArray8);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult11 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet6, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet9);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = assetsVerificationResult11.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet13 = assetsVerificationResult11.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray14 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet15 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15, assetResponseArray14);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray17 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet18 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18, assetResponseArray17);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult20 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet18);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult21 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet13, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet15);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray22 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet23 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23, assetResponseArray22);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray25 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet26 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet26, assetResponseArray25);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult28 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet23, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet26);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet29 = assetsVerificationResult28.getWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult30 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet13, assetResponseSet29);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet31 = assetsVerificationResult30.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet32 = assetsVerificationResult30.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet33 = assetsVerificationResult30.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet34 = assetsVerificationResult30.getWorkingAssets();
        boolean boolean35 = assetResponse4.equals((java.lang.Object) assetResponseSet34);
        int int36 = assetResponse4.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean40 = crawlerURL39.isWrongSyntax();
        java.lang.String str41 = crawlerURL39.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse49 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL39, (int) 'a', strMap43, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int50 = hTMLPageResponse49.getResponseCode();
        java.lang.String str51 = hTMLPageResponse49.getResponseType();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL52 = hTMLPageResponse49.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = hTMLPageResponse49.getResponseHeaders();
        boolean boolean54 = assetResponse4.equals((java.lang.Object) hTMLPageResponse49);
        java.lang.String str55 = assetResponse4.getUrl();
        org.junit.Assert.assertNotNull(assetResponseArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(assetResponseArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(assetResponseSet12);
        org.junit.Assert.assertNotNull(assetResponseSet13);
        org.junit.Assert.assertNotNull(assetResponseArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(assetResponseArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(assetResponseArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(assetResponseArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(assetResponseSet29);
        org.junit.Assert.assertNotNull(assetResponseSet31);
        org.junit.Assert.assertNotNull(assetResponseSet32);
        org.junit.Assert.assertNotNull(assetResponseSet33);
        org.junit.Assert.assertNotNull(assetResponseSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "urls.txt" + "'", str41, "urls.txt");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 97 + "'", int50 == 97);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(crawlerURL52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "AssetResponseCallable url:100" + "'", str55, "AssetResponseCallable url:100");
    }

    @Test
    public void test09880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09880");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.lang.String str14 = hTMLPageResponse12.getResponseType();
        java.lang.String str15 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "com.soulgalore.crawler.auth");
        java.lang.String str21 = crawlerURL20.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration26 = builder25.build();
        java.lang.String str27 = crawlerConfiguration26.getOnlyOnPath();
        boolean boolean28 = crawlerConfiguration26.isVerifyUrls();
        int int29 = crawlerConfiguration26.getMaxLevels();
        int int30 = crawlerConfiguration26.getMaxLevels();
        boolean boolean31 = crawlerConfiguration26.isVerifyUrls();
        boolean boolean32 = crawlerConfiguration26.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = crawlerConfiguration26.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse39 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, 100, strMap33, "Unknown error", "com.soulgalore.crawler.http.socket.timeout", (long) 10, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", 0L);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL16, (int) '4', strMap33, "97", "100", (long) (byte) 1, "com.soulgalore.crawler.http.socket.timeout", (long) (byte) -1);
        int int46 = hTMLPageResponse45.getResponseCode();
        int int47 = hTMLPageResponse45.getResponseCode();
        org.jsoup.nodes.Document document48 = hTMLPageResponse45.getBody();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.auth" + "'", str15, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "CrawlerURL url:urls.txt" + "'", str21, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(crawlerConfiguration26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNull(document48);
    }

    @Test
    public void test09881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09881");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider(582, (int) (short) 100, (int) '4', "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url", "HTMLPageResponseurl:CrawlerURL url:hi!responseCode:0encoding:AssetResponseCallable url:com.soulgalore.crawler.auth type:com.soulgalore.crawler.auth");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"HTMLPageResponseurl\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09882");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        java.lang.String str9 = assetResponse4.getReferer();
        int int10 = assetResponse4.getResponseCode();
        java.lang.String str11 = assetResponse4.getUrl();
        java.lang.String str12 = assetResponse4.getUrl();
        int int13 = assetResponse4.getResponseCode();
        java.lang.String str14 = assetResponse4.getUrl();
        java.lang.String str15 = assetResponse4.getUrl();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "100" + "'", str9, "100");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test09883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09883");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration5.getRequestHeadersMap();
        boolean boolean8 = crawlerConfiguration5.isVerifyUrls();
        java.lang.String str9 = crawlerConfiguration5.getStartUrl();
        boolean boolean10 = crawlerConfiguration5.isVerifyUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL13 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean14 = crawlerURL13.isWrongSyntax();
        java.lang.String str15 = crawlerURL13.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL13, (int) 'a', strMap17, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int24 = hTMLPageResponse23.getResponseCode();
        java.lang.String str25 = hTMLPageResponse23.getResponseType();
        java.lang.String str26 = hTMLPageResponse23.toString();
        java.lang.String str27 = hTMLPageResponse23.getEncoding();
        boolean boolean28 = crawlerConfiguration5.equals((java.lang.Object) hTMLPageResponse23);
        boolean boolean29 = crawlerConfiguration5.isVerifyUrls();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "urls.txt" + "'", str15, "urls.txt");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 97 + "'", int24 == 97);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str26, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str27, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test09884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09884");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("97", "HTMLPageResponseurl:CrawlerURL url:urls.txtresponseCode:97encoding:CrawlerURL url:com.soulgalore.crawler.proxy type:", 100, (long) 100);
        int int5 = assetResponse4.getResponseCode();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
    }

    @Test
    public void test09885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09885");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(308);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder10.setOnlyOnPath("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setRequestHeaders("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder18.setOnlyOnPath("CrawlerURL url:CrawlerURL url:CrawlerURL url:errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder18.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder24.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration27 = builder26.build();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(crawlerConfiguration27);
    }

    @Test
    public void test09886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09886");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", "com.soulgalore.crawler.http.socket.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder3 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder3.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder3.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder7.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder7.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration14 = builder13.build();
        boolean boolean15 = crawlerConfiguration14.isVerifyUrls();
        boolean boolean16 = crawlerURL2.equals((java.lang.Object) boolean15);
        java.lang.String str17 = crawlerURL2.toString();
        java.lang.String str18 = crawlerURL2.getUrl();
        java.lang.String str19 = crawlerURL2.getHost();
        java.lang.String str20 = crawlerURL2.getReferer();
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(crawlerConfiguration14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str17, "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str18, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str20, "com.soulgalore.crawler.http.socket.timeout");
    }

    @Test
    public void test09887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09887");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder4.setOnlyOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setOnlyOnPath("Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setOnlyOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setMaxLevels(580);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder16.setNotOnPath("");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test09888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09888");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        java.lang.String str6 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str8 = crawlerConfiguration3.getOnlyOnPath();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL13 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray14 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL13 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet15, crawlerURLArray14);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray18 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet19 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet19, hTMLPageResponseArray18);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult21 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet15, hTMLPageResponseSet17, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet19);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet22 = crawlerResult21.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet23 = crawlerResult21.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet24 = crawlerResult21.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL28 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray29 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL28 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet30 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet30, crawlerURLArray29);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet32 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray33 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet34 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet34, hTMLPageResponseArray33);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult36 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet30, hTMLPageResponseSet32, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet34);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet37 = crawlerResult36.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet38 = crawlerResult36.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet39 = crawlerResult36.getUrls();
        java.lang.String str40 = crawlerResult36.getTheStartPoint();
        java.lang.String str41 = crawlerResult36.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet42 = crawlerResult36.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet43 = crawlerResult36.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL48 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray49 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL48 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet50 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet50, crawlerURLArray49);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet52 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray53 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet54 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet54, hTMLPageResponseArray53);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult56 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet50, hTMLPageResponseSet52, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet54);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet57 = crawlerResult56.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet58 = crawlerResult56.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet59 = crawlerResult56.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet60 = crawlerResult56.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet61 = crawlerResult56.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet62 = crawlerResult56.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL66 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray67 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL66 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet68 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet68, crawlerURLArray67);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet70 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray71 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet72 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet72, hTMLPageResponseArray71);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult74 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet68, hTMLPageResponseSet70, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet72);
        java.lang.String str75 = crawlerResult74.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet76 = crawlerResult74.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet77 = crawlerResult74.getNonWorkingUrls();
        java.lang.String str78 = crawlerResult74.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet79 = crawlerResult74.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL83 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray84 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL83 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet85 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet85, crawlerURLArray84);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet87 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray88 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet89 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet89, hTMLPageResponseArray88);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult91 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet85, hTMLPageResponseSet87, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet89);
        java.lang.String str92 = crawlerResult91.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet93 = crawlerResult91.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet94 = crawlerResult91.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult95 = new com.soulgalore.crawler.core.CrawlerResult("CrawlerURL url:urls.txt", crawlerURLSet62, hTMLPageResponseSet79, hTMLPageResponseSet94);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult96 = new com.soulgalore.crawler.core.CrawlerResult("32", crawlerURLSet24, hTMLPageResponseSet43, hTMLPageResponseSet79);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet97 = crawlerResult96.getNonWorkingUrls();
        java.lang.String str98 = crawlerResult96.getTheStartPoint();
        boolean boolean99 = crawlerConfiguration3.equals((java.lang.Object) str98);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(crawlerURLArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet22);
        org.junit.Assert.assertNotNull(crawlerURLSet23);
        org.junit.Assert.assertNotNull(crawlerURLSet24);
        org.junit.Assert.assertNotNull(crawlerURLArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet37);
        org.junit.Assert.assertNotNull(crawlerURLSet38);
        org.junit.Assert.assertNotNull(crawlerURLSet39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet42);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet43);
        org.junit.Assert.assertNotNull(crawlerURLArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet57);
        org.junit.Assert.assertNotNull(crawlerURLSet58);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet59);
        org.junit.Assert.assertNotNull(crawlerURLSet60);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet61);
        org.junit.Assert.assertNotNull(crawlerURLSet62);
        org.junit.Assert.assertNotNull(crawlerURLArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet76);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet79);
        org.junit.Assert.assertNotNull(crawlerURLArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "hi!" + "'", str92, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet93);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet94);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet97);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "32" + "'", str98, "32");
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test09889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09889");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.lang.String str13 = crawlerResult12.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = crawlerResult12.getNonWorkingUrls();
        java.lang.String str16 = crawlerResult12.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet18 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray23 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL22 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet24 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, crawlerURLArray23);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray27 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet28 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28, hTMLPageResponseArray27);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult30 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, hTMLPageResponseSet26, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet31 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet32 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet33 = crawlerResult30.getUrls();
        java.lang.String str34 = crawlerResult30.getTheStartPoint();
        java.lang.String str35 = crawlerResult30.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet36 = crawlerResult30.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL40 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray41 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL40 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet42 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet42, crawlerURLArray41);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet44 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray45 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet46 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet46, hTMLPageResponseArray45);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult48 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet42, hTMLPageResponseSet44, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet46);
        java.lang.String str49 = crawlerResult48.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet50 = crawlerResult48.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet51 = crawlerResult48.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet52 = crawlerResult48.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet53 = crawlerResult48.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult54 = new com.soulgalore.crawler.core.CrawlerResult("Response timed out", crawlerURLSet18, hTMLPageResponseSet36, hTMLPageResponseSet53);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet55 = crawlerResult54.getNonWorkingUrls();
        java.lang.String str56 = crawlerResult54.getTheStartPoint();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet17);
        org.junit.Assert.assertNotNull(crawlerURLSet18);
        org.junit.Assert.assertNotNull(crawlerURLArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet31);
        org.junit.Assert.assertNotNull(crawlerURLSet32);
        org.junit.Assert.assertNotNull(crawlerURLSet33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet36);
        org.junit.Assert.assertNotNull(crawlerURLArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet50);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet51);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet52);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet53);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Response timed out" + "'", str56, "Response timed out");
    }

    @Test
    public void test09890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09890");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        java.lang.String str20 = hTMLPageResponse18.getHeaderValue("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = hTMLPageResponse18.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = hTMLPageResponse18.getPageUrl();
        java.lang.String str23 = hTMLPageResponse18.getEncoding();
        long long24 = hTMLPageResponse18.getFetchTime();
        java.lang.String str25 = hTMLPageResponse18.getResponseType();
        java.lang.String str26 = hTMLPageResponse18.toString();
        java.lang.String str27 = hTMLPageResponse18.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = hTMLPageResponse18.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder29.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration32 = builder31.build();
        java.lang.String str33 = crawlerConfiguration32.getStartUrl();
        java.lang.String str34 = crawlerConfiguration32.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = crawlerConfiguration32.getRequestHeadersMap();
        java.lang.String str36 = crawlerConfiguration32.getNotOnPath();
        int int37 = crawlerConfiguration32.getMaxLevels();
        java.lang.String str38 = crawlerConfiguration32.getRequestHeaders();
        java.lang.String str39 = crawlerConfiguration32.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = crawlerConfiguration32.getRequestHeadersMap();
        boolean boolean41 = crawlerConfiguration32.isVerifyUrls();
        int int42 = crawlerConfiguration32.getMaxLevels();
        boolean boolean43 = hTMLPageResponse18.equals((java.lang.Object) int42);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(crawlerURL21);
        org.junit.Assert.assertNotNull(crawlerURL22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "errorurls.txt" + "'", str23, "errorurls.txt");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 580L + "'", long24 == 580L);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "com.soulgalore.crawler.auth" + "'", str25, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth" + "'", str26, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "errorurls.txt" + "'", str27, "errorurls.txt");
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(crawlerConfiguration32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test09891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09891");
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet0 = null;
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray1 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet2 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet2, assetResponseArray1);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray4 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet5 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet5, assetResponseArray4);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult7 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet2, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet5);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet8 = assetsVerificationResult7.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet9 = assetsVerificationResult7.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet10 = assetsVerificationResult7.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet11 = assetsVerificationResult7.getNonWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet12 = assetsVerificationResult7.getNonWorkingAssets();
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult13 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet0, assetResponseSet12);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet14 = assetsVerificationResult13.getWorkingAssets();
        org.junit.Assert.assertNotNull(assetResponseArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(assetResponseArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(assetResponseSet8);
        org.junit.Assert.assertNotNull(assetResponseSet9);
        org.junit.Assert.assertNotNull(assetResponseSet10);
        org.junit.Assert.assertNotNull(assetResponseSet11);
        org.junit.Assert.assertNotNull(assetResponseSet12);
        org.junit.Assert.assertNull(assetResponseSet14);
    }

    @Test
    public void test09892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09892");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:0 type:", "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (int) (byte) -1, (long) (short) 10);
        int int5 = assetResponse4.getResponseCode();
        long long6 = assetResponse4.getFetchTime();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10L + "'", long6 == 10L);
    }

    @Test
    public void test09893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09893");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.proxy", "", (int) (short) -1, (long) 583);
        com.soulgalore.crawler.guice.ExecutorServiceProvider executorServiceProvider6 = new com.soulgalore.crawler.guice.ExecutorServiceProvider((int) (byte) 10);
        boolean boolean7 = assetResponse4.equals((java.lang.Object) (byte) 10);
        java.lang.String str8 = assetResponse4.getUrl();
        java.lang.String str9 = assetResponse4.getReferer();
        com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider15 = new com.soulgalore.crawler.guice.HttpClientProvider(581, (int) (short) 0, 581, "", "AssetResponseCallable url:Malformed url");
        org.apache.http.client.HttpClient httpClient16 = httpClientProvider15.get();
        org.apache.http.client.HttpClient httpClient17 = httpClientProvider15.get();
        org.apache.http.client.HttpClient httpClient18 = httpClientProvider15.get();
        org.apache.http.client.HttpClient httpClient19 = httpClientProvider15.get();
        boolean boolean20 = assetResponse4.equals((java.lang.Object) httpClientProvider15);
        org.apache.http.client.HttpClient httpClient21 = httpClientProvider15.get();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "com.soulgalore.crawler.proxy" + "'", str8, "com.soulgalore.crawler.proxy");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(httpClient16);
        org.junit.Assert.assertNotNull(httpClient17);
        org.junit.Assert.assertNotNull(httpClient18);
        org.junit.Assert.assertNotNull(httpClient19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(httpClient21);
    }

    @Test
    public void test09894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09894");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean6 = crawlerURL5.isWrongSyntax();
        java.lang.String str7 = crawlerURL5.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse15 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (int) 'a', strMap9, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str16 = hTMLPageResponse15.getUrl();
        boolean boolean17 = crawlerURL1.equals((java.lang.Object) str16);
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse22 = new com.soulgalore.crawler.core.assets.AssetResponse("", "errorurls.txt", 97, (-1L));
        java.lang.String str23 = assetResponse22.getReferer();
        int int24 = assetResponse22.getResponseCode();
        boolean boolean25 = crawlerURL1.equals((java.lang.Object) int24);
        java.lang.String str26 = crawlerURL1.getReferer();
        java.net.URI uRI27 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder28.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder28.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder28.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration35 = builder28.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = builder28.setOnlyOnPath("com.soulgalore.crawler.http.socket.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = builder28.setVerifyUrls(true);
        boolean boolean40 = crawlerURL1.equals((java.lang.Object) true);
        java.lang.String str41 = crawlerURL1.toString();
        java.lang.String str42 = crawlerURL1.toString();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "urls.txt" + "'", str7, "urls.txt");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "errorurls.txt" + "'", str23, "errorurls.txt");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 97 + "'", int24 == 97);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(uRI27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(crawlerConfiguration35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str41, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str42, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
    }

    @Test
    public void test09895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09895");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:com.soulgalore.crawler.proxy", "AssetResponseCallable url:97");
        java.net.URI uRI3 = crawlerURL2.getUri();
        java.lang.String str4 = crawlerURL2.getReferer();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "AssetResponseCallable url:97" + "'", str4, "AssetResponseCallable url:97");
    }

    @Test
    public void test09896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09896");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder4.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration6 = builder4.build();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL9 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean10 = crawlerURL9.isWrongSyntax();
        java.lang.String str11 = crawlerURL9.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse19 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL9, (int) 'a', strMap13, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        org.jsoup.nodes.Document document20 = hTMLPageResponse19.getBody();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder21.setMaxLevels((int) (short) 0);
        boolean boolean26 = hTMLPageResponse19.equals((java.lang.Object) builder21);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL27 = hTMLPageResponse19.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = hTMLPageResponse19.getResponseHeaders();
        boolean boolean29 = crawlerConfiguration6.equals((java.lang.Object) hTMLPageResponse19);
        int int30 = crawlerConfiguration6.getMaxLevels();
        java.lang.String str31 = crawlerConfiguration6.getNotOnPath();
        java.lang.String str32 = crawlerConfiguration6.getOnlyOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertNotNull(crawlerConfiguration6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "urls.txt" + "'", str11, "urls.txt");
        org.junit.Assert.assertNull(document20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(crawlerURL27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "errorassets.csv" + "'", str31, "errorassets.csv");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
    }

    @Test
    public void test09897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09897");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder0.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder0.setRequestHeaders("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = builder9.setNotOnPath("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration14 = builder11.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder11.build();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL17 = new com.soulgalore.crawler.core.CrawlerURL("");
        boolean boolean18 = crawlerURL17.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean22 = crawlerURL21.isWrongSyntax();
        java.lang.String str23 = crawlerURL21.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse31 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL21, (int) 'a', strMap25, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str32 = hTMLPageResponse31.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = hTMLPageResponse31.getResponseHeaders();
        java.lang.String str34 = hTMLPageResponse31.getEncoding();
        java.lang.String str35 = hTMLPageResponse31.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder36.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder36.setMaxLevels((int) (short) 0);
        boolean boolean41 = hTMLPageResponse31.equals((java.lang.Object) builder40);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder43 = builder40.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder45 = builder40.setMaxLevels((int) (short) 10);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder47 = builder40.setNotOnPath("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder49 = builder47.setRequestHeaders("AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        boolean boolean50 = crawlerURL17.equals((java.lang.Object) builder49);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder52 = builder49.setVerifyUrls(false);
        boolean boolean53 = crawlerConfiguration15.equals((java.lang.Object) builder52);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(crawlerConfiguration14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "urls.txt" + "'", str23, "urls.txt");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str32, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str34, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str35, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test09898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09898");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder0.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder0.setStartUrl("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
    }

    @Test
    public void test09899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09899");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean9 = crawlerURL8.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder11.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration16 = builder11.build();
        java.lang.String str17 = crawlerConfiguration16.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = crawlerConfiguration16.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse24 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL8, (-1), strMap18, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int25 = hTMLPageResponse24.getResponseCode();
        long long26 = hTMLPageResponse24.getFetchTime();
        long long27 = hTMLPageResponse24.getFetchTime();
        boolean boolean28 = crawlerConfiguration3.equals((java.lang.Object) hTMLPageResponse24);
        java.lang.String str29 = crawlerConfiguration3.getOnlyOnPath();
        java.lang.String str30 = crawlerConfiguration3.getStartUrl();
        boolean boolean31 = crawlerConfiguration3.isVerifyUrls();
        boolean boolean33 = crawlerConfiguration3.equals((java.lang.Object) 'a');
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(crawlerConfiguration16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 580L + "'", long26 == 580L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 580L + "'", long27 == 580L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test09900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09900");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        int int6 = crawlerConfiguration5.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil7 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean8 = crawlerConfiguration5.equals((java.lang.Object) headerUtil7);
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil7.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil7.createHeadersFromString("CrawlerURL url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil7.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap16 = headerUtil7.createHeadersFromString("CrawlerURL url:errorassets.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap18 = headerUtil7.createHeadersFromString("HTMLPageResponseurl:AssetResponseCallable url:Malformed urlresponseCode:581encoding:Unknown error type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
        java.util.Map<java.lang.String, java.lang.String> strMap20 = headerUtil7.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(headerUtil7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test09901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09901");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.lang.String str13 = crawlerResult12.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet16 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet17 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray22 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL21 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet23 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet23, crawlerURLArray22);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet25 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray26 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet27 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet27, hTMLPageResponseArray26);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult29 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet23, hTMLPageResponseSet25, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet27);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet30 = crawlerResult29.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet31 = crawlerResult29.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet32 = crawlerResult29.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet33 = crawlerResult29.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet34 = null;
        com.soulgalore.crawler.core.CrawlerResult crawlerResult35 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.nrofhttpthreads", crawlerURLSet17, hTMLPageResponseSet33, hTMLPageResponseSet34);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet36 = crawlerResult35.getUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet15);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet16);
        org.junit.Assert.assertNotNull(crawlerURLSet17);
        org.junit.Assert.assertNotNull(crawlerURLArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet30);
        org.junit.Assert.assertNotNull(crawlerURLSet31);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet32);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet33);
        org.junit.Assert.assertNotNull(crawlerURLSet36);
    }

    @Test
    public void test09902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09902");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.lang.String str30 = hTMLPageResponse29.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL31 = hTMLPageResponse29.getPageUrl();
        java.lang.String str32 = hTMLPageResponse29.getResponseType();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = hTMLPageResponse29.getPageUrl();
        java.lang.String str34 = crawlerURL33.getHost();
        java.net.URI uRI35 = crawlerURL33.getUri();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "com.soulgalore.crawler.auth" + "'", str30, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURL31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "-1" + "'", str32, "-1");
        org.junit.Assert.assertNotNull(crawlerURL33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(uRI35);
    }

    @Test
    public void test09903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09903");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels((int) (short) -1);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setOnlyOnPath("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setStartUrl("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration19 = builder18.build();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(crawlerConfiguration19);
    }

    @Test
    public void test09904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09904");
        com.soulgalore.crawler.util.StatusCode statusCode0 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN;
        java.lang.String str1 = statusCode0.getFriendlyName();
        int int2 = statusCode0.getCode();
        int int3 = statusCode0.getCode();
        int int4 = statusCode0.getCode();
        int int5 = statusCode0.getCode();
        int int6 = statusCode0.getCode();
        int int7 = statusCode0.getCode();
        int int8 = statusCode0.getCode();
        int int9 = statusCode0.getCode();
        java.lang.String str10 = statusCode0.getFriendlyName();
        org.junit.Assert.assertTrue("'" + statusCode0 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN + "'", statusCode0.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Unknown error" + "'", str1, "Unknown error");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 581 + "'", int2 == 581);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 581 + "'", int3 == 581);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 581 + "'", int4 == 581);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 581 + "'", int5 == 581);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 581 + "'", int6 == 581);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 581 + "'", int7 == 581);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 581 + "'", int8 == 581);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 581 + "'", int9 == 581);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Unknown error" + "'", str10, "Unknown error");
    }

    @Test
    public void test09905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09905");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean4 = crawlerURL3.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL11 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI12 = crawlerURL11.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray13 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL3, crawlerURL7, crawlerURL11 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet14, crawlerURLArray13);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray16 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet17, hTMLPageResponseArray16);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray23 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL22 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet24 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, crawlerURLArray23);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray27 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet28 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28, hTMLPageResponseArray27);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult30 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, hTMLPageResponseSet26, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult31 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet14, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet17, hTMLPageResponseSet26);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet32 = crawlerResult31.getUrls();
        java.lang.String str33 = crawlerResult31.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet34 = crawlerResult31.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet35 = crawlerResult31.getUrls();
        java.lang.String str36 = crawlerResult31.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet37 = crawlerResult31.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet38 = crawlerResult31.getVerifiedURLResponses();
        java.lang.String str39 = crawlerResult31.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet40 = crawlerResult31.getUrls();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(uRI12);
        org.junit.Assert.assertNotNull(crawlerURLArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "com.soulgalore.crawler.auth" + "'", str33, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet34);
        org.junit.Assert.assertNotNull(crawlerURLSet35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "com.soulgalore.crawler.auth" + "'", str36, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURLSet37);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "com.soulgalore.crawler.auth" + "'", str39, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURLSet40);
    }

    @Test
    public void test09906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09906");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int13 = hTMLPageResponse12.getResponseCode();
        int int14 = hTMLPageResponse12.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL15 = hTMLPageResponse12.getPageUrl();
        long long16 = hTMLPageResponse12.getFetchTime();
        org.jsoup.nodes.Document document17 = hTMLPageResponse12.getBody();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = hTMLPageResponse12.getHeaderValue("AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 97 + "'", int14 == 97);
        org.junit.Assert.assertNotNull(crawlerURL15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertNull(document17);
    }

    @Test
    public void test09907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09907");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setMaxLevels(582);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setStartUrl("CrawlerURL url:-1");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test09908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09908");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int13 = hTMLPageResponse12.getResponseCode();
        java.lang.String str14 = hTMLPageResponse12.getResponseType();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL15 = hTMLPageResponse12.getPageUrl();
        java.lang.String str16 = hTMLPageResponse12.getEncoding();
        java.lang.String str17 = hTMLPageResponse12.toString();
        int int18 = hTMLPageResponse12.getResponseCode();
        int int19 = hTMLPageResponse12.getResponseCode();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(crawlerURL15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str16, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str17, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 97 + "'", int18 == 97);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 97 + "'", int19 == 97);
    }

    @Test
    public void test09909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09909");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder2.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder2.build();
        int int8 = crawlerConfiguration7.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil9 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean10 = crawlerConfiguration7.equals((java.lang.Object) headerUtil9);
        java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil9.createHeadersFromString("CrawlerURL url:-1");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable14 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads", assetFetcher1, strMap12, "AssetResponseCallable url:1");
        java.lang.String str15 = assetResponseCallable14.toString();
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.assets.AssetResponse assetResponse16 = assetResponseCallable14.call();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(headerUtil9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads" + "'", str15, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
    }

    @Test
    public void test09910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09910");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider(97, 52, (int) (byte) 0, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:CrawlerURL url:1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"HTMLPageResponseurl\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09911");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse37 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (short) 100, strMap31, "-1", "1", (long) (byte) 10, "com.soulgalore.crawler.nrofhttpthreads", (long) (short) 1);
        int int38 = hTMLPageResponse37.getResponseCode();
        int int39 = hTMLPageResponse37.getResponseCode();
        int int40 = hTMLPageResponse37.getResponseCode();
        java.lang.String str41 = hTMLPageResponse37.getResponseType();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = hTMLPageResponse37.getResponseHeaders();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str41, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNull(strMap42);
    }

    @Test
    public void test09912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09912");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder2.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setNotOnPath("errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder6.setNotOnPath("hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder6.setOnlyOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder6.setOnlyOnPath("HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setMaxLevels((int) ' ');
        java.lang.Class<?> wildcardClass19 = builder18.getClass();
        boolean boolean20 = crawlerURL1.equals((java.lang.Object) builder18);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test09913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09913");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) builder14);
        long long16 = hTMLPageResponse12.getFetchTime();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder17.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration24 = builder17.build();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = crawlerConfiguration24.getRequestHeadersMap();
        boolean boolean26 = hTMLPageResponse12.equals((java.lang.Object) crawlerConfiguration24);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL27 = hTMLPageResponse12.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = hTMLPageResponse12.getResponseHeaders();
        org.jsoup.nodes.Document document29 = hTMLPageResponse12.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL32 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI33 = crawlerURL32.getUri();
        java.net.URI uRI34 = crawlerURL32.getUri();
        java.net.URI uRI35 = crawlerURL32.getUri();
        java.net.URI uRI36 = crawlerURL32.getUri();
        java.lang.String str37 = crawlerURL32.toString();
        boolean boolean38 = hTMLPageResponse12.equals((java.lang.Object) crawlerURL32);
        int int39 = hTMLPageResponse12.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL40 = hTMLPageResponse12.getPageUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(crawlerConfiguration24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(crawlerURL27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(document29);
        org.junit.Assert.assertNull(uRI33);
        org.junit.Assert.assertNull(uRI34);
        org.junit.Assert.assertNull(uRI35);
        org.junit.Assert.assertNull(uRI36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str37, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 97 + "'", int39 == 97);
        org.junit.Assert.assertNotNull(crawlerURL40);
    }

    @Test
    public void test09914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09914");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse37 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (short) 100, strMap31, "-1", "1", (long) (byte) 10, "com.soulgalore.crawler.nrofhttpthreads", (long) (short) 1);
        int int38 = hTMLPageResponse37.getResponseCode();
        int int39 = hTMLPageResponse37.getResponseCode();
        org.jsoup.nodes.Document document40 = hTMLPageResponse37.getBody();
        java.lang.String str41 = hTMLPageResponse37.getUrl();
        org.jsoup.nodes.Document document42 = hTMLPageResponse37.getBody();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNull(document40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "com.soulgalore.crawler.auth" + "'", str41, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document42);
    }

    @Test
    public void test09915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09915");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.lang.String str5 = crawlerURL2.getHost();
        java.lang.String str6 = crawlerURL2.getUrl();
        java.lang.String str7 = crawlerURL2.getHost();
        java.lang.String str8 = crawlerURL2.getHost();
        java.lang.String str9 = crawlerURL2.getReferer();
        java.lang.String str10 = crawlerURL2.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "com.soulgalore.crawler.auth" + "'", str6, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "urls.txt" + "'", str9, "urls.txt");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str10, "CrawlerURL url:com.soulgalore.crawler.auth");
    }

    @Test
    public void test09916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09916");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        boolean boolean3 = crawlerURL1.isWrongSyntax();
        java.lang.String str4 = crawlerURL1.toString();
        boolean boolean5 = crawlerURL1.isWrongSyntax();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher8 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher10 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher12 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder13.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration18 = builder13.build();
        java.lang.String str19 = crawlerConfiguration18.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = crawlerConfiguration18.getRequestHeadersMap();
        boolean boolean21 = crawlerConfiguration18.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = crawlerConfiguration18.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable24 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("com.soulgalore.crawler.nrofhttpthreads", assetFetcher12, strMap22, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable26 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", assetFetcher10, strMap22, "com.soulgalore.crawler.proxy");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable28 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt", assetFetcher8, strMap22, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse34 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (byte) 0, strMap22, "HTMLPageResponseurl:CrawlerURL url:com.soulgalore.crawler.authresponseCode:0encoding:CrawlerURL url:result.csv type:-1", "AssetResponseCallable url:Unknown error", (long) (byte) 0, "AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout", (long) (byte) 1);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = hTMLPageResponse34.getResponseHeaders();
        java.lang.String str36 = hTMLPageResponse34.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL37 = hTMLPageResponse34.getPageUrl();
        java.lang.String str38 = crawlerURL37.getUrl();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str4, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(crawlerConfiguration18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:AssetResponseCallable url:Unknown error type:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout" + "'", str36, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:AssetResponseCallable url:Unknown error type:AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertNotNull(crawlerURL37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str38, "com.soulgalore.crawler.nrofhttpthreads");
    }

    @Test
    public void test09917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09917");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.lang.String str5 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str7 = crawlerConfiguration3.getStartUrl();
        java.lang.String str8 = crawlerConfiguration3.getNotOnPath();
        int int9 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str10 = crawlerConfiguration3.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test09918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09918");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL3 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI4 = crawlerURL3.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        java.lang.String str9 = crawlerURL7.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse17 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (int) 'a', strMap11, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str18 = hTMLPageResponse17.getUrl();
        boolean boolean19 = crawlerURL3.equals((java.lang.Object) str18);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher22 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil23 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = headerUtil23.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable27 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher22, strMap25, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse33 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL3, (int) (short) 100, strMap25, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        org.jsoup.nodes.Document document34 = hTMLPageResponse33.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL35 = hTMLPageResponse33.getPageUrl();
        java.lang.String str36 = hTMLPageResponse33.getEncoding();
        java.lang.String str38 = hTMLPageResponse33.getHeaderValue("com.soulgalore.crawler.proxy");
        long long39 = hTMLPageResponse33.getFetchTime();
        java.lang.String str40 = hTMLPageResponse33.getResponseType();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder41 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder43 = builder41.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration44 = builder43.build();
        java.lang.String str45 = crawlerConfiguration44.getStartUrl();
        int int46 = crawlerConfiguration44.getMaxLevels();
        int int47 = crawlerConfiguration44.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = crawlerConfiguration44.getRequestHeadersMap();
        java.lang.String str49 = crawlerConfiguration44.getStartUrl();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse54 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int55 = assetResponse54.getResponseCode();
        int int56 = assetResponse54.getResponseCode();
        long long57 = assetResponse54.getFetchTime();
        long long58 = assetResponse54.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse63 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean64 = assetResponse54.equals((java.lang.Object) 100L);
        java.lang.String str65 = assetResponse54.getReferer();
        java.lang.String str66 = assetResponse54.getReferer();
        long long67 = assetResponse54.getFetchTime();
        boolean boolean68 = crawlerConfiguration44.equals((java.lang.Object) assetResponse54);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL71 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean72 = crawlerURL71.isWrongSyntax();
        java.lang.String str73 = crawlerURL71.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse81 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL71, (int) 'a', strMap75, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str82 = hTMLPageResponse81.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL83 = hTMLPageResponse81.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap84 = hTMLPageResponse81.getResponseHeaders();
        org.jsoup.nodes.Document document85 = hTMLPageResponse81.getBody();
        boolean boolean86 = assetResponse54.equals((java.lang.Object) document85);
        boolean boolean87 = hTMLPageResponse33.equals((java.lang.Object) assetResponse54);
        java.util.Map<java.lang.String, java.lang.String> strMap88 = hTMLPageResponse33.getResponseHeaders();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable90 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:", assetFetcher1, strMap88, "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.lang.String str91 = assetResponseCallable90.toString();
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.assets.AssetResponse assetResponse92 = assetResponseCallable90.call();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(uRI4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "urls.txt" + "'", str9, "urls.txt");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.auth" + "'", str18, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(headerUtil23);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(document34);
        org.junit.Assert.assertNotNull(crawlerURL35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Unknown error" + "'", str36, "Unknown error");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 100L + "'", long39 == 100L);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "errorurls.txt" + "'", str40, "errorurls.txt");
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(crawlerConfiguration44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "100" + "'", str65, "100");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "100" + "'", str66, "100");
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "urls.txt" + "'", str73, "urls.txt");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str82, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL83);
        org.junit.Assert.assertNull(strMap84);
        org.junit.Assert.assertNull(document85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:" + "'", str91, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:errorassets.csv type:");
    }

    @Test
    public void test09919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09919");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder13.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder13.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setVerifyUrls(false);
        boolean boolean26 = hTMLPageResponse12.equals((java.lang.Object) builder25);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder25.setRequestHeaders("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder28.setNotOnPath("CrawlerURL url:errorurls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration31 = builder28.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder32.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder32.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration39 = builder38.build();
        boolean boolean40 = crawlerConfiguration39.isVerifyUrls();
        int int41 = crawlerConfiguration39.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder44 = builder42.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration45 = builder44.build();
        java.lang.String str46 = crawlerConfiguration45.getOnlyOnPath();
        boolean boolean47 = crawlerConfiguration45.isVerifyUrls();
        int int48 = crawlerConfiguration45.getMaxLevels();
        int int49 = crawlerConfiguration45.getMaxLevels();
        boolean boolean50 = crawlerConfiguration45.isVerifyUrls();
        boolean boolean51 = crawlerConfiguration45.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap52 = crawlerConfiguration45.getRequestHeadersMap();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL54 = new com.soulgalore.crawler.core.CrawlerURL("hi!");
        boolean boolean55 = crawlerConfiguration45.equals((java.lang.Object) crawlerURL54);
        boolean boolean56 = crawlerConfiguration39.equals((java.lang.Object) crawlerConfiguration45);
        java.lang.String str57 = crawlerConfiguration45.getStartUrl();
        java.lang.String str58 = crawlerConfiguration45.getRequestHeaders();
        boolean boolean59 = crawlerConfiguration31.equals((java.lang.Object) str58);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(crawlerConfiguration31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(crawlerConfiguration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(crawlerConfiguration45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test09920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09920");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setStartUrl("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setNotOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setRequestHeaders("CrawlerURL url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder4.setOnlyOnPath("Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder4.setMaxLevels(580);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder4.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setVerifyUrls(false);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test09921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09921");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean9 = crawlerURL8.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder11.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration16 = builder11.build();
        java.lang.String str17 = crawlerConfiguration16.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = crawlerConfiguration16.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse24 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL8, (-1), strMap18, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int25 = hTMLPageResponse24.getResponseCode();
        long long26 = hTMLPageResponse24.getFetchTime();
        long long27 = hTMLPageResponse24.getFetchTime();
        boolean boolean28 = crawlerConfiguration3.equals((java.lang.Object) hTMLPageResponse24);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = hTMLPageResponse24.getPageUrl();
        java.lang.String str30 = crawlerURL29.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration35 = builder34.build();
        java.lang.String str36 = crawlerConfiguration35.getOnlyOnPath();
        boolean boolean37 = crawlerConfiguration35.isVerifyUrls();
        int int38 = crawlerConfiguration35.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = crawlerConfiguration35.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, 583, strMap39, "AssetResponseCallable url:AssetResponseCallable url:Unknown error", "CrawlerURL url:CrawlerURL url:CrawlerURL url:errorassets.csv", (long) (short) 10, "AssetResponseCallable url:100", 580L);
        int int46 = hTMLPageResponse45.getResponseCode();
        com.soulgalore.crawler.util.StatusCode statusCode47 = com.soulgalore.crawler.util.StatusCode.SC_WRONG_CONTENT_TYPE;
        java.lang.String str48 = statusCode47.getFriendlyName();
        int int49 = statusCode47.getCode();
        java.lang.String str50 = statusCode47.getFriendlyName();
        int int51 = statusCode47.getCode();
        java.lang.String str52 = statusCode47.getFriendlyName();
        boolean boolean53 = hTMLPageResponse45.equals((java.lang.Object) statusCode47);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(crawlerConfiguration16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 580L + "'", long26 == 580L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 580L + "'", long27 == 580L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(crawlerURL29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "com.soulgalore.crawler.auth" + "'", str30, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(crawlerConfiguration35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 583 + "'", int46 == 583);
        org.junit.Assert.assertTrue("'" + statusCode47 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_WRONG_CONTENT_TYPE + "'", statusCode47.equals(com.soulgalore.crawler.util.StatusCode.SC_WRONG_CONTENT_TYPE));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Wrong content type" + "'", str48, "Wrong content type");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 583 + "'", int49 == 583);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Wrong content type" + "'", str50, "Wrong content type");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 583 + "'", int51 == 583);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Wrong content type" + "'", str52, "Wrong content type");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test09922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09922");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt");
    }

    @Test
    public void test09923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09923");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider(582, (int) (short) -1, (int) (byte) 1, "AssetResponseCallable url:Malformed url", "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:AssetResponseCallable url:Malformed url");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09924");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean5 = crawlerURL4.isWrongSyntax();
        java.lang.String str6 = crawlerURL4.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse14 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL4, (int) 'a', strMap8, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str15 = hTMLPageResponse14.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = hTMLPageResponse14.getResponseHeaders();
        java.lang.String str17 = hTMLPageResponse14.getEncoding();
        java.lang.String str18 = hTMLPageResponse14.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = hTMLPageResponse14.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = hTMLPageResponse14.getPageUrl();
        int int21 = hTMLPageResponse14.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = hTMLPageResponse14.getPageUrl();
        java.lang.String str23 = crawlerURL22.getReferer();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL27 = new com.soulgalore.crawler.core.CrawlerURL("urls.txt", "Response timed out");
        com.soulgalore.crawler.util.HeaderUtil headerUtil29 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = headerUtil29.createHeadersFromString("");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse37 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL27, (int) '4', strMap31, "com.soulgalore.crawler.http.socket.timeout", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) 580, "com.soulgalore.crawler.auth", (long) (short) 1);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse43 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL22, (int) (byte) 1, strMap31, "AssetResponseCallable url:Malformed url", "urls.txt", (long) (byte) 10, "com.soulgalore.crawler.http.connection.timeout", (long) 97);
        java.lang.String str44 = crawlerURL22.getUrl();
        java.net.URI uRI45 = crawlerURL22.getUri();
        java.lang.String str46 = crawlerURL22.getHost();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL49 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI50 = crawlerURL49.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL53 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean54 = crawlerURL53.isWrongSyntax();
        java.lang.String str55 = crawlerURL53.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse63 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL53, (int) 'a', strMap57, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str64 = hTMLPageResponse63.getUrl();
        boolean boolean65 = crawlerURL49.equals((java.lang.Object) str64);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher68 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil69 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap71 = headerUtil69.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable73 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher68, strMap71, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse79 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL49, (int) (short) 100, strMap71, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        org.jsoup.nodes.Document document80 = hTMLPageResponse79.getBody();
        java.lang.String str82 = hTMLPageResponse79.getHeaderValue("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        java.util.Map<java.lang.String, java.lang.String> strMap83 = hTMLPageResponse79.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse89 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL22, 0, strMap83, "com.soulgalore.crawler.proxy", "errorurls.txt", (long) (-1), "Wrong content type", (long) 97);
        java.lang.String str91 = hTMLPageResponse89.getHeaderValue("AssetResponseCallable url:CrawlerURL url:10");
        java.util.Map<java.lang.String, java.lang.String> strMap92 = hTMLPageResponse89.getResponseHeaders();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable94 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:CrawlerURL url:hi!", assetFetcher1, strMap92, "CrawlerURL url:urls.txt");
        java.lang.String str95 = assetResponseCallable94.toString();
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.core.assets.AssetResponse assetResponse96 = assetResponseCallable94.call();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "urls.txt" + "'", str6, "urls.txt");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str17, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str18, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL19);
        org.junit.Assert.assertNotNull(crawlerURL20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 97 + "'", int21 == 97);
        org.junit.Assert.assertNotNull(crawlerURL22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "urls.txt" + "'", str23, "urls.txt");
        org.junit.Assert.assertNotNull(headerUtil29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "com.soulgalore.crawler.auth" + "'", str44, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(uRI45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(uRI50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "urls.txt" + "'", str55, "urls.txt");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "com.soulgalore.crawler.auth" + "'", str64, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(headerUtil69);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNull(document80);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNull(str91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:hi!" + "'", str95, "AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:hi!");
    }

    @Test
    public void test09925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09925");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("100", "com.soulgalore.crawler.http.connection.timeout", (int) (short) 0, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        java.lang.String str7 = assetResponse4.getUrl();
        java.lang.String str8 = assetResponse4.getReferer();
        long long9 = assetResponse4.getFetchTime();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "100" + "'", str7, "100");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str8, "com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    }

    @Test
    public void test09926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09926");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration5.getRequestHeadersMap();
        java.lang.String str8 = crawlerConfiguration5.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = crawlerConfiguration5.getRequestHeadersMap();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL11 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI12 = crawlerURL11.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL15 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI16 = crawlerURL15.getUri();
        boolean boolean17 = crawlerURL15.isWrongSyntax();
        java.lang.String str18 = crawlerURL15.getHost();
        java.net.URI uRI19 = crawlerURL15.getUri();
        java.net.URI uRI20 = crawlerURL15.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI25 = crawlerURL24.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration30 = builder29.build();
        java.lang.String str31 = crawlerConfiguration30.getStartUrl();
        int int32 = crawlerConfiguration30.getMaxLevels();
        int int33 = crawlerConfiguration30.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = crawlerConfiguration30.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse40 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL24, (int) (short) 10, strMap34, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        int int41 = hTMLPageResponse40.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = hTMLPageResponse40.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse48 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL15, 0, strMap42, "CrawlerURL url:result.csv", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) 583, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (byte) 1);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse54 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL11, (int) 'a', strMap42, "AssetResponseCallable url:com.soulgalore.crawler.auth", "AssetResponseCallable url:errorassets.csv", (long) 100, "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", 35L);
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse59 = new com.soulgalore.crawler.core.assets.AssetResponse("errorassets.csv", "100", (int) (short) 10, (long) 10);
        java.lang.String str60 = assetResponse59.getReferer();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray61 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet62 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet62, assetResponseArray61);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray64 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet65 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet65, assetResponseArray64);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult67 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet62, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet65);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet68 = assetsVerificationResult67.getNonWorkingAssets();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder69 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder71 = builder69.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder73 = builder69.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration74 = builder69.build();
        java.lang.String str75 = crawlerConfiguration74.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap76 = crawlerConfiguration74.getRequestHeadersMap();
        java.lang.String str77 = crawlerConfiguration74.getNotOnPath();
        int int78 = crawlerConfiguration74.getMaxLevels();
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray79 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet80 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet80, assetResponseArray79);
        com.soulgalore.crawler.core.assets.AssetResponse[] assetResponseArray82 = new com.soulgalore.crawler.core.assets.AssetResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet83 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.assets.AssetResponse>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet83, assetResponseArray82);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult85 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult((java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet80, (java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse>) assetResponseSet83);
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet86 = assetsVerificationResult85.getWorkingAssets();
        java.util.Set<com.soulgalore.crawler.core.assets.AssetResponse> assetResponseSet87 = assetsVerificationResult85.getWorkingAssets();
        boolean boolean88 = crawlerConfiguration74.equals((java.lang.Object) assetResponseSet87);
        com.soulgalore.crawler.core.assets.AssetsVerificationResult assetsVerificationResult89 = new com.soulgalore.crawler.core.assets.AssetsVerificationResult(assetResponseSet68, assetResponseSet87);
        boolean boolean90 = assetResponse59.equals((java.lang.Object) assetsVerificationResult89);
        boolean boolean91 = crawlerURL11.equals((java.lang.Object) assetsVerificationResult89);
        boolean boolean92 = crawlerConfiguration5.equals((java.lang.Object) crawlerURL11);
        java.net.URI uRI93 = crawlerURL11.getUri();
        boolean boolean94 = crawlerURL11.isWrongSyntax();
        java.lang.String str95 = crawlerURL11.getReferer();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(uRI12);
        org.junit.Assert.assertNull(uRI16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(uRI19);
        org.junit.Assert.assertNull(uRI20);
        org.junit.Assert.assertNull(uRI25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(crawlerConfiguration30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "100" + "'", str60, "100");
        org.junit.Assert.assertNotNull(assetResponseArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(assetResponseArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(assetResponseSet68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(crawlerConfiguration74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(assetResponseArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(assetResponseArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(assetResponseSet86);
        org.junit.Assert.assertNotNull(assetResponseSet87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNull(uRI93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "" + "'", str95, "");
    }

    @Test
    public void test09927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09927");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        int int6 = crawlerConfiguration5.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil7 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean8 = crawlerConfiguration5.equals((java.lang.Object) headerUtil7);
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil7.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil7.createHeadersFromString("CrawlerURL url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil7.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap16 = headerUtil7.createHeadersFromString("AssetResponseCallable url:Wrong content type");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(headerUtil7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
    }

    @Test
    public void test09928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09928");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("errorurls.txt", "HTMLPageResponseurl:CrawlerURL url:com.soulgalore.crawler.authresponseCode:0encoding:CrawlerURL url:result.csv type:-1", (int) (byte) -1, (long) (short) 1);
        long long5 = assetResponse4.getFetchTime();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
    }

    @Test
    public void test09929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09929");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getOnlyOnPath();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        int int6 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str8 = crawlerConfiguration3.getRequestHeaders();
        java.lang.String str9 = crawlerConfiguration3.getStartUrl();
        java.lang.String str10 = crawlerConfiguration3.getRequestHeaders();
        java.lang.String str11 = crawlerConfiguration3.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration3.getRequestHeadersMap();
        int int13 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str14 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str15 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = crawlerConfiguration3.getRequestHeadersMap();
        int int17 = crawlerConfiguration3.getMaxLevels();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }

    @Test
    public void test09930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09930");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray7 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL6 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet8 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet8, crawlerURLArray7);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray11 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet12 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet12, hTMLPageResponseArray11);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult14 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet8, hTMLPageResponseSet10, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet12);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet15 = crawlerResult14.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult14.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet17 = crawlerResult14.getUrls();
        java.lang.String str18 = crawlerResult14.getTheStartPoint();
        java.lang.String str19 = crawlerResult14.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet20 = crawlerResult14.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray25 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL24 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet26 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet26, crawlerURLArray25);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet28 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray29 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet30 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet30, hTMLPageResponseArray29);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult32 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet26, hTMLPageResponseSet28, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet30);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet33 = crawlerResult32.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet34 = crawlerResult32.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet35 = crawlerResult32.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet36 = crawlerResult32.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet37 = crawlerResult32.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL41 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray42 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL41 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet43 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet43, crawlerURLArray42);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet45 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray46 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet47 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet47, hTMLPageResponseArray46);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult49 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet43, hTMLPageResponseSet45, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet47);
        java.lang.String str50 = crawlerResult49.getTheStartPoint();
        java.lang.String str51 = crawlerResult49.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet52 = crawlerResult49.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet53 = crawlerResult49.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet54 = crawlerResult49.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult55 = new com.soulgalore.crawler.core.CrawlerResult("CrawlerURL url:urls.txt", crawlerURLSet20, hTMLPageResponseSet37, hTMLPageResponseSet54);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet56 = crawlerResult55.getVerifiedURLResponses();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet57 = crawlerResult55.getNonWorkingUrls();
        boolean boolean58 = crawlerURL1.equals((java.lang.Object) crawlerResult55);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet59 = crawlerResult55.getNonWorkingUrls();
        org.junit.Assert.assertNotNull(crawlerURLArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertNotNull(crawlerURLSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet20);
        org.junit.Assert.assertNotNull(crawlerURLArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet33);
        org.junit.Assert.assertNotNull(crawlerURLSet34);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet35);
        org.junit.Assert.assertNotNull(crawlerURLSet36);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet37);
        org.junit.Assert.assertNotNull(crawlerURLArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet52);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet53);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet54);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet56);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet59);
    }

    @Test
    public void test09931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09931");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        java.lang.String str15 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder16.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder20.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder22.setOnlyOnPath("com.soulgalore.crawler.auth");
        boolean boolean25 = hTMLPageResponse12.equals((java.lang.Object) builder22);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder22.setOnlyOnPath("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setOnlyOnPath("AssetResponseCallable url:100");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration30 = builder29.build();
        java.lang.String str31 = crawlerConfiguration30.getNotOnPath();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str15, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(crawlerConfiguration30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
    }

    @Test
    public void test09932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09932");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:Unknown error type:errorurls.txt", "");
    }

    @Test
    public void test09933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09933");
        com.soulgalore.crawler.util.HeaderUtil headerUtil0 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap2 = headerUtil0.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap4 = headerUtil0.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil0.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = headerUtil0.createHeadersFromString("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads");
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil0.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil0.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap14 = headerUtil0.createHeadersFromString("CrawlerURL url:CrawlerURL url:HTMLPageResponseurl:CrawlerURL url:com.soulgalore.crawler.authresponseCode:0encoding:CrawlerURL url:result.csv type:-1");
        org.junit.Assert.assertNotNull(headerUtil0);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
    }

    @Test
    public void test09934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09934");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        int int13 = hTMLPageResponse12.getResponseCode();
        java.lang.String str14 = hTMLPageResponse12.getResponseType();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        int int16 = hTMLPageResponse12.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = hTMLPageResponse12.getResponseHeaders();
        long long18 = hTMLPageResponse12.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI23 = crawlerURL22.getUri();
        java.lang.String str24 = crawlerURL22.getReferer();
        java.lang.String str25 = crawlerURL22.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration30 = builder29.build();
        java.lang.String str31 = crawlerConfiguration30.getStartUrl();
        int int32 = crawlerConfiguration30.getMaxLevels();
        int int33 = crawlerConfiguration30.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = crawlerConfiguration30.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse40 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL22, (int) (byte) -1, strMap34, "100", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) (short) -1, "com.soulgalore.crawler.nrofhttpthreads", 0L);
        org.jsoup.nodes.Document document41 = hTMLPageResponse40.getBody();
        int int42 = hTMLPageResponse40.getResponseCode();
        java.lang.String str43 = hTMLPageResponse40.getUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL45 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI46 = crawlerURL45.getUri();
        java.lang.String str47 = crawlerURL45.getHost();
        java.lang.String str48 = crawlerURL45.getReferer();
        boolean boolean49 = hTMLPageResponse40.equals((java.lang.Object) str48);
        java.lang.String str51 = hTMLPageResponse40.getHeaderValue("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:582encoding:hi! type:AssetResponseCallable url:result.csv");
        java.lang.String str52 = hTMLPageResponse40.getEncoding();
        java.lang.String str53 = hTMLPageResponse40.getResponseType();
        java.lang.String str55 = hTMLPageResponse40.getHeaderValue("");
        boolean boolean56 = crawlerURL19.equals((java.lang.Object) str55);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 97 + "'", int16 == 97);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 100L + "'", long18 == 100L);
        org.junit.Assert.assertNotNull(crawlerURL19);
        org.junit.Assert.assertNull(uRI23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "urls.txt" + "'", str24, "urls.txt");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "urls.txt" + "'", str25, "urls.txt");
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(crawlerConfiguration30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(document41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "com.soulgalore.crawler.auth" + "'", str43, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(uRI46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str52, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str53, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test09935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09935");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = hTMLPageResponse12.getResponseHeaders();
        org.jsoup.nodes.Document document16 = hTMLPageResponse12.getBody();
        java.lang.String str17 = hTMLPageResponse12.getUrl();
        long long18 = hTMLPageResponse12.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = hTMLPageResponse12.getPageUrl();
        java.lang.String str20 = crawlerURL19.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(document16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "com.soulgalore.crawler.auth" + "'", str17, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 100L + "'", long18 == 100L);
        org.junit.Assert.assertNotNull(crawlerURL19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str20, "CrawlerURL url:com.soulgalore.crawler.auth");
    }

    @Test
    public void test09936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09936");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean6 = crawlerURL5.isWrongSyntax();
        java.lang.String str7 = crawlerURL5.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse15 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (int) 'a', strMap9, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str16 = hTMLPageResponse15.getUrl();
        boolean boolean17 = crawlerURL1.equals((java.lang.Object) str16);
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse22 = new com.soulgalore.crawler.core.assets.AssetResponse("", "errorurls.txt", 97, (-1L));
        java.lang.String str23 = assetResponse22.getReferer();
        int int24 = assetResponse22.getResponseCode();
        boolean boolean25 = crawlerURL1.equals((java.lang.Object) int24);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder26.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration29 = builder28.build();
        java.lang.String str30 = crawlerConfiguration29.getOnlyOnPath();
        boolean boolean31 = crawlerConfiguration29.isVerifyUrls();
        com.soulgalore.crawler.util.StatusCode statusCode32 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN;
        boolean boolean33 = crawlerConfiguration29.equals((java.lang.Object) statusCode32);
        boolean boolean34 = crawlerURL1.equals((java.lang.Object) boolean33);
        java.lang.String str35 = crawlerURL1.getHost();
        boolean boolean36 = crawlerURL1.isWrongSyntax();
        boolean boolean37 = crawlerURL1.isWrongSyntax();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "urls.txt" + "'", str7, "urls.txt");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "errorurls.txt" + "'", str23, "errorurls.txt");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 97 + "'", int24 == 97);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(crawlerConfiguration29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + statusCode32 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN + "'", statusCode32.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test09937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09937");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        java.lang.String str20 = hTMLPageResponse18.getHeaderValue("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder21.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder25.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder27.setNotOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder27.setMaxLevels((int) (byte) -1);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration32 = builder31.build();
        boolean boolean33 = hTMLPageResponse18.equals((java.lang.Object) builder31);
        java.lang.String str34 = hTMLPageResponse18.toString();
        int int35 = hTMLPageResponse18.getResponseCode();
        java.lang.String str36 = hTMLPageResponse18.getEncoding();
        java.lang.String str38 = hTMLPageResponse18.getHeaderValue("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        java.lang.String str39 = hTMLPageResponse18.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(crawlerConfiguration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth" + "'", str34, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "errorurls.txt" + "'", str36, "errorurls.txt");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth" + "'", str39, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth");
    }

    @Test
    public void test09938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09938");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) 581);
        org.jsoup.nodes.Document document16 = hTMLPageResponse12.getBody();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration20 = builder19.build();
        java.lang.String str21 = crawlerConfiguration20.getStartUrl();
        int int22 = crawlerConfiguration20.getMaxLevels();
        int int23 = crawlerConfiguration20.getMaxLevels();
        java.lang.String str24 = crawlerConfiguration20.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = crawlerConfiguration20.getRequestHeadersMap();
        java.lang.String str26 = crawlerConfiguration20.getStartUrl();
        boolean boolean27 = hTMLPageResponse12.equals((java.lang.Object) str26);
        int int28 = hTMLPageResponse12.getResponseCode();
        java.lang.String str29 = hTMLPageResponse12.getUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(document16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(crawlerConfiguration20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 97 + "'", int28 == 97);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "com.soulgalore.crawler.auth" + "'", str29, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test09939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09939");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setOnlyOnPath("CrawlerURL url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setRequestHeaders("CrawlerURL url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setRequestHeaders("");
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test09940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09940");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL7 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean8 = crawlerURL7.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration15 = builder10.build();
        java.lang.String str16 = crawlerConfiguration15.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration15.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse23 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL7, (-1), strMap17, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse29 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, 100, strMap17, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse37 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (short) 100, strMap31, "-1", "1", (long) (byte) 10, "com.soulgalore.crawler.nrofhttpthreads", (long) (short) 1);
        java.lang.String str38 = hTMLPageResponse37.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = hTMLPageResponse37.getResponseHeaders();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(crawlerConfiguration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "1" + "'", str38, "1");
        org.junit.Assert.assertNull(strMap39);
    }

    @Test
    public void test09941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09941");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        boolean boolean22 = hTMLPageResponse12.equals((java.lang.Object) builder21);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder21.setOnlyOnPath("10");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder21.setOnlyOnPath("AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder21.setStartUrl("com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder21.setStartUrl("com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder30.setStartUrl("CrawlerURL url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder30.setMaxLevels((int) (byte) -1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
    }

    @Test
    public void test09942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09942");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder10.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration12 = builder10.build();
        boolean boolean13 = crawlerConfiguration12.isVerifyUrls();
        boolean boolean14 = crawlerConfiguration12.isVerifyUrls();
        java.lang.String str15 = crawlerConfiguration12.getOnlyOnPath();
        java.lang.String str16 = crawlerConfiguration12.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration12.getRequestHeadersMap();
        java.lang.String str18 = crawlerConfiguration12.getNotOnPath();
        java.lang.String str19 = crawlerConfiguration12.getStartUrl();
        int int20 = crawlerConfiguration12.getMaxLevels();
        java.lang.String str21 = crawlerConfiguration12.getRequestHeaders();
        java.lang.String str22 = crawlerConfiguration12.getOnlyOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertNotNull(crawlerConfiguration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str16, "com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "urls.txt" + "'", str18, "urls.txt");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "com.soulgalore.crawler.http.connection.timeout" + "'", str19, "com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
    }

    @Test
    public void test09943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09943");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = hTMLPageResponse12.getPageUrl();
        java.lang.String str15 = hTMLPageResponse12.toString();
        java.lang.String str16 = hTMLPageResponse12.getUrl();
        java.lang.String str17 = hTMLPageResponse12.getResponseType();
        org.jsoup.nodes.Document document18 = hTMLPageResponse12.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL19 = hTMLPageResponse12.getPageUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder21.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration26 = builder21.build();
        int int27 = crawlerConfiguration26.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil28 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean29 = crawlerConfiguration26.equals((java.lang.Object) headerUtil28);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = headerUtil28.createHeadersFromString("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse37 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL19, 582, strMap31, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:errorurls.txt type:com.soulgalore.crawler.auth", "CrawlerURL url:CrawlerURL url:errorassets.csv", 582L, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:", 582L);
        java.lang.String str38 = hTMLPageResponse37.getEncoding();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str15, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(document18);
        org.junit.Assert.assertNotNull(crawlerURL19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(crawlerConfiguration26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(headerUtil28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "CrawlerURL url:CrawlerURL url:errorassets.csv" + "'", str38, "CrawlerURL url:CrawlerURL url:errorassets.csv");
    }

    @Test
    public void test09944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09944");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean6 = crawlerURL5.isWrongSyntax();
        java.lang.String str7 = crawlerURL5.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse15 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (int) 'a', strMap9, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str16 = hTMLPageResponse15.getUrl();
        boolean boolean17 = crawlerURL1.equals((java.lang.Object) str16);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher20 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil21 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = headerUtil21.createHeadersFromString("");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable25 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Unknown error", assetFetcher20, strMap23, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse31 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, (int) (short) 100, strMap23, "errorurls.txt", "Unknown error", (long) 582, "errorurls.txt", (long) (short) 100);
        org.jsoup.nodes.Document document32 = hTMLPageResponse31.getBody();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = hTMLPageResponse31.getPageUrl();
        java.lang.String str34 = hTMLPageResponse31.getEncoding();
        java.lang.String str36 = hTMLPageResponse31.getHeaderValue("com.soulgalore.crawler.proxy");
        long long37 = hTMLPageResponse31.getFetchTime();
        java.lang.String str38 = hTMLPageResponse31.getResponseType();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder39 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder41 = builder39.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration42 = builder41.build();
        java.lang.String str43 = crawlerConfiguration42.getStartUrl();
        int int44 = crawlerConfiguration42.getMaxLevels();
        int int45 = crawlerConfiguration42.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = crawlerConfiguration42.getRequestHeadersMap();
        java.lang.String str47 = crawlerConfiguration42.getStartUrl();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse52 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int53 = assetResponse52.getResponseCode();
        int int54 = assetResponse52.getResponseCode();
        long long55 = assetResponse52.getFetchTime();
        long long56 = assetResponse52.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse61 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean62 = assetResponse52.equals((java.lang.Object) 100L);
        java.lang.String str63 = assetResponse52.getReferer();
        java.lang.String str64 = assetResponse52.getReferer();
        long long65 = assetResponse52.getFetchTime();
        boolean boolean66 = crawlerConfiguration42.equals((java.lang.Object) assetResponse52);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL69 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean70 = crawlerURL69.isWrongSyntax();
        java.lang.String str71 = crawlerURL69.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap73 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse79 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL69, (int) 'a', strMap73, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str80 = hTMLPageResponse79.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL81 = hTMLPageResponse79.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap82 = hTMLPageResponse79.getResponseHeaders();
        org.jsoup.nodes.Document document83 = hTMLPageResponse79.getBody();
        boolean boolean84 = assetResponse52.equals((java.lang.Object) document83);
        boolean boolean85 = hTMLPageResponse31.equals((java.lang.Object) assetResponse52);
        java.util.Map<java.lang.String, java.lang.String> strMap86 = hTMLPageResponse31.getResponseHeaders();
        java.lang.String str87 = hTMLPageResponse31.getUrl();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "urls.txt" + "'", str7, "urls.txt");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(headerUtil21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(document32);
        org.junit.Assert.assertNotNull(crawlerURL33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Unknown error" + "'", str34, "Unknown error");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 100L + "'", long37 == 100L);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "errorurls.txt" + "'", str38, "errorurls.txt");
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(crawlerConfiguration42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "100" + "'", str63, "100");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "100" + "'", str64, "100");
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "urls.txt" + "'", str71, "urls.txt");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str80, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL81);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNull(document83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str87, "com.soulgalore.crawler.nrofhttpthreads");
    }

    @Test
    public void test09945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09945");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder12.setOnlyOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setOnlyOnPath("AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder16.setStartUrl("52");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration21 = builder20.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder20.setStartUrl("CrawlerURL url:35");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder20.setMaxLevels(100);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration26 = builder20.build();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(crawlerConfiguration21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(crawlerConfiguration26);
    }

    @Test
    public void test09946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09946");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL15 = hTMLPageResponse12.getPageUrl();
        org.jsoup.nodes.Document document16 = hTMLPageResponse12.getBody();
        java.lang.String str17 = hTMLPageResponse12.getUrl();
        java.lang.String str18 = hTMLPageResponse12.toString();
        long long19 = hTMLPageResponse12.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:com.soulgalore.crawler.auth", "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        boolean boolean23 = hTMLPageResponse12.equals((java.lang.Object) "CrawlerURL url:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = hTMLPageResponse12.getPageUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(crawlerURL15);
        org.junit.Assert.assertNull(document16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "com.soulgalore.crawler.auth" + "'", str17, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str18, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 100L + "'", long19 == 100L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(crawlerURL24);
    }

    @Test
    public void test09947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09947");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        boolean boolean9 = assetResponse4.equals((java.lang.Object) 0.0d);
        java.lang.String str10 = assetResponse4.getReferer();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse15 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int16 = assetResponse15.getResponseCode();
        long long17 = assetResponse15.getFetchTime();
        java.lang.String str18 = assetResponse15.getUrl();
        java.lang.String str19 = assetResponse15.getReferer();
        boolean boolean20 = assetResponse4.equals((java.lang.Object) str19);
        long long21 = assetResponse4.getFetchTime();
        int int22 = assetResponse4.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL25 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean26 = crawlerURL25.isWrongSyntax();
        java.lang.String str27 = crawlerURL25.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse35 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL25, (int) 'a', strMap29, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str36 = hTMLPageResponse35.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = hTMLPageResponse35.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL38 = hTMLPageResponse35.getPageUrl();
        boolean boolean39 = crawlerURL38.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = builder40.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder44 = builder40.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration45 = builder40.build();
        java.lang.String str46 = crawlerConfiguration45.getRequestHeaders();
        java.lang.String str47 = crawlerConfiguration45.getRequestHeaders();
        java.lang.String str48 = crawlerConfiguration45.getStartUrl();
        boolean boolean49 = crawlerConfiguration45.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = crawlerConfiguration45.getRequestHeadersMap();
        java.lang.String str51 = crawlerConfiguration45.getNotOnPath();
        boolean boolean52 = crawlerURL38.equals((java.lang.Object) crawlerConfiguration45);
        boolean boolean53 = assetResponse4.equals((java.lang.Object) crawlerURL38);
        long long54 = assetResponse4.getFetchTime();
        java.lang.String str55 = assetResponse4.getUrl();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "100" + "'", str10, "100");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "100" + "'", str19, "100");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "urls.txt" + "'", str27, "urls.txt");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str36, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(crawlerURL38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(crawlerConfiguration45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
    }

    @Test
    public void test09948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09948");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("35");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean7 = crawlerURL6.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL10 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean11 = crawlerURL10.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL14 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI15 = crawlerURL14.getUri();
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray16 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL6, crawlerURL10, crawlerURL14 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet17 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet17, crawlerURLArray16);
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray19 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet20 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet20, hTMLPageResponseArray19);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL25 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray26 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL25 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet27 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet27, crawlerURLArray26);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet29 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray30 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet31 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet31, hTMLPageResponseArray30);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult33 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet27, hTMLPageResponseSet29, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet31);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult34 = new com.soulgalore.crawler.core.CrawlerResult("com.soulgalore.crawler.auth", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet17, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet20, hTMLPageResponseSet29);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet35 = crawlerResult34.getUrls();
        java.lang.String str36 = crawlerResult34.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet37 = crawlerResult34.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet38 = crawlerResult34.getVerifiedURLResponses();
        boolean boolean39 = crawlerURL1.equals((java.lang.Object) crawlerResult34);
        java.lang.String str40 = crawlerResult34.getTheStartPoint();
        java.lang.String str41 = crawlerResult34.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet42 = crawlerResult34.getUrls();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(uRI15);
        org.junit.Assert.assertNotNull(crawlerURLArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(crawlerURLArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "com.soulgalore.crawler.auth" + "'", str36, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURLSet37);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "com.soulgalore.crawler.auth" + "'", str40, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "com.soulgalore.crawler.auth" + "'", str41, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(crawlerURLSet42);
    }

    @Test
    public void test09949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09949");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:AssetResponseCallable url:Wrong content type", "AssetResponseCallable url:32");
        java.lang.String str3 = crawlerURL2.getReferer();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AssetResponseCallable url:32" + "'", str3, "AssetResponseCallable url:32");
    }

    @Test
    public void test09950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09950");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        long long6 = assetResponse4.getFetchTime();
        java.lang.Object obj7 = null;
        boolean boolean8 = assetResponse4.equals(obj7);
        long long9 = assetResponse4.getFetchTime();
        java.lang.String str10 = assetResponse4.getReferer();
        java.lang.String str11 = assetResponse4.getReferer();
        java.lang.Class<?> wildcardClass12 = assetResponse4.getClass();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "100" + "'", str10, "100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "100" + "'", str11, "100");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test09951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09951");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("urls.txt", "com.soulgalore.crawler.auth", (int) (byte) 1, (long) 'a');
        int int5 = assetResponse4.getResponseCode();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    }

    @Test
    public void test09952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09952");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout", "CrawlerURL url:10", 0, (long) '4');
        java.lang.String str5 = assetResponse4.getUrl();
        int int6 = assetResponse4.getResponseCode();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout" + "'", str5, "AssetResponseCallable url:com.soulgalore.crawler.http.connection.timeout");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test09953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09953");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getOnlyOnPath();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        int int6 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str8 = crawlerConfiguration3.getStartUrl();
        int int9 = crawlerConfiguration3.getMaxLevels();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test09954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09954");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder2.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration7 = builder2.build();
        int int8 = crawlerConfiguration7.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil9 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean10 = crawlerConfiguration7.equals((java.lang.Object) headerUtil9);
        java.util.Map<java.lang.String, java.lang.String> strMap12 = headerUtil9.createHeadersFromString("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable14 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("52", assetFetcher1, strMap12, "com.soulgalore.crawler.http.connection.timeout");
        java.lang.String str15 = assetResponseCallable14.toString();
        java.lang.String str16 = assetResponseCallable14.toString();
        java.lang.String str17 = assetResponseCallable14.toString();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(crawlerConfiguration7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(headerUtil9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AssetResponseCallable url:52" + "'", str15, "AssetResponseCallable url:52");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "AssetResponseCallable url:52" + "'", str16, "AssetResponseCallable url:52");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AssetResponseCallable url:52" + "'", str17, "AssetResponseCallable url:52");
    }

    @Test
    public void test09955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09955");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher3 = null;
        com.soulgalore.crawler.util.HeaderUtil headerUtil4 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = headerUtil4.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap8 = headerUtil4.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap10 = headerUtil4.createHeadersFromString("AssetResponseCallable url:-1");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable12 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", assetFetcher3, strMap10, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:32encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:AssetResponseCallable url:-1");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable14 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("CrawlerURL url:errorassets.csv", assetFetcher1, strMap10, "");
        org.junit.Assert.assertNotNull(headerUtil4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test09956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09956");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:result.csv", "CrawlerURL url:100");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean6 = crawlerURL5.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration13 = builder8.build();
        java.lang.String str14 = crawlerConfiguration13.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = crawlerConfiguration13.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse21 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (-1), strMap15, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        long long22 = hTMLPageResponse21.getFetchTime();
        boolean boolean23 = crawlerURL2.equals((java.lang.Object) long22);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL26 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean27 = crawlerURL26.isWrongSyntax();
        java.lang.String str28 = crawlerURL26.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse36 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL26, (int) 'a', strMap30, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str37 = hTMLPageResponse36.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = hTMLPageResponse36.getResponseHeaders();
        java.lang.String str39 = hTMLPageResponse36.getEncoding();
        java.lang.String str40 = hTMLPageResponse36.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder41 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder43 = builder41.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder45 = builder41.setMaxLevels((int) (short) 0);
        boolean boolean46 = hTMLPageResponse36.equals((java.lang.Object) builder45);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder48 = builder45.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder50 = builder48.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder52 = builder50.setNotOnPath("CrawlerURL url:100");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder54 = builder50.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder56 = builder50.setRequestHeaders("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder58 = builder50.setStartUrl("CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        boolean boolean59 = crawlerURL2.equals((java.lang.Object) "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(crawlerConfiguration13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 580L + "'", long22 == 580L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "urls.txt" + "'", str28, "urls.txt");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str37, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str39, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str40, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test09957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09957");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder13.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = builder13.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder13.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setOnlyOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setVerifyUrls(false);
        boolean boolean26 = hTMLPageResponse12.equals((java.lang.Object) builder25);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = builder25.setOnlyOnPath("HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder25.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = builder25.setMaxLevels((int) ' ');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder25.setRequestHeaders("CrawlerURL url:result.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder25.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder36.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder38.setMaxLevels(583);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = builder38.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder44 = builder38.setOnlyOnPath("CrawlerURL url:1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder46 = builder38.setNotOnPath("AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder48 = builder46.setVerifyUrls(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
    }

    @Test
    public void test09958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09958");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder4.build();
        java.lang.String str6 = crawlerConfiguration5.getStartUrl();
        int int7 = crawlerConfiguration5.getMaxLevels();
        int int8 = crawlerConfiguration5.getMaxLevels();
        java.lang.String str9 = crawlerConfiguration5.getNotOnPath();
        int int10 = crawlerConfiguration5.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder11 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder13 = builder11.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder15 = builder11.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration16 = builder11.build();
        int int17 = crawlerConfiguration16.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil18 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean19 = crawlerConfiguration16.equals((java.lang.Object) headerUtil18);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = headerUtil18.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap23 = headerUtil18.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.util.Map<java.lang.String, java.lang.String> strMap25 = headerUtil18.createHeadersFromString("AssetResponseCallable url:result.csv");
        boolean boolean26 = crawlerConfiguration5.equals((java.lang.Object) strMap25);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable28 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("CrawlerURL url:CrawlerURL url:urls.txt", assetFetcher1, strMap25, "AssetResponseCallable url:32");
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(crawlerConfiguration16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(headerUtil18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test09959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09959");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        java.lang.String str5 = crawlerConfiguration3.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder8.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration19 = builder18.build();
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration20 = builder18.build();
        boolean boolean21 = crawlerConfiguration3.equals((java.lang.Object) crawlerConfiguration20);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder22.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder22.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration27 = builder22.build();
        int int28 = crawlerConfiguration27.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil29 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean30 = crawlerConfiguration27.equals((java.lang.Object) headerUtil29);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = headerUtil29.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap34 = headerUtil29.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.util.Map<java.lang.String, java.lang.String> strMap36 = headerUtil29.createHeadersFromString("AssetResponseCallable url:result.csv");
        java.util.Map<java.lang.String, java.lang.String> strMap38 = headerUtil29.createHeadersFromString("CrawlerURL url:urls.txt");
        java.util.Map<java.lang.String, java.lang.String> strMap40 = headerUtil29.createHeadersFromString("AssetResponseCallable url:100");
        boolean boolean41 = crawlerConfiguration20.equals((java.lang.Object) headerUtil29);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = headerUtil29.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:10encoding:com.soulgalore.crawler.http.connection.timeout type:com.soulgalore.crawler.http.connection.timeout");
        java.util.Map<java.lang.String, java.lang.String> strMap45 = headerUtil29.createHeadersFromString("CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        java.util.Map<java.lang.String, java.lang.String> strMap47 = headerUtil29.createHeadersFromString("AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        java.util.Map<java.lang.String, java.lang.String> strMap49 = headerUtil29.createHeadersFromString("AssetResponseCallable url:CrawlerURL url:10");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(crawlerConfiguration19);
        org.junit.Assert.assertNotNull(crawlerConfiguration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(crawlerConfiguration27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(headerUtil29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap49);
    }

    @Test
    public void test09960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09960");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        int int5 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str6 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str7 = crawlerConfiguration3.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL10 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean11 = crawlerURL10.isWrongSyntax();
        java.lang.String str12 = crawlerURL10.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse20 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL10, (int) 'a', strMap14, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str21 = hTMLPageResponse20.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean23 = hTMLPageResponse20.equals((java.lang.Object) builder22);
        long long24 = hTMLPageResponse20.getFetchTime();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder25.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder25.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder25.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration32 = builder25.build();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = crawlerConfiguration32.getRequestHeadersMap();
        boolean boolean34 = hTMLPageResponse20.equals((java.lang.Object) crawlerConfiguration32);
        boolean boolean35 = crawlerConfiguration3.equals((java.lang.Object) boolean34);
        int int36 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str37 = crawlerConfiguration3.getStartUrl();
        int int38 = crawlerConfiguration3.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str40 = crawlerConfiguration3.getRequestHeaders();
        java.lang.String str41 = crawlerConfiguration3.getRequestHeaders();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "urls.txt" + "'", str12, "urls.txt");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "com.soulgalore.crawler.auth" + "'", str21, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 100L + "'", long24 == 100L);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(crawlerConfiguration32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
    }

    @Test
    public void test09961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09961");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI2 = crawlerURL1.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL5 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean6 = crawlerURL5.isWrongSyntax();
        java.lang.String str7 = crawlerURL5.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse15 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL5, (int) 'a', strMap9, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str16 = hTMLPageResponse15.getUrl();
        boolean boolean17 = crawlerURL1.equals((java.lang.Object) str16);
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse22 = new com.soulgalore.crawler.core.assets.AssetResponse("", "errorurls.txt", 97, (-1L));
        java.lang.String str23 = assetResponse22.getReferer();
        int int24 = assetResponse22.getResponseCode();
        boolean boolean25 = crawlerURL1.equals((java.lang.Object) int24);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI30 = crawlerURL29.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration35 = builder34.build();
        java.lang.String str36 = crawlerConfiguration35.getStartUrl();
        int int37 = crawlerConfiguration35.getMaxLevels();
        int int38 = crawlerConfiguration35.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = crawlerConfiguration35.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, (int) (short) 10, strMap39, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        int int46 = hTMLPageResponse45.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = hTMLPageResponse45.getResponseHeaders();
        java.lang.String str49 = hTMLPageResponse45.getHeaderValue("");
        java.util.Map<java.lang.String, java.lang.String> strMap50 = hTMLPageResponse45.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse56 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL1, 100, strMap50, "52", "HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth", (long) (short) 0, "", (long) 582);
        java.lang.String str57 = crawlerURL1.toString();
        org.junit.Assert.assertNull(uRI2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "urls.txt" + "'", str7, "urls.txt");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "com.soulgalore.crawler.auth" + "'", str16, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "errorurls.txt" + "'", str23, "errorurls.txt");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 97 + "'", int24 == 97);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(uRI30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(crawlerConfiguration35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str57, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
    }

    @Test
    public void test09962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09962");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        long long6 = assetResponse4.getFetchTime();
        java.lang.String str7 = assetResponse4.getUrl();
        java.lang.String str8 = assetResponse4.getReferer();
        long long9 = assetResponse4.getFetchTime();
        long long10 = assetResponse4.getFetchTime();
        int int11 = assetResponse4.getResponseCode();
        int int12 = assetResponse4.getResponseCode();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "100" + "'", str8, "100");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }

    @Test
    public void test09963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09963");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setStartUrl("CrawlerURL url:urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setRequestHeaders("");
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
    }

    @Test
    public void test09964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09964");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        int int5 = crawlerConfiguration3.getMaxLevels();
        int int6 = crawlerConfiguration3.getMaxLevels();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL9 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean10 = crawlerURL9.isWrongSyntax();
        java.lang.String str11 = crawlerURL9.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse19 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL9, (int) 'a', strMap13, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str20 = hTMLPageResponse19.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL21 = hTMLPageResponse19.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = hTMLPageResponse19.getResponseHeaders();
        java.lang.String str23 = hTMLPageResponse19.getUrl();
        org.jsoup.nodes.Document document24 = hTMLPageResponse19.getBody();
        boolean boolean25 = crawlerConfiguration3.equals((java.lang.Object) hTMLPageResponse19);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str27 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str28 = crawlerConfiguration3.getStartUrl();
        java.lang.String str29 = crawlerConfiguration3.getNotOnPath();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "urls.txt" + "'", str11, "urls.txt");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str20, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "com.soulgalore.crawler.auth" + "'", str23, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(document24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
    }

    @Test
    public void test09965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09965");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration8 = builder7.build();
        java.lang.String str9 = crawlerConfiguration8.getStartUrl();
        int int10 = crawlerConfiguration8.getMaxLevels();
        int int11 = crawlerConfiguration8.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration8.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (short) 10, strMap12, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        int int19 = hTMLPageResponse18.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = hTMLPageResponse18.getResponseHeaders();
        java.lang.String str22 = hTMLPageResponse18.getHeaderValue("");
        java.util.Map<java.lang.String, java.lang.String> strMap23 = hTMLPageResponse18.getResponseHeaders();
        long long24 = hTMLPageResponse18.getFetchTime();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = hTMLPageResponse18.getResponseHeaders();
        long long26 = hTMLPageResponse18.getFetchTime();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(crawlerConfiguration8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 580L + "'", long24 == 580L);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 580L + "'", long26 == 580L);
    }

    @Test
    public void test09966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09966");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) builder14);
        long long16 = hTMLPageResponse12.getFetchTime();
        java.lang.String str17 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = hTMLPageResponse12.getPageUrl();
        org.jsoup.nodes.Document document19 = hTMLPageResponse12.getBody();
        int int20 = hTMLPageResponse12.getResponseCode();
        java.lang.String str21 = hTMLPageResponse12.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str17, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL18);
        org.junit.Assert.assertNull(document19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 97 + "'", int20 == 97);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str21, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
    }

    @Test
    public void test09967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09967");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.proxy", "", (int) (short) -1, (long) 583);
        com.soulgalore.crawler.guice.ExecutorServiceProvider executorServiceProvider6 = new com.soulgalore.crawler.guice.ExecutorServiceProvider((int) (byte) 10);
        boolean boolean7 = assetResponse4.equals((java.lang.Object) (byte) 10);
        java.lang.String str8 = assetResponse4.getUrl();
        int int9 = assetResponse4.getResponseCode();
        java.lang.String str10 = assetResponse4.getUrl();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "com.soulgalore.crawler.proxy" + "'", str8, "com.soulgalore.crawler.proxy");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "com.soulgalore.crawler.proxy" + "'", str10, "com.soulgalore.crawler.proxy");
    }

    @Test
    public void test09968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09968");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("AssetResponseCallable url:CrawlerURL url:AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads", "AssetResponseCallable url:CrawlerURL url:hi!");
        java.lang.String str3 = crawlerURL2.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "CrawlerURL url:AssetResponseCallable url:CrawlerURL url:AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str3, "CrawlerURL url:AssetResponseCallable url:CrawlerURL url:AssetResponseCallable url:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
    }

    @Test
    public void test09969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09969");
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher1 = null;
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher3 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL6 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean7 = crawlerURL6.isWrongSyntax();
        java.lang.String str8 = crawlerURL6.getReferer();
        java.lang.String str9 = crawlerURL6.getHost();
        java.lang.String str10 = crawlerURL6.getUrl();
        java.lang.String str11 = crawlerURL6.getHost();
        java.lang.String str12 = crawlerURL6.getHost();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI17 = crawlerURL16.getUri();
        java.lang.String str18 = crawlerURL16.getReferer();
        java.lang.String str19 = crawlerURL16.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder21.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration24 = builder23.build();
        java.lang.String str25 = crawlerConfiguration24.getStartUrl();
        int int26 = crawlerConfiguration24.getMaxLevels();
        int int27 = crawlerConfiguration24.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = crawlerConfiguration24.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse34 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL16, (int) (byte) -1, strMap28, "100", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) (short) -1, "com.soulgalore.crawler.nrofhttpthreads", 0L);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse40 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL6, (int) 'a', strMap28, "com.soulgalore.crawler.auth", "AssetResponseCallable url:result.csv", 0L, "0", (long) 100);
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher43 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL45 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI46 = crawlerURL45.getUri();
        java.lang.String str47 = crawlerURL45.getUrl();
        java.lang.String str48 = crawlerURL45.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder50 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder52 = builder50.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder54 = builder50.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration55 = builder50.build();
        java.lang.String str56 = crawlerConfiguration55.getRequestHeaders();
        java.lang.String str57 = crawlerConfiguration55.getRequestHeaders();
        boolean boolean59 = crawlerConfiguration55.equals((java.lang.Object) 0.0d);
        boolean boolean60 = crawlerConfiguration55.isVerifyUrls();
        java.lang.String str61 = crawlerConfiguration55.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap62 = crawlerConfiguration55.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse68 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL45, 0, strMap62, "10", "Unknown error", (long) (short) -1, "AssetResponseCallable url:Malformed url", (long) 97);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable70 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:Malformed url", assetFetcher43, strMap62, "");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse76 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL6, (int) '4', strMap62, "32", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain", (long) 32, "AssetResponseCallable url:97", (long) 580);
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable78 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("com.soulgalore.crawler.proxy", assetFetcher3, strMap62, "AssetResponseCallable url:result.csv");
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable80 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("AssetResponseCallable url:AssetResponseCallable url:-1", assetFetcher1, strMap62, "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:97encoding:52 type:CrawlerURL url:com.soulgalore.crawler.auth");
        java.lang.String str81 = assetResponseCallable80.toString();
        java.lang.String str82 = assetResponseCallable80.toString();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "urls.txt" + "'", str8, "urls.txt");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "com.soulgalore.crawler.auth" + "'", str10, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(uRI17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "urls.txt" + "'", str18, "urls.txt");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "urls.txt" + "'", str19, "urls.txt");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(crawlerConfiguration24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(uRI46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str47, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads" + "'", str48, "CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(crawlerConfiguration55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:-1" + "'", str81, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:-1");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:-1" + "'", str82, "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:-1");
    }

    @Test
    public void test09970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09970");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder10.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder10.setOnlyOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:1 type:com.soulgalore.crawler.nrofhttpthreads type:-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder10.setStartUrl("CrawlerURL url:10");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder16.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setOnlyOnPath("CrawlerURL url:");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test09971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09971");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("Malformed url", "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads", (int) (byte) 100, (long) (byte) 0);
    }

    @Test
    public void test09972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09972");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setOnlyOnPath("com.soulgalore.crawler.nrofhttpthreads");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder8.setNotOnPath("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test09973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09973");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getUrl();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        boolean boolean15 = hTMLPageResponse12.equals((java.lang.Object) builder14);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = hTMLPageResponse12.getPageUrl();
        boolean boolean17 = crawlerURL16.isWrongSyntax();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse23 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int24 = assetResponse23.getResponseCode();
        int int25 = assetResponse23.getResponseCode();
        long long26 = assetResponse23.getFetchTime();
        long long27 = assetResponse23.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse32 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean33 = assetResponse23.equals((java.lang.Object) 100L);
        java.lang.String str34 = assetResponse23.getReferer();
        java.lang.String str35 = assetResponse23.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder38 = builder36.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder40 = builder36.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder42 = builder36.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder44 = builder42.setStartUrl("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder46 = builder42.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder48 = builder46.setStartUrl("Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder50 = builder48.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder52 = builder48.setVerifyUrls(false);
        boolean boolean53 = assetResponse23.equals((java.lang.Object) builder48);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration54 = builder48.build();
        java.lang.String str55 = crawlerConfiguration54.getOnlyOnPath();
        java.util.Map<java.lang.String, java.lang.String> strMap56 = crawlerConfiguration54.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse62 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL16, (int) (short) -1, strMap56, "AssetResponseCallable url:CrawlerURL url:100", "AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads", (long) (byte) 1, "CrawlerURL url:AssetResponseCallable url:Redirected to new domain", (long) 0);
        java.lang.String str63 = hTMLPageResponse62.getUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.auth" + "'", str13, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(crawlerURL16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "100" + "'", str34, "100");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "100" + "'", str35, "100");
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(crawlerConfiguration54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "com.soulgalore.crawler.auth" + "'", str63, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test09974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09974");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder5.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder5.build();
        java.lang.String str11 = crawlerConfiguration10.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (-1), strMap12, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        int int19 = hTMLPageResponse18.getResponseCode();
        long long20 = hTMLPageResponse18.getFetchTime();
        long long21 = hTMLPageResponse18.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL24 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI25 = crawlerURL24.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL29 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean30 = crawlerURL29.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder32 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder34 = builder32.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder36 = builder32.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration37 = builder32.build();
        java.lang.String str38 = crawlerConfiguration37.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = crawlerConfiguration37.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL29, (-1), strMap39, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse51 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL24, 100, strMap39, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        boolean boolean52 = hTMLPageResponse18.equals((java.lang.Object) 100);
        int int53 = hTMLPageResponse18.getResponseCode();
        java.lang.String str54 = hTMLPageResponse18.getUrl();
        java.lang.String str56 = hTMLPageResponse18.getHeaderValue("AssetResponseCallable url:AssetResponseCallable url:CrawlerURL url:10");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL57 = hTMLPageResponse18.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL58 = hTMLPageResponse18.getPageUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 580L + "'", long20 == 580L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 580L + "'", long21 == 580L);
        org.junit.Assert.assertNull(uRI25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(crawlerConfiguration37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "com.soulgalore.crawler.auth" + "'", str54, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(crawlerURL57);
        org.junit.Assert.assertNotNull(crawlerURL58);
    }

    @Test
    public void test09975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09975");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL4 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray5 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL4 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet6 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, crawlerURLArray5);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet8 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray9 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet10 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10, hTMLPageResponseArray9);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult12 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet6, hTMLPageResponseSet8, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet10);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet14 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet16 = crawlerResult12.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = crawlerResult12.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet18 = crawlerResult12.getUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL22 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray23 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL22 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet24 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, crawlerURLArray23);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet26 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray27 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet28 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28, hTMLPageResponseArray27);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult30 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet24, hTMLPageResponseSet26, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet28);
        java.lang.String str31 = crawlerResult30.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet32 = crawlerResult30.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet33 = crawlerResult30.getNonWorkingUrls();
        java.lang.String str34 = crawlerResult30.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet35 = crawlerResult30.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray40 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL39 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet41 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, crawlerURLArray40);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet43 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray44 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet45 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45, hTMLPageResponseArray44);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult47 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet41, hTMLPageResponseSet43, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet45);
        java.lang.String str48 = crawlerResult47.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet49 = crawlerResult47.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet50 = crawlerResult47.getNonWorkingUrls();
        com.soulgalore.crawler.core.CrawlerResult crawlerResult51 = new com.soulgalore.crawler.core.CrawlerResult("CrawlerURL url:urls.txt", crawlerURLSet18, hTMLPageResponseSet35, hTMLPageResponseSet50);
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet52 = crawlerResult51.getUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet53 = crawlerResult51.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet54 = crawlerResult51.getNonWorkingUrls();
        java.lang.String str55 = crawlerResult51.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet56 = crawlerResult51.getNonWorkingUrls();
        java.lang.String str57 = crawlerResult51.getTheStartPoint();
        org.junit.Assert.assertNotNull(crawlerURLArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(crawlerURLSet13);
        org.junit.Assert.assertNotNull(crawlerURLSet14);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet15);
        org.junit.Assert.assertNotNull(crawlerURLSet16);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet17);
        org.junit.Assert.assertNotNull(crawlerURLSet18);
        org.junit.Assert.assertNotNull(crawlerURLArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet32);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet35);
        org.junit.Assert.assertNotNull(crawlerURLArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNotNull(crawlerURLSet49);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet50);
        org.junit.Assert.assertNotNull(crawlerURLSet52);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet53);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "CrawlerURL url:urls.txt" + "'", str55, "CrawlerURL url:urls.txt");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "CrawlerURL url:urls.txt" + "'", str57, "CrawlerURL url:urls.txt");
    }

    @Test
    public void test09976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09976");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = hTMLPageResponse12.getResponseHeaders();
        long long17 = hTMLPageResponse12.getFetchTime();
        java.lang.String str18 = hTMLPageResponse12.getUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 100L + "'", long17 == 100L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.auth" + "'", str18, "com.soulgalore.crawler.auth");
    }

    @Test
    public void test09977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09977");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        org.jsoup.nodes.Document document13 = hTMLPageResponse12.getBody();
        org.jsoup.nodes.Document document14 = hTMLPageResponse12.getBody();
        com.soulgalore.crawler.util.StatusCode statusCode15 = com.soulgalore.crawler.util.StatusCode.SC_MALFORMED_URI;
        boolean boolean16 = hTMLPageResponse12.equals((java.lang.Object) statusCode15);
        int int17 = hTMLPageResponse12.getResponseCode();
        org.jsoup.nodes.Document document18 = hTMLPageResponse12.getBody();
        org.jsoup.nodes.Document document19 = hTMLPageResponse12.getBody();
        java.lang.String str20 = hTMLPageResponse12.toString();
        java.lang.String str21 = hTMLPageResponse12.getResponseType();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL23 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.net.URI uRI24 = crawlerURL23.getUri();
        boolean boolean25 = crawlerURL23.isWrongSyntax();
        java.lang.String str26 = crawlerURL23.getHost();
        java.net.URI uRI27 = crawlerURL23.getUri();
        java.net.URI uRI28 = crawlerURL23.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL32 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI33 = crawlerURL32.getUri();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder37 = builder35.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration38 = builder37.build();
        java.lang.String str39 = crawlerConfiguration38.getStartUrl();
        int int40 = crawlerConfiguration38.getMaxLevels();
        int int41 = crawlerConfiguration38.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = crawlerConfiguration38.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse48 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL32, (int) (short) 10, strMap42, "1", "com.soulgalore.crawler.http.connection.timeout", 10L, "com.soulgalore.crawler.http.connection.timeout", (long) 580);
        int int49 = hTMLPageResponse48.getResponseCode();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = hTMLPageResponse48.getResponseHeaders();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse56 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL23, 0, strMap50, "CrawlerURL url:result.csv", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) 583, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) (byte) 1);
        java.lang.String str57 = hTMLPageResponse56.getUrl();
        int int58 = hTMLPageResponse56.getResponseCode();
        int int59 = hTMLPageResponse56.getResponseCode();
        java.lang.String str60 = hTMLPageResponse56.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL61 = hTMLPageResponse56.getPageUrl();
        int int62 = hTMLPageResponse56.getResponseCode();
        int int63 = hTMLPageResponse56.getResponseCode();
        boolean boolean64 = hTMLPageResponse12.equals((java.lang.Object) hTMLPageResponse56);
        java.lang.String str65 = hTMLPageResponse12.toString();
        java.lang.String str66 = hTMLPageResponse12.getResponseType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertNull(document13);
        org.junit.Assert.assertNull(document14);
        org.junit.Assert.assertTrue("'" + statusCode15 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_MALFORMED_URI + "'", statusCode15.equals(com.soulgalore.crawler.util.StatusCode.SC_MALFORMED_URI));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 97 + "'", int17 == 97);
        org.junit.Assert.assertNull(document18);
        org.junit.Assert.assertNull(document19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str20, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(uRI24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(uRI27);
        org.junit.Assert.assertNull(uRI28);
        org.junit.Assert.assertNull(uRI33);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(crawlerConfiguration38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 10 + "'", int49 == 10);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "com.soulgalore.crawler.nrofhttpthreads" + "'", str57, "com.soulgalore.crawler.nrofhttpthreads");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1" + "'", str60, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        org.junit.Assert.assertNotNull(crawlerURL61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str65, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
    }

    @Test
    public void test09978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09978");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:", "Malformed url");
        java.lang.String str3 = crawlerURL2.getUrl();
        java.lang.String str4 = crawlerURL2.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL8 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean9 = crawlerURL8.isWrongSyntax();
        java.lang.String str10 = crawlerURL8.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse18 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL8, (int) 'a', strMap12, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str19 = hTMLPageResponse18.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = hTMLPageResponse18.getPageUrl();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse25 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.proxy", "", (int) (short) -1, (long) 583);
        boolean boolean26 = crawlerURL20.equals((java.lang.Object) assetResponse25);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder28 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder30 = builder28.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration31 = builder30.build();
        java.lang.String str32 = crawlerConfiguration31.getOnlyOnPath();
        boolean boolean33 = crawlerConfiguration31.isVerifyUrls();
        int int34 = crawlerConfiguration31.getMaxLevels();
        int int35 = crawlerConfiguration31.getMaxLevels();
        boolean boolean36 = crawlerConfiguration31.isVerifyUrls();
        boolean boolean37 = crawlerConfiguration31.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = crawlerConfiguration31.getRequestHeadersMap();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = crawlerConfiguration31.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse45 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, (int) (byte) 10, strMap39, "", "Malformed url", (long) (short) 10, "hi!", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse51 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (byte) -1, strMap39, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:-1encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.nrofhttpthreads", "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:-1encoding:CrawlerURL url:com.soulgalore.crawler.nrofhttpthreads type:AssetResponseCallable url:errorassets.csv", (long) 1, "AssetResponseCallable url:AssetResponseCallable url:Unknown error", 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:" + "'", str3, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:" + "'", str4, "CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:100encoding:HTMLPageResponseurl:urls.txtresponseCode:52encoding:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:com.soulgalore.crawler.auth type:");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "urls.txt" + "'", str10, "urls.txt");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str19, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL20);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(crawlerConfiguration31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
    }

    @Test
    public void test09979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09979");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getOnlyOnPath();
        boolean boolean5 = crawlerConfiguration3.isVerifyUrls();
        com.soulgalore.crawler.util.StatusCode statusCode6 = com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN;
        boolean boolean7 = crawlerConfiguration3.equals((java.lang.Object) statusCode6);
        java.lang.String str8 = statusCode6.getFriendlyName();
        java.lang.String str9 = statusCode6.getFriendlyName();
        java.lang.String str10 = statusCode6.getFriendlyName();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + statusCode6 + "' != '" + com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN + "'", statusCode6.equals(com.soulgalore.crawler.util.StatusCode.SC_SERVER_RESPONSE_UNKNOWN));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Unknown error" + "'", str8, "Unknown error");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Unknown error" + "'", str9, "Unknown error");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Unknown error" + "'", str10, "Unknown error");
    }

    @Test
    public void test09980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09980");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider(32, 97, 10, "AssetResponseCallable url:AssetResponseCallable url:errorassets.csv", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:32encoding:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type: type:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Auth configuration is configured wrongly:AssetResponseCallable url:AssetResponseCallable url:errorassets.csv");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09981");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str15 = hTMLPageResponse12.getEncoding();
        java.lang.String str16 = hTMLPageResponse12.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder17.setMaxLevels((int) (short) 0);
        boolean boolean22 = hTMLPageResponse12.equals((java.lang.Object) builder21);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder21.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder26 = builder21.setMaxLevels((int) (short) 10);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration27 = builder21.build();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder21.setMaxLevels(1);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder31 = builder21.setRequestHeaders("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder33 = builder21.setRequestHeaders("CrawlerURL url:Response timed out");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder35 = builder33.setRequestHeaders("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str15, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str16, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(crawlerConfiguration27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
    }

    @Test
    public void test09982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09982");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider(1, 35, (int) '#', "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", "AssetResponseCallable url:AssetResponseCallable url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:CrawlerURL url:1 type:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding: type:Redirected to new domain");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"com.soulgalore.crawler.authresponseCode\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09983");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean3 = crawlerURL2.isWrongSyntax();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse12 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) 'a', strMap6, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str13 = hTMLPageResponse12.getEncoding();
        long long14 = hTMLPageResponse12.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL15 = hTMLPageResponse12.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str17 = hTMLPageResponse12.getResponseType();
        java.lang.String str18 = hTMLPageResponse12.getUrl();
        java.lang.String str19 = hTMLPageResponse12.getUrl();
        java.lang.String str20 = hTMLPageResponse12.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = hTMLPageResponse12.getResponseHeaders();
        java.lang.String str22 = hTMLPageResponse12.getResponseType();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL23 = hTMLPageResponse12.getPageUrl();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str13, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 100L + "'", long14 == 100L);
        org.junit.Assert.assertNotNull(crawlerURL15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "com.soulgalore.crawler.auth" + "'", str18, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "com.soulgalore.crawler.auth" + "'", str19, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str20, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(crawlerURL23);
    }

    @Test
    public void test09984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09984");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration5 = builder0.build();
        java.lang.String str6 = crawlerConfiguration5.getRequestHeaders();
        java.lang.String str7 = crawlerConfiguration5.getStartUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL11 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        com.soulgalore.crawler.core.CrawlerURL[] crawlerURLArray12 = new com.soulgalore.crawler.core.CrawlerURL[] { crawlerURL11 };
        java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet13 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.CrawlerURL>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet13, crawlerURLArray12);
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet15 = null;
        com.soulgalore.crawler.core.HTMLPageResponse[] hTMLPageResponseArray16 = new com.soulgalore.crawler.core.HTMLPageResponse[] {};
        java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet17 = new java.util.LinkedHashSet<com.soulgalore.crawler.core.HTMLPageResponse>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet17, hTMLPageResponseArray16);
        com.soulgalore.crawler.core.CrawlerResult crawlerResult19 = new com.soulgalore.crawler.core.CrawlerResult("hi!", (java.util.Set<com.soulgalore.crawler.core.CrawlerURL>) crawlerURLSet13, hTMLPageResponseSet15, (java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse>) hTMLPageResponseSet17);
        java.lang.String str20 = crawlerResult19.getTheStartPoint();
        java.lang.String str21 = crawlerResult19.getTheStartPoint();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet22 = crawlerResult19.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.HTMLPageResponse> hTMLPageResponseSet23 = crawlerResult19.getNonWorkingUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet24 = crawlerResult19.getUrls();
        java.util.Set<com.soulgalore.crawler.core.CrawlerURL> crawlerURLSet25 = crawlerResult19.getUrls();
        boolean boolean26 = crawlerConfiguration5.equals((java.lang.Object) crawlerURLSet25);
        int int27 = crawlerConfiguration5.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = crawlerConfiguration5.getRequestHeadersMap();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(crawlerConfiguration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(crawlerURLArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(hTMLPageResponseArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(hTMLPageResponseSet22);
        org.junit.Assert.assertNotNull(hTMLPageResponseSet23);
        org.junit.Assert.assertNotNull(crawlerURLSet24);
        org.junit.Assert.assertNotNull(crawlerURLSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(strMap28);
    }

    @Test
    public void test09985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09985");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1responseCode:10encoding:result.csv type:97", "AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
    }

    @Test
    public void test09986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09986");
        // The following exception was thrown during execution in test generation
        try {
            com.soulgalore.crawler.guice.HttpClientProvider httpClientProvider5 = new com.soulgalore.crawler.guice.HttpClientProvider(583, 52, (int) (byte) 0, "AssetResponseCallable url:CrawlerURL url:AssetResponseCallable url:Malformed url", "AssetResponseCallable url:AssetResponseCallable url:97");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"CrawlerURL url\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test09987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09987");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean14 = assetResponse4.equals((java.lang.Object) 100L);
        java.lang.String str15 = assetResponse4.getReferer();
        long long16 = assetResponse4.getFetchTime();
        java.lang.String str17 = assetResponse4.getReferer();
        java.lang.String str18 = assetResponse4.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder19.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder25.setNotOnPath("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder29 = builder25.setMaxLevels((int) (byte) -1);
        boolean boolean30 = assetResponse4.equals((java.lang.Object) builder25);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL33 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean34 = crawlerURL33.isWrongSyntax();
        java.lang.String str35 = crawlerURL33.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse43 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL33, (int) 'a', strMap37, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str44 = hTMLPageResponse43.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = hTMLPageResponse43.getResponseHeaders();
        java.lang.String str46 = hTMLPageResponse43.getEncoding();
        java.lang.String str47 = hTMLPageResponse43.toString();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL48 = hTMLPageResponse43.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL49 = hTMLPageResponse43.getPageUrl();
        int int50 = hTMLPageResponse43.getResponseCode();
        java.lang.String str51 = hTMLPageResponse43.getEncoding();
        java.lang.String str52 = hTMLPageResponse43.getResponseType();
        java.lang.String str53 = hTMLPageResponse43.getResponseType();
        boolean boolean54 = assetResponse4.equals((java.lang.Object) str53);
        com.soulgalore.crawler.core.CrawlerURL crawlerURL57 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean58 = crawlerURL57.isWrongSyntax();
        java.lang.String str59 = crawlerURL57.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap61 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse67 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL57, (int) 'a', strMap61, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str68 = hTMLPageResponse67.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL69 = hTMLPageResponse67.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap70 = hTMLPageResponse67.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL71 = hTMLPageResponse67.getPageUrl();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL72 = hTMLPageResponse67.getPageUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap73 = hTMLPageResponse67.getResponseHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap74 = hTMLPageResponse67.getResponseHeaders();
        boolean boolean75 = assetResponse4.equals((java.lang.Object) strMap74);
        int int76 = assetResponse4.getResponseCode();
        java.lang.String str77 = assetResponse4.getReferer();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "100" + "'", str15, "100");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "100" + "'", str17, "100");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "100" + "'", str18, "100");
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "urls.txt" + "'", str35, "urls.txt");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str44, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str46, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str47, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertNotNull(crawlerURL48);
        org.junit.Assert.assertNotNull(crawlerURL49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 97 + "'", int50 == 97);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str51, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "urls.txt" + "'", str59, "urls.txt");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str68, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(crawlerURL71);
        org.junit.Assert.assertNotNull(crawlerURL72);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "100" + "'", str77, "100");
    }

    @Test
    public void test09988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09988");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("HTMLPageResponseurl:hi!responseCode:52encoding:urls.txt type:CrawlerURL url:com.soulgalore.crawler.auth", "AssetResponseCallable url:");
        java.lang.String str3 = crawlerURL2.getUrl();
        java.lang.String str4 = crawlerURL2.toString();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder5.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration8 = builder7.build();
        java.lang.String str9 = crawlerConfiguration8.getOnlyOnPath();
        boolean boolean10 = crawlerConfiguration8.isVerifyUrls();
        int int11 = crawlerConfiguration8.getMaxLevels();
        java.lang.String str12 = crawlerConfiguration8.getNotOnPath();
        java.lang.String str13 = crawlerConfiguration8.getRequestHeaders();
        java.lang.String str14 = crawlerConfiguration8.getStartUrl();
        java.lang.String str15 = crawlerConfiguration8.getRequestHeaders();
        java.lang.String str16 = crawlerConfiguration8.getStartUrl();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = crawlerConfiguration8.getRequestHeadersMap();
        java.lang.String str18 = crawlerConfiguration8.getStartUrl();
        java.lang.String str19 = crawlerConfiguration8.getNotOnPath();
        boolean boolean20 = crawlerURL2.equals((java.lang.Object) str19);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "HTMLPageResponseurl:hi!responseCode:52encoding:urls.txt type:CrawlerURL url:com.soulgalore.crawler.auth" + "'", str3, "HTMLPageResponseurl:hi!responseCode:52encoding:urls.txt type:CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CrawlerURL url:HTMLPageResponseurl:hi!responseCode:52encoding:urls.txt type:CrawlerURL url:com.soulgalore.crawler.auth" + "'", str4, "CrawlerURL url:HTMLPageResponseurl:hi!responseCode:52encoding:urls.txt type:CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(crawlerConfiguration8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test09989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09989");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setMaxLevels((int) '4');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setMaxLevels(583);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setOnlyOnPath("Unknown error");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder4.setNotOnPath("HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder4.setNotOnPath("-1");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder12.setStartUrl("AssetResponseCallable url:AssetResponseCallable url:Wrong content type");
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test09990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09990");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        int int5 = crawlerConfiguration3.getMaxLevels();
        java.lang.String str6 = crawlerConfiguration3.getOnlyOnPath();
        java.lang.String str7 = crawlerConfiguration3.getOnlyOnPath();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder10.build();
        java.lang.String str12 = crawlerConfiguration11.getStartUrl();
        boolean boolean14 = crawlerConfiguration11.equals((java.lang.Object) true);
        java.lang.String str15 = crawlerConfiguration11.getNotOnPath();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL18 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean19 = crawlerURL18.isWrongSyntax();
        java.lang.String str20 = crawlerURL18.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse28 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL18, (int) 'a', strMap22, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str29 = hTMLPageResponse28.getEncoding();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL30 = hTMLPageResponse28.getPageUrl();
        boolean boolean31 = crawlerConfiguration11.equals((java.lang.Object) crawlerURL30);
        java.lang.String str32 = crawlerConfiguration11.getOnlyOnPath();
        boolean boolean33 = crawlerConfiguration3.equals((java.lang.Object) crawlerConfiguration11);
        java.util.Map<java.lang.String, java.lang.String> strMap34 = crawlerConfiguration3.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetFetcher assetFetcher36 = null;
        com.soulgalore.crawler.core.CrawlerURL crawlerURL39 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean40 = crawlerURL39.isWrongSyntax();
        java.lang.String str41 = crawlerURL39.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse49 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL39, (int) 'a', strMap43, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str50 = hTMLPageResponse49.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap51 = hTMLPageResponse49.getResponseHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL52 = hTMLPageResponse49.getPageUrl();
        boolean boolean53 = crawlerURL52.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder54 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder56 = builder54.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder58 = builder54.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration59 = builder54.build();
        java.lang.String str60 = crawlerConfiguration59.getRequestHeaders();
        java.lang.String str61 = crawlerConfiguration59.getRequestHeaders();
        java.lang.String str62 = crawlerConfiguration59.getStartUrl();
        boolean boolean63 = crawlerConfiguration59.isVerifyUrls();
        java.util.Map<java.lang.String, java.lang.String> strMap64 = crawlerConfiguration59.getRequestHeadersMap();
        java.lang.String str65 = crawlerConfiguration59.getNotOnPath();
        boolean boolean66 = crawlerURL52.equals((java.lang.Object) crawlerConfiguration59);
        java.util.Map<java.lang.String, java.lang.String> strMap67 = crawlerConfiguration59.getRequestHeadersMap();
        com.soulgalore.crawler.core.assets.AssetResponseCallable assetResponseCallable69 = new com.soulgalore.crawler.core.assets.AssetResponseCallable("Wrong content type", assetFetcher36, strMap67, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
        boolean boolean70 = crawlerConfiguration3.equals((java.lang.Object) "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:1encoding:com.soulgalore.crawler.http.socket.timeout type:Malformed url");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "urls.txt" + "'", str20, "urls.txt");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str29, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNotNull(crawlerURL30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "urls.txt" + "'", str41, "urls.txt");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str50, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(crawlerURL52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(crawlerConfiguration59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test09991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09991");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL2 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI3 = crawlerURL2.getUri();
        java.lang.String str4 = crawlerURL2.getReferer();
        java.lang.String str5 = crawlerURL2.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder9 = builder7.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration10 = builder9.build();
        java.lang.String str11 = crawlerConfiguration10.getStartUrl();
        int int12 = crawlerConfiguration10.getMaxLevels();
        int int13 = crawlerConfiguration10.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = crawlerConfiguration10.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse20 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL2, (int) (byte) -1, strMap14, "100", "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:", (long) (short) -1, "com.soulgalore.crawler.nrofhttpthreads", 0L);
        java.lang.String str21 = crawlerURL2.toString();
        java.lang.String str22 = crawlerURL2.getHost();
        org.junit.Assert.assertNull(uRI3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "urls.txt" + "'", str4, "urls.txt");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "urls.txt" + "'", str5, "urls.txt");
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(crawlerConfiguration10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "CrawlerURL url:com.soulgalore.crawler.auth" + "'", str21, "CrawlerURL url:com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test09992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09992");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = new com.soulgalore.crawler.core.CrawlerConfiguration.Builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setStartUrl("");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder2.setMaxLevels((int) '4');
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder4.setMaxLevels(583);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder4.setMaxLevels((int) (short) 10);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setMaxLevels((int) (short) -1);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration11 = builder8.build();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(crawlerConfiguration11);
    }

    @Test
    public void test09993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09993");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("CrawlerURL url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
    }

    @Test
    public void test09994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09994");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("AssetResponseCallable url:errorassets.csv", "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url", (int) (short) 100, (long) '4');
        java.lang.String str5 = assetResponse4.getUrl();
        int int6 = assetResponse4.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL9 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean10 = crawlerURL9.isWrongSyntax();
        java.lang.String str11 = crawlerURL9.getReferer();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = null;
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse19 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL9, (int) 'a', strMap13, "", "com.soulgalore.crawler.http.socket.timeout", 1L, "", 100L);
        java.lang.String str20 = hTMLPageResponse19.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = hTMLPageResponse19.getResponseHeaders();
        java.lang.String str22 = hTMLPageResponse19.getEncoding();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = hTMLPageResponse19.getResponseHeaders();
        long long24 = hTMLPageResponse19.getFetchTime();
        int int25 = hTMLPageResponse19.getResponseCode();
        java.lang.String str26 = hTMLPageResponse19.toString();
        boolean boolean27 = assetResponse4.equals((java.lang.Object) str26);
        java.lang.String str28 = assetResponse4.getReferer();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AssetResponseCallable url:errorassets.csv" + "'", str5, "AssetResponseCallable url:errorassets.csv");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "urls.txt" + "'", str11, "urls.txt");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str20, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "com.soulgalore.crawler.http.socket.timeout" + "'", str22, "com.soulgalore.crawler.http.socket.timeout");
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 100L + "'", long24 == 100L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 97 + "'", int25 == 97);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:" + "'", str26, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url" + "'", str28, "HTMLPageResponseurl:com.soulgalore.crawler.nrofhttpthreadsresponseCode:0encoding:Unknown error type:AssetResponseCallable url:Malformed url");
    }

    @Test
    public void test09995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09995");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setMaxLevels((int) (short) 0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setNotOnPath("urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder6.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder8.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder8.setMaxLevels(10);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder8.setOnlyOnPath("CrawlerURL url:hi!");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setOnlyOnPath("com.soulgalore.crawler.http.connection.timeout");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder18.setOnlyOnPath("AssetResponseCallable url:errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder22 = builder20.setRequestHeaders("CrawlerURL url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder24 = builder22.setOnlyOnPath("CrawlerURL url:errorurls.txt");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
    }

    @Test
    public void test09996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09996");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration3 = builder2.build();
        java.lang.String str4 = crawlerConfiguration3.getStartUrl();
        int int5 = crawlerConfiguration3.getMaxLevels();
        int int6 = crawlerConfiguration3.getMaxLevels();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = crawlerConfiguration3.getRequestHeadersMap();
        java.lang.String str8 = crawlerConfiguration3.getStartUrl();
        java.lang.String str9 = crawlerConfiguration3.getOnlyOnPath();
        java.lang.String str10 = crawlerConfiguration3.getNotOnPath();
        java.lang.String str11 = crawlerConfiguration3.getStartUrl();
        java.lang.String str12 = crawlerConfiguration3.getRequestHeaders();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL15 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI16 = crawlerURL15.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL20 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean21 = crawlerURL20.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder25 = builder23.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder27 = builder23.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration28 = builder23.build();
        java.lang.String str29 = crawlerConfiguration28.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = crawlerConfiguration28.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse36 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL20, (-1), strMap30, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse42 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL15, 100, strMap30, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.lang.String str43 = hTMLPageResponse42.getEncoding();
        java.lang.String str44 = hTMLPageResponse42.toString();
        int int45 = hTMLPageResponse42.getResponseCode();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL48 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean49 = crawlerURL48.isWrongSyntax();
        java.lang.String str50 = crawlerURL48.getReferer();
        java.lang.String str51 = crawlerURL48.getHost();
        java.lang.String str52 = crawlerURL48.getUrl();
        java.lang.String str53 = crawlerURL48.getHost();
        java.lang.String str54 = crawlerURL48.getReferer();
        com.soulgalore.crawler.util.HeaderUtil headerUtil56 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        java.util.Map<java.lang.String, java.lang.String> strMap58 = headerUtil56.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap60 = headerUtil56.createHeadersFromString("");
        java.util.Map<java.lang.String, java.lang.String> strMap62 = headerUtil56.createHeadersFromString("AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse68 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL48, 582, strMap62, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:581encoding:AssetResponseCallable url:result.csv type:CrawlerURL url:CrawlerURL url:errorassets.csv", "urls.txt", (-1L), "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1", (long) 580);
        boolean boolean69 = hTMLPageResponse42.equals((java.lang.Object) "AssetResponseCallable url:CrawlerURL url:HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        boolean boolean70 = crawlerConfiguration3.equals((java.lang.Object) boolean69);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(crawlerConfiguration3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(uRI16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(crawlerConfiguration28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Malformed url" + "'", str43, "Malformed url");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1" + "'", str44, "HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:100encoding:Malformed url type:-1");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "urls.txt" + "'", str50, "urls.txt");
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "com.soulgalore.crawler.auth" + "'", str52, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "urls.txt" + "'", str54, "urls.txt");
        org.junit.Assert.assertNotNull(headerUtil56);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test09997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09997");
        com.soulgalore.crawler.core.CrawlerURL crawlerURL1 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.nrofhttpthreads");
        java.lang.String str2 = crawlerURL1.getReferer();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder3 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder5 = builder3.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder7 = builder3.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration8 = builder3.build();
        int int9 = crawlerConfiguration8.getMaxLevels();
        com.soulgalore.crawler.util.HeaderUtil headerUtil10 = com.soulgalore.crawler.util.HeaderUtil.getInstance();
        boolean boolean11 = crawlerConfiguration8.equals((java.lang.Object) headerUtil10);
        java.util.Map<java.lang.String, java.lang.String> strMap13 = headerUtil10.createHeadersFromString("AssetResponseCallable url:Malformed url");
        java.util.Map<java.lang.String, java.lang.String> strMap15 = headerUtil10.createHeadersFromString("HTMLPageResponseurl:com.soulgalore.crawler.authresponseCode:97encoding:com.soulgalore.crawler.http.socket.timeout type:");
        boolean boolean16 = crawlerURL1.equals((java.lang.Object) headerUtil10);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder17 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = builder17.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration20 = builder19.build();
        java.lang.String str21 = crawlerConfiguration20.getOnlyOnPath();
        boolean boolean22 = crawlerConfiguration20.isVerifyUrls();
        int int23 = crawlerConfiguration20.getMaxLevels();
        java.lang.String str24 = crawlerConfiguration20.getNotOnPath();
        java.lang.String str25 = crawlerConfiguration20.getStartUrl();
        com.soulgalore.crawler.guice.ExecutorServiceProvider executorServiceProvider27 = new com.soulgalore.crawler.guice.ExecutorServiceProvider((int) (byte) 100);
        boolean boolean28 = crawlerConfiguration20.equals((java.lang.Object) executorServiceProvider27);
        java.util.concurrent.ExecutorService executorService29 = executorServiceProvider27.get();
        boolean boolean30 = crawlerURL1.equals((java.lang.Object) executorServiceProvider27);
        java.util.concurrent.ExecutorService executorService31 = executorServiceProvider27.get();
        java.util.concurrent.ExecutorService executorService32 = executorServiceProvider27.get();
        java.util.concurrent.ExecutorService executorService33 = executorServiceProvider27.get();
        java.util.concurrent.ExecutorService executorService34 = executorServiceProvider27.get();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(crawlerConfiguration8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(headerUtil10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(crawlerConfiguration20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(executorService29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(executorService31);
        org.junit.Assert.assertNotNull(executorService32);
        org.junit.Assert.assertNotNull(executorService33);
        org.junit.Assert.assertNotNull(executorService34);
    }

    @Test
    public void test09998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09998");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("Response timed out", "CrawlerURL url:hi!", (int) 'a', (long) 10);
        java.lang.String str5 = assetResponse4.getUrl();
        java.lang.String str6 = assetResponse4.getReferer();
        long long7 = assetResponse4.getFetchTime();
        java.lang.String str8 = assetResponse4.getReferer();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL11 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        java.net.URI uRI12 = crawlerURL11.getUri();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL16 = new com.soulgalore.crawler.core.CrawlerURL("com.soulgalore.crawler.auth", "urls.txt");
        boolean boolean17 = crawlerURL16.isWrongSyntax();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder19 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder21 = builder19.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder23 = builder19.setMaxLevels(0);
        com.soulgalore.crawler.core.CrawlerConfiguration crawlerConfiguration24 = builder19.build();
        java.lang.String str25 = crawlerConfiguration24.getRequestHeaders();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = crawlerConfiguration24.getRequestHeadersMap();
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse32 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL16, (-1), strMap26, "errorurls.txt", "errorurls.txt", (long) 580, "com.soulgalore.crawler.auth", (long) 580);
        com.soulgalore.crawler.core.HTMLPageResponse hTMLPageResponse38 = new com.soulgalore.crawler.core.HTMLPageResponse(crawlerURL11, 100, strMap26, "com.soulgalore.crawler.http.connection.timeout", "Malformed url", (long) 580, "-1", (-1L));
        java.lang.String str39 = hTMLPageResponse38.getUrl();
        long long40 = hTMLPageResponse38.getFetchTime();
        com.soulgalore.crawler.core.CrawlerURL crawlerURL41 = hTMLPageResponse38.getPageUrl();
        java.lang.String str42 = hTMLPageResponse38.getEncoding();
        java.lang.Class<?> wildcardClass43 = hTMLPageResponse38.getClass();
        boolean boolean44 = assetResponse4.equals((java.lang.Object) hTMLPageResponse38);
        int int45 = assetResponse4.getResponseCode();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Response timed out" + "'", str5, "Response timed out");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "CrawlerURL url:hi!" + "'", str6, "CrawlerURL url:hi!");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "CrawlerURL url:hi!" + "'", str8, "CrawlerURL url:hi!");
        org.junit.Assert.assertNull(uRI12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(crawlerConfiguration24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "com.soulgalore.crawler.auth" + "'", str39, "com.soulgalore.crawler.auth");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(crawlerURL41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Malformed url" + "'", str42, "Malformed url");
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 97 + "'", int45 == 97);
    }

    @Test
    public void test09999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09999");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder0 = com.soulgalore.crawler.core.CrawlerConfiguration.builder();
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder2 = builder0.setNotOnPath("errorassets.csv");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder4 = builder0.setStartUrl("com.soulgalore.crawler.auth");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder6 = builder0.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder8 = builder0.setNotOnPath("AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder10 = builder0.setStartUrl("Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder12 = builder0.setVerifyUrls(false);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder14 = builder0.setOnlyOnPath("AssetResponseCallable url:AssetResponseCallable url:Malformed url");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder16 = builder14.setStartUrl("CrawlerURL url:urls.txt");
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder18 = builder14.setVerifyUrls(true);
        com.soulgalore.crawler.core.CrawlerConfiguration.Builder builder20 = builder14.setMaxLevels((int) '#');
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test10000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test10000");
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse4 = new com.soulgalore.crawler.core.assets.AssetResponse("", "100", (int) (short) 1, 0L);
        int int5 = assetResponse4.getResponseCode();
        int int6 = assetResponse4.getResponseCode();
        long long7 = assetResponse4.getFetchTime();
        long long8 = assetResponse4.getFetchTime();
        com.soulgalore.crawler.core.assets.AssetResponse assetResponse13 = new com.soulgalore.crawler.core.assets.AssetResponse("com.soulgalore.crawler.auth", "com.soulgalore.crawler.http.socket.timeout", (int) (byte) 0, 100L);
        boolean boolean14 = assetResponse4.equals((java.lang.Object) 100L);
        java.lang.String str15 = assetResponse4.getReferer();
        java.lang.String str16 = assetResponse4.getReferer();
        boolean boolean18 = assetResponse4.equals((java.lang.Object) "com.soulgalore.crawler.proxy");
        int int19 = assetResponse4.getResponseCode();
        long long20 = assetResponse4.getFetchTime();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "100" + "'", str15, "100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "100" + "'", str16, "100");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
    }
}

